{"version":3,"file":"walletconnect.js","sources":["../../../../node_modules/events/events.js","../../../../node_modules/tslib/tslib.es6.js","../../../../node_modules/@walletconnect/time/dist/cjs/constants/time.js","../../../../node_modules/@walletconnect/time/dist/cjs/watch.js","../../../../node_modules/@walletconnect/events/dist/esm/events.js","../../../../node_modules/destr/dist/index.mjs","../../../../node_modules/unstorage/dist/shared/unstorage.d569726e.mjs","../../../../node_modules/unstorage/dist/index.mjs","../../../../node_modules/idb-keyval/dist/index.js","../../../../node_modules/@walletconnect/safe-json/dist/esm/index.js","../../../../node_modules/quick-format-unescaped/index.js","../../../../node_modules/pino/browser.js","../../../../node_modules/@stablelib/random/lib/source/browser.js","../../../../node_modules/@stablelib/wipe/lib/wipe.js","../../../../node_modules/@stablelib/random/lib/source/node.js","../../../../node_modules/@stablelib/random/lib/source/system.js","../../../../node_modules/@stablelib/int/lib/int.js","../../../../node_modules/@stablelib/binary/lib/binary.js","../../../../node_modules/@stablelib/random/lib/random.js","../../../../node_modules/@stablelib/sha512/lib/sha512.js","../../../../node_modules/@stablelib/ed25519/lib/ed25519.js","../../../../node_modules/@walletconnect/relay-auth/dist/esm/constants.js","../../../../node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/as-uint8array.js","../../../../node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/alloc.js","../../../../node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/concat.js","../../../../node_modules/multiformats/esm/vendor/base-x.js","../../../../node_modules/multiformats/esm/src/bytes.js","../../../../node_modules/multiformats/esm/src/bases/base.js","../../../../node_modules/multiformats/esm/src/bases/identity.js","../../../../node_modules/multiformats/esm/src/bases/base2.js","../../../../node_modules/multiformats/esm/src/bases/base8.js","../../../../node_modules/multiformats/esm/src/bases/base10.js","../../../../node_modules/multiformats/esm/src/bases/base16.js","../../../../node_modules/multiformats/esm/src/bases/base32.js","../../../../node_modules/multiformats/esm/src/bases/base36.js","../../../../node_modules/multiformats/esm/src/bases/base58.js","../../../../node_modules/multiformats/esm/src/bases/base64.js","../../../../node_modules/multiformats/esm/src/bases/base256emoji.js","../../../../node_modules/multiformats/esm/vendor/varint.js","../../../../node_modules/multiformats/esm/src/varint.js","../../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../../node_modules/multiformats/esm/src/codecs/raw.js","../../../../node_modules/multiformats/esm/src/codecs/json.js","../../../../node_modules/multiformats/esm/src/cid.js","../../../../node_modules/multiformats/esm/src/basics.js","../../../../node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/bases.js","../../../../node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/to-string.js","../../../../node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/from-string.js","../../../../node_modules/@walletconnect/relay-auth/dist/esm/utils.js","../../../../node_modules/@walletconnect/relay-auth/dist/esm/api.js","../../../../node_modules/detect-browser/es/index.js","../../../../node_modules/@walletconnect/window-getters/dist/cjs/index.js","../../../../node_modules/@walletconnect/window-metadata/dist/cjs/index.js","../../../../node_modules/strict-uri-encode/index.js","../../../../node_modules/decode-uri-component/index.js","../../../../node_modules/split-on-first/index.js","../../../../node_modules/filter-obj/index.js","../../../../node_modules/query-string/index.js","../../../../node_modules/js-sha3/src/sha3.js","../../../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../../../node_modules/@ethersproject/logger/lib.esm/index.js","../../../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../../../node_modules/@ethersproject/keccak256/lib.esm/index.js","../../../../node_modules/@ethersproject/constants/lib.esm/addresses.js","../../../../node_modules/@ethersproject/bignumber/node_modules/bn.js/lib/bn.js","../../../../node_modules/@ethersproject/bignumber/lib.esm/_version.js","../../../../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","../../../../node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","../../../../node_modules/@ethersproject/constants/lib.esm/bignumbers.js","../../../../node_modules/@ethersproject/constants/lib.esm/hashes.js","../../../../node_modules/@ethersproject/constants/lib.esm/strings.js","../../../../node_modules/@ethersproject/constants/lib.esm/index.js","../../../../node_modules/@ethersproject/strings/lib.esm/_version.js","../../../../node_modules/@ethersproject/strings/lib.esm/utf8.js","../../../../node_modules/@ethersproject/strings/lib.esm/bytes32.js","../../../../node_modules/@ethersproject/strings/lib.esm/idna.js","../../../../node_modules/@ethersproject/strings/lib.esm/index.js","../../../../node_modules/@ethersproject/hash/lib.esm/id.js","../../../../node_modules/@ethersproject/hash/lib.esm/_version.js","../../../../node_modules/@ethersproject/base64/lib.esm/base64.js","../../../../node_modules/@ethersproject/base64/lib.esm/index.js","../../../../node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js","../../../../node_modules/@ethersproject/hash/lib.esm/ens-normalize/include.js","../../../../node_modules/@ethersproject/hash/lib.esm/ens-normalize/lib.js","../../../../node_modules/@ethersproject/hash/lib.esm/namehash.js","../../../../node_modules/@ethersproject/hash/lib.esm/message.js","../../../../node_modules/@ethersproject/rlp/lib.esm/_version.js","../../../../node_modules/@ethersproject/rlp/lib.esm/index.js","../../../../node_modules/@ethersproject/address/lib.esm/_version.js","../../../../node_modules/@ethersproject/address/lib.esm/index.js","../../../../node_modules/@ethersproject/properties/lib.esm/_version.js","../../../../node_modules/@ethersproject/properties/lib.esm/index.js","../../../../node_modules/@ethersproject/hash/lib.esm/typed-data.js","../../../../node_modules/@ethersproject/hash/lib.esm/index.js","../../../../node_modules/@ethersproject/signing-key/node_modules/bn.js/lib/bn.js","../../../../node_modules/minimalistic-assert/index.js","../../../../node_modules/inherits/inherits_browser.js","../../../../node_modules/hash.js/lib/hash/utils.js","../../../../node_modules/hash.js/lib/hash/common.js","../../../../node_modules/hash.js/lib/hash/sha/common.js","../../../../node_modules/hash.js/lib/hash/sha/1.js","../../../../node_modules/hash.js/lib/hash/sha/256.js","../../../../node_modules/hash.js/lib/hash/sha/224.js","../../../../node_modules/hash.js/lib/hash/sha/512.js","../../../../node_modules/hash.js/lib/hash/sha/384.js","../../../../node_modules/hash.js/lib/hash/sha.js","../../../../node_modules/hash.js/lib/hash/ripemd.js","../../../../node_modules/hash.js/lib/hash/hmac.js","../../../../node_modules/hash.js/lib/hash.js","../../../../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../../../../node_modules/@ethersproject/signing-key/lib.esm/_version.js","../../../../node_modules/@ethersproject/signing-key/lib.esm/index.js","../../../../node_modules/@ethersproject/transactions/lib.esm/_version.js","../../../../node_modules/@ethersproject/transactions/lib.esm/index.js","../../../../node_modules/@stablelib/chacha/lib/chacha.js","../../../../node_modules/@stablelib/constant-time/lib/constant-time.js","../../../../node_modules/@stablelib/poly1305/lib/poly1305.js","../../../../node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js","../../../../node_modules/@stablelib/hmac/lib/hmac.js","../../../../node_modules/@stablelib/hkdf/lib/hkdf.js","../../../../node_modules/@stablelib/sha256/lib/sha256.js","../../../../node_modules/@stablelib/x25519/lib/x25519.js","../../../../node_modules/uint8arrays/esm/src/compare.js","../../../../node_modules/uint8arrays/esm/src/alloc.js","../../../../node_modules/uint8arrays/esm/src/concat.js","../../../../node_modules/uint8arrays/esm/src/equals.js","../../../../node_modules/uint8arrays/esm/src/util/bases.js","../../../../node_modules/uint8arrays/esm/src/from-string.js","../../../../node_modules/uint8arrays/esm/src/to-string.js","../../../../node_modules/uint8arrays/esm/src/xor.js","../../../../node_modules/bn.js/lib/bn.js","../../../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/utils.js","../../../../node_modules/brorand/index.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/curve/base.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/curve/short.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/curve/mont.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/curve/edwards.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/curve/index.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/curves.js","../../../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/ec/key.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/ec/signature.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/ec/index.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/eddsa/key.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/eddsa/signature.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic/eddsa/index.js","../../../../node_modules/@walletconnect/auth-client/node_modules/elliptic/lib/elliptic.js","../../../../node_modules/@walletconnect/relay-api/dist/index.es.js","../../../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js","../../../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js","../../../../node_modules/@walletconnect/environment/dist/cjs/crypto.js","../../../../node_modules/@walletconnect/environment/dist/cjs/env.js","../../../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js","../../../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js","../../../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js","../../../../node_modules/@walletconnect/jsonrpc-types/dist/index.es.js","../../../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js","../../../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js","../../../../node_modules/ws/browser.js","../../../../node_modules/lodash.isequal/index.js","../../../../node_modules/isomorphic-unfetch/browser.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/utils.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/curve/base.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/curve/short.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/curve/mont.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/curve/edwards.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/curve/index.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/curves.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/ec/key.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/ec/signature.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/ec/index.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/eddsa/key.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/eddsa/signature.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic/eddsa/index.js","../../../../node_modules/@walletconnect/utils/node_modules/elliptic/lib/elliptic.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;\nexports.ONE_SECOND = 1;\nexports.FIVE_SECONDS = 5;\nexports.TEN_SECONDS = 10;\nexports.THIRTY_SECONDS = 30;\nexports.SIXTY_SECONDS = 60;\nexports.ONE_MINUTE = exports.SIXTY_SECONDS;\nexports.FIVE_MINUTES = exports.ONE_MINUTE * 5;\nexports.TEN_MINUTES = exports.ONE_MINUTE * 10;\nexports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;\nexports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;\nexports.ONE_HOUR = exports.SIXTY_MINUTES;\nexports.THREE_HOURS = exports.ONE_HOUR * 3;\nexports.SIX_HOURS = exports.ONE_HOUR * 6;\nexports.TWELVE_HOURS = exports.ONE_HOUR * 12;\nexports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;\nexports.ONE_DAY = exports.TWENTY_FOUR_HOURS;\nexports.THREE_DAYS = exports.ONE_DAY * 3;\nexports.FIVE_DAYS = exports.ONE_DAY * 5;\nexports.SEVEN_DAYS = exports.ONE_DAY * 7;\nexports.THIRTY_DAYS = exports.ONE_DAY * 30;\nexports.ONE_WEEK = exports.SEVEN_DAYS;\nexports.TWO_WEEKS = exports.ONE_WEEK * 2;\nexports.THREE_WEEKS = exports.ONE_WEEK * 3;\nexports.FOUR_WEEKS = exports.ONE_WEEK * 4;\nexports.ONE_YEAR = exports.ONE_DAY * 365;\n//# sourceMappingURL=time.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Watch = void 0;\nclass Watch {\n    constructor() {\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, { started: Date.now() });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, { started: timestamp.started, elapsed });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports.default = Watch;\n//# sourceMappingURL=watch.js.map","export class IEvents {\n}\n//# sourceMappingURL=events.js.map","const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nfunction jsonParseTransform(key, value) {\n  if (key === \"__proto__\" || key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\n    warnKeyDropped(key);\n    return;\n  }\n  return value;\n}\nfunction warnKeyDropped(key) {\n  console.warn(`[destr] Dropping \"${key}\" key to prevent prototype pollution.`);\n}\nfunction destr(value, options = {}) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const _value = value.trim();\n  if (\n    // eslint-disable-next-line unicorn/prefer-at\n    value[0] === '\"' && value.endsWith('\"') && !value.includes(\"\\\\\")\n  ) {\n    return _value.slice(1, -1);\n  }\n  if (_value.length <= 9) {\n    const _lval = _value.toLowerCase();\n    if (_lval === \"true\") {\n      return true;\n    }\n    if (_lval === \"false\") {\n      return false;\n    }\n    if (_lval === \"undefined\") {\n      return void 0;\n    }\n    if (_lval === \"null\") {\n      return null;\n    }\n    if (_lval === \"nan\") {\n      return Number.NaN;\n    }\n    if (_lval === \"infinity\") {\n      return Number.POSITIVE_INFINITY;\n    }\n    if (_lval === \"-infinity\") {\n      return Number.NEGATIVE_INFINITY;\n    }\n  }\n  if (!JsonSigRx.test(value)) {\n    if (options.strict) {\n      throw new SyntaxError(\"[destr] Invalid JSON\");\n    }\n    return value;\n  }\n  try {\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\n      if (options.strict) {\n        throw new Error(\"[destr] Possible prototype pollution\");\n      }\n      return JSON.parse(value, jsonParseTransform);\n    }\n    return JSON.parse(value);\n  } catch (error) {\n    if (options.strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction safeDestr(value, options = {}) {\n  return destr(value, { ...options, strict: true });\n}\n\nexport { destr as default, destr, safeDestr };\n","function wrapToPromise(value) {\n  if (!value || typeof value.then !== \"function\") {\n    return Promise.resolve(value);\n  }\n  return value;\n}\nfunction asyncCall(function_, ...arguments_) {\n  try {\n    return wrapToPromise(function_(...arguments_));\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\nfunction isPrimitive(value) {\n  const type = typeof value;\n  return value === null || type !== \"object\" && type !== \"function\";\n}\nfunction isPureObject(value) {\n  const proto = Object.getPrototypeOf(value);\n  return !proto || proto.isPrototypeOf(Object);\n}\nfunction stringify(value) {\n  if (isPrimitive(value)) {\n    return String(value);\n  }\n  if (isPureObject(value) || Array.isArray(value)) {\n    return JSON.stringify(value);\n  }\n  if (typeof value.toJSON === \"function\") {\n    return stringify(value.toJSON());\n  }\n  throw new Error(\"[unstorage] Cannot stringify value!\");\n}\nfunction checkBufferSupport() {\n  if (typeof Buffer === \"undefined\") {\n    throw new TypeError(\"[unstorage] Buffer is not supported!\");\n  }\n}\nconst BASE64_PREFIX = \"base64:\";\nfunction serializeRaw(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n  checkBufferSupport();\n  const base64 = Buffer.from(value).toString(\"base64\");\n  return BASE64_PREFIX + base64;\n}\nfunction deserializeRaw(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (!value.startsWith(BASE64_PREFIX)) {\n    return value;\n  }\n  checkBufferSupport();\n  return Buffer.from(value.slice(BASE64_PREFIX.length), \"base64\");\n}\n\nconst storageKeyProperties = [\n  \"hasItem\",\n  \"getItem\",\n  \"getItemRaw\",\n  \"setItem\",\n  \"setItemRaw\",\n  \"removeItem\",\n  \"getMeta\",\n  \"setMeta\",\n  \"removeMeta\",\n  \"getKeys\",\n  \"clear\",\n  \"mount\",\n  \"unmount\"\n];\nfunction prefixStorage(storage, base) {\n  base = normalizeBaseKey(base);\n  if (!base) {\n    return storage;\n  }\n  const nsStorage = { ...storage };\n  for (const property of storageKeyProperties) {\n    nsStorage[property] = (key = \"\", ...args) => (\n      // @ts-ignore\n      storage[property](base + key, ...args)\n    );\n  }\n  nsStorage.getKeys = (key = \"\", ...arguments_) => storage.getKeys(base + key, ...arguments_).then((keys) => keys.map((key2) => key2.slice(base.length)));\n  return nsStorage;\n}\nfunction normalizeKey(key) {\n  if (!key) {\n    return \"\";\n  }\n  return key.split(\"?\")[0].replace(/[/\\\\]/g, \":\").replace(/:+/g, \":\").replace(/^:|:$/g, \"\");\n}\nfunction joinKeys(...keys) {\n  return normalizeKey(keys.join(\":\"));\n}\nfunction normalizeBaseKey(base) {\n  base = normalizeKey(base);\n  return base ? base + \":\" : \"\";\n}\n\nexport { normalizeKey as a, asyncCall as b, serializeRaw as c, deserializeRaw as d, joinKeys as j, normalizeBaseKey as n, prefixStorage as p, stringify as s };\n","import destr from 'destr';\nimport { n as normalizeBaseKey, a as normalizeKey, b as asyncCall, d as deserializeRaw, s as stringify, c as serializeRaw, j as joinKeys } from './shared/unstorage.d569726e.mjs';\nexport { p as prefixStorage } from './shared/unstorage.d569726e.mjs';\n\nfunction defineDriver(factory) {\n  return factory;\n}\n\nconst DRIVER_NAME = \"memory\";\nconst memory = defineDriver(() => {\n  const data = /* @__PURE__ */ new Map();\n  return {\n    name: DRIVER_NAME,\n    getInstance: () => data,\n    hasItem(key) {\n      return data.has(key);\n    },\n    getItem(key) {\n      return data.get(key) ?? null;\n    },\n    getItemRaw(key) {\n      return data.get(key) ?? null;\n    },\n    setItem(key, value) {\n      data.set(key, value);\n    },\n    setItemRaw(key, value) {\n      data.set(key, value);\n    },\n    removeItem(key) {\n      data.delete(key);\n    },\n    getKeys() {\n      return [...data.keys()];\n    },\n    clear() {\n      data.clear();\n    },\n    dispose() {\n      data.clear();\n    }\n  };\n});\n\nfunction createStorage(options = {}) {\n  const context = {\n    mounts: { \"\": options.driver || memory() },\n    mountpoints: [\"\"],\n    watching: false,\n    watchListeners: [],\n    unwatch: {}\n  };\n  const getMount = (key) => {\n    for (const base of context.mountpoints) {\n      if (key.startsWith(base)) {\n        return {\n          base,\n          relativeKey: key.slice(base.length),\n          driver: context.mounts[base]\n        };\n      }\n    }\n    return {\n      base: \"\",\n      relativeKey: key,\n      driver: context.mounts[\"\"]\n    };\n  };\n  const getMounts = (base, includeParent) => {\n    return context.mountpoints.filter(\n      (mountpoint) => mountpoint.startsWith(base) || includeParent && base.startsWith(mountpoint)\n    ).map((mountpoint) => ({\n      relativeBase: base.length > mountpoint.length ? base.slice(mountpoint.length) : void 0,\n      mountpoint,\n      driver: context.mounts[mountpoint]\n    }));\n  };\n  const onChange = (event, key) => {\n    if (!context.watching) {\n      return;\n    }\n    key = normalizeKey(key);\n    for (const listener of context.watchListeners) {\n      listener(event, key);\n    }\n  };\n  const startWatch = async () => {\n    if (context.watching) {\n      return;\n    }\n    context.watching = true;\n    for (const mountpoint in context.mounts) {\n      context.unwatch[mountpoint] = await watch(\n        context.mounts[mountpoint],\n        onChange,\n        mountpoint\n      );\n    }\n  };\n  const stopWatch = async () => {\n    if (!context.watching) {\n      return;\n    }\n    for (const mountpoint in context.unwatch) {\n      await context.unwatch[mountpoint]();\n    }\n    context.unwatch = {};\n    context.watching = false;\n  };\n  const runBatch = (items, commonOptions, cb) => {\n    const batches = /* @__PURE__ */ new Map();\n    const getBatch = (mount) => {\n      let batch = batches.get(mount.base);\n      if (!batch) {\n        batch = {\n          driver: mount.driver,\n          base: mount.base,\n          items: []\n        };\n        batches.set(mount.base, batch);\n      }\n      return batch;\n    };\n    for (const item of items) {\n      const isStringItem = typeof item === \"string\";\n      const key = normalizeKey(isStringItem ? item : item.key);\n      const value = isStringItem ? void 0 : item.value;\n      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };\n      const mount = getMount(key);\n      getBatch(mount).items.push({\n        key,\n        value,\n        relativeKey: mount.relativeKey,\n        options: options2\n      });\n    }\n    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(\n      (r) => r.flat()\n    );\n  };\n  const storage = {\n    // Item\n    hasItem(key, opts = {}) {\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      return asyncCall(driver.hasItem, relativeKey, opts);\n    },\n    getItem(key, opts = {}) {\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      return asyncCall(driver.getItem, relativeKey, opts).then(\n        (value) => destr(value)\n      );\n    },\n    getItems(items, commonOptions) {\n      return runBatch(items, commonOptions, (batch) => {\n        if (batch.driver.getItems) {\n          return asyncCall(\n            batch.driver.getItems,\n            batch.items.map((item) => ({\n              key: item.relativeKey,\n              options: item.options\n            })),\n            commonOptions\n          ).then(\n            (r) => r.map((item) => ({\n              key: joinKeys(batch.base, item.key),\n              value: destr(item.value)\n            }))\n          );\n        }\n        return Promise.all(\n          batch.items.map((item) => {\n            return asyncCall(\n              batch.driver.getItem,\n              item.relativeKey,\n              item.options\n            ).then((value) => ({\n              key: item.key,\n              value: destr(value)\n            }));\n          })\n        );\n      });\n    },\n    getItemRaw(key, opts = {}) {\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (driver.getItemRaw) {\n        return asyncCall(driver.getItemRaw, relativeKey, opts);\n      }\n      return asyncCall(driver.getItem, relativeKey, opts).then(\n        (value) => deserializeRaw(value)\n      );\n    },\n    async setItem(key, value, opts = {}) {\n      if (value === void 0) {\n        return storage.removeItem(key);\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (!driver.setItem) {\n        return;\n      }\n      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);\n      if (!driver.watch) {\n        onChange(\"update\", key);\n      }\n    },\n    async setItems(items, commonOptions) {\n      await runBatch(items, commonOptions, async (batch) => {\n        if (batch.driver.setItems) {\n          return asyncCall(\n            batch.driver.setItems,\n            batch.items.map((item) => ({\n              key: item.relativeKey,\n              value: stringify(item.value),\n              options: item.options\n            })),\n            commonOptions\n          );\n        }\n        if (!batch.driver.setItem) {\n          return;\n        }\n        await Promise.all(\n          batch.items.map((item) => {\n            return asyncCall(\n              batch.driver.setItem,\n              item.relativeKey,\n              stringify(item.value),\n              item.options\n            );\n          })\n        );\n      });\n    },\n    async setItemRaw(key, value, opts = {}) {\n      if (value === void 0) {\n        return storage.removeItem(key, opts);\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (driver.setItemRaw) {\n        await asyncCall(driver.setItemRaw, relativeKey, value, opts);\n      } else if (driver.setItem) {\n        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);\n      } else {\n        return;\n      }\n      if (!driver.watch) {\n        onChange(\"update\", key);\n      }\n    },\n    async removeItem(key, opts = {}) {\n      if (typeof opts === \"boolean\") {\n        opts = { removeMeta: opts };\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      if (!driver.removeItem) {\n        return;\n      }\n      await asyncCall(driver.removeItem, relativeKey, opts);\n      if (opts.removeMeta || opts.removeMata) {\n        await asyncCall(driver.removeItem, relativeKey + \"$\", opts);\n      }\n      if (!driver.watch) {\n        onChange(\"remove\", key);\n      }\n    },\n    // Meta\n    async getMeta(key, opts = {}) {\n      if (typeof opts === \"boolean\") {\n        opts = { nativeOnly: opts };\n      }\n      key = normalizeKey(key);\n      const { relativeKey, driver } = getMount(key);\n      const meta = /* @__PURE__ */ Object.create(null);\n      if (driver.getMeta) {\n        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));\n      }\n      if (!opts.nativeOnly) {\n        const value = await asyncCall(\n          driver.getItem,\n          relativeKey + \"$\",\n          opts\n        ).then((value_) => destr(value_));\n        if (value && typeof value === \"object\") {\n          if (typeof value.atime === \"string\") {\n            value.atime = new Date(value.atime);\n          }\n          if (typeof value.mtime === \"string\") {\n            value.mtime = new Date(value.mtime);\n          }\n          Object.assign(meta, value);\n        }\n      }\n      return meta;\n    },\n    setMeta(key, value, opts = {}) {\n      return this.setItem(key + \"$\", value, opts);\n    },\n    removeMeta(key, opts = {}) {\n      return this.removeItem(key + \"$\", opts);\n    },\n    // Keys\n    async getKeys(base, opts = {}) {\n      base = normalizeBaseKey(base);\n      const mounts = getMounts(base, true);\n      let maskedMounts = [];\n      const allKeys = [];\n      for (const mount of mounts) {\n        const rawKeys = await asyncCall(\n          mount.driver.getKeys,\n          mount.relativeBase,\n          opts\n        );\n        for (const key of rawKeys) {\n          const fullKey = mount.mountpoint + normalizeKey(key);\n          if (!maskedMounts.some((p) => fullKey.startsWith(p))) {\n            allKeys.push(fullKey);\n          }\n        }\n        maskedMounts = [\n          mount.mountpoint,\n          ...maskedMounts.filter((p) => !p.startsWith(mount.mountpoint))\n        ];\n      }\n      return base ? allKeys.filter(\n        (key) => key.startsWith(base) && key[key.length - 1] !== \"$\"\n      ) : allKeys.filter((key) => key[key.length - 1] !== \"$\");\n    },\n    // Utils\n    async clear(base, opts = {}) {\n      base = normalizeBaseKey(base);\n      await Promise.all(\n        getMounts(base, false).map(async (m) => {\n          if (m.driver.clear) {\n            return asyncCall(m.driver.clear, m.relativeBase, opts);\n          }\n          if (m.driver.removeItem) {\n            const keys = await m.driver.getKeys(m.relativeBase || \"\", opts);\n            return Promise.all(\n              keys.map((key) => m.driver.removeItem(key, opts))\n            );\n          }\n        })\n      );\n    },\n    async dispose() {\n      await Promise.all(\n        Object.values(context.mounts).map((driver) => dispose(driver))\n      );\n    },\n    async watch(callback) {\n      await startWatch();\n      context.watchListeners.push(callback);\n      return async () => {\n        context.watchListeners = context.watchListeners.filter(\n          (listener) => listener !== callback\n        );\n        if (context.watchListeners.length === 0) {\n          await stopWatch();\n        }\n      };\n    },\n    async unwatch() {\n      context.watchListeners = [];\n      await stopWatch();\n    },\n    // Mount\n    mount(base, driver) {\n      base = normalizeBaseKey(base);\n      if (base && context.mounts[base]) {\n        throw new Error(`already mounted at ${base}`);\n      }\n      if (base) {\n        context.mountpoints.push(base);\n        context.mountpoints.sort((a, b) => b.length - a.length);\n      }\n      context.mounts[base] = driver;\n      if (context.watching) {\n        Promise.resolve(watch(driver, onChange, base)).then((unwatcher) => {\n          context.unwatch[base] = unwatcher;\n        }).catch(console.error);\n      }\n      return storage;\n    },\n    async unmount(base, _dispose = true) {\n      base = normalizeBaseKey(base);\n      if (!base || !context.mounts[base]) {\n        return;\n      }\n      if (context.watching && base in context.unwatch) {\n        context.unwatch[base]();\n        delete context.unwatch[base];\n      }\n      if (_dispose) {\n        await dispose(context.mounts[base]);\n      }\n      context.mountpoints = context.mountpoints.filter((key) => key !== base);\n      delete context.mounts[base];\n    },\n    getMount(key = \"\") {\n      key = normalizeKey(key) + \":\";\n      const m = getMount(key);\n      return {\n        driver: m.driver,\n        base: m.base\n      };\n    },\n    getMounts(base = \"\", opts = {}) {\n      base = normalizeKey(base);\n      const mounts = getMounts(base, opts.parents);\n      return mounts.map((m) => ({\n        driver: m.driver,\n        base: m.mountpoint\n      }));\n    },\n    // Aliases\n    keys: (base, opts = {}) => storage.getKeys(base, opts),\n    get: (key, opts = {}) => storage.getItem(key, opts),\n    set: (key, value, opts = {}) => storage.setItem(key, value, opts),\n    has: (key, opts = {}) => storage.hasItem(key, opts),\n    del: (key, opts = {}) => storage.removeItem(key, opts),\n    remove: (key, opts = {}) => storage.removeItem(key, opts)\n  };\n  return storage;\n}\nasync function snapshot(storage, base) {\n  base = normalizeBaseKey(base);\n  const keys = await storage.getKeys(base);\n  const snapshot2 = {};\n  await Promise.all(\n    keys.map(async (key) => {\n      snapshot2[key.slice(base.length)] = await storage.getItem(key);\n    })\n  );\n  return snapshot2;\n}\nasync function restoreSnapshot(driver, snapshot2, base = \"\") {\n  base = normalizeBaseKey(base);\n  await Promise.all(\n    Object.entries(snapshot2).map((e) => driver.setItem(base + e[0], e[1]))\n  );\n}\nfunction watch(driver, onChange, base) {\n  return driver.watch ? driver.watch((event, key) => onChange(event, base + key)) : () => {\n  };\n}\nasync function dispose(driver) {\n  if (typeof driver.dispose === \"function\") {\n    await asyncCall(driver.dispose);\n  }\n}\n\nconst builtinDrivers = {\n  azureAppConfiguration: \"unstorage/drivers/azure-app-configuration\",\n  azureCosmos: \"unstorage/drivers/azure-cosmos\",\n  azureKeyVault: \"unstorage/drivers/azure-key-vault\",\n  azureStorageBlob: \"unstorage/drivers/azure-storage-blob\",\n  azureStorageTable: \"unstorage/drivers/azure-storage-table\",\n  cloudflareKVBinding: \"unstorage/drivers/cloudflare-kv-binding\",\n  cloudflareKVHTTP: \"unstorage/drivers/cloudflare-kv-http\",\n  cloudflareR2Binding: \"unstorage/drivers/cloudflare-r2-binding\",\n  fs: \"unstorage/drivers/fs\",\n  fsLite: \"unstorage/drivers/fs-lite\",\n  github: \"unstorage/drivers/github\",\n  http: \"unstorage/drivers/http\",\n  indexedb: \"unstorage/drivers/indexedb\",\n  localStorage: \"unstorage/drivers/localstorage\",\n  lruCache: \"unstorage/drivers/lru-cache\",\n  memory: \"unstorage/drivers/memory\",\n  mongodb: \"unstorage/drivers/mongodb\",\n  netlifyBlobs: \"unstorage/drivers/netlify-blobs\",\n  null: \"unstorage/drivers/null\",\n  overlay: \"unstorage/drivers/overlay\",\n  planetscale: \"unstorage/drivers/planetscale\",\n  redis: \"unstorage/drivers/redis\",\n  sessionStorage: \"unstorage/drivers/session-storage\",\n  vercelKV: \"unstorage/drivers/vercel-kv\",\n  /** @deprecated */\n  \"cloudflare-kv-binding\": \"unstorage/drivers/cloudflare-kv-binding\",\n  /** @deprecated */\n  \"cloudflare-kv-http\": \"unstorage/drivers/cloudflare-kv-http\"\n};\n\nexport { builtinDrivers, createStorage, defineDriver, joinKeys, normalizeBaseKey, normalizeKey, restoreSnapshot, snapshot };\n","function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n","const JSONStringify = data => JSON.stringify(data, (_, value) => typeof value === \"bigint\" ? value.toString() + \"n\" : value);\nconst JSONParse = json => {\n    const numbersBiggerThanMaxInt = /([\\[:])?(\\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\\}\\]])/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, \"$1\\\"$2n\\\"$3\");\n    return JSON.parse(serializedData, (_, value) => {\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt)\n            return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nexport function safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n}\nexport function safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n//# sourceMappingURL=index.js.map","'use strict'\nfunction tryStringify (o) {\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\n}\n\nmodule.exports = format\n\nfunction format(f, args, opts) {\n  var ss = (opts && opts.stringify) || tryStringify\n  var offset = 1\n  if (typeof f === 'object' && f !== null) {\n    var len = args.length + offset\n    if (len === 1) return f\n    var objects = new Array(len)\n    objects[0] = ss(f)\n    for (var index = 1; index < len; index++) {\n      objects[index] = ss(args[index])\n    }\n    return objects.join(' ')\n  }\n  if (typeof f !== 'string') {\n    return f\n  }\n  var argLen = args.length\n  if (argLen === 0) return f\n  var str = ''\n  var a = 1 - offset\n  var lastPos = -1\n  var flen = (f && f.length) || 0\n  for (var i = 0; i < flen;) {\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n      lastPos = lastPos > -1 ? lastPos : 0\n      switch (f.charCodeAt(i + 1)) {\n        case 100: // 'd'\n        case 102: // 'f'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Number(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 105: // 'i'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Math.floor(Number(args[a]))\n          lastPos = i + 2\n          i++\n          break\n        case 79: // 'O'\n        case 111: // 'o'\n        case 106: // 'j'\n          if (a >= argLen)\n            break\n          if (args[a] === undefined) break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          var type = typeof args[a]\n          if (type === 'string') {\n            str += '\\'' + args[a] + '\\''\n            lastPos = i + 2\n            i++\n            break\n          }\n          if (type === 'function') {\n            str += args[a].name || '<anonymous>'\n            lastPos = i + 2\n            i++\n            break\n          }\n          str += ss(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 115: // 's'\n          if (a >= argLen)\n            break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += String(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 37: // '%'\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += '%'\n          lastPos = i + 2\n          i++\n          a--\n          break\n      }\n      ++a\n    }\n    ++i\n  }\n  if (lastPos === -1)\n    return f\n  else if (lastPos < flen) {\n    str += f.slice(lastPos)\n  }\n\n  return str\n}\n","'use strict'\n\nconst format = require('quick-format-unescaped')\n\nmodule.exports = pino\n\nconst _console = pfGlobalThisOrFallback().console || {}\nconst stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue\n}\n\nfunction shouldSerialize (serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    const hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err'\n    })\n    return hasToFilter\n  } else if (serialize === true) {\n    return Object.keys(serializers)\n  }\n\n  return false\n}\n\nfunction pino (opts) {\n  opts = opts || {}\n  opts.browser = opts.browser || {}\n\n  const transmit = opts.browser.transmit\n  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }\n\n  const proto = opts.browser.write || _console\n  if (opts.browser.write) opts.browser.asObject = true\n  const serializers = opts.serializers || {}\n  const serialize = shouldSerialize(opts.browser.serialize, serializers)\n  let stdErrSerialize = opts.browser.serialize\n\n  if (\n    Array.isArray(opts.browser.serialize) &&\n    opts.browser.serialize.indexOf('!stdSerializers.err') > -1\n  ) stdErrSerialize = false\n\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace']\n\n  if (typeof proto === 'function') {\n    proto.error = proto.fatal = proto.warn =\n    proto.info = proto.debug = proto.trace = proto\n  }\n  if (opts.enabled === false) opts.level = 'silent'\n  const level = opts.level || 'info'\n  const logger = Object.create(proto)\n  if (!logger.log) logger.log = noop\n\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  })\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  })\n\n  const setOpts = {\n    transmit,\n    serialize,\n    asObject: opts.browser.asObject,\n    levels,\n    timestamp: getTimeFunction(opts)\n  }\n  logger.levels = pino.levels\n  logger.level = level\n\n  logger.setMaxListeners = logger.getMaxListeners =\n  logger.emit = logger.addListener = logger.on =\n  logger.prependListener = logger.once =\n  logger.prependOnceListener = logger.removeListener =\n  logger.removeAllListeners = logger.listeners =\n  logger.listenerCount = logger.eventNames =\n  logger.write = logger.flush = noop\n  logger.serializers = serializers\n  logger._serialize = serialize\n  logger._stdErrSerialize = stdErrSerialize\n  logger.child = child\n\n  if (transmit) logger._logEvent = createLogEventShape()\n\n  function getLevelVal () {\n    return this.level === 'silent'\n      ? Infinity\n      : this.levels.values[this.level]\n  }\n\n  function getLevel () {\n    return this._level\n  }\n  function setLevel (level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level)\n    }\n    this._level = level\n\n    set(setOpts, logger, 'error', 'log') // <-- must stay first\n    set(setOpts, logger, 'fatal', 'error')\n    set(setOpts, logger, 'warn', 'error')\n    set(setOpts, logger, 'info', 'log')\n    set(setOpts, logger, 'debug', 'log')\n    set(setOpts, logger, 'trace', 'log')\n  }\n\n  function child (bindings, childOptions) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino')\n    }\n    childOptions = childOptions || {}\n    if (serialize && bindings.serializers) {\n      childOptions.serializers = bindings.serializers\n    }\n    const childOptionsSerializers = childOptions.serializers\n    if (serialize && childOptionsSerializers) {\n      var childSerializers = Object.assign({}, serializers, childOptionsSerializers)\n      var childSerialize = opts.browser.serialize === true\n        ? Object.keys(childSerializers)\n        : serialize\n      delete bindings.serializers\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)\n    }\n    function Child (parent) {\n      this._childLevel = (parent._childLevel | 0) + 1\n      this.error = bind(parent, bindings, 'error')\n      this.fatal = bind(parent, bindings, 'fatal')\n      this.warn = bind(parent, bindings, 'warn')\n      this.info = bind(parent, bindings, 'info')\n      this.debug = bind(parent, bindings, 'debug')\n      this.trace = bind(parent, bindings, 'trace')\n      if (childSerializers) {\n        this.serializers = childSerializers\n        this._serialize = childSerialize\n      }\n      if (transmit) {\n        this._logEvent = createLogEventShape(\n          [].concat(parent._logEvent.bindings, bindings)\n        )\n      }\n    }\n    Child.prototype = this\n    return new Child(this)\n  }\n  return logger\n}\n\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n}\n\npino.stdSerializers = stdSerializers\npino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })\n\nfunction set (opts, logger, level, fallback) {\n  const proto = Object.getPrototypeOf(logger)\n  logger[level] = logger.levelVal > logger.levels.values[level]\n    ? noop\n    : (proto[level] ? proto[level] : (_console[level] || _console[fallback] || noop))\n\n  wrap(opts, logger, level)\n}\n\nfunction wrap (opts, logger, level) {\n  if (!opts.transmit && logger[level] === noop) return\n\n  logger[level] = (function (write) {\n    return function LOG () {\n      const ts = opts.timestamp()\n      const args = new Array(arguments.length)\n      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i]\n\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)\n      }\n      if (opts.asObject) write.call(proto, asObject(this, level, args, ts))\n      else write.apply(proto, args)\n\n      if (opts.transmit) {\n        const transmitLevel = opts.transmit.level || logger.level\n        const transmitValue = pino.levels.values[transmitLevel]\n        const methodValue = pino.levels.values[level]\n        if (methodValue < transmitValue) return\n        transmit(this, {\n          ts,\n          methodLevel: level,\n          methodValue,\n          transmitLevel,\n          transmitValue: pino.levels.values[opts.transmit.level || logger.level],\n          send: opts.transmit.send,\n          val: logger.levelVal\n        }, args)\n      }\n    }\n  })(logger[level])\n}\n\nfunction asObject (logger, level, args, ts) {\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)\n  const argsCloned = args.slice()\n  let msg = argsCloned[0]\n  const o = {}\n  if (ts) {\n    o.time = ts\n  }\n  o.level = pino.levels.values[level]\n  let lvl = (logger._childLevel | 0) + 1\n  if (lvl < 1) lvl = 1\n  // deliberate, catching objects, arrays\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(o, argsCloned.shift())\n    }\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)\n  if (msg !== undefined) o.msg = msg\n  return o\n}\n\nfunction applySerializers (args, serialize, serializers, stdErrSerialize) {\n  for (const i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i])\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (const k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k])\n        }\n      }\n    }\n  }\n}\n\nfunction bind (parent, bindings, level) {\n  return function () {\n    const args = new Array(1 + arguments.length)\n    args[0] = bindings\n    for (var i = 1; i < args.length; i++) {\n      args[i] = arguments[i - 1]\n    }\n    return parent[level].apply(this, args)\n  }\n}\n\nfunction transmit (logger, opts, args) {\n  const send = opts.send\n  const ts = opts.ts\n  const methodLevel = opts.methodLevel\n  const methodValue = opts.methodValue\n  const val = opts.val\n  const bindings = logger._logEvent.bindings\n\n  applySerializers(\n    args,\n    logger._serialize || Object.keys(logger.serializers),\n    logger.serializers,\n    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize\n  )\n  logger._logEvent.ts = ts\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1\n  })\n\n  logger._logEvent.level.label = methodLevel\n  logger._logEvent.level.value = methodValue\n\n  send(methodLevel, logger._logEvent, val)\n\n  logger._logEvent = createLogEventShape(bindings)\n}\n\nfunction createLogEventShape (bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: { label: '', value: 0 }\n  }\n}\n\nfunction asErrValue (err) {\n  const obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  }\n  for (const key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key]\n    }\n  }\n  return obj\n}\n\nfunction getTimeFunction (opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp\n  }\n  if (opts.timestamp === false) {\n    return nullTime\n  }\n  return epochTime\n}\n\nfunction mock () { return {} }\nfunction passthrough (a) { return a }\nfunction noop () {}\n\nfunction nullTime () { return false }\nfunction epochTime () { return Date.now() }\nfunction unixTime () { return Math.round(Date.now() / 1000.0) }\nfunction isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability\n\n/* eslint-disable */\n/* istanbul ignore next */\nfunction pfGlobalThisOrFallback () {\n  function defd (o) { return typeof o !== 'undefined' && o }\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function () {\n        delete Object.prototype.globalThis\n        return (this.globalThis = this)\n      },\n      configurable: true\n    })\n    return globalThis\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {}\n  }\n}\n/* eslint-enable */\n","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserRandomSource = void 0;\nconst QUOTA = 65536;\nclass BrowserRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || self.msCrypto) // IE11 has msCrypto\n            : null;\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n    randomBytes(length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\nexports.BrowserRandomSource = BrowserRandomSource;\n//# sourceMappingURL=browser.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nfunction wipe(array) {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (var i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\nexports.wipe = wipe;\n//# sourceMappingURL=wipe.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeRandomSource = void 0;\nconst wipe_1 = require(\"@stablelib/wipe\");\nclass NodeRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        if (typeof require !== \"undefined\") {\n            const nodeCrypto = require(\"crypto\");\n            if (nodeCrypto && nodeCrypto.randomBytes) {\n                this._crypto = nodeCrypto;\n                this.isAvailable = true;\n                this.isInstantiated = true;\n            }\n        }\n    }\n    randomBytes(length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Node.js random byte generator is not available.\");\n        }\n        // Get random bytes (result is Buffer).\n        let buffer = this._crypto.randomBytes(length);\n        // Make sure we got the length that we requested.\n        if (buffer.length !== length) {\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n        }\n        // Allocate output array.\n        const out = new Uint8Array(length);\n        // Copy bytes from buffer to output.\n        for (let i = 0; i < out.length; i++) {\n            out[i] = buffer[i];\n        }\n        // Cleanup.\n        (0, wipe_1.wipe)(buffer);\n        return out;\n    }\n}\nexports.NodeRandomSource = NodeRandomSource;\n//# sourceMappingURL=node.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SystemRandomSource = void 0;\nconst browser_1 = require(\"./browser\");\nconst node_1 = require(\"./node\");\nclass SystemRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.name = \"\";\n        // Try browser.\n        this._source = new browser_1.BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n        // If no browser source, try Node.\n        this._source = new node_1.NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n        // No sources, we're out of options.\n    }\n    randomBytes(length) {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\nexports.SystemRandomSource = SystemRandomSource;\n//# sourceMappingURL=system.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package int provides helper functions for integerss.\n */\n// Shim using 16-bit pieces.\nfunction imulShim(a, b) {\n    var ah = (a >>> 16) & 0xffff, al = a & 0xffff;\n    var bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n}\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexports.mul = Math.imul || imulShim;\n/** 32-bit integer addition.  */\nfunction add(a, b) {\n    return (a + b) | 0;\n}\nexports.add = add;\n/**  32-bit integer subtraction.  */\nfunction sub(a, b) {\n    return (a - b) | 0;\n}\nexports.sub = sub;\n/** 32-bit integer left rotation */\nfunction rotl(x, n) {\n    return x << n | x >>> (32 - n);\n}\nexports.rotl = rotl;\n/** 32-bit integer left rotation */\nfunction rotr(x, n) {\n    return x << (32 - n) | x >>> n;\n}\nexports.rotr = rotr;\nfunction isIntegerShim(n) {\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexports.isInteger = Number.isInteger || isIntegerShim;\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexports.MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexports.isSafeInteger = function (n) {\n    return exports.isInteger(n) && (n >= -exports.MAX_SAFE_INTEGER && n <= exports.MAX_SAFE_INTEGER);\n};\n//# sourceMappingURL=int.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\nvar int_1 = require(\"@stablelib/int\");\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nfunction readInt16BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\nexports.readInt16BE = readInt16BE;\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nfunction readUint16BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\nexports.readUint16BE = readUint16BE;\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nfunction readInt16LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\nexports.readInt16LE = readInt16LE;\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nfunction readUint16LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\nexports.readUint16LE = readUint16LE;\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint16BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(2); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\nexports.writeUint16BE = writeUint16BE;\nexports.writeInt16BE = writeUint16BE;\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint16LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(2); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\nexports.writeUint16LE = writeUint16LE;\nexports.writeInt16LE = writeUint16LE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nfunction readInt32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\nexports.readInt32BE = readInt32BE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nfunction readUint32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\nexports.readUint32BE = readUint32BE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nfunction readInt32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\nexports.readInt32LE = readInt32LE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nfunction readUint32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\nexports.readUint32LE = readUint32LE;\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint32BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\nexports.writeUint32BE = writeUint32BE;\nexports.writeInt32BE = writeUint32BE;\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint32LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\nexports.writeUint32LE = writeUint32LE;\nexports.writeInt32LE = writeUint32LE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nfunction readInt64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var hi = readInt32BE(array, offset);\n    var lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\nexports.readInt64BE = readInt64BE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nfunction readUint64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var hi = readUint32BE(array, offset);\n    var lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\nexports.readUint64BE = readUint64BE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nfunction readInt64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var lo = readInt32LE(array, offset);\n    var hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);\n}\nexports.readInt64LE = readInt64LE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nfunction readUint64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var lo = readUint32LE(array, offset);\n    var hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\nexports.readUint64LE = readUint64LE;\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint64BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\nexports.writeUint64BE = writeUint64BE;\nexports.writeInt64BE = writeUint64BE;\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeUint64LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\nexports.writeUint64LE = writeUint64LE;\nexports.writeInt64LE = writeUint64LE;\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nfunction readUintBE(bitLength, array, offset) {\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    var result = 0;\n    var mul = 1;\n    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\nexports.readUintBE = readUintBE;\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nfunction readUintLE(bitLength, array, offset) {\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    var result = 0;\n    var mul = 1;\n    for (var i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\nexports.readUintLE = readUintLE;\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nfunction writeUintBE(bitLength, value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(bitLength / 8); }\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!int_1.isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    var div = 1;\n    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\nexports.writeUintBE = writeUintBE;\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nfunction writeUintLE(bitLength, value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(bitLength / 8); }\n    if (offset === void 0) { offset = 0; }\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!int_1.isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    var div = 1;\n    for (var i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\nexports.writeUintLE = writeUintLE;\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nfunction readFloat32BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\nexports.readFloat32BE = readFloat32BE;\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nfunction readFloat32LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\nexports.readFloat32LE = readFloat32LE;\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nfunction readFloat64BE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\nexports.readFloat64BE = readFloat64BE;\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nfunction readFloat64LE(array, offset) {\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\nexports.readFloat64LE = readFloat64LE;\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat32BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\nexports.writeFloat32BE = writeFloat32BE;\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat32LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(4); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\nexports.writeFloat32LE = writeFloat32LE;\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat64BE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\nexports.writeFloat64BE = writeFloat64BE;\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nfunction writeFloat64LE(value, out, offset) {\n    if (out === void 0) { out = new Uint8Array(8); }\n    if (offset === void 0) { offset = 0; }\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\nexports.writeFloat64LE = writeFloat64LE;\n//# sourceMappingURL=binary.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;\nconst system_1 = require(\"./source/system\");\nconst binary_1 = require(\"@stablelib/binary\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.defaultRandomSource = new system_1.SystemRandomSource();\nfunction randomBytes(length, prng = exports.defaultRandomSource) {\n    return prng.randomBytes(length);\n}\nexports.randomBytes = randomBytes;\n/**\n * Returns a uniformly random unsigned 32-bit integer.\n */\nfunction randomUint32(prng = exports.defaultRandomSource) {\n    // Generate 4-byte random buffer.\n    const buf = randomBytes(4, prng);\n    // Convert bytes from buffer into a 32-bit integer.\n    // It's not important which byte order to use, since\n    // the result is random.\n    const result = (0, binary_1.readUint32LE)(buf);\n    // Clean the buffer.\n    (0, wipe_1.wipe)(buf);\n    return result;\n}\nexports.randomUint32 = randomUint32;\n/** 62 alphanumeric characters for default charset of randomString() */\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n/**\n * Returns a uniform random string of the given length\n * with characters from the given charset.\n *\n * Charset must not have more than 256 characters.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nfunction randomString(length, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {\n    if (charset.length < 2) {\n        throw new Error(\"randomString charset is too short\");\n    }\n    if (charset.length > 256) {\n        throw new Error(\"randomString charset is too long\");\n    }\n    let out = '';\n    const charsLen = charset.length;\n    const maxByte = 256 - (256 % charsLen);\n    while (length > 0) {\n        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\n        for (let i = 0; i < buf.length && length > 0; i++) {\n            const randomByte = buf[i];\n            if (randomByte < maxByte) {\n                out += charset.charAt(randomByte % charsLen);\n                length--;\n            }\n        }\n        (0, wipe_1.wipe)(buf);\n    }\n    return out;\n}\nexports.randomString = randomString;\n/**\n * Returns uniform random string containing at least the given\n * number of bits of entropy.\n *\n * For example, randomStringForEntropy(128) will return a 22-character\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\n * will return a 39-character numeric string, both will contain at\n * least 128 bits of entropy.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nfunction randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {\n    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\n    return randomString(length, charset, prng);\n}\nexports.randomStringForEntropy = randomStringForEntropy;\n//# sourceMappingURL=random.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 64;\nexports.BLOCK_SIZE = 128;\n/**\n * SHA-2-512 cryptographic hash algorithm.\n */\nvar SHA512 = /** @class */ (function () {\n    function SHA512() {\n        /** Length of hash output */\n        this.digestLength = exports.DIGEST_LENGTH;\n        /** Block size */\n        this.blockSize = exports.BLOCK_SIZE;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this._stateHi = new Int32Array(8); // hash state, high bytes\n        this._stateLo = new Int32Array(8); // hash state, low bytes\n        this._tempHi = new Int32Array(16); // temporary state, high bytes\n        this._tempLo = new Int32Array(16); // temporary state, low bytes\n        this._buffer = new Uint8Array(256); // buffer for data to hash\n        this._bufferLength = 0; // number of bytes in buffer\n        this._bytesHashed = 0; // number of total bytes hashed\n        this._finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    SHA512.prototype._initState = function () {\n        this._stateHi[0] = 0x6a09e667;\n        this._stateHi[1] = 0xbb67ae85;\n        this._stateHi[2] = 0x3c6ef372;\n        this._stateHi[3] = 0xa54ff53a;\n        this._stateHi[4] = 0x510e527f;\n        this._stateHi[5] = 0x9b05688c;\n        this._stateHi[6] = 0x1f83d9ab;\n        this._stateHi[7] = 0x5be0cd19;\n        this._stateLo[0] = 0xf3bcc908;\n        this._stateLo[1] = 0x84caa73b;\n        this._stateLo[2] = 0xfe94f82b;\n        this._stateLo[3] = 0x5f1d36f1;\n        this._stateLo[4] = 0xade682d1;\n        this._stateLo[5] = 0x2b3e6c1f;\n        this._stateLo[6] = 0xfb41bd6b;\n        this._stateLo[7] = 0x137e2179;\n    };\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    SHA512.prototype.reset = function () {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    SHA512.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._tempHi);\n        wipe_1.wipe(this._tempLo);\n        this.reset();\n    };\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    SHA512.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this._finished) {\n            throw new Error(\"SHA512: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    SHA512.prototype.finish = function (out) {\n        if (!this._finished) {\n            var bytesHashed = this._bytesHashed;\n            var left = this._bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 128 < 112) ? 128 : 256;\n            this._buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);\n            this._finished = true;\n        }\n        for (var i = 0; i < this.digestLength / 8; i++) {\n            binary_1.writeUint32BE(this._stateHi[i], out, i * 8);\n            binary_1.writeUint32BE(this._stateLo[i], out, i * 8 + 4);\n        }\n        return this;\n    };\n    /**\n     * Returns the final hash digest.\n     */\n    SHA512.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be\n     * used with restoreState(). Only chain value is saved, not buffers or\n     * other state variables.\n     */\n    SHA512.prototype.saveState = function () {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            stateHi: new Int32Array(this._stateHi),\n            stateLo: new Int32Array(this._stateLo),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Restores state saved by\n     * saveState() and sets bytesHashed to the given value.\n     */\n    SHA512.prototype.restoreState = function (savedState) {\n        this._stateHi.set(savedState.stateHi);\n        this._stateLo.set(savedState.stateLo);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans state returned by saveState().\n     */\n    SHA512.prototype.cleanSavedState = function (savedState) {\n        wipe_1.wipe(savedState.stateHi);\n        wipe_1.wipe(savedState.stateLo);\n        if (savedState.buffer) {\n            wipe_1.wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    };\n    return SHA512;\n}());\nexports.SHA512 = SHA512;\n// Constants\nvar K = new Int32Array([\n    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]);\nfunction hashBlocks(wh, wl, hh, hl, m, pos, len) {\n    var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];\n    var h, l;\n    var th, tl;\n    var a, b, c, d;\n    while (len >= 128) {\n        for (var i = 0; i < 16; i++) {\n            var j = 8 * i + pos;\n            wh[i] = binary_1.readUint32BE(m, j);\n            wl[i] = binary_1.readUint32BE(m, j + 4);\n        }\n        for (var i = 0; i < 80; i++) {\n            var bh0 = ah0;\n            var bh1 = ah1;\n            var bh2 = ah2;\n            var bh3 = ah3;\n            var bh4 = ah4;\n            var bh5 = ah5;\n            var bh6 = ah6;\n            var bh7 = ah7;\n            var bl0 = al0;\n            var bl1 = al1;\n            var bl2 = al2;\n            var bl3 = al3;\n            var bl4 = al4;\n            var bl5 = al5;\n            var bl6 = al6;\n            var bl7 = al7;\n            // add\n            h = ah7;\n            l = al7;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            // Sigma1\n            h = ((ah4 >>> 14) | (al4 << (32 - 14))) ^ ((ah4 >>> 18) |\n                (al4 << (32 - 18))) ^ ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));\n            l = ((al4 >>> 14) | (ah4 << (32 - 14))) ^ ((al4 >>> 18) |\n                (ah4 << (32 - 18))) ^ ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // Ch\n            h = (ah4 & ah5) ^ (~ah4 & ah6);\n            l = (al4 & al5) ^ (~al4 & al6);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // K\n            h = K[i * 2];\n            l = K[i * 2 + 1];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // w\n            h = wh[i % 16];\n            l = wl[i % 16];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            th = c & 0xffff | d << 16;\n            tl = a & 0xffff | b << 16;\n            // add\n            h = th;\n            l = tl;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            // Sigma0\n            h = ((ah0 >>> 28) | (al0 << (32 - 28))) ^ ((al0 >>> (34 - 32)) |\n                (ah0 << (32 - (34 - 32)))) ^ ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));\n            l = ((al0 >>> 28) | (ah0 << (32 - 28))) ^ ((ah0 >>> (34 - 32)) |\n                (al0 << (32 - (34 - 32)))) ^ ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // Maj\n            h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n            l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            bh7 = (c & 0xffff) | (d << 16);\n            bl7 = (a & 0xffff) | (b << 16);\n            // add\n            h = bh3;\n            l = bl3;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = th;\n            l = tl;\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            bh3 = (c & 0xffff) | (d << 16);\n            bl3 = (a & 0xffff) | (b << 16);\n            ah1 = bh0;\n            ah2 = bh1;\n            ah3 = bh2;\n            ah4 = bh3;\n            ah5 = bh4;\n            ah6 = bh5;\n            ah7 = bh6;\n            ah0 = bh7;\n            al1 = bl0;\n            al2 = bl1;\n            al3 = bl2;\n            al4 = bl3;\n            al5 = bl4;\n            al6 = bl5;\n            al7 = bl6;\n            al0 = bl7;\n            if (i % 16 === 15) {\n                for (var j = 0; j < 16; j++) {\n                    // add\n                    h = wh[j];\n                    l = wl[j];\n                    a = l & 0xffff;\n                    b = l >>> 16;\n                    c = h & 0xffff;\n                    d = h >>> 16;\n                    h = wh[(j + 9) % 16];\n                    l = wl[(j + 9) % 16];\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    // sigma0\n                    th = wh[(j + 1) % 16];\n                    tl = wl[(j + 1) % 16];\n                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) |\n                        (tl << (32 - 8))) ^ (th >>> 7);\n                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) |\n                        (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    // sigma1\n                    th = wh[(j + 14) % 16];\n                    tl = wl[(j + 14) % 16];\n                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) |\n                        (th << (32 - (61 - 32)))) ^ (th >>> 6);\n                    l = ((tl >>> 19) | (th << (32 - 19))) ^ ((th >>> (61 - 32)) |\n                        (tl << (32 - (61 - 32)))) ^ ((tl >>> 6) | (th << (32 - 6)));\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    b += a >>> 16;\n                    c += b >>> 16;\n                    d += c >>> 16;\n                    wh[j] = (c & 0xffff) | (d << 16);\n                    wl[j] = (a & 0xffff) | (b << 16);\n                }\n            }\n        }\n        // add\n        h = ah0;\n        l = al0;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[0];\n        l = hl[0];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[0] = ah0 = (c & 0xffff) | (d << 16);\n        hl[0] = al0 = (a & 0xffff) | (b << 16);\n        h = ah1;\n        l = al1;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[1];\n        l = hl[1];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[1] = ah1 = (c & 0xffff) | (d << 16);\n        hl[1] = al1 = (a & 0xffff) | (b << 16);\n        h = ah2;\n        l = al2;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[2];\n        l = hl[2];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[2] = ah2 = (c & 0xffff) | (d << 16);\n        hl[2] = al2 = (a & 0xffff) | (b << 16);\n        h = ah3;\n        l = al3;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[3];\n        l = hl[3];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[3] = ah3 = (c & 0xffff) | (d << 16);\n        hl[3] = al3 = (a & 0xffff) | (b << 16);\n        h = ah4;\n        l = al4;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[4];\n        l = hl[4];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[4] = ah4 = (c & 0xffff) | (d << 16);\n        hl[4] = al4 = (a & 0xffff) | (b << 16);\n        h = ah5;\n        l = al5;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[5];\n        l = hl[5];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[5] = ah5 = (c & 0xffff) | (d << 16);\n        hl[5] = al5 = (a & 0xffff) | (b << 16);\n        h = ah6;\n        l = al6;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[6];\n        l = hl[6];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[6] = ah6 = (c & 0xffff) | (d << 16);\n        hl[6] = al6 = (a & 0xffff) | (b << 16);\n        h = ah7;\n        l = al7;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[7];\n        l = hl[7];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[7] = ah7 = (c & 0xffff) | (d << 16);\n        hl[7] = al7 = (a & 0xffff) | (b << 16);\n        pos += 128;\n        len -= 128;\n    }\n    return pos;\n}\nfunction hash(data) {\n    var h = new SHA512();\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n//# sourceMappingURL=sha512.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertSecretKeyToX25519 = exports.convertPublicKeyToX25519 = exports.verify = exports.sign = exports.extractPublicKeyFromSecretKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.SEED_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = exports.SIGNATURE_LENGTH = void 0;\n/**\n * Package ed25519 implements Ed25519 public-key signature algorithm.\n */\nconst random_1 = require(\"@stablelib/random\");\nconst sha512_1 = require(\"@stablelib/sha512\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.SIGNATURE_LENGTH = 64;\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 64;\nexports.SEED_LENGTH = 32;\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init) {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n// Base point.\nconst _9 = new Uint8Array(32);\n_9[0] = 9;\nconst gf0 = gf();\nconst gf1 = gf([1]);\nconst D = gf([\n    0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n    0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203\n]);\nconst D2 = gf([\n    0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n    0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406\n]);\nconst X = gf([\n    0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n    0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169\n]);\nconst Y = gf([\n    0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n    0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666\n]);\nconst I = gf([\n    0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n    0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83\n]);\nfunction set25519(r, a) {\n    for (let i = 0; i < 16; i++) {\n        r[i] = a[i] | 0;\n    }\n}\nfunction car25519(o) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\nfunction pack25519(o, n) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\nfunction verify32(x, y) {\n    let d = 0;\n    for (let i = 0; i < 32; i++) {\n        d |= x[i] ^ y[i];\n    }\n    return (1 & ((d - 1) >>> 8)) - 1;\n}\nfunction neq25519(a, b) {\n    const c = new Uint8Array(32);\n    const d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return verify32(c, d);\n}\nfunction par25519(a) {\n    const d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n}\nfunction unpack25519(o, n) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\nfunction add(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\nfunction sub(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\nfunction mul(o, a, b) {\n    let v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n    // first car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    // second car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\nfunction square(o, a) {\n    mul(o, a, a);\n}\nfunction inv25519(o, i) {\n    const c = gf();\n    let a;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 253; a >= 0; a--) {\n        square(c, c);\n        if (a !== 2 && a !== 4) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\nfunction pow2523(o, i) {\n    const c = gf();\n    let a;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 250; a >= 0; a--) {\n        square(c, c);\n        if (a !== 1) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\nfunction edadd(p, q) {\n    const a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();\n    sub(a, p[1], p[0]);\n    sub(t, q[1], q[0]);\n    mul(a, a, t);\n    add(b, p[0], p[1]);\n    add(t, q[0], q[1]);\n    mul(b, b, t);\n    mul(c, p[3], q[3]);\n    mul(c, c, D2);\n    mul(d, p[2], q[2]);\n    add(d, d, d);\n    sub(e, b, a);\n    sub(f, d, c);\n    add(g, d, c);\n    add(h, b, a);\n    mul(p[0], e, f);\n    mul(p[1], h, g);\n    mul(p[2], g, f);\n    mul(p[3], e, h);\n}\nfunction cswap(p, q, b) {\n    for (let i = 0; i < 4; i++) {\n        sel25519(p[i], q[i], b);\n    }\n}\nfunction pack(r, p) {\n    const tx = gf(), ty = gf(), zi = gf();\n    inv25519(zi, p[2]);\n    mul(tx, p[0], zi);\n    mul(ty, p[1], zi);\n    pack25519(r, ty);\n    r[31] ^= par25519(tx) << 7;\n}\nfunction scalarmult(p, q, s) {\n    set25519(p[0], gf0);\n    set25519(p[1], gf1);\n    set25519(p[2], gf1);\n    set25519(p[3], gf0);\n    for (let i = 255; i >= 0; --i) {\n        const b = (s[(i / 8) | 0] >> (i & 7)) & 1;\n        cswap(p, q, b);\n        edadd(q, p);\n        edadd(p, p);\n        cswap(p, q, b);\n    }\n}\nfunction scalarbase(p, s) {\n    const q = [gf(), gf(), gf(), gf()];\n    set25519(q[0], X);\n    set25519(q[1], Y);\n    set25519(q[2], gf1);\n    mul(q[3], X, Y);\n    scalarmult(p, q, s);\n}\n// Generates key pair from secret 32-byte seed.\nfunction generateKeyPairFromSeed(seed) {\n    if (seed.length !== exports.SEED_LENGTH) {\n        throw new Error(`ed25519: seed must be ${exports.SEED_LENGTH} bytes`);\n    }\n    const d = (0, sha512_1.hash)(seed);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    const publicKey = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    scalarbase(p, d);\n    pack(publicKey, p);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return {\n        publicKey,\n        secretKey\n    };\n}\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\nfunction generateKeyPair(prng) {\n    const seed = (0, random_1.randomBytes)(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    (0, wipe_1.wipe)(seed);\n    return result;\n}\nexports.generateKeyPair = generateKeyPair;\nfunction extractPublicKeyFromSecretKey(secretKey) {\n    if (secretKey.length !== exports.SECRET_KEY_LENGTH) {\n        throw new Error(`ed25519: secret key must be ${exports.SECRET_KEY_LENGTH} bytes`);\n    }\n    return new Uint8Array(secretKey.subarray(32));\n}\nexports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;\nconst L = new Float64Array([\n    0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2,\n    0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10\n]);\nfunction modL(r, x) {\n    let carry;\n    let i;\n    let j;\n    let k;\n    for (i = 63; i >= 32; --i) {\n        carry = 0;\n        for (j = i - 32, k = i - 12; j < k; ++j) {\n            x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n            carry = Math.floor((x[j] + 128) / 256);\n            x[j] -= carry * 256;\n        }\n        x[j] += carry;\n        x[i] = 0;\n    }\n    carry = 0;\n    for (j = 0; j < 32; j++) {\n        x[j] += carry - (x[31] >> 4) * L[j];\n        carry = x[j] >> 8;\n        x[j] &= 255;\n    }\n    for (j = 0; j < 32; j++) {\n        x[j] -= carry * L[j];\n    }\n    for (i = 0; i < 32; i++) {\n        x[i + 1] += x[i] >> 8;\n        r[i] = x[i] & 255;\n    }\n}\nfunction reduce(r) {\n    const x = new Float64Array(64);\n    for (let i = 0; i < 64; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 64; i++) {\n        r[i] = 0;\n    }\n    modL(r, x);\n}\n// Returns 64-byte signature of the message under the 64-byte secret key.\nfunction sign(secretKey, message) {\n    const x = new Float64Array(64);\n    const p = [gf(), gf(), gf(), gf()];\n    const d = (0, sha512_1.hash)(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    const signature = new Uint8Array(64);\n    signature.set(d.subarray(32), 32);\n    const hs = new sha512_1.SHA512();\n    hs.update(signature.subarray(32));\n    hs.update(message);\n    const r = hs.digest();\n    hs.clean();\n    reduce(r);\n    scalarbase(p, r);\n    pack(signature, p);\n    hs.reset();\n    hs.update(signature.subarray(0, 32));\n    hs.update(secretKey.subarray(32));\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n    for (let i = 0; i < 32; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 32; i++) {\n        for (let j = 0; j < 32; j++) {\n            x[i + j] += h[i] * d[j];\n        }\n    }\n    modL(signature.subarray(32), x);\n    return signature;\n}\nexports.sign = sign;\nfunction unpackneg(r, p) {\n    const t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    square(num, r[1]);\n    mul(den, num, D);\n    sub(num, num, r[2]);\n    add(den, r[2], den);\n    square(den2, den);\n    square(den4, den2);\n    mul(den6, den4, den2);\n    mul(t, den6, num);\n    mul(t, t, den);\n    pow2523(t, t);\n    mul(t, t, num);\n    mul(t, t, den);\n    mul(t, t, den);\n    mul(r[0], t, den);\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        mul(r[0], r[0], I);\n    }\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        return -1;\n    }\n    if (par25519(r[0]) === (p[31] >> 7)) {\n        sub(r[0], gf0, r[0]);\n    }\n    mul(r[3], r[0], r[1]);\n    return 0;\n}\nfunction verify(publicKey, message, signature) {\n    const t = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    const q = [gf(), gf(), gf(), gf()];\n    if (signature.length !== exports.SIGNATURE_LENGTH) {\n        throw new Error(`ed25519: signature must be ${exports.SIGNATURE_LENGTH} bytes`);\n    }\n    if (unpackneg(q, publicKey)) {\n        return false;\n    }\n    const hs = new sha512_1.SHA512();\n    hs.update(signature.subarray(0, 32));\n    hs.update(publicKey);\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n    scalarmult(p, q, h);\n    scalarbase(q, signature.subarray(32));\n    edadd(p, q);\n    pack(t, p);\n    if (verify32(signature, t)) {\n        return false;\n    }\n    return true;\n}\nexports.verify = verify;\n/**\n * Convert Ed25519 public key to X25519 public key.\n *\n * Throws if given an invalid public key.\n */\nfunction convertPublicKeyToX25519(publicKey) {\n    let q = [gf(), gf(), gf(), gf()];\n    if (unpackneg(q, publicKey)) {\n        throw new Error(\"Ed25519: invalid public key\");\n    }\n    // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n    let a = gf();\n    let b = gf();\n    let y = q[1];\n    add(a, gf1, y);\n    sub(b, gf1, y);\n    inv25519(b, b);\n    mul(a, a, b);\n    let z = new Uint8Array(32);\n    pack25519(z, a);\n    return z;\n}\nexports.convertPublicKeyToX25519 = convertPublicKeyToX25519;\n/**\n *  Convert Ed25519 secret (private) key to X25519 secret key.\n */\nfunction convertSecretKeyToX25519(secretKey) {\n    const d = (0, sha512_1.hash)(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    const o = new Uint8Array(d.subarray(0, 32));\n    (0, wipe_1.wipe)(d);\n    return o;\n}\nexports.convertSecretKeyToX25519 = convertSecretKeyToX25519;\n//# sourceMappingURL=ed25519.js.map","export const JWT_IRIDIUM_ALG = \"EdDSA\";\nexport const JWT_IRIDIUM_TYP = \"JWT\";\nexport const JWT_DELIMITER = \".\";\nexport const JWT_ENCODING = \"base64url\";\nexport const JSON_ENCODING = \"utf8\";\nexport const DATA_ENCODING = \"utf8\";\nexport const DID_DELIMITER = \":\";\nexport const DID_PREFIX = \"did\";\nexport const DID_METHOD = \"key\";\nexport const MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexport const MULTICODEC_ED25519_BASE = \"z\";\nexport const MULTICODEC_ED25519_HEADER = \"K36\";\nexport const MULTICODEC_ED25519_LENGTH = 32;\nexport const KEY_PAIR_SEED_LENGTH = 32;\n//# sourceMappingURL=constants.js.map","export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}","import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}","import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import { concat } from \"uint8arrays/concat\";\nimport { toString } from \"uint8arrays/to-string\";\nimport { fromString } from \"uint8arrays/from-string\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nimport { DATA_ENCODING, DID_DELIMITER, DID_METHOD, DID_PREFIX, JSON_ENCODING, JWT_DELIMITER, JWT_ENCODING, MULTICODEC_ED25519_BASE, MULTICODEC_ED25519_ENCODING, MULTICODEC_ED25519_HEADER, MULTICODEC_ED25519_LENGTH, } from \"./constants\";\nexport function decodeJSON(str) {\n    return safeJsonParse(toString(fromString(str, JWT_ENCODING), JSON_ENCODING));\n}\nexport function encodeJSON(val) {\n    return toString(fromString(safeJsonStringify(val), JSON_ENCODING), JWT_ENCODING);\n}\nexport function encodeIss(publicKey) {\n    const header = fromString(MULTICODEC_ED25519_HEADER, MULTICODEC_ED25519_ENCODING);\n    const multicodec = MULTICODEC_ED25519_BASE +\n        toString(concat([header, publicKey]), MULTICODEC_ED25519_ENCODING);\n    return [DID_PREFIX, DID_METHOD, multicodec].join(DID_DELIMITER);\n}\nexport function decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(DID_DELIMITER);\n    if (prefix !== DID_PREFIX || method !== DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    const base = multicodec.slice(0, 1);\n    if (base !== MULTICODEC_ED25519_BASE) {\n        throw new Error(`Issuer must be a key in mulicodec format`);\n    }\n    const bytes = fromString(multicodec.slice(1), MULTICODEC_ED25519_ENCODING);\n    const type = toString(bytes.slice(0, 2), MULTICODEC_ED25519_ENCODING);\n    if (type !== MULTICODEC_ED25519_HEADER) {\n        throw new Error(`Issuer must be a public key with type \"Ed25519\"`);\n    }\n    const publicKey = bytes.slice(2);\n    if (publicKey.length !== MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\nexport function encodeSig(bytes) {\n    return toString(bytes, JWT_ENCODING);\n}\nexport function decodeSig(encoded) {\n    return fromString(encoded, JWT_ENCODING);\n}\nexport function encodeData(params) {\n    return fromString([encodeJSON(params.header), encodeJSON(params.payload)].join(JWT_DELIMITER), DATA_ENCODING);\n}\nexport function decodeData(data) {\n    const params = toString(data, DATA_ENCODING).split(JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    return { header, payload };\n}\nexport function encodeJWT(params) {\n    return [\n        encodeJSON(params.header),\n        encodeJSON(params.payload),\n        encodeSig(params.signature),\n    ].join(JWT_DELIMITER);\n}\nexport function decodeJWT(jwt) {\n    const params = jwt.split(JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    const signature = decodeSig(params[2]);\n    const data = fromString(params.slice(0, 2).join(JWT_DELIMITER), DATA_ENCODING);\n    return { header, payload, signature, data };\n}\n//# sourceMappingURL=utils.js.map","import * as ed25519 from \"@stablelib/ed25519\";\nimport { randomBytes } from \"@stablelib/random\";\nimport { fromMiliseconds } from \"@walletconnect/time\";\nimport { JWT_IRIDIUM_ALG, JWT_IRIDIUM_TYP, KEY_PAIR_SEED_LENGTH, } from \"./constants\";\nimport { decodeIss, decodeJWT, encodeData, encodeIss, encodeJWT, } from \"./utils\";\nexport function generateKeyPair(seed = randomBytes(KEY_PAIR_SEED_LENGTH)) {\n    return ed25519.generateKeyPairFromSeed(seed);\n}\nexport async function signJWT(sub, aud, ttl, keyPair, iat = fromMiliseconds(Date.now())) {\n    const header = { alg: JWT_IRIDIUM_ALG, typ: JWT_IRIDIUM_TYP };\n    const iss = encodeIss(keyPair.publicKey);\n    const exp = iat + ttl;\n    const payload = { iss, sub, aud, iat, exp };\n    const data = encodeData({ header, payload });\n    const signature = ed25519.sign(keyPair.secretKey, data);\n    return encodeJWT({ header, payload, signature });\n}\nexport async function verifyJWT(jwt) {\n    const { header, payload, data, signature } = decodeJWT(jwt);\n    if (header.alg !== JWT_IRIDIUM_ALG || header.typ !== JWT_IRIDIUM_TYP) {\n        throw new Error(\"JWT must use EdDSA algorithm\");\n    }\n    const publicKey = decodeIss(payload.iss);\n    return ed25519.verify(publicKey, data, signature);\n}\n//# sourceMappingURL=api.js.map","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;\nfunction getFromWindow(name) {\n    let res = undefined;\n    if (typeof window !== \"undefined\" && typeof window[name] !== \"undefined\") {\n        res = window[name];\n    }\n    return res;\n}\nexports.getFromWindow = getFromWindow;\nfunction getFromWindowOrThrow(name) {\n    const res = getFromWindow(name);\n    if (!res) {\n        throw new Error(`${name} is not defined in Window`);\n    }\n    return res;\n}\nexports.getFromWindowOrThrow = getFromWindowOrThrow;\nfunction getDocumentOrThrow() {\n    return getFromWindowOrThrow(\"document\");\n}\nexports.getDocumentOrThrow = getDocumentOrThrow;\nfunction getDocument() {\n    return getFromWindow(\"document\");\n}\nexports.getDocument = getDocument;\nfunction getNavigatorOrThrow() {\n    return getFromWindowOrThrow(\"navigator\");\n}\nexports.getNavigatorOrThrow = getNavigatorOrThrow;\nfunction getNavigator() {\n    return getFromWindow(\"navigator\");\n}\nexports.getNavigator = getNavigator;\nfunction getLocationOrThrow() {\n    return getFromWindowOrThrow(\"location\");\n}\nexports.getLocationOrThrow = getLocationOrThrow;\nfunction getLocation() {\n    return getFromWindow(\"location\");\n}\nexports.getLocation = getLocation;\nfunction getCryptoOrThrow() {\n    return getFromWindowOrThrow(\"crypto\");\n}\nexports.getCryptoOrThrow = getCryptoOrThrow;\nfunction getCrypto() {\n    return getFromWindow(\"crypto\");\n}\nexports.getCrypto = getCrypto;\nfunction getLocalStorageOrThrow() {\n    return getFromWindowOrThrow(\"localStorage\");\n}\nexports.getLocalStorageOrThrow = getLocalStorageOrThrow;\nfunction getLocalStorage() {\n    return getFromWindow(\"localStorage\");\n}\nexports.getLocalStorage = getLocalStorage;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWindowMetadata = void 0;\nconst window_getters_1 = require(\"@walletconnect/window-getters\");\nfunction getWindowMetadata() {\n    let doc;\n    let loc;\n    try {\n        doc = window_getters_1.getDocumentOrThrow();\n        loc = window_getters_1.getLocationOrThrow();\n    }\n    catch (e) {\n        return null;\n    }\n    function getIcons() {\n        const links = doc.getElementsByTagName(\"link\");\n        const icons = [];\n        for (let i = 0; i < links.length; i++) {\n            const link = links[i];\n            const rel = link.getAttribute(\"rel\");\n            if (rel) {\n                if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n                    const href = link.getAttribute(\"href\");\n                    if (href) {\n                        if (href.toLowerCase().indexOf(\"https:\") === -1 &&\n                            href.toLowerCase().indexOf(\"http:\") === -1 &&\n                            href.indexOf(\"//\") !== 0) {\n                            let absoluteHref = loc.protocol + \"//\" + loc.host;\n                            if (href.indexOf(\"/\") === 0) {\n                                absoluteHref += href;\n                            }\n                            else {\n                                const path = loc.pathname.split(\"/\");\n                                path.pop();\n                                const finalPath = path.join(\"/\");\n                                absoluteHref += finalPath + \"/\" + href;\n                            }\n                            icons.push(absoluteHref);\n                        }\n                        else if (href.indexOf(\"//\") === 0) {\n                            const absoluteUrl = loc.protocol + href;\n                            icons.push(absoluteUrl);\n                        }\n                        else {\n                            icons.push(href);\n                        }\n                    }\n                }\n            }\n        }\n        return icons;\n    }\n    function getWindowMetadataOfAny(...args) {\n        const metaTags = doc.getElementsByTagName(\"meta\");\n        for (let i = 0; i < metaTags.length; i++) {\n            const tag = metaTags[i];\n            const attributes = [\"itemprop\", \"property\", \"name\"]\n                .map((target) => tag.getAttribute(target))\n                .filter((attr) => {\n                if (attr) {\n                    return args.includes(attr);\n                }\n                return false;\n            });\n            if (attributes.length && attributes) {\n                const content = tag.getAttribute(\"content\");\n                if (content) {\n                    return content;\n                }\n            }\n        }\n        return \"\";\n    }\n    function getName() {\n        let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n        if (!name) {\n            name = doc.title;\n        }\n        return name;\n    }\n    function getDescription() {\n        const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n        return description;\n    }\n    const name = getName();\n    const description = getDescription();\n    const url = loc.origin;\n    const icons = getIcons();\n    const meta = {\n        description,\n        url,\n        icons,\n        name,\n    };\n    return meta;\n}\nexports.getWindowMetadata = getWindowMetadata;\n//# sourceMappingURL=index.js.map","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","export const version = \"logger/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n    ///////////////////\n    // Interaction Errors\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"bytes/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport sha3 from \"js-sha3\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","export const version = \"bignumber/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nexport function _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nexport function _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","import { BigNumber } from \"@ethersproject/bignumber\";\nconst NegativeOne = ( /*#__PURE__*/BigNumber.from(-1));\nconst Zero = ( /*#__PURE__*/BigNumber.from(0));\nconst One = ( /*#__PURE__*/BigNumber.from(1));\nconst Two = ( /*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther = ( /*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256 = ( /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nconst MinInt256 = ( /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256 = ( /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256, MinInt256, MaxInt256, };\n//# sourceMappingURL=bignumbers.js.map","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","\"use strict\";\nexport { AddressZero } from \"./addresses\";\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256, MinInt256, MaxInt256 } from \"./bignumbers\";\nexport { HashZero } from \"./hashes\";\nexport { EtherSymbol } from \"./strings\";\n//# sourceMappingURL=index.js.map","export const version = \"strings/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nexport var Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","\"use strict\";\nimport { formatBytes32String, parseBytes32String } from \"./bytes32\";\nimport { nameprep } from \"./idna\";\nimport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm, Utf8ErrorFuncs, Utf8ErrorReason } from \"./utf8\";\nexport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason, UnicodeNormalizationForm, formatBytes32String, parseBytes32String, nameprep };\n//# sourceMappingURL=index.js.map","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport function id(text) {\n    return keccak256(toUtf8Bytes(text));\n}\n//# sourceMappingURL=id.js.map","export const version = \"hash/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","\"use strict\";\nexport { decode, encode } from \"./base64\";\n//# sourceMappingURL=index.js.map","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array, depth) {\n    if (depth == null) {\n        depth = 1;\n    }\n    const result = [];\n    const forEach = result.forEach;\n    const flatDeep = function (arr, depth) {\n        forEach.call(arr, function (val) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            }\n            else {\n                result.push(val);\n            }\n        });\n    };\n    flatDeep(array, depth);\n    return result;\n}\nfunction fromEntries(array) {\n    const result = {};\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\nexport function decode_arithmetic(bytes) {\n    let pos = 0;\n    function u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n    // decode the frequency table\n    let symbol_count = u16();\n    let total = 1;\n    let acc = [0, 1]; // first symbol has frequency 1\n    for (let i = 1; i < symbol_count; i++) {\n        acc.push(total += u16());\n    }\n    // skip the sized-payload that the last 3 symbols index into\n    let skip = u16();\n    let pos_payload = pos;\n    pos += skip;\n    let read_width = 0;\n    let read_buffer = 0;\n    function read_bit() {\n        if (read_width == 0) {\n            // this will read beyond end of buffer\n            // but (undefined|0) => zero pad\n            read_buffer = (read_buffer << 8) | bytes[pos++];\n            read_width = 8;\n        }\n        return (read_buffer >> --read_width) & 1;\n    }\n    const N = 31;\n    const FULL = Math.pow(2, N);\n    const HALF = FULL >>> 1;\n    const QRTR = HALF >> 1;\n    const MASK = FULL - 1;\n    // fill register\n    let register = 0;\n    for (let i = 0; i < N; i++)\n        register = (register << 1) | read_bit();\n    let symbols = [];\n    let low = 0;\n    let range = FULL; // treat like a float\n    while (true) {\n        let value = Math.floor((((register - low + 1) * total) - 1) / range);\n        let start = 0;\n        let end = symbol_count;\n        while (end - start > 1) { // binary search\n            let mid = (start + end) >>> 1;\n            if (value < acc[mid]) {\n                end = mid;\n            }\n            else {\n                start = mid;\n            }\n        }\n        if (start == 0)\n            break; // first symbol is end mark\n        symbols.push(start);\n        let a = low + Math.floor(range * acc[start] / total);\n        let b = low + Math.floor(range * acc[start + 1] / total) - 1;\n        while (((a ^ b) & HALF) == 0) {\n            register = (register << 1) & MASK | read_bit();\n            a = (a << 1) & MASK;\n            b = (b << 1) & MASK | 1;\n        }\n        while (a & ~b & QRTR) {\n            register = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n            a = (a << 1) ^ HALF;\n            b = ((b ^ HALF) << 1) | HALF | 1;\n        }\n        low = a;\n        range = 1 + b - a;\n    }\n    let offset = symbol_count - 4;\n    return symbols.map(x => {\n        switch (x - offset) {\n            case 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n            case 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n            case 1: return offset + bytes[pos_payload++];\n            default: return x - 1;\n        }\n    });\n}\n// returns an iterator which returns the next symbol\nexport function read_payload(v) {\n    let pos = 0;\n    return () => v[pos++];\n}\nexport function read_compressed_payload(bytes) {\n    return read_payload(decode_arithmetic(bytes));\n}\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i) {\n    return (i & 1) ? (~i >> 1) : (i >> 1);\n}\nfunction read_counts(n, next) {\n    let v = Array(n);\n    for (let i = 0; i < n; i++)\n        v[i] = 1 + next();\n    return v;\n}\nfunction read_ascending(n, next) {\n    let v = Array(n);\n    for (let i = 0, x = -1; i < n; i++)\n        v[i] = x += 1 + next();\n    return v;\n}\nfunction read_deltas(n, next) {\n    let v = Array(n);\n    for (let i = 0, x = 0; i < n; i++)\n        v[i] = x += signed(next());\n    return v;\n}\nexport function read_member_array(next, lookup) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next) {\n    let ret = [];\n    while (true) {\n        let w = next();\n        if (w == 0)\n            break;\n        ret.push(read_linear_table(w, next));\n    }\n    while (true) {\n        let w = next() - 1;\n        if (w < 0)\n            break;\n        ret.push(read_replacement_table(w, next));\n    }\n    return fromEntries(flat(ret));\n}\nexport function read_zero_terminated_array(next) {\n    let v = [];\n    while (true) {\n        let i = next();\n        if (i == 0)\n            break;\n        v.push(i);\n    }\n    return v;\n}\nfunction read_transposed(n, w, next) {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\nfunction read_linear_table(w, next) {\n    let dx = 1 + next();\n    let dy = next();\n    let vN = read_zero_terminated_array(next);\n    let m = read_transposed(vN.length, 1 + w, next);\n    return flat(m.map((v, i) => {\n        const x = v[0], ys = v.slice(1);\n        //let [x, ...ys] = v;\n        //return Array(vN[i]).fill().map((_, j) => {\n        return Array(vN[i]).fill(undefined).map((_, j) => {\n            let j_dy = j * dy;\n            return [x + j * dx, ys.map(y => y + j_dy)];\n        });\n    }));\n}\nfunction read_replacement_table(w, next) {\n    let n = 1 + next();\n    let m = read_transposed(n, 1 + w, next);\n    return m.map(v => [v[0], v.slice(1)]);\n}\nexport function read_emoji_trie(next) {\n    let sorted = read_member_array(next).sort((a, b) => a - b);\n    return read();\n    function read() {\n        let branches = [];\n        while (true) {\n            let keys = read_member_array(next, sorted);\n            if (keys.length == 0)\n                break;\n            branches.push({ set: new Set(keys), node: read() });\n        }\n        branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n        let temp = next();\n        let valid = temp % 3;\n        temp = (temp / 3) | 0;\n        let fe0f = !!(temp & 1);\n        temp >>= 1;\n        let save = temp == 1;\n        let check = temp == 2;\n        return { branches, valid, fe0f, save, check };\n    }\n}\n//# sourceMappingURL=decoder.js.map","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\nimport { decode } from \"@ethersproject/base64\";\nimport { read_compressed_payload } from './decoder.js';\nexport function getData() {\n    return read_compressed_payload(decode(''));\n}\n//# sourceMappingURL=include.js.map","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\nimport { getData } from './include.js';\nconst r = getData();\nimport { read_member_array, read_mapped_map, read_emoji_trie } from './decoder.js';\n// @TODO: This should be lazily loaded\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\nfunction explode_cp(name) {\n    return toUtf8CodePoints(name);\n}\nfunction filter_fe0f(cps) {\n    return cps.filter(cp => cp != 0xFE0F);\n}\nexport function ens_normalize_post_check(name) {\n    for (let label of name.split('.')) {\n        let cps = explode_cp(label);\n        try {\n            for (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n                if (cps[i] !== UNDERSCORE) {\n                    throw new Error(`underscore only allowed at start`);\n                }\n            }\n            if (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n                throw new Error(`invalid label extension`);\n            }\n        }\n        catch (err) {\n            throw new Error(`Invalid label \"${label}\": ${err.message}`);\n        }\n    }\n    return name;\n}\nexport function ens_normalize(name) {\n    return ens_normalize_post_check(normalize(name, filter_fe0f));\n}\nfunction normalize(name, emoji_filter) {\n    let input = explode_cp(name).reverse(); // flip for pop\n    let output = [];\n    while (input.length) {\n        let emoji = consume_emoji_reversed(input);\n        if (emoji) {\n            output.push(...emoji_filter(emoji));\n            continue;\n        }\n        let cp = input.pop();\n        if (VALID.has(cp)) {\n            output.push(cp);\n            continue;\n        }\n        if (IGNORED.has(cp)) {\n            continue;\n        }\n        let cps = MAPPED[cp];\n        if (cps) {\n            output.push(...cps);\n            continue;\n        }\n        throw new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n    }\n    return ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\nfunction nfc(s) {\n    return s.normalize('NFC');\n}\nfunction consume_emoji_reversed(cps, eaten) {\n    var _a;\n    let node = EMOJI_ROOT;\n    let emoji;\n    let saved;\n    let stack = [];\n    let pos = cps.length;\n    if (eaten)\n        eaten.length = 0; // clear input buffer (if needed)\n    while (pos) {\n        let cp = cps[--pos];\n        node = (_a = node.branches.find(x => x.set.has(cp))) === null || _a === void 0 ? void 0 : _a.node;\n        if (!node)\n            break;\n        if (node.save) { // remember\n            saved = cp;\n        }\n        else if (node.check) { // check exclusion\n            if (cp === saved)\n                break;\n        }\n        stack.push(cp);\n        if (node.fe0f) {\n            stack.push(0xFE0F);\n            if (pos > 0 && cps[pos - 1] == 0xFE0F)\n                pos--; // consume optional FE0F\n        }\n        if (node.valid) { // this is a valid emoji (so far)\n            emoji = stack.slice(); // copy stack\n            if (node.valid == 2)\n                emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n            if (eaten)\n                eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n            cps.length = pos; // truncate\n        }\n    }\n    return emoji;\n}\n//# sourceMappingURL=lib.js.map","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { ens_normalize } from \"./ens-normalize/lib\";\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nfunction checkComponent(comp) {\n    if (comp.length === 0) {\n        throw new Error(\"invalid ENS name; empty component\");\n    }\n    return comp;\n}\nfunction ensNameSplit(name) {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps = [];\n    if (name.length === 0) {\n        return comps;\n    }\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) {\n        throw new Error(\"invalid ENS name; empty component\");\n    }\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\nexport function ensNormalize(name) {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\nexport function isValidName(name) {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let result = Zeros;\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n    return hexlify(result);\n}\nexport function dnsEncode(name) {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\n//# sourceMappingURL=namehash.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","export const version = \"rlp/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { arrayify, hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    const data = Array.prototype.slice.call(arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nexport function encode(object) {\n    return hexlify(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\nexport function decode(data) {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n//# sourceMappingURL=index.js.map","export const version = \"address/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nexport function getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nexport function isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getIcapAddress(address) {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\nexport function getCreate2Address(from, salt, initCodeHash) {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=index.js.map","export const version = \"properties/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nexport function resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nexport function checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nexport function shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value = null;\n            try {\n                value = object[keys[i]];\n            }\n            catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n            if (!_isFrozen(value)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nexport function deepCopy(object) {\n    return _deepCopy(object);\n}\nexport class Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","\"use strict\";\nimport { id } from \"./id\";\nimport { dnsEncode, isValidName, namehash } from \"./namehash\";\nimport { hashMessage, messagePrefix } from \"./message\";\nimport { ensNormalize } from \"./namehash\";\nimport { TypedDataEncoder as _TypedDataEncoder } from \"./typed-data\";\nexport { id, dnsEncode, namehash, isValidName, ensNormalize, messagePrefix, hashMessage, _TypedDataEncoder, };\n//# sourceMappingURL=index.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","import BN from 'bn.js';\nimport hash from 'hash.js';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n\nfunction getAugmentedNamespace(n) {\n\tif (n.__esModule) return n;\n\tvar a = Object.defineProperty({}, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar utils_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n});\n\nvar utils_1$1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\n\n\n\nutils.assert = minimalisticAssert;\nutils.toArray = utils_1.toArray;\nutils.zero2 = utils_1.zero2;\nutils.toHex = utils_1.toHex;\nutils.encode = utils_1.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n});\n\n'use strict';\n\n\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert$1(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert$1(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert$1(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n});\n\n'use strict';\n\n\n\n\n\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits_browser(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits_browser(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits_browser(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curve = exports;\n\ncurve.base = base;\ncurve.short = short_1;\ncurve.mont = /*RicMoo:ethers:require(./mont)*/(null);\ncurve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);\n});\n\nvar curves_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curves = exports;\n\n\n\n\n\nvar assert = utils_1$1.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve_1.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve_1.edwards(options);\n  else\n    this.curve = new curve_1.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n});\n\n'use strict';\n\n\n\n\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n'use strict';\n\n\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n'use strict';\n\n\n\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n'use strict';\n\n\n\n\n\nvar rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nvar assert$5 = utils_1$1.assert;\n\n\n\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),\n      'Unknown curve ' + options);\n\n    options = curves_1[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves_1.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex');\n\n  // Perform primitive values validation\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature$1.r;\n  var s = signature$1.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null)\n    return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = /*RicMoo:ethers*/{ version: \"6.5.4\" }.version;\nelliptic.utils = utils_1$1;\nelliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nelliptic.curve = curve_1;\nelliptic.curves = curves_1;\n\n// Protocols\nelliptic.ec = ec;\nelliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);\n});\n\nvar EC$1 = elliptic_1.ec;\n\nexport { EC$1 as EC };\n//# sourceMappingURL=elliptic.js.map\n","export const version = \"signing-key/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { EC } from \"./elliptic\";\nimport { arrayify, hexDataLength, hexlify, hexZeroPad, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nlet _curve = null;\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\nexport class SigningKey {\n    constructor(privateKey) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n    _addPoint(other) {\n        const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 = getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n    signDigest(digest) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        });\n    }\n    computeSharedSecret(otherKey) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n    static isSigningKey(value) {\n        return !!(value && value._isSigningKey);\n    }\n}\nexport function recoverPublicKey(digest, signature) {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\nexport function computePublicKey(key, compressed) {\n    const bytes = arrayify(key);\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n    }\n    else if (bytes.length === 33) {\n        if (compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n    }\n    else if (bytes.length === 65) {\n        if (!compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n//# sourceMappingURL=index.js.map","export const version = \"transactions/5.7.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport var TransactionTypes;\n(function (TransactionTypes) {\n    TransactionTypes[TransactionTypes[\"legacy\"] = 0] = \"legacy\";\n    TransactionTypes[TransactionTypes[\"eip2930\"] = 1] = \"eip2930\";\n    TransactionTypes[TransactionTypes[\"eip1559\"] = 2] = \"eip1559\";\n})(TransactionTypes || (TransactionTypes = {}));\n;\n///////////////////////////////\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return getAddress(value);\n}\nfunction handleNumber(value) {\n    if (value === \"0x\") {\n        return Zero;\n    }\n    return BigNumber.from(value);\n}\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\", maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\", length: 20 },\n    { name: \"value\", maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true\n};\nexport function computeAddress(key) {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\nexport function recoverAddress(digest, signature) {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\nfunction formatNumber(value, name) {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\nexport function accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n                }\n                return accessSetify(set[0], set[1]);\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction _serializeEip1559(transaction, signature) {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x02\", RLP.encode(fields)]);\n}\nfunction _serializeEip2930(transaction, signature) {\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x01\", RLP.encode(fields)]);\n}\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction, signature) {\n    checkProperties(transaction, allowedTransactionKeys);\n    const raw = [];\n    transactionFields.forEach(function (fieldInfo) {\n        let value = transaction[fieldInfo.name] || ([]);\n        const options = {};\n        if (fieldInfo.numeric) {\n            options.hexPad = \"left\";\n        }\n        value = arrayify(hexlify(value, options));\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n            }\n        }\n        raw.push(hexlify(value));\n    });\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n        if (typeof (chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n    }\n    else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam;\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n            logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    }\n    else if (sig.v !== v) {\n        logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n    return RLP.encode(raw);\n}\nexport function serialize(transaction, signature) {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n    return logger.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\nfunction _parseEipSignature(tx, fields, serialize) {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) {\n            throw new Error(\"bad recid\");\n        }\n        tx.v = recid;\n    }\n    catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    }\n    catch (error) { }\n}\nfunction _parseEip1559(payload) {\n    const transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx = {\n        type: 2,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        maxFeePerGas: maxFeePerGas,\n        gasPrice: null,\n        gasLimit: handleNumber(transaction[4]),\n        to: handleAddress(transaction[5]),\n        value: handleNumber(transaction[6]),\n        data: transaction[7],\n        accessList: accessListify(transaction[8]),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n    return tx;\n}\nfunction _parseEip2930(payload) {\n    const transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n    const tx = {\n        type: 1,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        gasPrice: handleNumber(transaction[2]),\n        gasLimit: handleNumber(transaction[3]),\n        to: handleAddress(transaction[4]),\n        value: handleNumber(transaction[5]),\n        data: transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n    return tx;\n}\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction) {\n    const transaction = RLP.decode(rawTransaction);\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n    const tx = {\n        nonce: handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to: handleAddress(transaction[3]),\n        value: handleNumber(transaction[4]),\n        data: transaction[5],\n        chainId: 0\n    };\n    // Legacy unsigned transaction\n    if (transaction.length === 6) {\n        return tx;\n    }\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n    }\n    catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n    }\n    else {\n        // Signed Transaction\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) {\n            tx.chainId = 0;\n        }\n        let recoveryParam = tx.v - 27;\n        const raw = transaction.slice(0, 6);\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        }\n        catch (error) { }\n        tx.hash = keccak256(rawTransaction);\n    }\n    tx.type = null;\n    return tx;\n}\nexport function parse(rawTransaction) {\n    const payload = arrayify(rawTransaction);\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) {\n        return _parse(payload);\n    }\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n    return logger.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package chacha implements ChaCha stream cipher.\n */\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n// Number of ChaCha rounds (ChaCha20).\nvar ROUNDS = 20;\n// Applies the ChaCha core function to 16-byte input,\n// 32-byte key key, and puts the result into 64-byte array out.\nfunction core(out, input, key) {\n    var j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    var j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\n    var j2 = 0x79622D32; // \"2-by\"\n    var j3 = 0x6B206574; // \"te k\"\n    var j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    var j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    var j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    var j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    var j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    var j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    var j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    var j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    var j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\n    var j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\n    var j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\n    var j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\n    var x0 = j0;\n    var x1 = j1;\n    var x2 = j2;\n    var x3 = j3;\n    var x4 = j4;\n    var x5 = j5;\n    var x6 = j6;\n    var x7 = j7;\n    var x8 = j8;\n    var x9 = j9;\n    var x10 = j10;\n    var x11 = j11;\n    var x12 = j12;\n    var x13 = j13;\n    var x14 = j14;\n    var x15 = j15;\n    for (var i = 0; i < ROUNDS; i += 2) {\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x2 = x2 + x6 | 0;\n        x14 ^= x2;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x10 = x10 + x14 | 0;\n        x6 ^= x10;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x3 = x3 + x7 | 0;\n        x15 ^= x3;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x11 = x11 + x15 | 0;\n        x7 ^= x11;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x1 = x1 + x5 | 0;\n        x13 ^= x1;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x9 = x9 + x13 | 0;\n        x5 ^= x9;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n        x0 = x0 + x4 | 0;\n        x12 ^= x0;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x8 = x8 + x12 | 0;\n        x4 ^= x8;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 16) | x15 << 16;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 12) | x5 << 12;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 16) | x12 << 16;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 12) | x6 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 16) | x13 << 16;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 12) | x7 << 12;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 16) | x14 << 16;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 12) | x4 << 12;\n        x2 = x2 + x7 | 0;\n        x13 ^= x2;\n        x13 = x13 >>> (32 - 8) | x13 << 8;\n        x8 = x8 + x13 | 0;\n        x7 ^= x8;\n        x7 = x7 >>> (32 - 7) | x7 << 7;\n        x3 = x3 + x4 | 0;\n        x14 ^= x3;\n        x14 = x14 >>> (32 - 8) | x14 << 8;\n        x9 = x9 + x14 | 0;\n        x4 ^= x9;\n        x4 = x4 >>> (32 - 7) | x4 << 7;\n        x1 = x1 + x6 | 0;\n        x12 ^= x1;\n        x12 = x12 >>> (32 - 8) | x12 << 8;\n        x11 = x11 + x12 | 0;\n        x6 ^= x11;\n        x6 = x6 >>> (32 - 7) | x6 << 7;\n        x0 = x0 + x5 | 0;\n        x15 ^= x0;\n        x15 = x15 >>> (32 - 8) | x15 << 8;\n        x10 = x10 + x15 | 0;\n        x5 ^= x10;\n        x5 = x5 >>> (32 - 7) | x5 << 7;\n    }\n    binary_1.writeUint32LE(x0 + j0 | 0, out, 0);\n    binary_1.writeUint32LE(x1 + j1 | 0, out, 4);\n    binary_1.writeUint32LE(x2 + j2 | 0, out, 8);\n    binary_1.writeUint32LE(x3 + j3 | 0, out, 12);\n    binary_1.writeUint32LE(x4 + j4 | 0, out, 16);\n    binary_1.writeUint32LE(x5 + j5 | 0, out, 20);\n    binary_1.writeUint32LE(x6 + j6 | 0, out, 24);\n    binary_1.writeUint32LE(x7 + j7 | 0, out, 28);\n    binary_1.writeUint32LE(x8 + j8 | 0, out, 32);\n    binary_1.writeUint32LE(x9 + j9 | 0, out, 36);\n    binary_1.writeUint32LE(x10 + j10 | 0, out, 40);\n    binary_1.writeUint32LE(x11 + j11 | 0, out, 44);\n    binary_1.writeUint32LE(x12 + j12 | 0, out, 48);\n    binary_1.writeUint32LE(x13 + j13 | 0, out, 52);\n    binary_1.writeUint32LE(x14 + j14 | 0, out, 56);\n    binary_1.writeUint32LE(x15 + j15 | 0, out, 60);\n}\n/**\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\n * same key and nonce, otherwise the stream will repeat. The function will\n * throw error if counter overflows to prevent this.\n *\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\n * is more than a million petabytes). However, it is not recommended to\n * generate 8-byte nonces randomly, as the chance of collision is high.\n *\n * Never use the same key and nonce to encrypt more than one message.\n *\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\n * in the last remaining bytes. The counter will be incremented inplace for\n * each ChaCha block. This is useful if you need to encrypt one stream of data\n * in chunks.\n */\nfunction streamXOR(key, nonce, src, dst, nonceInplaceCounterLength) {\n    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }\n    // We only support 256-bit keys.\n    if (key.length !== 32) {\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\n    }\n    if (dst.length < src.length) {\n        throw new Error(\"ChaCha: destination is shorter than source\");\n    }\n    var nc;\n    var counterLength;\n    if (nonceInplaceCounterLength === 0) {\n        if (nonce.length !== 8 && nonce.length !== 12) {\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\n        }\n        nc = new Uint8Array(16);\n        // First counterLength bytes of nc are counter, starting with zero.\n        counterLength = nc.length - nonce.length;\n        // Last bytes of nc after counterLength are nonce, set them.\n        nc.set(nonce, counterLength);\n    }\n    else {\n        if (nonce.length !== 16) {\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\n        }\n        // This will update passed nonce with counter inplace.\n        nc = nonce;\n        counterLength = nonceInplaceCounterLength;\n    }\n    // Allocate temporary space for ChaCha block.\n    var block = new Uint8Array(64);\n    for (var i = 0; i < src.length; i += 64) {\n        // Generate a block.\n        core(block, nc, key);\n        // XOR block bytes with src into dst.\n        for (var j = i; j < i + 64 && j < src.length; j++) {\n            dst[j] = src[j] ^ block[j - i];\n        }\n        // Increment counter.\n        incrementCounter(nc, 0, counterLength);\n    }\n    // Cleanup temporary space.\n    wipe_1.wipe(block);\n    if (nonceInplaceCounterLength === 0) {\n        // Cleanup counter.\n        wipe_1.wipe(nc);\n    }\n    return dst;\n}\nexports.streamXOR = streamXOR;\n/**\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\n * nonce and write it into dst and return it.\n *\n * Never use the same key and nonce to generate more than one stream.\n *\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\n * the nonce as described in the streamXOR documentation.\n *\n * stream is like streamXOR with all-zero src.\n */\nfunction stream(key, nonce, dst, nonceInplaceCounterLength) {\n    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }\n    wipe_1.wipe(dst);\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\n}\nexports.stream = stream;\nfunction incrementCounter(counter, pos, len) {\n    var carry = 1;\n    while (len--) {\n        carry = carry + (counter[pos] & 0xff) | 0;\n        counter[pos] = carry & 0xff;\n        carry >>>= 8;\n        pos++;\n    }\n    if (carry > 0) {\n        throw new Error(\"ChaCha: counter overflow\");\n    }\n}\n//# sourceMappingURL=chacha.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package constant-time provides functions for performing algorithmically constant-time operations.\n */\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nfunction select(subject, resultIfOne, resultIfZero) {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\nexports.select = select;\n/**\n * Returns 1 if a <= b, or 0 if not.\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\n */\nfunction lessOrEqual(a, b) {\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\n}\nexports.lessOrEqual = lessOrEqual;\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nfunction compare(a, b) {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    var result = 0;\n    for (var i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\nexports.compare = compare;\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nfunction equal(a, b) {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\nexports.equal = equal;\n//# sourceMappingURL=constant-time.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 16;\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nvar Poly1305 = /** @class */ (function () {\n    function Poly1305(key) {\n        this.digestLength = exports.DIGEST_LENGTH;\n        this._buffer = new Uint8Array(16);\n        this._r = new Uint16Array(10);\n        this._h = new Uint16Array(10);\n        this._pad = new Uint16Array(8);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = false;\n        var t0 = key[0] | key[1] << 8;\n        this._r[0] = (t0) & 0x1fff;\n        var t1 = key[2] | key[3] << 8;\n        this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        var t2 = key[4] | key[5] << 8;\n        this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        var t3 = key[6] | key[7] << 8;\n        this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        var t4 = key[8] | key[9] << 8;\n        this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        var t5 = key[10] | key[11] << 8;\n        this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        var t6 = key[12] | key[13] << 8;\n        this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        var t7 = key[14] | key[15] << 8;\n        this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n    Poly1305.prototype._blocks = function (m, mpos, bytes) {\n        var hibit = this._fin ? 0 : 1 << 11;\n        var h0 = this._h[0], h1 = this._h[1], h2 = this._h[2], h3 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];\n        var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];\n        while (bytes >= 16) {\n            var t0 = m[mpos + 0] | m[mpos + 1] << 8;\n            h0 += (t0) & 0x1fff;\n            var t1 = m[mpos + 2] | m[mpos + 3] << 8;\n            h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            var t2 = m[mpos + 4] | m[mpos + 5] << 8;\n            h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            var t3 = m[mpos + 6] | m[mpos + 7] << 8;\n            h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            var t4 = m[mpos + 8] | m[mpos + 9] << 8;\n            h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            var t5 = m[mpos + 10] | m[mpos + 11] << 8;\n            h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            var t6 = m[mpos + 12] | m[mpos + 13] << 8;\n            h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            var t7 = m[mpos + 14] | m[mpos + 15] << 8;\n            h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n            var c = 0;\n            var d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13);\n            d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13);\n            d0 &= 0x1fff;\n            var d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13);\n            d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13);\n            d1 &= 0x1fff;\n            var d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13);\n            d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13);\n            d2 &= 0x1fff;\n            var d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13);\n            d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13);\n            d3 &= 0x1fff;\n            var d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13);\n            d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13);\n            d4 &= 0x1fff;\n            var d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13);\n            d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13);\n            d5 &= 0x1fff;\n            var d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13);\n            d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13);\n            d6 &= 0x1fff;\n            var d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13);\n            d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13);\n            d7 &= 0x1fff;\n            var d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13);\n            d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13);\n            d8 &= 0x1fff;\n            var d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13);\n            d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13);\n            d9 &= 0x1fff;\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    };\n    Poly1305.prototype.finish = function (mac, macpos) {\n        if (macpos === void 0) { macpos = 0; }\n        var g = new Uint16Array(10);\n        var c;\n        var mask;\n        var f;\n        var i;\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n        this._finished = true;\n        return this;\n    };\n    Poly1305.prototype.update = function (m) {\n        var mpos = 0;\n        var bytes = m.length;\n        var want;\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (var i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n        if (bytes) {\n            for (var i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n        return this;\n    };\n    Poly1305.prototype.digest = function () {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        var mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    };\n    Poly1305.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._r);\n        wipe_1.wipe(this._h);\n        wipe_1.wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    };\n    return Poly1305;\n}());\nexports.Poly1305 = Poly1305;\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nfunction oneTimeAuth(key, data) {\n    var h = new Poly1305(key);\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.oneTimeAuth = oneTimeAuth;\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nfunction equal(a, b) {\n    if (a.length !== exports.DIGEST_LENGTH || b.length !== exports.DIGEST_LENGTH) {\n        return false;\n    }\n    return constant_time_1.equal(a, b);\n}\nexports.equal = equal;\n//# sourceMappingURL=poly1305.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chacha_1 = require(\"@stablelib/chacha\");\nvar poly1305_1 = require(\"@stablelib/poly1305\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nvar binary_1 = require(\"@stablelib/binary\");\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nexports.KEY_LENGTH = 32;\nexports.NONCE_LENGTH = 12;\nexports.TAG_LENGTH = 16;\nvar ZEROS = new Uint8Array(16);\n/**\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in RFC7539.\n */\nvar ChaCha20Poly1305 = /** @class */ (function () {\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    function ChaCha20Poly1305(key) {\n        this.nonceLength = exports.NONCE_LENGTH;\n        this.tagLength = exports.TAG_LENGTH;\n        if (key.length !== exports.KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    ChaCha20Poly1305.prototype.seal = function (nonce, plaintext, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        var counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\n        // and it will get incremented after generating the block, which is\n        // exactly what we need: we only use the first 32 bytes of 64-byte\n        // ChaCha block and discard the next 32 bytes.\n        var authKey = new Uint8Array(32);\n        chacha_1.stream(this._key, counter, authKey, 4);\n        // Allocate space for sealed ciphertext.\n        var resultLength = plaintext.length + this.tagLength;\n        var result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Encrypt plaintext.\n        chacha_1.streamXOR(this._key, counter, plaintext, result, 4);\n        // Authenticate.\n        // XXX: can \"simplify\" here: pass full result (which is already padded\n        // due to zeroes prepared for tag), and ciphertext length instead of\n        // subarray of result.\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);\n        // Cleanup.\n        wipe_1.wipe(counter);\n        return result;\n    };\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be of ciphertext length minus tag length),\n     * the result will be put into it. Dst and plaintext must not overlap.\n     */\n    ChaCha20Poly1305.prototype.open = function (nonce, sealed, associatedData, dst) {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n        // Allocate space for counter, and set nonce as last bytes of it.\n        var counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n        // Generate authentication key by taking first 32-bytes of stream.\n        var authKey = new Uint8Array(32);\n        chacha_1.stream(this._key, counter, authKey, 4);\n        // Authenticate.\n        // XXX: can simplify and avoid allocation: since authenticate()\n        // already allocates tag (from Poly1305.digest(), it can return)\n        // it instead of copying to calculatedTag. But then in seal()\n        // we'll need to copy it.\n        var calculatedTag = new Uint8Array(this.tagLength);\n        this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);\n        // Constant-time compare tags and return null if they differ.\n        if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\n            return null;\n        }\n        // Allocate space for decrypted plaintext.\n        var resultLength = sealed.length - this.tagLength;\n        var result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        }\n        else {\n            result = new Uint8Array(resultLength);\n        }\n        // Decrypt.\n        chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);\n        // Cleanup.\n        wipe_1.wipe(counter);\n        return result;\n    };\n    ChaCha20Poly1305.prototype.clean = function () {\n        wipe_1.wipe(this._key);\n        return this;\n    };\n    ChaCha20Poly1305.prototype._authenticate = function (tagOut, authKey, ciphertext, associatedData) {\n        // Initialize Poly1305 with authKey.\n        var h = new poly1305_1.Poly1305(authKey);\n        // Authenticate padded associated data.\n        if (associatedData) {\n            h.update(associatedData);\n            if (associatedData.length % 16 > 0) {\n                h.update(ZEROS.subarray(associatedData.length % 16));\n            }\n        }\n        // Authenticate padded ciphertext.\n        h.update(ciphertext);\n        if (ciphertext.length % 16 > 0) {\n            h.update(ZEROS.subarray(ciphertext.length % 16));\n        }\n        // Authenticate length of associated data.\n        // XXX: can avoid allocation here?\n        var length = new Uint8Array(8);\n        if (associatedData) {\n            binary_1.writeUint64LE(associatedData.length, length);\n        }\n        h.update(length);\n        // Authenticate length of ciphertext.\n        binary_1.writeUint64LE(ciphertext.length, length);\n        h.update(length);\n        // Get tag and copy it into tagOut.\n        var tag = h.digest();\n        for (var i = 0; i < tag.length; i++) {\n            tagOut[i] = tag[i];\n        }\n        // Cleanup.\n        h.clean();\n        wipe_1.wipe(tag);\n        wipe_1.wipe(length);\n    };\n    return ChaCha20Poly1305;\n}());\nexports.ChaCha20Poly1305 = ChaCha20Poly1305;\n//# sourceMappingURL=chacha20poly1305.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package hmac implements HMAC algorithm.\n */\nvar hash_1 = require(\"@stablelib/hash\");\nvar constant_time_1 = require(\"@stablelib/constant-time\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n/**\n *  HMAC implements hash-based message authentication algorithm.\n */\nvar HMAC = /** @class */ (function () {\n    /**\n     * Constructs a new HMAC with the given Hash and secret key.\n     */\n    function HMAC(hash, key) {\n        this._finished = false; // true if HMAC was finalized\n        // Initialize inner and outer hashes.\n        this._inner = new hash();\n        this._outer = new hash();\n        // Set block and digest sizes for this HMAC\n        // instance to values from the hash.\n        this.blockSize = this._outer.blockSize;\n        this.digestLength = this._outer.digestLength;\n        // Pad temporary stores a key (or its hash) padded with zeroes.\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            // If key is bigger than hash block size, it must be\n            // hashed and this hash is used as a key instead.\n            this._inner.update(key).finish(pad).clean();\n        }\n        else {\n            // Otherwise, copy the key into pad.\n            pad.set(key);\n        }\n        // Now two different keys are derived from padded key\n        // by xoring a different byte value to each.\n        // To make inner hash key, xor byte 0x36 into pad.\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        // Update inner hash with the result.\n        this._inner.update(pad);\n        // To make outer hash key, xor byte 0x5c into pad.\n        // But since we already xored 0x36 there, we must\n        // first undo this by xoring it again.\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        // Update outer hash with the result.\n        this._outer.update(pad);\n        // Save states of both hashes, so that we can quickly restore\n        // them later in reset() without the need to remember the actual\n        // key and perform this initialization again.\n        if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {\n            this._innerKeyedState = this._inner.saveState();\n            this._outerKeyedState = this._outer.saveState();\n        }\n        // Clean pad.\n        wipe_1.wipe(pad);\n    }\n    /**\n     * Returns HMAC state to the state initialized with key\n     * to make it possible to run HMAC over the other data with the same\n     * key without creating a new instance.\n     */\n    HMAC.prototype.reset = function () {\n        if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't reset() because hash doesn't implement restoreState()\");\n        }\n        // Restore keyed states of inner and outer hashes.\n        this._inner.restoreState(this._innerKeyedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans HMAC state.\n     */\n    HMAC.prototype.clean = function () {\n        if (hash_1.isSerializableHash(this._inner)) {\n            this._inner.cleanSavedState(this._innerKeyedState);\n        }\n        if (hash_1.isSerializableHash(this._outer)) {\n            this._outer.cleanSavedState(this._outerKeyedState);\n        }\n        this._inner.clean();\n        this._outer.clean();\n    };\n    /**\n     * Updates state with provided data.\n     */\n    HMAC.prototype.update = function (data) {\n        this._inner.update(data);\n        return this;\n    };\n    /**\n     * Finalizes HMAC and puts the result in out.\n     */\n    HMAC.prototype.finish = function (out) {\n        if (this._finished) {\n            // If HMAC was finalized, outer hash is also finalized,\n            // so it produces the same digest it produced when it\n            // was finalized.\n            this._outer.finish(out);\n            return this;\n        }\n        // Finalize inner hash and store the result temporarily.\n        this._inner.finish(out);\n        // Update outer hash with digest of inner hash and and finalize it.\n        this._outer.update(out.subarray(0, this.digestLength)).finish(out);\n        this._finished = true;\n        return this;\n    };\n    /**\n     * Returns the computed message authentication code.\n     */\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Saves HMAC state.\n     * This function is needed for PBKDF2 optimization.\n     */\n    HMAC.prototype.saveState = function () {\n        if (!hash_1.isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't saveState() because hash doesn't implement it\");\n        }\n        return this._inner.saveState();\n    };\n    HMAC.prototype.restoreState = function (savedState) {\n        if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't restoreState() because hash doesn't implement it\");\n        }\n        this._inner.restoreState(savedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    };\n    HMAC.prototype.cleanSavedState = function (savedState) {\n        if (!hash_1.isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't cleanSavedState() because hash doesn't implement it\");\n        }\n        this._inner.cleanSavedState(savedState);\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n/**\n * Returns HMAC using the given hash constructor for the key over data.\n */\nfunction hmac(hash, key, data) {\n    var h = new HMAC(hash, key);\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n/**\n * Returns true if two HMAC digests are equal.\n * Uses constant-time comparison to avoid leaking timing information.\n *\n * Example:\n *\n *    const receivedDigest = ...\n *    const realDigest = hmac(SHA256, key, data);\n *    if (!equal(receivedDigest, realDigest)) {\n *        throw new Error(\"Authentication error\");\n *    }\n */\nexports.equal = constant_time_1.equal;\n//# sourceMappingURL=hmac.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hmac_1 = require(\"@stablelib/hmac\");\nvar wipe_1 = require(\"@stablelib/wipe\");\n/**\n * HMAC-based Extract-and-Expand Key Derivation Function.\n *\n * Implements HKDF from RFC5869.\n *\n * Expands the given master key with salt and info into\n * a limited stream of key material.\n */\nvar HKDF = /** @class */ (function () {\n    /**\n     * Create a new HKDF instance for the given hash function\n     * with the master key, optional salt, and info.\n     *\n     * - Master key is a high-entropy secret key (not a password).\n     * - Salt is a non-secret random value.\n     * - Info is application- and/or context-specific information.\n     */\n    function HKDF(hash, key, salt, info) {\n        if (salt === void 0) { salt = new Uint8Array(0); }\n        this._counter = new Uint8Array(1); // starts with zero\n        this._hash = hash;\n        this._info = info;\n        // HKDF-Extract uses salt as HMAC key, and key as data.\n        var okm = hmac_1.hmac(this._hash, salt, key);\n        // Initialize HMAC for expanding with extracted key.\n        this._hmac = new hmac_1.HMAC(hash, okm);\n        // Allocate buffer.\n        this._buffer = new Uint8Array(this._hmac.digestLength);\n        this._bufpos = this._buffer.length;\n    }\n    // Fill buffer with new block of HKDF-Extract output.\n    HKDF.prototype._fillBuffer = function () {\n        // Increment counter.\n        this._counter[0]++;\n        var ctr = this._counter[0];\n        // Check if counter overflowed.\n        if (ctr === 0) {\n            throw new Error(\"hkdf: cannot expand more\");\n        }\n        // Prepare HMAC instance for new data with old key.\n        this._hmac.reset();\n        // Hash in previous output if it was generated\n        // (i.e. counter is greater than 1).\n        if (ctr > 1) {\n            this._hmac.update(this._buffer);\n        }\n        // Hash in info if it exists.\n        if (this._info) {\n            this._hmac.update(this._info);\n        }\n        // Hash in the counter.\n        this._hmac.update(this._counter);\n        // Output result to buffer and clean HMAC instance.\n        this._hmac.finish(this._buffer);\n        // Reset buffer position.\n        this._bufpos = 0;\n    };\n    /**\n     * Expand returns next key material of the given length.\n     *\n     * It throws if expansion limit is reached (which is\n     * 254 digests of the underlying HMAC function).\n     */\n    HKDF.prototype.expand = function (length) {\n        var out = new Uint8Array(length);\n        for (var i = 0; i < out.length; i++) {\n            if (this._bufpos === this._buffer.length) {\n                this._fillBuffer();\n            }\n            out[i] = this._buffer[this._bufpos++];\n        }\n        return out;\n    };\n    HKDF.prototype.clean = function () {\n        this._hmac.clean();\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._counter);\n        this._bufpos = 0;\n    };\n    return HKDF;\n}());\nexports.HKDF = HKDF;\n// TODO(dchest): maybe implement deriveKey?\n//# sourceMappingURL=hkdf.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 32;\nexports.BLOCK_SIZE = 64;\n/**\n * SHA2-256 cryptographic hash algorithm.\n */\nvar SHA256 = /** @class */ (function () {\n    function SHA256() {\n        /** Length of hash output */\n        this.digestLength = exports.DIGEST_LENGTH;\n        /** Block size */\n        this.blockSize = exports.BLOCK_SIZE;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this._state = new Int32Array(8); // hash state\n        this._temp = new Int32Array(64); // temporary state\n        this._buffer = new Uint8Array(128); // buffer for data to hash\n        this._bufferLength = 0; // number of bytes in buffer\n        this._bytesHashed = 0; // number of total bytes hashed\n        this._finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    SHA256.prototype._initState = function () {\n        this._state[0] = 0x6a09e667;\n        this._state[1] = 0xbb67ae85;\n        this._state[2] = 0x3c6ef372;\n        this._state[3] = 0xa54ff53a;\n        this._state[4] = 0x510e527f;\n        this._state[5] = 0x9b05688c;\n        this._state[6] = 0x1f83d9ab;\n        this._state[7] = 0x5be0cd19;\n    };\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    SHA256.prototype.reset = function () {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    SHA256.prototype.clean = function () {\n        wipe_1.wipe(this._buffer);\n        wipe_1.wipe(this._temp);\n        this.reset();\n    };\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    SHA256.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this._finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < this.blockSize && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    SHA256.prototype.finish = function (out) {\n        if (!this._finished) {\n            var bytesHashed = this._bytesHashed;\n            var left = this._bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this._buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\n            this._finished = true;\n        }\n        for (var i = 0; i < this.digestLength / 4; i++) {\n            binary_1.writeUint32BE(this._state[i], out, i * 4);\n        }\n        return this;\n    };\n    /**\n     * Returns the final hash digest.\n     */\n    SHA256.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Returns hash state to be used with restoreState().\n     * Only chain value is saved, not buffers or other\n     * state variables.\n     */\n    SHA256.prototype.saveState = function () {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            state: new Int32Array(this._state),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    };\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Restores state saved by saveState() and sets bytesHashed\n     * to the given value.\n     */\n    SHA256.prototype.restoreState = function (savedState) {\n        this._state.set(savedState.state);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    };\n    /**\n     * Cleans state returned by saveState().\n     */\n    SHA256.prototype.cleanSavedState = function (savedState) {\n        wipe_1.wipe(savedState.state);\n        if (savedState.buffer) {\n            wipe_1.wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    };\n    return SHA256;\n}());\nexports.SHA256 = SHA256;\n// Constants\nvar K = new Int32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    while (len >= 64) {\n        var a = v[0];\n        var b = v[1];\n        var c = v[2];\n        var d = v[3];\n        var e = v[4];\n        var f = v[5];\n        var g = v[6];\n        var h = v[7];\n        for (var i = 0; i < 16; i++) {\n            var j = pos + i * 4;\n            w[i] = binary_1.readUint32BE(p, j);\n        }\n        for (var i = 16; i < 64; i++) {\n            var u = w[i - 2];\n            var t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            var t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (var i = 0; i < 64; i++) {\n            var t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            var t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\nfunction hash(data) {\n    var h = new SHA256();\n    h.update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n//# sourceMappingURL=sha256.js.map","\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;\n/**\n * Package x25519 implements X25519 key agreement.\n */\nconst random_1 = require(\"@stablelib/random\");\nconst wipe_1 = require(\"@stablelib/wipe\");\nexports.PUBLIC_KEY_LENGTH = 32;\nexports.SECRET_KEY_LENGTH = 32;\nexports.SHARED_KEY_LENGTH = 32;\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init) {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n// Base point.\nconst _9 = new Uint8Array(32);\n_9[0] = 9;\nconst _121665 = gf([0xdb41, 1]);\nfunction car25519(o) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\nfunction pack25519(o, n) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\nfunction unpack25519(o, n) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\nfunction add(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\nfunction sub(o, a, b) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\nfunction mul(o, a, b) {\n    let v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n    // first car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    // second car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\nfunction square(o, a) {\n    mul(o, a, a);\n}\nfunction inv25519(o, inp) {\n    const c = gf();\n    for (let i = 0; i < 16; i++) {\n        c[i] = inp[i];\n    }\n    for (let i = 253; i >= 0; i--) {\n        square(c, c);\n        if (i !== 2 && i !== 4) {\n            mul(c, c, inp);\n        }\n    }\n    for (let i = 0; i < 16; i++) {\n        o[i] = c[i];\n    }\n}\nfunction scalarMult(n, p) {\n    const z = new Uint8Array(32);\n    const x = new Float64Array(80);\n    const a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\n    for (let i = 0; i < 31; i++) {\n        z[i] = n[i];\n    }\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n    unpack25519(x, p);\n    for (let i = 0; i < 16; i++) {\n        b[i] = x[i];\n    }\n    a[0] = d[0] = 1;\n    for (let i = 254; i >= 0; --i) {\n        const r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        add(e, a, c);\n        sub(a, a, c);\n        add(c, b, d);\n        sub(b, b, d);\n        square(d, e);\n        square(f, a);\n        mul(a, c, a);\n        mul(c, b, e);\n        add(e, a, c);\n        sub(a, a, c);\n        square(b, a);\n        sub(c, d, f);\n        mul(a, c, _121665);\n        add(a, a, d);\n        mul(c, c, a);\n        mul(a, d, f);\n        mul(d, b, x);\n        square(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (let i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    const x32 = x.subarray(32);\n    const x16 = x.subarray(16);\n    inv25519(x32, x32);\n    mul(x16, x16, x32);\n    const q = new Uint8Array(32);\n    pack25519(q, x16);\n    return q;\n}\nexports.scalarMult = scalarMult;\nfunction scalarMultBase(n) {\n    return scalarMult(n, _9);\n}\nexports.scalarMultBase = scalarMultBase;\nfunction generateKeyPairFromSeed(seed) {\n    if (seed.length !== exports.SECRET_KEY_LENGTH) {\n        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);\n    }\n    const secretKey = new Uint8Array(seed);\n    const publicKey = scalarMultBase(secretKey);\n    return {\n        publicKey,\n        secretKey\n    };\n}\nexports.generateKeyPairFromSeed = generateKeyPairFromSeed;\nfunction generateKeyPair(prng) {\n    const seed = (0, random_1.randomBytes)(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    (0, wipe_1.wipe)(seed);\n    return result;\n}\nexports.generateKeyPair = generateKeyPair;\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nfunction sharedKey(mySecretKey, theirPublicKey, rejectZero = false) {\n    if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect secret key length\");\n    }\n    if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect public key length\");\n    }\n    const result = scalarMult(mySecretKey, theirPublicKey);\n    if (rejectZero) {\n        let zeros = 0;\n        for (let i = 0; i < result.length; i++) {\n            zeros |= result[i];\n        }\n        if (zeros === 0) {\n            throw new Error(\"X25519: invalid shared key\");\n        }\n    }\n    return result;\n}\nexports.sharedKey = sharedKey;\n//# sourceMappingURL=x25519.js.map","export function compare(a, b) {\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] < b[i]) {\n      return -1;\n    }\n    if (a[i] > b[i]) {\n      return 1;\n    }\n  }\n  if (a.byteLength > b.byteLength) {\n    return 1;\n  }\n  if (a.byteLength < b.byteLength) {\n    return -1;\n  }\n  return 0;\n}","export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { allocUnsafe } from './alloc.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}","export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}","import { allocUnsafe } from './alloc.js';\nexport function xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = allocUnsafe(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return result;\n}","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature, options) {\n  return this.ec.verify(msg, signature, this, undefined, options);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  if(buf[p.place] === 0x00) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n  var byteLength;\n  if (BN.isBN(msg) || typeof msg === 'number') {\n    msg = new BN(msg, 16);\n    byteLength = msg.byteLength();\n  } else if (typeof msg === 'object') {\n    // BN assumes an array-like input and asserts length\n    byteLength = msg.length;\n    msg = new BN(msg, 16);\n  } else {\n    // BN converts the value to string\n    var str = msg.toString();\n    // HEX encoding\n    byteLength = (str.length + 1) >>> 1;\n    msg = new BN(str, 16);\n  }\n  // Allow overriding\n  if (typeof bitLength !== 'number') {\n    bitLength = byteLength * 8;\n  }\n  var delta = bitLength - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc, options) {\n  if (!options)\n    options = {};\n\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","function e(s,r,i=\"string\"){if(!s[r]||typeof s[r]!==i)throw new Error(`Missing or invalid \"${r}\" param`)}function l(s,r){let i=!0;return r.forEach(t=>{t in s||(i=!1)}),i}function f(s,r){return Array.isArray(s)?s.length===r:Object.keys(s).length===r}function w(s,r){return Array.isArray(s)?s.length>=r:Object.keys(s).length>=r}function u(s,r,i){return(i.length?w(s,r.length):f(s,r.length))?l(s,r):!1}function n(s,r,i=\"_\"){const t=s.split(i);return t[t.length-1].trim().toLowerCase()===r.trim().toLowerCase()}function R(s){return b(s.method)&&a(s.params)}function b(s){return n(s,\"subscribe\")}function a(s){return u(s,[\"topic\"],[])}function P(s){return c(s.method)&&h(s.params)}function c(s){return n(s,\"publish\")}function h(s){return u(s,[\"message\",\"topic\",\"ttl\"],[\"prompt\",\"tag\"])}function _(s){return o(s.method)&&p(s.params)}function o(s){return n(s,\"unsubscribe\")}function p(s){return u(s,[\"id\",\"topic\"],[])}function S(s){return m(s.method)&&d(s.params)}function m(s){return n(s,\"subscription\")}function d(s){return u(s,[\"id\",\"data\"],[])}function g(s){if(!b(s.method))throw new Error(\"JSON-RPC Request has invalid subscribe method\");if(!a(s.params))throw new Error(\"JSON-RPC Request has invalid subscribe params\");const r=s.params;return e(r,\"topic\"),r}function q(s){if(!c(s.method))throw new Error(\"JSON-RPC Request has invalid publish method\");if(!h(s.params))throw new Error(\"JSON-RPC Request has invalid publish params\");const r=s.params;return e(r,\"topic\"),e(r,\"message\"),e(r,\"ttl\",\"number\"),r}function E(s){if(!o(s.method))throw new Error(\"JSON-RPC Request has invalid unsubscribe method\");if(!p(s.params))throw new Error(\"JSON-RPC Request has invalid unsubscribe params\");const r=s.params;return e(r,\"id\"),r}function k(s){if(!m(s.method))throw new Error(\"JSON-RPC Request has invalid subscription method\");if(!d(s.params))throw new Error(\"JSON-RPC Request has invalid subscription params\");const r=s.params;return e(r,\"id\"),e(r,\"data\"),r}const C={waku:{publish:\"waku_publish\",batchPublish:\"waku_batchPublish\",subscribe:\"waku_subscribe\",batchSubscribe:\"waku_batchSubscribe\",subscription:\"waku_subscription\",unsubscribe:\"waku_unsubscribe\",batchUnsubscribe:\"waku_batchUnsubscribe\",batchFetchMessages:\"waku_batchFetchMessages\"},irn:{publish:\"irn_publish\",batchPublish:\"irn_batchPublish\",subscribe:\"irn_subscribe\",batchSubscribe:\"irn_batchSubscribe\",subscription:\"irn_subscription\",unsubscribe:\"irn_unsubscribe\",batchUnsubscribe:\"irn_batchUnsubscribe\",batchFetchMessages:\"irn_batchFetchMessages\"},iridium:{publish:\"iridium_publish\",batchPublish:\"iridium_batchPublish\",subscribe:\"iridium_subscribe\",batchSubscribe:\"iridium_batchSubscribe\",subscription:\"iridium_subscription\",unsubscribe:\"iridium_unsubscribe\",batchUnsubscribe:\"iridium_batchUnsubscribe\",batchFetchMessages:\"iridium_batchFetchMessages\"}};export{C as RELAY_JSONRPC,c as isPublishMethod,h as isPublishParams,P as isPublishRequest,b as isSubscribeMethod,a as isSubscribeParams,R as isSubscribeRequest,m as isSubscriptionMethod,d as isSubscriptionParams,S as isSubscriptionRequest,o as isUnsubscribeMethod,p as isUnsubscribeParams,_ as isUnsubscribeRequest,q as parsePublishRequest,g as parseSubscribeRequest,k as parseSubscriptionRequest,E as parseUnsubscribeRequest};\n//# sourceMappingURL=index.es.js.map\n","export const PARSE_ERROR = \"PARSE_ERROR\";\nexport const INVALID_REQUEST = \"INVALID_REQUEST\";\nexport const METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexport const INVALID_PARAMS = \"INVALID_PARAMS\";\nexport const INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexport const SERVER_ERROR = \"SERVER_ERROR\";\nexport const RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexport const SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexport const STANDARD_ERROR_MAP = {\n    [PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexport const DEFAULT_ERROR = SERVER_ERROR;\n//# sourceMappingURL=constants.js.map","import { SERVER_ERROR_CODE_RANGE, RESERVED_ERROR_CODES, STANDARD_ERROR_MAP, DEFAULT_ERROR, } from \"./constants\";\nexport function isServerErrorCode(code) {\n    return code <= SERVER_ERROR_CODE_RANGE[0] && code >= SERVER_ERROR_CODE_RANGE[1];\n}\nexport function isReservedErrorCode(code) {\n    return RESERVED_ERROR_CODES.includes(code);\n}\nexport function isValidErrorCode(code) {\n    return typeof code === \"number\";\n}\nexport function getError(type) {\n    if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {\n        return STANDARD_ERROR_MAP[DEFAULT_ERROR];\n    }\n    return STANDARD_ERROR_MAP[type];\n}\nexport function getErrorByCode(code) {\n    const match = Object.values(STANDARD_ERROR_MAP).find(e => e.code === code);\n    if (!match) {\n        return STANDARD_ERROR_MAP[DEFAULT_ERROR];\n    }\n    return match;\n}\nexport function validateJsonRpcError(response) {\n    if (typeof response.error.code === \"undefined\") {\n        return { valid: false, error: \"Missing code for JSON-RPC error\" };\n    }\n    if (typeof response.error.message === \"undefined\") {\n        return { valid: false, error: \"Missing message for JSON-RPC error\" };\n    }\n    if (!isValidErrorCode(response.error.code)) {\n        return {\n            valid: false,\n            error: `Invalid error code type for JSON-RPC: ${response.error.code}`,\n        };\n    }\n    if (isReservedErrorCode(response.error.code)) {\n        const error = getErrorByCode(response.error.code);\n        if (error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message &&\n            response.error.message === error.message) {\n            return {\n                valid: false,\n                error: `Invalid error code message for JSON-RPC: ${response.error.code}`,\n            };\n        }\n    }\n    return { valid: true };\n}\nexport function parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n//# sourceMappingURL=error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\nfunction getBrowerCrypto() {\n    return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\n}\nexports.getBrowerCrypto = getBrowerCrypto;\nfunction getSubtleCrypto() {\n    const browserCrypto = getBrowerCrypto();\n    return browserCrypto.subtle || browserCrypto.webkitSubtle;\n}\nexports.getSubtleCrypto = getSubtleCrypto;\nfunction isBrowserCryptoAvailable() {\n    return !!getBrowerCrypto() && !!getSubtleCrypto();\n}\nexports.isBrowserCryptoAvailable = isBrowserCryptoAvailable;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isBrowser = exports.isNode = exports.isReactNative = void 0;\nfunction isReactNative() {\n    return (typeof document === \"undefined\" &&\n        typeof navigator !== \"undefined\" &&\n        navigator.product === \"ReactNative\");\n}\nexports.isReactNative = isReactNative;\nfunction isNode() {\n    return (typeof process !== \"undefined\" &&\n        typeof process.versions !== \"undefined\" &&\n        typeof process.versions.node !== \"undefined\");\n}\nexports.isNode = isNode;\nfunction isBrowser() {\n    return !isReactNative() && !isNode();\n}\nexports.isBrowser = isBrowser;\n//# sourceMappingURL=env.js.map","import { isNode } from \"@walletconnect/environment\";\nexport const isNodeJs = isNode;\nexport * from \"@walletconnect/environment\";\n//# sourceMappingURL=env.js.map","import { getError, getErrorByCode, isReservedErrorCode } from \"./error\";\nimport { INTERNAL_ERROR, SERVER_ERROR } from \"./constants\";\nexport function payloadId(entropy = 3) {\n    const date = Date.now() * Math.pow(10, entropy);\n    const extra = Math.floor(Math.random() * Math.pow(10, entropy));\n    return date + extra;\n}\nexport function getBigIntRpcId(entropy = 6) {\n    return BigInt(payloadId(entropy));\n}\nexport function formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nexport function formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nexport function formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nexport function formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\n//# sourceMappingURL=format.js.map","export function isValidRoute(route) {\n    if (route.includes(\"*\")) {\n        return isValidWildcardRoute(route);\n    }\n    if (/\\W/g.test(route)) {\n        return false;\n    }\n    return true;\n}\nexport function isValidDefaultRoute(route) {\n    return route === \"*\";\n}\nexport function isValidWildcardRoute(route) {\n    if (isValidDefaultRoute(route)) {\n        return true;\n    }\n    if (!route.includes(\"*\")) {\n        return false;\n    }\n    if (route.split(\"*\").length !== 2) {\n        return false;\n    }\n    if (route.split(\"*\").filter(x => x.trim() === \"\").length !== 1) {\n        return false;\n    }\n    return true;\n}\nexport function isValidLeadingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\nexport function isValidTrailingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n}\n//# sourceMappingURL=routing.js.map","class e{}class o extends e{constructor(c){super()}}class n extends e{constructor(){super()}}class r extends n{constructor(c){super()}}export{n as IBaseJsonRpcProvider,e as IEvents,o as IJsonRpcConnection,r as IJsonRpcProvider};\n//# sourceMappingURL=index.es.js.map\n","const HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nexport function isHttpUrl(url) {\n    return matchRegexProtocol(url, HTTP_REGEX);\n}\nexport function isWsUrl(url) {\n    return matchRegexProtocol(url, WS_REGEX);\n}\nexport function isLocalhostUrl(url) {\n    return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n}\n//# sourceMappingURL=url.js.map","export function isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nexport function isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nexport function isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nexport function isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nexport function isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nexport function isJsonRpcValidationInvalid(validation) {\n    return \"error\" in validation && validation.valid === false;\n}\n//# sourceMappingURL=validators.js.map","'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  if(buf[p.place] === 0x00) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n"],"names":["R","Reflect","_typeof","ReflectApply","apply","target","receiver","args","Function","prototype","call","ReflectOwnKeys","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","ProcessEmitWarning","warning","console","warn","NumberIsNaN","Number","isNaN","value","EventEmitter","init","eventsModule","exports","once_1","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","create","setMaxListeners","n","_getMaxListeners","that","getMaxListeners","emit","type","i","arguments","length","push","doError","events","error","er","Error","err","message","context","handler","len","listeners","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","String","name","emitter","count","addListener","on","prependListener","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","bind","prependOnceListener","list","position","originalListener","shift","spliceOne","off","removeAllListeners","keys","key","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","Array","index","pop","ret","Promise","resolve","reject","errorListener","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","addEventListener","wrapListener","removeEventListener","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","__assign","assign","t","s","__rest","e","indexOf","propertyIsEnumerable","__decorate","decorators","desc","c","r","getOwnPropertyDescriptor","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","step","next","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","__createBinding","o","k","k2","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","settle","fulfill","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","__importDefault","__classPrivateFieldGet","privateMap","has","__classPrivateFieldSet","hasRequiredTime","ONE_YEAR","FOUR_WEEKS","THREE_WEEKS","TWO_WEEKS","ONE_WEEK","THIRTY_DAYS","SEVEN_DAYS","FIVE_DAYS","THREE_DAYS","ONE_DAY","TWENTY_FOUR_HOURS","TWELVE_HOURS","SIX_HOURS","THREE_HOURS","ONE_HOUR","SIXTY_MINUTES","THIRTY_MINUTES","TEN_MINUTES","FIVE_MINUTES","ONE_MINUTE","SIXTY_SECONDS","THIRTY_SECONDS","TEN_SECONDS","FIVE_SECONDS","ONE_SECOND","hasRequiredWatch","watch","Watch","_classCallCheck","timestamps","Map","start","started","Date","now","stop","timestamp","elapsed","IEvents","_createClass","suspectProtoRx","suspectConstructorRx","JsonSigRx","jsonParseTransform","warnKeyDropped","destr","options","_value","trim","endsWith","includes","_lval","toLowerCase","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","test","strict","SyntaxError","JSON","parse","safeDestr","_objectSpread","wrapToPromise","asyncCall","function_","_len","arguments_","_key","isPrimitive","isPureObject","proto","isPrototypeOf","stringify","isArray","toJSON","checkBufferSupport","Buffer","BASE64_PREFIX","serializeRaw","base64","from","toString","deserializeRaw","startsWith","storageKeyProperties","prefixStorage","storage","base","normalizeBaseKey","nsStorage","_iterator","_createForOfIteratorHelper","_step","_loop","property","_len3","_key3","getKeys","_len2","_key2","map","key2","normalizeKey","split","replace","joinKeys","_len4","_key4","join","defineDriver","factory","DRIVER_NAME","memory","data","getInstance","hasItem","getItem","_data$get","getItemRaw","_data$get2","setItem","setItemRaw","removeItem","_toConsumableArray","clear","dispose","createStorage","mounts","driver","mountpoints","watching","watchListeners","unwatch","getMount","relativeKey","getMounts","includeParent","filter","mountpoint","relativeBase","onChange","event","_iterator2","_step2","startWatch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","abrupt","t0","t1","stopWatch","_ref2","_callee2","_callee2$","_context2","runBatch","items","commonOptions","cb","batches","getBatch","mount","batch","_iterator3","_step3","item","isStringItem","options2","all","values","flat","opts","_getMount","_getMount2","getItems","_getMount3","_callee3","_getMount4","_callee3$","_context3","setItems","_callee5","_callee5$","_context5","_ref3","_callee4","_callee4$","_context4","_x","_arguments2","_callee6","_getMount5","_callee6$","_context6","_arguments3","_callee7","_getMount6","_callee7$","_context7","removeMeta","removeMata","getMeta","_arguments4","_callee8","_getMount7","meta","_callee8$","_context8","nativeOnly","t2","value_","atime","mtime","setMeta","_arguments5","_callee9","maskedMounts","allKeys","_iterator4","_step4","_callee9$","_context11","rawKeys","_iterator5","_step5","_loop2","_loop$","_context10","fullKey","_loop2$","_context9","some","delegateYield","finish","_arguments6","_callee11","_callee11$","_context13","_ref4","_callee10","_callee10$","_context12","_x2","_callee12","_callee12$","_context14","callback","_callee14","_callee14$","_context16","_callee13","_callee13$","_context15","_callee15","_callee15$","_context17","sort","unwatcher","unmount","_arguments7","_callee16","_dispose","_callee16$","_context18","parents","del","remove","snapshot","_x3","_x4","_snapshot","_callee18","snapshot2","_callee18$","_context20","_ref6","_callee17","_callee17$","_context19","_x8","restoreSnapshot","_x5","_x6","_restoreSnapshot","_callee19","_args21","_callee19$","_context21","entries","_x7","_dispose3","_callee20","_callee20$","_context22","builtinDrivers","azureAppConfiguration","azureCosmos","azureKeyVault","azureStorageBlob","azureStorageTable","cloudflareKVBinding","cloudflareKVHTTP","cloudflareR2Binding","fs","fsLite","github","http","indexedb","localStorage","lruCache","mongodb","netlifyBlobs","overlay","planetscale","redis","sessionStorage","vercelKV","promisifyRequest","request","oncomplete","onsuccess","onabort","onerror","createStore","dbName","storeName","indexedDB","open","onupgradeneeded","createObjectStore","dbp","txMode","db","transaction","objectStore","defaultGetStoreFunc","defaultGetStore","customStore","store","put","setMany","forEach","entry","getMany","update","updater","delMany","eachCursor","openCursor","getAllKeys","cursor","getAll","_slicedToArray","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","isCustomFormatBigInt","match","BigInt","substring","safeJsonParse","_a","safeJsonStringify","tryStringify","quickFormatUnescaped","format","ss","offset","objects","argLen","str","lastPos","flen","charCodeAt","Math","floor","require$$0","browser","pino","_console","pfGlobalThisOrFallback","stdSerializers","mapHttpRequest","mock","mapHttpResponse","wrapRequestSerializer","passthrough","wrapResponseSerializer","wrapErrorSerializer","req","res","asErrValue","shouldSerialize","serialize","serializers","hasToFilter","transmit","send","write","asObject","stdErrSerialize","levels","fatal","info","debug","trace","enabled","level","logger","log","noop","getLevelVal","getLevel","setLevel","setOpts","getTimeFunction","flush","_serialize","_stdErrSerialize","child","_logEvent","createLogEventShape","Infinity","_level","bindings","childOptions","childOptionsSerializers","childSerializers","childSerialize","applySerializers","Child","parent","_childLevel","labels","stdTimeFunctions","nullTime","epochTime","unixTime","isoTime","fallback","levelVal","LOG","ts","transmitLevel","transmitValue","methodValue","methodLevel","val","argsCloned","msg","time","lvl","messages","obj","stack","round","toISOString","defd","globalThis","configurable","self","window","BrowserRandomSource_1","BrowserRandomSource","isAvailable","browserCrypto","crypto","msCrypto","getRandomValues","_crypto","isInstantiated","randomBytes","out","Uint8Array","QUOTA","subarray","min","wipe","array","node","NodeRandomSource","wipe_1","commonjsRequire","nodeCrypto","require$$1","buffer","system","SystemRandomSource","_source","browser_1","node_1","imulShim","ah","al","bl","bh","mul","imul","add","sub","rotl","x","rotr","binary","readInt16BE","readInt16BE_1","readUint16BE","readUint16BE_1","readInt16LE","readInt16LE_1","readUint16LE","writeUint16BE","writeUint16LE","writeInt16LE","readInt32BE","readInt32BE_1","readUint32BE","readUint32BE_1","readInt32LE","readInt32LE_1","readUint32LE","writeUint32BE","writeUint32LE","readInt64BE","hi","lo","readUint64BE","readInt64LE","readUint64LE","writeUint64BE","writeUint64LE","readUintBE","bitLength","readUintLE","writeUintBE","int_1","isSafeInteger","div","writeUintLE","writeUintLE_1","readFloat32BE","view","DataView","byteOffset","byteLength","readFloat32BE_1","readFloat32LE","readFloat32LE_1","readFloat64BE","readFloat64BE_1","readFloat64LE","writeFloat32BE","setFloat32","writeFloat32LE","writeFloat64BE","setFloat64","writeFloat64LE","randomStringForEntropy","randomString","randomUint32","defaultRandomSource","system_1","binary_1","prng","buf","charset","ALPHANUMERIC","charsLen","ceil","maxByte","randomByte","charAt","DIGEST_LENGTH","BLOCK_SIZE","SHA512","digestLength","blockSize","_stateHi","_stateLo","Int32Array","_tempHi","_tempLo","_buffer","_bufferLength","_bytesHashed","_finished","reset","_initState","clean","dataLength","dataPos","hashBlocks","bytesHashed","left","bitLenHi","bitLenLo","padLength","saveState","stateHi","stateLo","restoreState","savedState","bufferLength","cleanSavedState","K","wh","wl","hh","hl","pos","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","l","tl","bh0","ah0","bh1","bh3","bh6","bh7","bl0","bl1","bl2","bl3","bl5","bl6","bl7","h","th","bh2","bh4","bh5","convertSecretKeyToX25519","convertPublicKeyToX25519","verify","sign","extractPublicKeyFromSecretKey","generateKeyPair","generateKeyPairFromSeed","SEED_LENGTH","SECRET_KEY_LENGTH","PUBLIC_KEY_LENGTH","SIGNATURE_LENGTH","sha512_1","require$$2","gf","Float64Array","_9","gf0","gf1","D","D2","X","Y","I","set25519","car25519","sel25519","pack25519","verify32","neq25519","par25519","unpack25519","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","square","inv25519","pow2523","edadd","cswap","pack","tx","ty","zi","scalarmult","scalarbase","seed","hash","publicKey","secretKey","random_1","L","modL","carry","reduce","signature","hs","digest","unpackneg","chk","num","den","den2","den4","den6","JWT_IRIDIUM_ALG","JWT_IRIDIUM_TYP","JWT_DELIMITER","JWT_ENCODING","JSON_ENCODING","DATA_ENCODING","DID_DELIMITER","DID_PREFIX","DID_METHOD","MULTICODEC_ED25519_ENCODING","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_LENGTH","KEY_PAIR_SEED_LENGTH","asUint8Array","alloc","size","allocUnsafe","arrays","acc","curr","output","ALPHABET","BASE_MAP","xc","BASE","LEADER","FACTOR","iFACTOR","encode","source","ArrayBuffer","isView","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","string","src","_brrp__multiformats_scope_baseX","empty","toHex","hex","byte","padStart","fromHex","hexes","parseInt","equals","aa","bb","ii","coerce","isBinary","fromString","TextEncoder","TextDecoder","Encoder","prefix","baseEncode","bytes","Decoder","baseDecode","codePointAt","prefixCodePoint","text","or","decoder","ComposedDecoder","decoders","input","right","_defineProperty","Codec","encoder","baseX","alphabet","_basex","basex","bitsPerChar","codes","end","bits","written","pad","mask","rfc4648","_ref5","identity","base2","base8","base10","base16","base16upper","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base36","base36upper","base58btc","base58flickr","base64pad","base64url","base64urlpad","alphabetBytesToChars","alphabetCharsToBytes","byts","char","byt","base256emoji","encode_1","MSB","REST","MSBALL","INT","pow","oldOffset","read","MSB$1","REST$1","counter","N1","N2","N3","N4","N5","N6","N7","N8","N9","varint","encodingLength","_brrp_varint","code","encodeTo","int","sizeOffset","digestOffset","Digest","multihash","_varint$decode","_varint$decode2","_varint$decode3","_varint$decode4","equalBytes","Hasher","_this","sha","subtle","sha256","sha512","textEncoder","textDecoder","CID","version","asCID","_baseCache","defineProperties","hidden","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","_this$multihash","createV1","other","toStringV0","toStringV1","toStringTag","isCID","deprecate","IS_CID_DEPRECATION","cidSymbol","encodeCID","_CID$decodeFirst","decodeFirst","_CID$decodeFirst2","cid","remainder","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","codec","initialBytes","_parseCIDtoBytes","parseCIDtoBytes","_parseCIDtoBytes2","cache","codeOffset","hashOffset","writable","range","bases","identityBase","base58","hashes","sha2","codecs","createCodec","ascii","fromCharCode","BASES","utf8","latin1","encoding","decodeJSON","encodeJSON","encodeIss","header","multicodec","decodeIss","issuer","_issuer$split","_issuer$split2","method","encodeSig","decodeSig","encoded","encodeData","params","payload","decodeData","encodeJWT","decodeJWT","jwt","ed25519","signJWT","_signJWT","aud","ttl","keyPair","iat","iss","exp","_args","fromMiliseconds","alg","typ","verifyJWT","_verifyJWT","_decodeJWT","__spreadArray","this","to","BrowserInfo","os","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","getNodeVersion","matchUserAgent","ua","matched","regex","uaMatch","exec","browserName","matchedRule","versionParts","createVersionParts","detectOS","searchBotMatch","isNode","getFromWindow","getFromWindow_1","cjs","getFromWindowOrThrow","getFromWindowOrThrow_1","getDocumentOrThrow","getDocumentOrThrow_1","getDocument","getDocument_1","getNavigatorOrThrow","getNavigatorOrThrow_1","getNavigator","getNavigator_1","getLocationOrThrow","getLocationOrThrow_1","getLocation","getLocation_1","getCryptoOrThrow","getCryptoOrThrow_1","getCrypto","getCrypto_1","getLocalStorageOrThrow","getLocalStorageOrThrow_1","getLocalStorage","getWindowMetadata_1","getWindowMetadata","window_getters_1","doc","loc","getIcons","links","icons","link","getAttribute","href","protocol","host","absoluteHref","path","pathname","finalPath","absoluteUrl","getWindowMetadataOfAny","getElementsByTagName","tag","metaTags","attr","attributes","content","_ret","strictUriEncode","encodeURIComponent","toUpperCase","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","tokens","customDecodeURIComponent","replaceMap","decodeUriComponent","encodedURI","splitOnFirst","separator","separatorIndex","filterObj","predicate","isArr","decodeComponent","filterObject","require$$3","isNullOrUndefined","encodeFragmentIdentifier","encoderForArrayFormat","arrayFormat","skipNull","skipEmptyString","keyValueSep","arrayFormatSeparator","parserForArrayFormat","accumulator","isEncodedArray","newValue","arrayValue","validateArrayFormatSeparator","keysSorter","removeHash","hashStart","getHash","url","extract","queryStart","parseValue","parseNumbers","parseBooleans","query","formatter","param","_splitOnFirst","_splitOnFirst2","_i","_Object$keys","_i2","_Object$keys2","Boolean","object","shouldFilter","objectCopy","_i3","_Object$keys3","parseUrl","_splitOnFirst3","_splitOnFirst4","url_","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","pick","_exports$parseUrl","exclude","exclusionFilter","INPUT_ERROR","FINALIZE_ERROR","WINDOW","root","JS_SHA3_NO_WINDOW","WEB_WORKER","NODE_JS","JS_SHA3_NO_NODE_JS","versions","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","module","AMD","define","amd","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","SHAKE_PADDING","CSHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","padding","outputType","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","createMethod","createShakeMethod","createCshakeMethod","bytepad","createKmacMethod","Kmac","algorithms","methodNames","algorithm","methodName","newMethodName","blocks","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","encodeString","strs","paddingBytes","zeros","finalize","arrayBuffer","Uint32Array","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","_permanentCensorErrors","_censorErrors","LogLevels","_logLevel","_globalLogger","_checkNormalize","missing","form","normalize","_normalizeError","LogLevel","ErrorCode","HEX","Logger","_log","logLevel","throwArgumentError","DEBUG","INFO","WARNING","makeError","errors","UNKNOWN_ERROR","messageDetails","reason","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","assert","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","kind","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","isHexable","toHexString","addSlice","isBytesLike","isHexString","isBytes","isInteger","arrayify","allowMissingPrefix","hexPad","accum","stripZeros","zeroPad","HexCharacters","hexlify","hexDataLength","hexDataSlice","endOffset","hexConcat","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","_vs","recoveryParam","yParityAndS","compact","vs","recId","joinSignature","keccak256","sha3","keccak_256","AddressZero","inherits","ctor","superCtor","super_","TempCtor","BN","number","endian","isBN","negative","words","red","_init","wordSize","max","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","_strip","parseHex4Bits","parseHexByte","lowerBound","parseLength","parseBase","limbLen","limbPow","total","word","imuln","_iaddn","dest","move","_move","clone","_expand","strip","_normSign","inspect","groupSizes","groupBases","groupSize","groupBase","isZero","modrn","idivn","toNumber","toBuffer","toArrayLike","allocate","ArrayType","reqLength","postfix","_toArrayLikeLE","_toArrayLikeBE","clz32","_countBits","_zeroBits","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","ncarry","rword","maxJ","comb10MulTo","mid","a0","a1","a2","a3","a4","a5","a6","a7","a8","al8","ah8","a9","al9","ah9","bl4","bl8","bh8","bl9","bh9","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","FFTM","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","A","B","C","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","ireduce","rlen","imulK","K256","outLen","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u","_BN","_constructorGuard","MAX_SAFE","isBigNumberish","BigNumber","isBigNumber","_warnedToStringRadix","constructorGuard","_hex","_isBigNumber","freeze","toBigNumber","toBN","throwFault","isNegative","shr","toBigInt","anyValue","_base36To16","_base16To36","Zero","NegativeOne","getMultiplier","decimals","formatFixed","multiplier","fraction","whole","parseFixed","comps","wholeValue","fractionValue","wei","FixedFormat","signed","_multiplier","check","defaultValue","FixedNumber","_isFixedNumber","_checkFormat","addUnsafe","fromValue","subUnsafe","mulUnsafe","divUnsafe","hasFraction","ONE","toFormat","ceiling","factor","bump","BUMP","toUnsafeFloat","parseFloat","fixedFormat","numeric","decimal","fromBytes","isFixedNumber","One","Two","WeiPerEther","MaxUint256","MinInt256","MaxInt256","HashZero","EtherSymbol","UnicodeNormalizationForm","Utf8ErrorReason","errorFunc","badCodepoint","ignoreFunc","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","replaceFunc","OVERLONG","Utf8ErrorFuncs","ignore","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","pair","escapeChar","_toEscapedUtf8String","codePoint","_toUtf8String","codePoints","toUtf8String","toUtf8CodePoints","formatBytes32String","parseBytes32String","bytes2","createTable","func","createRangeTable","matchMap","ranges","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","flatten","_nameprepTableA1","codepoint","_nameprepTableB2","complex","_nameprepTableC","nameprep","codesTableB2","NFKC","id","textData","atob","btoa","depth","flatDeep","fromEntries","decode_arithmetic","u16","symbol_count","skip","pos_payload","read_width","read_buffer","read_bit","FULL","HALF","QRTR","MASK","register","symbols","low","read_payload","read_compressed_payload","read_counts","read_ascending","read_deltas","read_member_array","lookup","vX","vN","read_mapped_map","read_linear_table","read_replacement_table","read_zero_terminated_array","read_transposed","fill","dx","dy","ys","j_dy","read_emoji_trie","sorted","branches","Set","temp","valid","fe0f","save","getData","VALID","IGNORED","MAPPED","EMOJI_ROOT","HYPHEN","UNDERSCORE","explode_cp","filter_fe0f","cps","cp","ens_normalize_post_check","lastIndexOf","every","ens_normalize","emoji_filter","reverse","emoji","consume_emoji_reversed","nfc","fromCodePoint","eaten","saved","find","splice","Zeros","checkComponent","comp","ensNameSplit","last","ensNormalize","isValidName","namehash","dnsEncode","messagePrefix","hashMessage","arrayifyInteger","unarrayifyInteger","_encode","_decodeChildren","childOffset","decoded","_decode","consumed","BUFFER_OVERRUN","lengthLength","getChecksumAddress","address","chars","expanded","hashed","MAX_SAFE_INTEGER","log10","LN10","ibanLookup","safeDigits","ibanChecksum","checksum","getAddress","isAddress","getIcapAddress","getContractAddress","nonce","getCreate2Address","salt","initCodeHash","defineReadOnly","getStatic","resolveProperties","promises","results","checkProperties","properties","shallowCopy","opaque","bigint","_isFrozen","isFrozen","_deepCopy","deepCopy","Description","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","chainId","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","encodeType","fields","TypedDataEncoder","types","subtypes","uniqueNames","field","baseType","primaryTypes","checkCircular","found","subtype","primaryType","st","_types","getEncoder","_encoderCache","_getEncoder","subEncoder","encodedType","hashStruct","_visit","_this2","visit","getPrimaryType","hashDomain","domain","domainFields","EIP712Domain","resolveNames","resolveName","ensCache","getPayload","domainValues","domainTypes","typesWithDomain","minimalisticAssert","equal","assertEqual","inherits_browserModule","inherits_1","utils","isSurrogatePair","enc","toArray_1","zero2","toHex_1","htonl","htonl_1","toHex32","zero8","toHex32_1","zero2_1","zero8_1","join32","join32_1","split32","split32_1","rotr32","rotr32_1","rotl32","rotl32_1","sum32","sum32_1","sum32_3","sum32_3_1","sum32_4","sum32_4_1","sum32_5","sum32_5_1","sum64","sum64_1","sum64_hi","sum64_hi_1","sum64_lo","sum64_lo_1","sum64_4_hi","ch","cl","dh","dl","sum64_4_hi_1","sum64_4_lo","sum64_4_lo_1","sum64_5_hi","eh","el","sum64_5_hi_1","sum64_5_lo","sum64_5_lo_1","rotr64_hi","rotr64_hi_1","rotr64_lo","rotr64_lo_1","shr64_hi","shr64_hi_1","shr64_lo","shr64_lo_1","BlockHash","pending","pendingTotal","outSize","hmacStrength","_delta8","_delta32","BlockHash_1","common","_update","_pad","_digest","ft_1","ch32","p32","maj32","ft_1_1","ch32_1","maj32_1","p32_1","s0_256","s0_256_1","s1_256","s1_256_1","g0_256","g0_256_1","g1_256","g1_256_1","shaCommon","sha1_K","SHA1","W","_1","sha256_K","SHA256","_256","T1","T2","SHA224","_224","sha512_K","_512","_prepareBlock","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","fh","fl","gh","gl","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","T1_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","T2_lo","xh","xl","yh","yl","zh","zl","SHA384","_384","sha1","sha224","sha384","require$$4","RIPEMD160","ripemd160","ripemd","E","Ah","Bh","Ch","Dh","Eh","T","rh","Kh","sh","Hmac","Hash","inner","outer","hmac","_curve","getCurve","EC","SigningKey","privateKey","keyFromPrivate","getPublic","_addPoint","p0","keyFromPublic","p1","pub","encodeCompressed","signDigest","canonical","computeSharedSecret","otherKey","otherKeyPair","computePublicKey","derive","isSigningKey","_isSigningKey","recoverPublicKey","sig","rs","recoverPubKey","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","transactionFields","maxLength","allowedTransactionKeys","gasLimit","gasPrice","computeAddress","recoverAddress","formatNumber","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip1559","maxFeePerGas","maxPriorityFeePerGas","accessList","RLP","_serializeEip2930","fieldInfo","transactionType","_parseEipSignature","recid","_parseEip1559","_parseEip2930","_parse","rawTransaction","chacha","ROUNDS","core","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","streamXOR","dst","nonceInplaceCounterLength","counterLength","nc","incrementCounter","stream","constantTime","select","subject","resultIfOne","resultIfZero","lessOrEqual","compare","Poly1305","_r","Uint16Array","_h","_leftover","_fin","_blocks","mpos","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r3","r4","r5","r6","r7","r8","r9","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","mac","macpos","want","chacha_1","constant_time_1","KEY_LENGTH","NONCE_LENGTH","ChaCha20Poly1305","seal","plaintext","associatedData","authKey","resultLength","tagLength","sealed","calculatedTag","_authenticate","tagOut","ciphertext","hmac_1","hash_1","HMAC","_inner","_outer","isSerializableHash","_innerKeyedState","_outerKeyedState","HKDF","_counter","_hash","_info","okm","_hmac","_bufpos","_fillBuffer","ctr","_state","_temp","sharedKey","scalarMultBase","scalarMult","SHARED_KEY_LENGTH","inp","_121665","x32","x16","mySecretKey","theirPublicKey","rejectZero","littleEndian","fftm","minAssert","minUtils","getNAF","naf","getJSF","k1","jsf","m8","m14","m24","u1","u2","cachedProperty","computer","parseBytes","intFromLE","brorandModule","rand","Rand","generate","Rand_1","_rand","getBytes","getByte","BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","point","validate","_fixedNafMul","precomputed","doubles","_getDoubles","repr","nafW","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","BasePoint","curve","decodePoint","pointFromX","getX","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","Base","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","short","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","l1","l2","aprxSqrt","y1","y2","prevR","len1","len2","_endoSplit","v1","v2","p2","q1","q2","inf","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","Point","isRed","fromJSON","pre","endoMul","obj2point","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","JPoint","zOne","zinv","zinv2","ay","pz2","z2","s1","s2","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","MontCurve","i4","a24","diffAdd","da","jumlAdd","EdwardsCurve","twisted","mOneA","dd","oneC","edwards","_mulA","_mulC","lhs","pointFromY","_extDbl","nt","_projDbl","_extAdd","_projAdd","secp256k1","curves","PresetCurve","defineCurve","HmacDRBG","predResist","minEntropy","_reseed","reseedInterval","V","entropy","entropyEnc","nonceEnc","pers","persEnc","hmacDrbg","kmac","reseed","addEnc","KeyPair","ec","priv","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPrivate","Signature","_importDER","Position","place","getLength","initial","octetLen","rmPadding","slen","constructLength","octets","LN2","toDER","backHalf","require$$5","require$$6","nh","genKeyPair","drbg","ns2","_truncateToN","truncOnly","msgBitLength","bkey","ns1","iter","kp","kpX","sinv","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","eddsa","_secret","secret","isPoint","_pub","_pubBytes","fromSecret","pubBytes","encodePoint","privBytes","lastIx","decodeInt","getSecret","S","_R","_S","_Rencoded","Rencoded","_Sencoded","Sencoded","encodeInt","toBytes","EDDSA","pointClass","keyFromSecret","hashInt","s_","makeSignature","SG","RplusAh","normed","xIsOdd","elliptic","waku","publish","batchPublish","subscribe","batchSubscribe","subscription","unsubscribe","batchUnsubscribe","batchFetchMessages","irn","iridium","PARSE_ERROR","INVALID_REQUEST","METHOD_NOT_FOUND","INVALID_PARAMS","INTERNAL_ERROR","SERVER_ERROR","RESERVED_ERROR_CODES","SERVER_ERROR_CODE_RANGE","STANDARD_ERROR_MAP","DEFAULT_ERROR","isServerErrorCode","isReservedErrorCode","isValidErrorCode","getError","getErrorByCode","validateJsonRpcError","response","parseConnectionError","isBrowserCryptoAvailable","getSubtleCrypto","getBrowerCrypto","commonjsHelpers","env","isBrowser","isReactNative","isNodeJs","payloadId","date","extra","random","getBigIntRpcId","formatJsonRpcRequest","jsonrpc","formatJsonRpcResult","formatJsonRpcError","formatErrorMessage","isValidRoute","route","isValidWildcardRoute","isValidDefaultRoute","isValidLeadingWildcardRoute","isValidTrailingWildcardRoute","_e","_callSuper","_inherits","_e2","_n","HTTP_REGEX","WS_REGEX","getUrlProtocol","matches","matchRegexProtocol","isHttpUrl","isWsUrl","isLocalhostUrl","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResponse","isJsonRpcResult","isJsonRpcError","isJsonRpcValidationInvalid","validation","LARGE_ARRAY_SIZE","HASH_UNDEFINED","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","argsTag","arrayTag","asyncTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reRegExpChar","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","freeExports","nodeType","freeModule","moduleExports","freeProcess","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arrayFilter","resIndex","arrayPush","arraySome","baseTimes","iteratee","baseUnary","cacheHas","getValue","mapToArray","overArg","setToArray","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","uid","IE_PROTO","nativeObjectToString","reIsNative","symToStringTag","nativeGetSymbols","nativeIsBuffer","isBuffer","nativeKeys","getNative","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","hashClear","__data__","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","lastIndex","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","bitmask","customizer","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsNative","isObject","isMasked","pattern","isFunction","baseIsTypedArray","isLength","baseKeys","isPrototype","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","convert","objProps","objLength","othProps","skipCtor","objValue","objCtor","othCtor","getSymbols","isKeyable","isOwn","unmasked","stubArray","symbol","Ctor","ctorString","isArrayLike","stubFalse","isEqual","fetch"],"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E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EACtD,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACtD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EACtD,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAA,CACtD;AAED,IAAI8rE,EAAE,GAAG,CACP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACtD,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtD,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACtD,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAA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lE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,gEAAgE,CACjE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE;KAEJ;AACD7C,IAAAA,GAAG,EAAE;AACHhqB,MAAAA,GAAG,EAAE,CAAC;AACN6sB,MAAAA,MAAM,EAAE,CACN,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,gEAAgE,EAChE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,SAASqrD,EAAEA,CAAC5yD,KAAK,EAAEsnC,KAAK,EAAE;IACxB,OAAOtnC,KAAK,KAAKsnC,KAAK,IAAKtnC,KAAK,KAAKA,KAAK,IAAIsnC,KAAK,KAAKA,KAAM;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,IAAI62D,WAAW,GAAGW,eAAe,CAAC,YAAW;AAAE,IAAA,OAAO/8F,SAAS;GAAG,EAAE,CAAC,GAAG+8F,eAAe,GAAG,UAAS9+F,KAAK,EAAE;IACxG,OAAO++F,YAAY,CAAC/+F,KAAK,CAAC,IAAI8G,cAAc,CAAC5H,IAAI,CAACc,KAAK,EAAE,QAAQ,CAAC,IAChE,CAACyH,oBAAoB,CAACvI,IAAI,CAACc,KAAK,EAAE,QAAQ,CAAC;GAC9C;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,IAAIiR,OAAO,GAAGzL,KAAK,CAACyL,OAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASqxF,WAAWA,CAACtiG,KAAK,EAAE;AAC1B,IAAA,OAAOA,KAAK,IAAI,IAAI,IAAI0gG,QAAQ,CAAC1gG,KAAK,CAACgC,MAAM,CAAC,IAAI,CAACw+F,UAAU,CAACxgG,KAAK,CAAC;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,IAAIm7F,QAAQ,GAAGD,cAAc,IAAIqH,SAAS;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,SAASC,OAAOA,CAACxiG,KAAK,EAAEsnC,KAAK,EAAE;AAC7B,IAAA,OAAO03D,WAAW,CAACh/F,KAAK,EAAEsnC,KAAK,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASk5D,UAAUA,CAACxgG,KAAK,EAAE;AACzB,IAAA,IAAI,CAACqgG,QAAQ,CAACrgG,KAAK,CAAC,EAAE;AACpB,MAAA,OAAO,KAAK;AAChB;AACA;AACA;AACE,IAAA,IAAIwxC,GAAG,GAAGmtD,UAAU,CAAC3+F,KAAK,CAAC;AAC3B,IAAA,OAAOwxC,GAAG,IAAI0lD,OAAO,IAAI1lD,GAAG,IAAI2lD,MAAM,IAAI3lD,GAAG,IAAIslD,QAAQ,IAAItlD,GAAG,IAAIimD,QAAQ;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASiJ,QAAQA,CAAC1gG,KAAK,EAAE;AACvB,IAAA,OAAO,OAAOA,KAAK,IAAI,QAAQ,IAC7BA,KAAK,GAAG,CAAC,CAAC,IAAIA,KAAK,GAAG,CAAC,IAAI,CAAC,IAAIA,KAAK,IAAIqkE,gBAAgB;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASg8B,QAAQA,CAACrgG,KAAK,EAAE;AACvB,IAAA,IAAI6B,IAAI,GAAAnD,OAAA,CAAUsB,KAAK,CAAA;IACvB,OAAOA,KAAK,IAAI,IAAI,KAAK6B,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,UAAU,CAAC;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASk9F,YAAYA,CAAC/+F,KAAK,EAAE;IAC3B,OAAOA,KAAK,IAAI,IAAI,IAAItB,OAAA,CAAOsB,KAAK,KAAI,QAAQ;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,IAAIy5F,YAAY,GAAGD,gBAAgB,GAAGQ,SAAS,CAACR,gBAAgB,CAAC,GAAGiH,gBAAgB;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS57F,IAAIA,CAAC2wC,MAAM,EAAE;AACpB,IAAA,OAAO8sD,WAAW,CAAC9sD,MAAM,CAAC,GAAGwoD,aAAa,CAACxoD,MAAM,CAAC,GAAGmrD,QAAQ,CAACnrD,MAAM,CAAC;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS0sD,SAASA,GAAG;AACnB,IAAA,OAAO,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASK,SAASA,GAAG;AACnB,IAAA,OAAO,KAAK;AACd;EAEAhrD,MAAA,CAAAn3C,OAAA,GAAiBoivzDxB,IAAA99E,OAAc,GAAGmF,IAAI,CAAC44E,KAAK,KAAK54E,IAAI,CAAC44E,KAAK,GAAGh+E,YAAkB,CAAQ,SAAA,CAAA,IAAIA,YAAkglD,KAAK,GAAGrpE,OAAO;EACnB,IAAIsjD,EAAE,GAAGj/B,SAAgB;EACzB,IAAIo7D,SAAS,GAAGx0D,oBAA8B;EAC9C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,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,gEAAgE,CACjE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE;KAEJ;AACD7C,IAAAA,GAAG,EAAE;AACHhqB,MAAAA,GAAG,EAAE,CAAC;AACN6sB,MAAAA,MAAM,EAAE,CACN,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,gEAAgE,EAChE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,iEAAiE,EACjE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,iEAAiE,CAClE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EAClE,kEAAkE,CACnE,EACD,CACE,kEAAkE,EA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_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181]}