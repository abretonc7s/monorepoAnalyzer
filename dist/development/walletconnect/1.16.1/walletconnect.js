function _OverloadYield(e, d) {
  this.v = e, this.k = d;
}
function _applyDecoratedDescriptor(i, e, r, n, l) {
  var a = {};
  return Object.keys(n).forEach(function (i) {
    a[i] = n[i];
  }), a.enumerable = !!a.enumerable, a.configurable = !!a.configurable, ("value" in a || a.initializer) && (a.writable = !0), a = r.slice().reverse().reduce(function (r, n) {
    return n(i, e, r) || r;
  }, a), l && void 0 !== a.initializer && (a.value = a.initializer ? a.initializer.call(l) : void 0, a.initializer = void 0), void 0 === a.initializer ? (Object.defineProperty(i, e, a), null) : a;
}
function _applyDecs2311(e, t, n, r, o, i) {
  var a,
    c,
    u,
    s,
    f,
    l,
    p,
    d = Symbol.metadata || Symbol.for("Symbol.metadata"),
    m = Object.defineProperty,
    h = Object.create,
    y = [h(null), h(null)],
    v = t.length;
  function g(t, n, r) {
    return function (o, i) {
      n && (i = o, o = e);
      for (var a = 0; a < t.length; a++) i = t[a].apply(o, r ? [i] : []);
      return r ? i : o;
    };
  }
  function b(e, t, n, r) {
    if ("function" != typeof e && (r || void 0 !== e)) throw new TypeError(t + " must " + (n || "be") + " a function" + (r ? "" : " or undefined"));
    return e;
  }
  function applyDec(e, t, n, r, o, i, u, s, f, l, p) {
    function d(e) {
      if (!p(e)) throw new TypeError("Attempted to access private element on non-instance");
    }
    var h = [].concat(t[0]),
      v = t[3],
      w = !u,
      D = 1 === o,
      S = 3 === o,
      j = 4 === o,
      E = 2 === o;
    function I(t, n, r) {
      return function (o, i) {
        return n && (i = o, o = e), r && r(o), P[t].call(o, i);
      };
    }
    if (!w) {
      var P = {},
        k = [],
        F = S ? "get" : j || D ? "set" : "value";
      if (f ? (l || D ? P = {
        get: _setFunctionName(function () {
          return v(this);
        }, r, "get"),
        set: function (e) {
          t[4](this, e);
        }
      } : P[F] = v, l || _setFunctionName(P[F], r, E ? "" : F)) : l || (P = Object.getOwnPropertyDescriptor(e, r)), !l && !f) {
        if ((c = y[+s][r]) && 7 != (c ^ o)) throw Error("Decorating two elements with the same name (" + P[F].name + ") is not supported yet");
        y[+s][r] = o < 3 ? 1 : o;
      }
    }
    for (var N = e, O = h.length - 1; O >= 0; O -= n ? 2 : 1) {
      var T = b(h[O], "A decorator", "be", !0),
        z = n ? h[O - 1] : void 0,
        A = {},
        H = {
          kind: ["field", "accessor", "method", "getter", "setter", "class"][o],
          name: r,
          metadata: a,
          addInitializer: function (e, t) {
            if (e.v) throw new TypeError("attempted to call addInitializer after decoration was finished");
            b(t, "An initializer", "be", !0), i.push(t);
          }.bind(null, A)
        };
      if (w) c = T.call(z, N, H), A.v = 1, b(c, "class decorators", "return") && (N = c);else if (H.static = s, H.private = f, c = H.access = {
        has: f ? p.bind() : function (e) {
          return r in e;
        }
      }, j || (c.get = f ? E ? function (e) {
        return d(e), P.value;
      } : I("get", 0, d) : function (e) {
        return e[r];
      }), E || S || (c.set = f ? I("set", 0, d) : function (e, t) {
        e[r] = t;
      }), N = T.call(z, D ? {
        get: P.get,
        set: P.set
      } : P[F], H), A.v = 1, D) {
        if ("object" == typeof N && N) (c = b(N.get, "accessor.get")) && (P.get = c), (c = b(N.set, "accessor.set")) && (P.set = c), (c = b(N.init, "accessor.init")) && k.unshift(c);else if (void 0 !== N) throw new TypeError("accessor decorators must return an object with get, set, or init properties or undefined");
      } else b(N, (l ? "field" : "method") + " decorators", "return") && (l ? k.unshift(N) : P[F] = N);
    }
    return o < 2 && u.push(g(k, s, 1), g(i, s, 0)), l || w || (f ? D ? u.splice(-1, 0, I("get", s), I("set", s)) : u.push(E ? P[F] : b.call.bind(P[F])) : m(e, r, P)), N;
  }
  function w(e) {
    return m(e, d, {
      configurable: !0,
      enumerable: !0,
      value: a
    });
  }
  return void 0 !== i && (a = i[d]), a = h(null == a ? null : a), f = [], l = function (e) {
    e && f.push(g(e));
  }, p = function (t, r) {
    for (var i = 0; i < n.length; i++) {
      var a = n[i],
        c = a[1],
        l = 7 & c;
      if ((8 & c) == t && !l == r) {
        var p = a[2],
          d = !!a[3],
          m = 16 & c;
        applyDec(t ? e : e.prototype, a, m, d ? "#" + p : _toPropertyKey(p), l, l < 2 ? [] : t ? s = s || [] : u = u || [], f, !!t, d, r, t && d ? function (t) {
          return _checkInRHS(t) === e;
        } : o);
      }
    }
  }, p(8, 0), p(0, 0), p(8, 1), p(0, 1), l(u), l(s), c = f, v || w(e), {
    e: c,
    get c() {
      var n = [];
      return v && [w(e = applyDec(e, [t], r, e.name, 5, n)), g(n, 1)];
    }
  };
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray(r);
}
function _assertClassBrand(e, t, n) {
  if ("function" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;
  throw new TypeError("Private element is not present on this object");
}
function _assertThisInitialized(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function _asyncGeneratorDelegate(t) {
  var e = {},
    n = !1;
  function pump(e, r) {
    return n = !0, r = new Promise(function (n) {
      n(t[e](r));
    }), {
      done: !1,
      value: new _OverloadYield(r, 1)
    };
  }
  return e["undefined" != typeof Symbol && Symbol.iterator || "@@iterator"] = function () {
    return this;
  }, e.next = function (t) {
    return n ? (n = !1, t) : pump("next", t);
  }, "function" == typeof t.throw && (e.throw = function (t) {
    if (n) throw n = !1, t;
    return pump("throw", t);
  }), "function" == typeof t.return && (e.return = function (t) {
    return n ? (n = !1, t) : pump("return", t);
  }), e;
}
function _asyncIterator(r) {
  var n,
    t,
    o,
    e = 2;
  for ("undefined" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {
    if (t && null != (n = r[t])) return n.call(r);
    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));
    t = "@@asyncIterator", o = "@@iterator";
  }
  throw new TypeError("Object is not async iterable");
}
function AsyncFromSyncIterator(r) {
  function AsyncFromSyncIteratorContinuation(r) {
    if (Object(r) !== r) return Promise.reject(new TypeError(r + " is not an object."));
    var n = r.done;
    return Promise.resolve(r.value).then(function (r) {
      return {
        value: r,
        done: n
      };
    });
  }
  return AsyncFromSyncIterator = function (r) {
    this.s = r, this.n = r.next;
  }, AsyncFromSyncIterator.prototype = {
    s: null,
    n: null,
    next: function () {
      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));
    },
    return: function (r) {
      var n = this.s.return;
      return void 0 === n ? Promise.resolve({
        value: r,
        done: !0
      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));
    },
    throw: function (r) {
      var n = this.s.return;
      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));
    }
  }, new AsyncFromSyncIterator(r);
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
  try {
    var i = n[a](c),
      u = i.value;
  } catch (n) {
    return void e(n);
  }
  i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
  return function () {
    var t = this,
      e = arguments;
    return new Promise(function (r, o) {
      var a = n.apply(t, e);
      function _next(n) {
        asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
      }
      function _throw(n) {
        asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
      }
      _next(void 0);
    });
  };
}
function _awaitAsyncGenerator(e) {
  return new _OverloadYield(e, 0);
}
function _callSuper(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _checkInRHS(e) {
  if (Object(e) !== e) throw TypeError("right-hand side of 'in' should be an object, got " + (null !== e ? typeof e : "null"));
  return e;
}
function _checkPrivateRedeclaration(e, t) {
  if (t.has(e)) throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function _classCallCheck(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _classNameTDZError(e) {
  throw new ReferenceError('Class "' + e + '" cannot be referenced in computed property keys.');
}
function _classPrivateFieldGet2(s, a) {
  return s.get(_assertClassBrand(s, a));
}
function _classPrivateFieldInitSpec(e, t, a) {
  _checkPrivateRedeclaration(e, t), t.set(e, a);
}
function _classPrivateFieldLooseBase(e, t) {
  if (!{}.hasOwnProperty.call(e, t)) throw new TypeError("attempted to use private field on non-instance");
  return e;
}
var id$1 = 0;
function _classPrivateFieldLooseKey(e) {
  return "__private_" + id$1++ + "_" + e;
}
function _classPrivateFieldSet2(s, a, r) {
  return s.set(_assertClassBrand(s, a), r), r;
}
function _classPrivateGetter(s, r, a) {
  return a(_assertClassBrand(s, r));
}
function _classPrivateMethodInitSpec(e, a) {
  _checkPrivateRedeclaration(e, a), a.add(e);
}
function _classPrivateSetter(s, r, a, t) {
  return r(_assertClassBrand(s, a), t), t;
}
function _classStaticPrivateMethodGet(s, a, t) {
  return _assertClassBrand(a, s), t;
}
function _construct(t, e, r) {
  if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf(p, r.prototype), p;
}
function _defineProperties(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
  }
}
function _createClass(e, r, t) {
  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
    writable: !1
  }), e;
}
function _createForOfIteratorHelper(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var n = 0,
        F = function () {};
      return {
        s: F,
        n: function () {
          return n >= r.length ? {
            done: !0
          } : {
            done: !1,
            value: r[n++]
          };
        },
        e: function (r) {
          throw r;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o,
    a = !0,
    u = !1;
  return {
    s: function () {
      t = t.call(r);
    },
    n: function () {
      var r = t.next();
      return a = r.done, r;
    },
    e: function (r) {
      u = !0, o = r;
    },
    f: function () {
      try {
        a || null == t.return || t.return();
      } finally {
        if (u) throw o;
      }
    }
  };
}
function _createForOfIteratorHelperLoose(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (t) return (t = t.call(r)).next.bind(t);
  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
    t && (r = t);
    var o = 0;
    return function () {
      return o >= r.length ? {
        done: !0
      } : {
        done: !1,
        value: r[o++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _createSuper(t) {
  var r = _isNativeReflectConstruct();
  return function () {
    var e,
      o = _getPrototypeOf(t);
    if (r) {
      var s = _getPrototypeOf(this).constructor;
      e = Reflect.construct(o, arguments, s);
    } else e = o.apply(this, arguments);
    return _possibleConstructorReturn(this, e);
  };
}
function _decorate(e, r, t, i) {
  var o = _getDecoratorsApi();
  if (i) for (var n = 0; n < i.length; n++) o = i[n](o);
  var s = r(function (e) {
      o.initializeInstanceElements(e, a.elements);
    }, t),
    a = o.decorateClass(_coalesceClassElements(s.d.map(_createElementDescriptor)), e);
  return o.initializeClassElements(s.F, a.elements), o.runClassFinishers(s.F, a.finishers);
}
function _getDecoratorsApi() {
  _getDecoratorsApi = function () {
    return e;
  };
  var e = {
    elementsDefinitionOrder: [["method"], ["field"]],
    initializeInstanceElements: function (e, r) {
      ["method", "field"].forEach(function (t) {
        r.forEach(function (r) {
          r.kind === t && "own" === r.placement && this.defineClassElement(e, r);
        }, this);
      }, this);
    },
    initializeClassElements: function (e, r) {
      var t = e.prototype;
      ["method", "field"].forEach(function (i) {
        r.forEach(function (r) {
          var o = r.placement;
          if (r.kind === i && ("static" === o || "prototype" === o)) {
            var n = "static" === o ? e : t;
            this.defineClassElement(n, r);
          }
        }, this);
      }, this);
    },
    defineClassElement: function (e, r) {
      var t = r.descriptor;
      if ("field" === r.kind) {
        var i = r.initializer;
        t = {
          enumerable: t.enumerable,
          writable: t.writable,
          configurable: t.configurable,
          value: void 0 === i ? void 0 : i.call(e)
        };
      }
      Object.defineProperty(e, r.key, t);
    },
    decorateClass: function (e, r) {
      var t = [],
        i = [],
        o = {
          static: [],
          prototype: [],
          own: []
        };
      if (e.forEach(function (e) {
        this.addElementPlacement(e, o);
      }, this), e.forEach(function (e) {
        if (!_hasDecorators(e)) return t.push(e);
        var r = this.decorateElement(e, o);
        t.push(r.element), t.push.apply(t, r.extras), i.push.apply(i, r.finishers);
      }, this), !r) return {
        elements: t,
        finishers: i
      };
      var n = this.decorateConstructor(t, r);
      return i.push.apply(i, n.finishers), n.finishers = i, n;
    },
    addElementPlacement: function (e, r, t) {
      var i = r[e.placement];
      if (!t && -1 !== i.indexOf(e.key)) throw new TypeError("Duplicated element (" + e.key + ")");
      i.push(e.key);
    },
    decorateElement: function (e, r) {
      for (var t = [], i = [], o = e.decorators, n = o.length - 1; n >= 0; n--) {
        var s = r[e.placement];
        s.splice(s.indexOf(e.key), 1);
        var a = this.fromElementDescriptor(e),
          l = this.toElementFinisherExtras((0, o[n])(a) || a);
        e = l.element, this.addElementPlacement(e, r), l.finisher && i.push(l.finisher);
        var c = l.extras;
        if (c) {
          for (var p = 0; p < c.length; p++) this.addElementPlacement(c[p], r);
          t.push.apply(t, c);
        }
      }
      return {
        element: e,
        finishers: i,
        extras: t
      };
    },
    decorateConstructor: function (e, r) {
      for (var t = [], i = r.length - 1; i >= 0; i--) {
        var o = this.fromClassDescriptor(e),
          n = this.toClassDescriptor((0, r[i])(o) || o);
        if (void 0 !== n.finisher && t.push(n.finisher), void 0 !== n.elements) {
          e = n.elements;
          for (var s = 0; s < e.length - 1; s++) for (var a = s + 1; a < e.length; a++) if (e[s].key === e[a].key && e[s].placement === e[a].placement) throw new TypeError("Duplicated element (" + e[s].key + ")");
        }
      }
      return {
        elements: e,
        finishers: t
      };
    },
    fromElementDescriptor: function (e) {
      var r = {
        kind: e.kind,
        key: e.key,
        placement: e.placement,
        descriptor: e.descriptor
      };
      return Object.defineProperty(r, Symbol.toStringTag, {
        value: "Descriptor",
        configurable: !0
      }), "field" === e.kind && (r.initializer = e.initializer), r;
    },
    toElementDescriptors: function (e) {
      if (void 0 !== e) return _toArray(e).map(function (e) {
        var r = this.toElementDescriptor(e);
        return this.disallowProperty(e, "finisher", "An element descriptor"), this.disallowProperty(e, "extras", "An element descriptor"), r;
      }, this);
    },
    toElementDescriptor: function (e) {
      var r = e.kind + "";
      if ("method" !== r && "field" !== r) throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "' + r + '"');
      var t = _toPropertyKey(e.key),
        i = e.placement + "";
      if ("static" !== i && "prototype" !== i && "own" !== i) throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "' + i + '"');
      var o = e.descriptor;
      this.disallowProperty(e, "elements", "An element descriptor");
      var n = {
        kind: r,
        key: t,
        placement: i,
        descriptor: Object.assign({}, o)
      };
      return "field" !== r ? this.disallowProperty(e, "initializer", "A method descriptor") : (this.disallowProperty(o, "get", "The property descriptor of a field descriptor"), this.disallowProperty(o, "set", "The property descriptor of a field descriptor"), this.disallowProperty(o, "value", "The property descriptor of a field descriptor"), n.initializer = e.initializer), n;
    },
    toElementFinisherExtras: function (e) {
      return {
        element: this.toElementDescriptor(e),
        finisher: _optionalCallableProperty(e, "finisher"),
        extras: this.toElementDescriptors(e.extras)
      };
    },
    fromClassDescriptor: function (e) {
      var r = {
        kind: "class",
        elements: e.map(this.fromElementDescriptor, this)
      };
      return Object.defineProperty(r, Symbol.toStringTag, {
        value: "Descriptor",
        configurable: !0
      }), r;
    },
    toClassDescriptor: function (e) {
      var r = e.kind + "";
      if ("class" !== r) throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "' + r + '"');
      this.disallowProperty(e, "key", "A class descriptor"), this.disallowProperty(e, "placement", "A class descriptor"), this.disallowProperty(e, "descriptor", "A class descriptor"), this.disallowProperty(e, "initializer", "A class descriptor"), this.disallowProperty(e, "extras", "A class descriptor");
      var t = _optionalCallableProperty(e, "finisher");
      return {
        elements: this.toElementDescriptors(e.elements),
        finisher: t
      };
    },
    runClassFinishers: function (e, r) {
      for (var t = 0; t < r.length; t++) {
        var i = (0, r[t])(e);
        if (void 0 !== i) {
          if ("function" != typeof i) throw new TypeError("Finishers must return a constructor.");
          e = i;
        }
      }
      return e;
    },
    disallowProperty: function (e, r, t) {
      if (void 0 !== e[r]) throw new TypeError(t + " can't have a ." + r + " property.");
    }
  };
  return e;
}
function _createElementDescriptor(e) {
  var r,
    t = _toPropertyKey(e.key);
  "method" === e.kind ? r = {
    value: e.value,
    writable: !0,
    configurable: !0,
    enumerable: !1
  } : "get" === e.kind ? r = {
    get: e.value,
    configurable: !0,
    enumerable: !1
  } : "set" === e.kind ? r = {
    set: e.value,
    configurable: !0,
    enumerable: !1
  } : "field" === e.kind && (r = {
    configurable: !0,
    writable: !0,
    enumerable: !0
  });
  var i = {
    kind: "field" === e.kind ? "field" : "method",
    key: t,
    placement: e.static ? "static" : "field" === e.kind ? "own" : "prototype",
    descriptor: r
  };
  return e.decorators && (i.decorators = e.decorators), "field" === e.kind && (i.initializer = e.value), i;
}
function _coalesceGetterSetter(e, r) {
  void 0 !== e.descriptor.get ? r.descriptor.get = e.descriptor.get : r.descriptor.set = e.descriptor.set;
}
function _coalesceClassElements(e) {
  for (var r = [], isSameElement = function (e) {
      return "method" === e.kind && e.key === o.key && e.placement === o.placement;
    }, t = 0; t < e.length; t++) {
    var i,
      o = e[t];
    if ("method" === o.kind && (i = r.find(isSameElement))) {
      if (_isDataDescriptor(o.descriptor) || _isDataDescriptor(i.descriptor)) {
        if (_hasDecorators(o) || _hasDecorators(i)) throw new ReferenceError("Duplicated methods (" + o.key + ") can't be decorated.");
        i.descriptor = o.descriptor;
      } else {
        if (_hasDecorators(o)) {
          if (_hasDecorators(i)) throw new ReferenceError("Decorators can't be placed on different accessors with for the same property (" + o.key + ").");
          i.decorators = o.decorators;
        }
        _coalesceGetterSetter(o, i);
      }
    } else r.push(o);
  }
  return r;
}
function _hasDecorators(e) {
  return e.decorators && e.decorators.length;
}
function _isDataDescriptor(e) {
  return void 0 !== e && !(void 0 === e.value && void 0 === e.writable);
}
function _optionalCallableProperty(e, r) {
  var t = e[r];
  if (void 0 !== t && "function" != typeof t) throw new TypeError("Expected '" + r + "' to be a function");
  return t;
}
function _defaults(e, r) {
  for (var t = Object.getOwnPropertyNames(r), o = 0; o < t.length; o++) {
    var n = t[o],
      a = Object.getOwnPropertyDescriptor(r, n);
    a && a.configurable && void 0 === e[n] && Object.defineProperty(e, n, a);
  }
  return e;
}
function _defineAccessor(e, r, n, t) {
  var c = {
    configurable: !0,
    enumerable: !0
  };
  return c[e] = t, Object.defineProperty(r, n, c);
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _get() {
  return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) {
    var p = _superPropBase(e, t);
    if (p) {
      var n = Object.getOwnPropertyDescriptor(p, t);
      return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;
    }
  }, _get.apply(null, arguments);
}
function _getPrototypeOf(t) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, _getPrototypeOf(t);
}
function _identity(t) {
  return t;
}
function _importDeferProxy(e) {
  var t = null,
    constValue = function (e) {
      return function () {
        return e;
      };
    },
    proxy = function (r) {
      return function (n, o, f) {
        return null === t && (t = e()), r(t, o, f);
      };
    };
  return new Proxy({}, {
    defineProperty: constValue(!1),
    deleteProperty: constValue(!1),
    get: proxy(Reflect.get),
    getOwnPropertyDescriptor: proxy(Reflect.getOwnPropertyDescriptor),
    getPrototypeOf: constValue(null),
    isExtensible: constValue(!1),
    has: proxy(Reflect.has),
    ownKeys: proxy(Reflect.ownKeys),
    preventExtensions: constValue(!0),
    set: constValue(!1),
    setPrototypeOf: constValue(!1)
  });
}
function _inherits(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, {
    constructor: {
      value: t,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(t, "prototype", {
    writable: !1
  }), e && _setPrototypeOf(t, e);
}
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}
function _initializerDefineProperty(e, i, r, l) {
  r && Object.defineProperty(e, i, {
    enumerable: r.enumerable,
    configurable: r.configurable,
    writable: r.writable,
    value: r.initializer ? r.initializer.call(l) : void 0
  });
}
function _initializerWarningHelper(r, e) {
  throw Error("Decorating class property failed. Please ensure that transform-class-properties is enabled and runs after the decorators transform.");
}
function _instanceof(n, e) {
  return null != e && "undefined" != typeof Symbol && e[Symbol.hasInstance] ? !!e[Symbol.hasInstance](n) : n instanceof e;
}
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function (e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != typeof e && "function" != typeof e) return {
    default: e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n.default = e, t && t.set(e, n), n;
}
function _isNativeFunction(t) {
  try {
    return -1 !== Function.toString.call(t).indexOf("[native code]");
  } catch (n) {
    return "function" == typeof t;
  }
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (_isNativeReflectConstruct = function () {
    return !!t;
  })();
}
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
var REACT_ELEMENT_TYPE;
function _jsx(e, r, E, l) {
  REACT_ELEMENT_TYPE || (REACT_ELEMENT_TYPE = "function" == typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103);
  var o = e && e.defaultProps,
    n = arguments.length - 3;
  if (r || 0 === n || (r = {
    children: void 0
  }), 1 === n) r.children = l;else if (n > 1) {
    for (var t = Array(n), f = 0; f < n; f++) t[f] = arguments[f + 3];
    r.children = t;
  }
  if (r && o) for (var i in o) void 0 === r[i] && (r[i] = o[i]);else r || (r = o || {});
  return {
    $$typeof: REACT_ELEMENT_TYPE,
    type: e,
    key: void 0 === E ? null : "" + E,
    ref: null,
    props: r,
    _owner: null
  };
}
function _maybeArrayLike(r, a, e) {
  if (a && !Array.isArray(a) && "number" == typeof a.length) {
    var y = a.length;
    return _arrayLikeToArray(a, void 0 !== e && e < y ? e : y);
  }
  return r(a, e);
}
function _newArrowCheck(n, r) {
  if (n !== r) throw new TypeError("Cannot instantiate an arrow function");
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _nullishReceiverError(r) {
  throw new TypeError("Cannot set property of null or undefined.");
}
function _objectDestructuringEmpty(t) {
  if (null == t) throw new TypeError("Cannot destructure " + t);
}
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (e.includes(n)) continue;
    t[n] = r[n];
  }
  return t;
}
function _possibleConstructorReturn(t, e) {
  if (e && ("object" == typeof e || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized(t);
}
function _readOnlyError(r) {
  throw new TypeError('"' + r + '" is read-only');
}
function _regeneratorRuntime() {
  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  _regeneratorRuntime = function () {
    return e;
  };
  var t,
    e = {},
    r = Object.prototype,
    n = r.hasOwnProperty,
    o = Object.defineProperty || function (t, e, r) {
      t[e] = r.value;
    },
    i = "function" == typeof Symbol ? Symbol : {},
    a = i.iterator || "@@iterator",
    c = i.asyncIterator || "@@asyncIterator",
    u = i.toStringTag || "@@toStringTag";
  function define(t, e, r) {
    return Object.defineProperty(t, e, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), t[e];
  }
  try {
    define({}, "");
  } catch (t) {
    define = function (t, e, r) {
      return t[e] = r;
    };
  }
  function wrap(t, e, r, n) {
    var i = e && e.prototype instanceof Generator ? e : Generator,
      a = Object.create(i.prototype),
      c = new Context(n || []);
    return o(a, "_invoke", {
      value: makeInvokeMethod(t, r, c)
    }), a;
  }
  function tryCatch(t, e, r) {
    try {
      return {
        type: "normal",
        arg: t.call(e, r)
      };
    } catch (t) {
      return {
        type: "throw",
        arg: t
      };
    }
  }
  e.wrap = wrap;
  var h = "suspendedStart",
    l = "suspendedYield",
    f = "executing",
    s = "completed",
    y = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var p = {};
  define(p, a, function () {
    return this;
  });
  var d = Object.getPrototypeOf,
    v = d && d(d(values([])));
  v && v !== r && n.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t) {
    ["next", "throw", "return"].forEach(function (e) {
      define(t, e, function (t) {
        return this._invoke(e, t);
      });
    });
  }
  function AsyncIterator(t, e) {
    function invoke(r, o, i, a) {
      var c = tryCatch(t[r], t, o);
      if ("throw" !== c.type) {
        var u = c.arg,
          h = u.value;
        return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
          invoke("next", t, i, a);
        }, function (t) {
          invoke("throw", t, i, a);
        }) : e.resolve(h).then(function (t) {
          u.value = t, i(u);
        }, function (t) {
          return invoke("throw", t, i, a);
        });
      }
      a(c.arg);
    }
    var r;
    o(this, "_invoke", {
      value: function (t, n) {
        function callInvokeWithMethodAndArg() {
          return new e(function (e, r) {
            invoke(t, n, e, r);
          });
        }
        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e, r, n) {
    var o = h;
    return function (i, a) {
      if (o === f) throw Error("Generator is already running");
      if (o === s) {
        if ("throw" === i) throw a;
        return {
          value: t,
          done: !0
        };
      }
      for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
          var u = maybeInvokeDelegate(c, n);
          if (u) {
            if (u === y) continue;
            return u;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (o === h) throw o = s, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
          if (o = n.done ? s : l, p.arg === y) continue;
          return {
            value: p.arg,
            done: n.done
          };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
      }
    };
  }
  function maybeInvokeDelegate(e, r) {
    var n = r.method,
      o = e.iterator[n];
    if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
    var i = tryCatch(o, e.iterator, r.arg);
    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
    var a = i.arg;
    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
  }
  function pushTryEntry(t) {
    var e = {
      tryLoc: t[0]
    };
    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
  }
  function resetTryEntry(t) {
    var e = t.completion || {};
    e.type = "normal", delete e.arg, t.completion = e;
  }
  function Context(t) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(e) {
    if (e || "" === e) {
      var r = e[a];
      if (r) return r.call(e);
      if ("function" == typeof e.next) return e;
      if (!isNaN(e.length)) {
        var o = -1,
          i = function next() {
            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
            return next.value = t, next.done = !0, next;
          };
        return i.next = i;
      }
    }
    throw new TypeError(typeof e + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
    var e = "function" == typeof t && t.constructor;
    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
  }, e.mark = function (t) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
  }, e.awrap = function (t) {
    return {
      __await: t
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
    return this;
  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
    void 0 === i && (i = Promise);
    var a = new AsyncIterator(wrap(t, r, n, o), i);
    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
      return t.done ? t.value : a.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
    return this;
  }), define(g, "toString", function () {
    return "[object Generator]";
  }), e.keys = function (t) {
    var e = Object(t),
      r = [];
    for (var n in e) r.push(n);
    return r.reverse(), function next() {
      for (; r.length;) {
        var t = r.pop();
        if (t in e) return next.value = t, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, e.values = values, Context.prototype = {
    constructor: Context,
    reset: function (e) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
    },
    stop: function () {
      this.done = !0;
      var t = this.tryEntries[0].completion;
      if ("throw" === t.type) throw t.arg;
      return this.rval;
    },
    dispatchException: function (e) {
      if (this.done) throw e;
      var r = this;
      function handle(n, o) {
        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
      }
      for (var o = this.tryEntries.length - 1; o >= 0; --o) {
        var i = this.tryEntries[o],
          a = i.completion;
        if ("root" === i.tryLoc) return handle("end");
        if (i.tryLoc <= this.prev) {
          var c = n.call(i, "catchLoc"),
            u = n.call(i, "finallyLoc");
          if (c && u) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          } else if (c) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
          } else {
            if (!u) throw Error("try statement without catch or finally");
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          }
        }
      }
    },
    abrupt: function (t, e) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var o = this.tryEntries[r];
        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
          var i = o;
          break;
        }
      }
      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
      var a = i ? i.completion : {};
      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
    },
    complete: function (t, e) {
      if ("throw" === t.type) throw t.arg;
      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
    },
    finish: function (t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
      }
    },
    catch: function (t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.tryLoc === t) {
          var n = r.completion;
          if ("throw" === n.type) {
            var o = n.arg;
            resetTryEntry(r);
          }
          return o;
        }
      }
      throw Error("illegal catch attempt");
    },
    delegateYield: function (e, r, n) {
      return this.delegate = {
        iterator: values(e),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = t), y;
    }
  }, e;
}
function set$2(e, r, t, o) {
  return set$2 = "undefined" != typeof Reflect && Reflect.set ? Reflect.set : function (e, r, t, o) {
    var f,
      i = _superPropBase(e, r);
    if (i) {
      if ((f = Object.getOwnPropertyDescriptor(i, r)).set) return f.set.call(o, t), !0;
      if (!f.writable) return !1;
    }
    if (f = Object.getOwnPropertyDescriptor(o, r)) {
      if (!f.writable) return !1;
      f.value = t, Object.defineProperty(o, r, f);
    } else _defineProperty(o, r, t);
    return !0;
  }, set$2(e, r, t, o);
}
function _set(e, r, t, o, f) {
  if (!set$2(e, r, t, o || e) && f) throw new TypeError("failed to set property");
  return t;
}
function _setFunctionName(e, t, n) {
  "symbol" == typeof t && (t = (t = t.description) ? "[" + t + "]" : "");
  try {
    Object.defineProperty(e, "name", {
      configurable: !0,
      value: n ? n + " " + t : t
    });
  } catch (e) {}
  return e;
}
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {
    return t.__proto__ = e, t;
  }, _setPrototypeOf(t, e);
}
function _skipFirstGeneratorNext(t) {
  return function () {
    var r = t.apply(this, arguments);
    return r.next(), r;
  };
}
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _superPropBase(t, o) {
  for (; !{}.hasOwnProperty.call(t, o) && null !== (t = _getPrototypeOf(t)););
  return t;
}
function _superPropGet(t, o, e, r) {
  var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e);
  return 2 & r && "function" == typeof p ? function (t) {
    return p.apply(e, t);
  } : p;
}
function _superPropSet(t, e, o, r, p, f) {
  return _set(_getPrototypeOf(f ? t.prototype : t), e, o, r, p);
}
function _taggedTemplateLiteral(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {
    raw: {
      value: Object.freeze(t)
    }
  }));
}
function _taggedTemplateLiteralLoose(e, t) {
  return t || (t = e.slice(0)), e.raw = t, e;
}
function _tdz(e) {
  throw new ReferenceError(e + " is not defined - temporal dead zone");
}
function _temporalRef(r, e) {
  return r === _temporalUndefined ? _tdz(e) : r;
}
function _temporalUndefined() {}
function _toArray(r) {
  return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest();
}
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : i + "";
}
function _toSetter(t, e, n) {
  e || (e = []);
  var r = e.length++;
  return Object.defineProperty({}, "_", {
    set: function (o) {
      e[r] = o, t.apply(n, e);
    }
  });
}
function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _usingCtx() {
  var r = "function" == typeof SuppressedError ? SuppressedError : function (r, e) {
      var n = Error();
      return n.name = "SuppressedError", n.error = r, n.suppressed = e, n;
    },
    e = {},
    n = [];
  function using(r, e) {
    if (null != e) {
      if (Object(e) !== e) throw new TypeError("using declarations can only be used with objects, functions, null, or undefined.");
      if (r) var o = e[Symbol.asyncDispose || Symbol.for("Symbol.asyncDispose")];
      if (void 0 === o && (o = e[Symbol.dispose || Symbol.for("Symbol.dispose")], r)) var t = o;
      if ("function" != typeof o) throw new TypeError("Object is not disposable.");
      t && (o = function () {
        try {
          t.call(e);
        } catch (r) {
          return Promise.reject(r);
        }
      }), n.push({
        v: e,
        d: o,
        a: r
      });
    } else r && n.push({
      d: e,
      a: r
    });
    return e;
  }
  return {
    e: e,
    u: using.bind(null, !1),
    a: using.bind(null, !0),
    d: function () {
      var o,
        t = this.e,
        s = 0;
      function next() {
        for (; o = n.pop();) try {
          if (!o.a && 1 === s) return s = 0, n.push(o), Promise.resolve().then(next);
          if (o.d) {
            var r = o.d.call(o.v);
            if (o.a) return s |= 2, Promise.resolve(r).then(next, err);
          } else s |= 1;
        } catch (r) {
          return err(r);
        }
        if (1 === s) return t !== e ? Promise.reject(t) : Promise.resolve();
        if (t !== e) throw t;
      }
      function err(n) {
        return t = t !== e ? new r(n, t) : n, next();
      }
      return next();
    }
  };
}
function _wrapAsyncGenerator(e) {
  return function () {
    return new AsyncGenerator(e.apply(this, arguments));
  };
}
function AsyncGenerator(e) {
  var r, t;
  function resume(r, t) {
    try {
      var n = e[r](t),
        o = n.value,
        u = o instanceof _OverloadYield;
      Promise.resolve(u ? o.v : o).then(function (t) {
        if (u) {
          var i = "return" === r ? "return" : "next";
          if (!o.k || t.done) return resume(i, t);
          t = e[i](t).value;
        }
        settle(n.done ? "return" : "normal", t);
      }, function (e) {
        resume("throw", e);
      });
    } catch (e) {
      settle("throw", e);
    }
  }
  function settle(e, n) {
    switch (e) {
      case "return":
        r.resolve({
          value: n,
          done: !0
        });
        break;
      case "throw":
        r.reject(n);
        break;
      default:
        r.resolve({
          value: n,
          done: !1
        });
    }
    (r = r.next) ? resume(r.key, r.arg) : t = null;
  }
  this._invoke = function (e, n) {
    return new Promise(function (o, u) {
      var i = {
        key: e,
        arg: n,
        resolve: o,
        reject: u,
        next: null
      };
      t ? t = t.next = i : (r = t = i, resume(e, n));
    });
  }, "function" != typeof e.return && (this.return = void 0);
}
AsyncGenerator.prototype["function" == typeof Symbol && Symbol.asyncIterator || "@@asyncIterator"] = function () {
  return this;
}, AsyncGenerator.prototype.next = function (e) {
  return this._invoke("next", e);
}, AsyncGenerator.prototype.throw = function (e) {
  return this._invoke("throw", e);
}, AsyncGenerator.prototype.return = function (e) {
  return this._invoke("return", e);
};
function _wrapNativeSuper(t) {
  var r = "function" == typeof Map ? new Map() : void 0;
  return _wrapNativeSuper = function (t) {
    if (null === t || !_isNativeFunction(t)) return t;
    if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r) {
      if (r.has(t)) return r.get(t);
      r.set(t, Wrapper);
    }
    function Wrapper() {
      return _construct(t, arguments, _getPrototypeOf(this).constructor);
    }
    return Wrapper.prototype = Object.create(t.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), _setPrototypeOf(Wrapper, t);
  }, _wrapNativeSuper(t);
}
function _wrapRegExp() {
  _wrapRegExp = function (e, r) {
    return new BabelRegExp(e, void 0, r);
  };
  var e = RegExp.prototype,
    r = new WeakMap();
  function BabelRegExp(e, t, p) {
    var o = RegExp(e, t);
    return r.set(o, p || r.get(e)), _setPrototypeOf(o, BabelRegExp.prototype);
  }
  function buildGroups(e, t) {
    var p = r.get(t);
    return Object.keys(p).reduce(function (r, t) {
      var o = p[t];
      if ("number" == typeof o) r[t] = e[o];else {
        for (var i = 0; void 0 === e[o[i]] && i + 1 < o.length;) i++;
        r[t] = e[o[i]];
      }
      return r;
    }, Object.create(null));
  }
  return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (r) {
    var t = e.exec.call(this, r);
    if (t) {
      t.groups = buildGroups(t, this);
      var p = t.indices;
      p && (p.groups = buildGroups(p, this));
    }
    return t;
  }, BabelRegExp.prototype[Symbol.replace] = function (t, p) {
    if ("string" == typeof p) {
      var o = r.get(this);
      return e[Symbol.replace].call(this, t, p.replace(/\$<([^>]+)>/g, function (e, r) {
        var t = o[r];
        return "$" + (Array.isArray(t) ? t.join("$") : t);
      }));
    }
    if ("function" == typeof p) {
      var i = this;
      return e[Symbol.replace].call(this, t, function () {
        var e = arguments;
        return "object" != typeof e[e.length - 1] && (e = [].slice.call(e)).push(buildGroups(e, i)), p.apply(this, e);
      });
    }
    return e[Symbol.replace].call(this, t, p);
  }, _wrapRegExp.apply(this, arguments);
}
function _writeOnlyError(r) {
  throw new TypeError('"' + r + '" is write-only');
}
function _AwaitValue(t) {
  this.wrapped = t;
}
function old_createMetadataMethodsForProperty(e, t, a, r) {
  return {
    getMetadata: function (o) {
      old_assertNotFinished(r, "getMetadata"), old_assertMetadataKey(o);
      var i = e[o];
      if (void 0 !== i) if (1 === t) {
        var n = i.public;
        if (void 0 !== n) return n[a];
      } else if (2 === t) {
        var l = i.private;
        if (void 0 !== l) return l.get(a);
      } else if (Object.hasOwnProperty.call(i, "constructor")) return i.constructor;
    },
    setMetadata: function (o, i) {
      old_assertNotFinished(r, "setMetadata"), old_assertMetadataKey(o);
      var n = e[o];
      if (void 0 === n && (n = e[o] = {}), 1 === t) {
        var l = n.public;
        void 0 === l && (l = n.public = {}), l[a] = i;
      } else if (2 === t) {
        var s = n.priv;
        void 0 === s && (s = n.private = new Map()), s.set(a, i);
      } else n.constructor = i;
    }
  };
}
function old_convertMetadataMapToFinal(e, t) {
  var a = e[Symbol.metadata || Symbol.for("Symbol.metadata")],
    r = Object.getOwnPropertySymbols(t);
  if (0 !== r.length) {
    for (var o = 0; o < r.length; o++) {
      var i = r[o],
        n = t[i],
        l = a ? a[i] : null,
        s = n.public,
        c = l ? l.public : null;
      s && c && Object.setPrototypeOf(s, c);
      var d = n.private;
      if (d) {
        var u = Array.from(d.values()),
          f = l ? l.private : null;
        f && (u = u.concat(f)), n.private = u;
      }
      l && Object.setPrototypeOf(n, l);
    }
    a && Object.setPrototypeOf(t, a), e[Symbol.metadata || Symbol.for("Symbol.metadata")] = t;
  }
}
function old_createAddInitializerMethod(e, t) {
  return function (a) {
    old_assertNotFinished(t, "addInitializer"), old_assertCallable(a, "An initializer"), e.push(a);
  };
}
function old_memberDec(e, t, a, r, o, i, n, l, s) {
  var c;
  switch (i) {
    case 1:
      c = "accessor";
      break;
    case 2:
      c = "method";
      break;
    case 3:
      c = "getter";
      break;
    case 4:
      c = "setter";
      break;
    default:
      c = "field";
  }
  var d,
    u,
    f = {
      kind: c,
      name: l ? "#" + t : _toPropertyKey(t),
      isStatic: n,
      isPrivate: l
    },
    p = {
      v: !1
    };
  if (0 !== i && (f.addInitializer = old_createAddInitializerMethod(o, p)), l) {
    d = 2, u = Symbol(t);
    var v = {};
    0 === i ? (v.get = a.get, v.set = a.set) : 2 === i ? v.get = function () {
      return a.value;
    } : (1 !== i && 3 !== i || (v.get = function () {
      return a.get.call(this);
    }), 1 !== i && 4 !== i || (v.set = function (e) {
      a.set.call(this, e);
    })), f.access = v;
  } else d = 1, u = t;
  try {
    return e(s, Object.assign(f, old_createMetadataMethodsForProperty(r, d, u, p)));
  } finally {
    p.v = !0;
  }
}
function old_assertNotFinished(e, t) {
  if (e.v) throw Error("attempted to call " + t + " after decoration was finished");
}
function old_assertMetadataKey(e) {
  if ("symbol" != typeof e) throw new TypeError("Metadata keys must be symbols, received: " + e);
}
function old_assertCallable(e, t) {
  if ("function" != typeof e) throw new TypeError(t + " must be a function");
}
function old_assertValidReturnValue(e, t) {
  var a = typeof t;
  if (1 === e) {
    if ("object" !== a || null === t) throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");
    void 0 !== t.get && old_assertCallable(t.get, "accessor.get"), void 0 !== t.set && old_assertCallable(t.set, "accessor.set"), void 0 !== t.init && old_assertCallable(t.init, "accessor.init"), void 0 !== t.initializer && old_assertCallable(t.initializer, "accessor.initializer");
  } else if ("function" !== a) throw new TypeError((0 === e ? "field" : 10 === e ? "class" : "method") + " decorators must return a function or void 0");
}
function old_getInit(e) {
  var t;
  return null == (t = e.init) && (t = e.initializer) && void 0 !== console && console.warn(".initializer has been renamed to .init as of March 2022"), t;
}
function old_applyMemberDec(e, t, a, r, o, i, n, l, s) {
  var c,
    d,
    u,
    f,
    p,
    v,
    y,
    h = a[0];
  if (n ? (0 === o || 1 === o ? (c = {
    get: a[3],
    set: a[4]
  }, u = "get") : 3 === o ? (c = {
    get: a[3]
  }, u = "get") : 4 === o ? (c = {
    set: a[3]
  }, u = "set") : c = {
    value: a[3]
  }, 0 !== o && (1 === o && _setFunctionName(a[4], "#" + r, "set"), _setFunctionName(a[3], "#" + r, u))) : 0 !== o && (c = Object.getOwnPropertyDescriptor(t, r)), 1 === o ? f = {
    get: c.get,
    set: c.set
  } : 2 === o ? f = c.value : 3 === o ? f = c.get : 4 === o && (f = c.set), "function" == typeof h) void 0 !== (p = old_memberDec(h, r, c, l, s, o, i, n, f)) && (old_assertValidReturnValue(o, p), 0 === o ? d = p : 1 === o ? (d = old_getInit(p), v = p.get || f.get, y = p.set || f.set, f = {
    get: v,
    set: y
  }) : f = p);else for (var m = h.length - 1; m >= 0; m--) {
    var b;
    void 0 !== (p = old_memberDec(h[m], r, c, l, s, o, i, n, f)) && (old_assertValidReturnValue(o, p), 0 === o ? b = p : 1 === o ? (b = old_getInit(p), v = p.get || f.get, y = p.set || f.set, f = {
      get: v,
      set: y
    }) : f = p, void 0 !== b && (void 0 === d ? d = b : "function" == typeof d ? d = [d, b] : d.push(b)));
  }
  if (0 === o || 1 === o) {
    if (void 0 === d) d = function (e, t) {
      return t;
    };else if ("function" != typeof d) {
      var g = d;
      d = function (e, t) {
        for (var a = t, r = 0; r < g.length; r++) a = g[r].call(e, a);
        return a;
      };
    } else {
      var _ = d;
      d = function (e, t) {
        return _.call(e, t);
      };
    }
    e.push(d);
  }
  0 !== o && (1 === o ? (c.get = f.get, c.set = f.set) : 2 === o ? c.value = f : 3 === o ? c.get = f : 4 === o && (c.set = f), n ? 1 === o ? (e.push(function (e, t) {
    return f.get.call(e, t);
  }), e.push(function (e, t) {
    return f.set.call(e, t);
  })) : 2 === o ? e.push(f) : e.push(function (e, t) {
    return f.call(e, t);
  }) : Object.defineProperty(t, r, c));
}
function old_applyMemberDecs(e, t, a, r, o) {
  for (var i, n, l = new Map(), s = new Map(), c = 0; c < o.length; c++) {
    var d = o[c];
    if (Array.isArray(d)) {
      var u,
        f,
        p,
        v = d[1],
        y = d[2],
        h = d.length > 3,
        m = v >= 5;
      if (m ? (u = t, f = r, 0 != (v -= 5) && (p = n = n || [])) : (u = t.prototype, f = a, 0 !== v && (p = i = i || [])), 0 !== v && !h) {
        var b = m ? s : l,
          g = b.get(y) || 0;
        if (!0 === g || 3 === g && 4 !== v || 4 === g && 3 !== v) throw Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: " + y);
        !g && v > 2 ? b.set(y, v) : b.set(y, !0);
      }
      old_applyMemberDec(e, u, d, y, v, m, h, f, p);
    }
  }
  old_pushInitializers(e, i), old_pushInitializers(e, n);
}
function old_pushInitializers(e, t) {
  t && e.push(function (e) {
    for (var a = 0; a < t.length; a++) t[a].call(e);
    return e;
  });
}
function old_applyClassDecs(e, t, a, r) {
  if (r.length > 0) {
    for (var o = [], i = t, n = t.name, l = r.length - 1; l >= 0; l--) {
      var s = {
        v: !1
      };
      try {
        var c = Object.assign({
            kind: "class",
            name: n,
            addInitializer: old_createAddInitializerMethod(o, s)
          }, old_createMetadataMethodsForProperty(a, 0, n, s)),
          d = r[l](i, c);
      } finally {
        s.v = !0;
      }
      void 0 !== d && (old_assertValidReturnValue(10, d), i = d);
    }
    e.push(i, function () {
      for (var e = 0; e < o.length; e++) o[e].call(i);
    });
  }
}
function _applyDecs(e, t, a) {
  var r = [],
    o = {},
    i = {};
  return old_applyMemberDecs(r, e, i, o, t), old_convertMetadataMapToFinal(e.prototype, i), old_applyClassDecs(r, e, o, a), old_convertMetadataMapToFinal(e, o), r;
}
function applyDecs2203Factory() {
  function createAddInitializerMethod(e, t) {
    return function (r) {
      !function (e, t) {
        if (e.v) throw Error("attempted to call addInitializer after decoration was finished");
      }(t), assertCallable(r, "An initializer"), e.push(r);
    };
  }
  function memberDec(e, t, r, a, n, i, s, o) {
    var c;
    switch (n) {
      case 1:
        c = "accessor";
        break;
      case 2:
        c = "method";
        break;
      case 3:
        c = "getter";
        break;
      case 4:
        c = "setter";
        break;
      default:
        c = "field";
    }
    var l,
      u,
      f = {
        kind: c,
        name: s ? "#" + t : t,
        static: i,
        private: s
      },
      p = {
        v: !1
      };
    0 !== n && (f.addInitializer = createAddInitializerMethod(a, p)), 0 === n ? s ? (l = r.get, u = r.set) : (l = function () {
      return this[t];
    }, u = function (e) {
      this[t] = e;
    }) : 2 === n ? l = function () {
      return r.value;
    } : (1 !== n && 3 !== n || (l = function () {
      return r.get.call(this);
    }), 1 !== n && 4 !== n || (u = function (e) {
      r.set.call(this, e);
    })), f.access = l && u ? {
      get: l,
      set: u
    } : l ? {
      get: l
    } : {
      set: u
    };
    try {
      return e(o, f);
    } finally {
      p.v = !0;
    }
  }
  function assertCallable(e, t) {
    if ("function" != typeof e) throw new TypeError(t + " must be a function");
  }
  function assertValidReturnValue(e, t) {
    var r = typeof t;
    if (1 === e) {
      if ("object" !== r || null === t) throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");
      void 0 !== t.get && assertCallable(t.get, "accessor.get"), void 0 !== t.set && assertCallable(t.set, "accessor.set"), void 0 !== t.init && assertCallable(t.init, "accessor.init");
    } else if ("function" !== r) throw new TypeError((0 === e ? "field" : 10 === e ? "class" : "method") + " decorators must return a function or void 0");
  }
  function applyMemberDec(e, t, r, a, n, i, s, o) {
    var c,
      l,
      u,
      f,
      p,
      d,
      h = r[0];
    if (s ? c = 0 === n || 1 === n ? {
      get: r[3],
      set: r[4]
    } : 3 === n ? {
      get: r[3]
    } : 4 === n ? {
      set: r[3]
    } : {
      value: r[3]
    } : 0 !== n && (c = Object.getOwnPropertyDescriptor(t, a)), 1 === n ? u = {
      get: c.get,
      set: c.set
    } : 2 === n ? u = c.value : 3 === n ? u = c.get : 4 === n && (u = c.set), "function" == typeof h) void 0 !== (f = memberDec(h, a, c, o, n, i, s, u)) && (assertValidReturnValue(n, f), 0 === n ? l = f : 1 === n ? (l = f.init, p = f.get || u.get, d = f.set || u.set, u = {
      get: p,
      set: d
    }) : u = f);else for (var v = h.length - 1; v >= 0; v--) {
      var g;
      void 0 !== (f = memberDec(h[v], a, c, o, n, i, s, u)) && (assertValidReturnValue(n, f), 0 === n ? g = f : 1 === n ? (g = f.init, p = f.get || u.get, d = f.set || u.set, u = {
        get: p,
        set: d
      }) : u = f, void 0 !== g && (void 0 === l ? l = g : "function" == typeof l ? l = [l, g] : l.push(g)));
    }
    if (0 === n || 1 === n) {
      if (void 0 === l) l = function (e, t) {
        return t;
      };else if ("function" != typeof l) {
        var y = l;
        l = function (e, t) {
          for (var r = t, a = 0; a < y.length; a++) r = y[a].call(e, r);
          return r;
        };
      } else {
        var m = l;
        l = function (e, t) {
          return m.call(e, t);
        };
      }
      e.push(l);
    }
    0 !== n && (1 === n ? (c.get = u.get, c.set = u.set) : 2 === n ? c.value = u : 3 === n ? c.get = u : 4 === n && (c.set = u), s ? 1 === n ? (e.push(function (e, t) {
      return u.get.call(e, t);
    }), e.push(function (e, t) {
      return u.set.call(e, t);
    })) : 2 === n ? e.push(u) : e.push(function (e, t) {
      return u.call(e, t);
    }) : Object.defineProperty(t, a, c));
  }
  function pushInitializers(e, t) {
    t && e.push(function (e) {
      for (var r = 0; r < t.length; r++) t[r].call(e);
      return e;
    });
  }
  return function (e, t, r) {
    var a = [];
    return function (e, t, r) {
      for (var a, n, i = new Map(), s = new Map(), o = 0; o < r.length; o++) {
        var c = r[o];
        if (Array.isArray(c)) {
          var l,
            u,
            f = c[1],
            p = c[2],
            d = c.length > 3,
            h = f >= 5;
          if (h ? (l = t, 0 != (f -= 5) && (u = n = n || [])) : (l = t.prototype, 0 !== f && (u = a = a || [])), 0 !== f && !d) {
            var v = h ? s : i,
              g = v.get(p) || 0;
            if (!0 === g || 3 === g && 4 !== f || 4 === g && 3 !== f) throw Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: " + p);
            !g && f > 2 ? v.set(p, f) : v.set(p, !0);
          }
          applyMemberDec(e, l, c, p, f, h, d, u);
        }
      }
      pushInitializers(e, a), pushInitializers(e, n);
    }(a, e, t), function (e, t, r) {
      if (r.length > 0) {
        for (var a = [], n = t, i = t.name, s = r.length - 1; s >= 0; s--) {
          var o = {
            v: !1
          };
          try {
            var c = r[s](n, {
              kind: "class",
              name: i,
              addInitializer: createAddInitializerMethod(a, o)
            });
          } finally {
            o.v = !0;
          }
          void 0 !== c && (assertValidReturnValue(10, c), n = c);
        }
        e.push(n, function () {
          for (var e = 0; e < a.length; e++) a[e].call(n);
        });
      }
    }(a, e, r), a;
  };
}
var applyDecs2203Impl;
function _applyDecs2203(e, t, r) {
  return (applyDecs2203Impl = applyDecs2203Impl || applyDecs2203Factory())(e, t, r);
}
function applyDecs2203RFactory() {
  function createAddInitializerMethod(e, t) {
    return function (r) {
      !function (e, t) {
        if (e.v) throw Error("attempted to call addInitializer after decoration was finished");
      }(t), assertCallable(r, "An initializer"), e.push(r);
    };
  }
  function memberDec(e, t, r, n, a, i, o, s) {
    var c;
    switch (a) {
      case 1:
        c = "accessor";
        break;
      case 2:
        c = "method";
        break;
      case 3:
        c = "getter";
        break;
      case 4:
        c = "setter";
        break;
      default:
        c = "field";
    }
    var l,
      u,
      f = {
        kind: c,
        name: o ? "#" + t : _toPropertyKey(t),
        static: i,
        private: o
      },
      p = {
        v: !1
      };
    0 !== a && (f.addInitializer = createAddInitializerMethod(n, p)), 0 === a ? o ? (l = r.get, u = r.set) : (l = function () {
      return this[t];
    }, u = function (e) {
      this[t] = e;
    }) : 2 === a ? l = function () {
      return r.value;
    } : (1 !== a && 3 !== a || (l = function () {
      return r.get.call(this);
    }), 1 !== a && 4 !== a || (u = function (e) {
      r.set.call(this, e);
    })), f.access = l && u ? {
      get: l,
      set: u
    } : l ? {
      get: l
    } : {
      set: u
    };
    try {
      return e(s, f);
    } finally {
      p.v = !0;
    }
  }
  function assertCallable(e, t) {
    if ("function" != typeof e) throw new TypeError(t + " must be a function");
  }
  function assertValidReturnValue(e, t) {
    var r = typeof t;
    if (1 === e) {
      if ("object" !== r || null === t) throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");
      void 0 !== t.get && assertCallable(t.get, "accessor.get"), void 0 !== t.set && assertCallable(t.set, "accessor.set"), void 0 !== t.init && assertCallable(t.init, "accessor.init");
    } else if ("function" !== r) throw new TypeError((0 === e ? "field" : 10 === e ? "class" : "method") + " decorators must return a function or void 0");
  }
  function applyMemberDec(e, t, r, n, a, i, o, s) {
    var c,
      l,
      u,
      f,
      p,
      d,
      h,
      v = r[0];
    if (o ? (0 === a || 1 === a ? (c = {
      get: r[3],
      set: r[4]
    }, u = "get") : 3 === a ? (c = {
      get: r[3]
    }, u = "get") : 4 === a ? (c = {
      set: r[3]
    }, u = "set") : c = {
      value: r[3]
    }, 0 !== a && (1 === a && _setFunctionName(r[4], "#" + n, "set"), _setFunctionName(r[3], "#" + n, u))) : 0 !== a && (c = Object.getOwnPropertyDescriptor(t, n)), 1 === a ? f = {
      get: c.get,
      set: c.set
    } : 2 === a ? f = c.value : 3 === a ? f = c.get : 4 === a && (f = c.set), "function" == typeof v) void 0 !== (p = memberDec(v, n, c, s, a, i, o, f)) && (assertValidReturnValue(a, p), 0 === a ? l = p : 1 === a ? (l = p.init, d = p.get || f.get, h = p.set || f.set, f = {
      get: d,
      set: h
    }) : f = p);else for (var g = v.length - 1; g >= 0; g--) {
      var y;
      void 0 !== (p = memberDec(v[g], n, c, s, a, i, o, f)) && (assertValidReturnValue(a, p), 0 === a ? y = p : 1 === a ? (y = p.init, d = p.get || f.get, h = p.set || f.set, f = {
        get: d,
        set: h
      }) : f = p, void 0 !== y && (void 0 === l ? l = y : "function" == typeof l ? l = [l, y] : l.push(y)));
    }
    if (0 === a || 1 === a) {
      if (void 0 === l) l = function (e, t) {
        return t;
      };else if ("function" != typeof l) {
        var m = l;
        l = function (e, t) {
          for (var r = t, n = 0; n < m.length; n++) r = m[n].call(e, r);
          return r;
        };
      } else {
        var b = l;
        l = function (e, t) {
          return b.call(e, t);
        };
      }
      e.push(l);
    }
    0 !== a && (1 === a ? (c.get = f.get, c.set = f.set) : 2 === a ? c.value = f : 3 === a ? c.get = f : 4 === a && (c.set = f), o ? 1 === a ? (e.push(function (e, t) {
      return f.get.call(e, t);
    }), e.push(function (e, t) {
      return f.set.call(e, t);
    })) : 2 === a ? e.push(f) : e.push(function (e, t) {
      return f.call(e, t);
    }) : Object.defineProperty(t, n, c));
  }
  function applyMemberDecs(e, t) {
    for (var r, n, a = [], i = new Map(), o = new Map(), s = 0; s < t.length; s++) {
      var c = t[s];
      if (Array.isArray(c)) {
        var l,
          u,
          f = c[1],
          p = c[2],
          d = c.length > 3,
          h = f >= 5;
        if (h ? (l = e, 0 != (f -= 5) && (u = n = n || [])) : (l = e.prototype, 0 !== f && (u = r = r || [])), 0 !== f && !d) {
          var v = h ? o : i,
            g = v.get(p) || 0;
          if (!0 === g || 3 === g && 4 !== f || 4 === g && 3 !== f) throw Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: " + p);
          !g && f > 2 ? v.set(p, f) : v.set(p, !0);
        }
        applyMemberDec(a, l, c, p, f, h, d, u);
      }
    }
    return pushInitializers(a, r), pushInitializers(a, n), a;
  }
  function pushInitializers(e, t) {
    t && e.push(function (e) {
      for (var r = 0; r < t.length; r++) t[r].call(e);
      return e;
    });
  }
  return function (e, t, r) {
    return {
      e: applyMemberDecs(e, t),
      get c() {
        return function (e, t) {
          if (t.length > 0) {
            for (var r = [], n = e, a = e.name, i = t.length - 1; i >= 0; i--) {
              var o = {
                v: !1
              };
              try {
                var s = t[i](n, {
                  kind: "class",
                  name: a,
                  addInitializer: createAddInitializerMethod(r, o)
                });
              } finally {
                o.v = !0;
              }
              void 0 !== s && (assertValidReturnValue(10, s), n = s);
            }
            return [n, function () {
              for (var e = 0; e < r.length; e++) r[e].call(n);
            }];
          }
        }(e, r);
      }
    };
  };
}
function _applyDecs2203R(e, t, r) {
  return (_applyDecs2203R = applyDecs2203RFactory())(e, t, r);
}
function applyDecs2301Factory() {
  function createAddInitializerMethod(e, t) {
    return function (r) {
      !function (e, t) {
        if (e.v) throw Error("attempted to call addInitializer after decoration was finished");
      }(t), assertCallable(r, "An initializer"), e.push(r);
    };
  }
  function assertInstanceIfPrivate(e, t) {
    if (!e(t)) throw new TypeError("Attempted to access private element on non-instance");
  }
  function memberDec(e, t, r, n, a, i, s, o, c) {
    var u;
    switch (a) {
      case 1:
        u = "accessor";
        break;
      case 2:
        u = "method";
        break;
      case 3:
        u = "getter";
        break;
      case 4:
        u = "setter";
        break;
      default:
        u = "field";
    }
    var l,
      f,
      p = {
        kind: u,
        name: s ? "#" + t : _toPropertyKey(t),
        static: i,
        private: s
      },
      d = {
        v: !1
      };
    if (0 !== a && (p.addInitializer = createAddInitializerMethod(n, d)), s || 0 !== a && 2 !== a) {
      if (2 === a) l = function (e) {
        return assertInstanceIfPrivate(c, e), r.value;
      };else {
        var h = 0 === a || 1 === a;
        (h || 3 === a) && (l = s ? function (e) {
          return assertInstanceIfPrivate(c, e), r.get.call(e);
        } : function (e) {
          return r.get.call(e);
        }), (h || 4 === a) && (f = s ? function (e, t) {
          assertInstanceIfPrivate(c, e), r.set.call(e, t);
        } : function (e, t) {
          r.set.call(e, t);
        });
      }
    } else l = function (e) {
      return e[t];
    }, 0 === a && (f = function (e, r) {
      e[t] = r;
    });
    var v = s ? c.bind() : function (e) {
      return t in e;
    };
    p.access = l && f ? {
      get: l,
      set: f,
      has: v
    } : l ? {
      get: l,
      has: v
    } : {
      set: f,
      has: v
    };
    try {
      return e(o, p);
    } finally {
      d.v = !0;
    }
  }
  function assertCallable(e, t) {
    if ("function" != typeof e) throw new TypeError(t + " must be a function");
  }
  function assertValidReturnValue(e, t) {
    var r = typeof t;
    if (1 === e) {
      if ("object" !== r || null === t) throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");
      void 0 !== t.get && assertCallable(t.get, "accessor.get"), void 0 !== t.set && assertCallable(t.set, "accessor.set"), void 0 !== t.init && assertCallable(t.init, "accessor.init");
    } else if ("function" !== r) throw new TypeError((0 === e ? "field" : 10 === e ? "class" : "method") + " decorators must return a function or void 0");
  }
  function curryThis2(e) {
    return function (t) {
      e(this, t);
    };
  }
  function applyMemberDec(e, t, r, n, a, i, s, o, c) {
    var u,
      l,
      f,
      p,
      d,
      h,
      v,
      y,
      g = r[0];
    if (s ? (0 === a || 1 === a ? (u = {
      get: (d = r[3], function () {
        return d(this);
      }),
      set: curryThis2(r[4])
    }, f = "get") : 3 === a ? (u = {
      get: r[3]
    }, f = "get") : 4 === a ? (u = {
      set: r[3]
    }, f = "set") : u = {
      value: r[3]
    }, 0 !== a && (1 === a && _setFunctionName(u.set, "#" + n, "set"), _setFunctionName(u[f || "value"], "#" + n, f))) : 0 !== a && (u = Object.getOwnPropertyDescriptor(t, n)), 1 === a ? p = {
      get: u.get,
      set: u.set
    } : 2 === a ? p = u.value : 3 === a ? p = u.get : 4 === a && (p = u.set), "function" == typeof g) void 0 !== (h = memberDec(g, n, u, o, a, i, s, p, c)) && (assertValidReturnValue(a, h), 0 === a ? l = h : 1 === a ? (l = h.init, v = h.get || p.get, y = h.set || p.set, p = {
      get: v,
      set: y
    }) : p = h);else for (var m = g.length - 1; m >= 0; m--) {
      var b;
      void 0 !== (h = memberDec(g[m], n, u, o, a, i, s, p, c)) && (assertValidReturnValue(a, h), 0 === a ? b = h : 1 === a ? (b = h.init, v = h.get || p.get, y = h.set || p.set, p = {
        get: v,
        set: y
      }) : p = h, void 0 !== b && (void 0 === l ? l = b : "function" == typeof l ? l = [l, b] : l.push(b)));
    }
    if (0 === a || 1 === a) {
      if (void 0 === l) l = function (e, t) {
        return t;
      };else if ("function" != typeof l) {
        var I = l;
        l = function (e, t) {
          for (var r = t, n = 0; n < I.length; n++) r = I[n].call(e, r);
          return r;
        };
      } else {
        var w = l;
        l = function (e, t) {
          return w.call(e, t);
        };
      }
      e.push(l);
    }
    0 !== a && (1 === a ? (u.get = p.get, u.set = p.set) : 2 === a ? u.value = p : 3 === a ? u.get = p : 4 === a && (u.set = p), s ? 1 === a ? (e.push(function (e, t) {
      return p.get.call(e, t);
    }), e.push(function (e, t) {
      return p.set.call(e, t);
    })) : 2 === a ? e.push(p) : e.push(function (e, t) {
      return p.call(e, t);
    }) : Object.defineProperty(t, n, u));
  }
  function applyMemberDecs(e, t, r) {
    for (var n, a, i, s = [], o = new Map(), c = new Map(), u = 0; u < t.length; u++) {
      var l = t[u];
      if (Array.isArray(l)) {
        var f,
          p,
          d = l[1],
          h = l[2],
          v = l.length > 3,
          y = d >= 5,
          g = r;
        if (y ? (f = e, 0 != (d -= 5) && (p = a = a || []), v && !i && (i = function (t) {
          return _checkInRHS(t) === e;
        }), g = i) : (f = e.prototype, 0 !== d && (p = n = n || [])), 0 !== d && !v) {
          var m = y ? c : o,
            b = m.get(h) || 0;
          if (!0 === b || 3 === b && 4 !== d || 4 === b && 3 !== d) throw Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: " + h);
          !b && d > 2 ? m.set(h, d) : m.set(h, !0);
        }
        applyMemberDec(s, f, l, h, d, y, v, p, g);
      }
    }
    return pushInitializers(s, n), pushInitializers(s, a), s;
  }
  function pushInitializers(e, t) {
    t && e.push(function (e) {
      for (var r = 0; r < t.length; r++) t[r].call(e);
      return e;
    });
  }
  return function (e, t, r, n) {
    return {
      e: applyMemberDecs(e, t, n),
      get c() {
        return function (e, t) {
          if (t.length > 0) {
            for (var r = [], n = e, a = e.name, i = t.length - 1; i >= 0; i--) {
              var s = {
                v: !1
              };
              try {
                var o = t[i](n, {
                  kind: "class",
                  name: a,
                  addInitializer: createAddInitializerMethod(r, s)
                });
              } finally {
                s.v = !0;
              }
              void 0 !== o && (assertValidReturnValue(10, o), n = o);
            }
            return [n, function () {
              for (var e = 0; e < r.length; e++) r[e].call(n);
            }];
          }
        }(e, r);
      }
    };
  };
}
function _applyDecs2301(e, t, r, n) {
  return (_applyDecs2301 = applyDecs2301Factory())(e, t, r, n);
}
function _applyDecs2305(e, t, r, n, o, a) {
  function i(e, t, r) {
    return function (n, o) {
      return r && r(n), e[t].call(n, o);
    };
  }
  function c(e, t) {
    for (var r = 0; r < e.length; r++) e[r].call(t);
    return t;
  }
  function s(e, t, r, n) {
    if ("function" != typeof e && (n || void 0 !== e)) throw new TypeError(t + " must " + (r || "be") + " a function" + (n ? "" : " or undefined"));
    return e;
  }
  function applyDec(e, t, r, n, o, a, c, u, l, f, p, d, h) {
    function m(e) {
      if (!h(e)) throw new TypeError("Attempted to access private element on non-instance");
    }
    var y,
      v = t[0],
      g = t[3],
      b = !u;
    if (!b) {
      r || Array.isArray(v) || (v = [v]);
      var w = {},
        S = [],
        A = 3 === o ? "get" : 4 === o || d ? "set" : "value";
      f ? (p || d ? w = {
        get: _setFunctionName(function () {
          return g(this);
        }, n, "get"),
        set: function (e) {
          t[4](this, e);
        }
      } : w[A] = g, p || _setFunctionName(w[A], n, 2 === o ? "" : A)) : p || (w = Object.getOwnPropertyDescriptor(e, n));
    }
    for (var P = e, j = v.length - 1; j >= 0; j -= r ? 2 : 1) {
      var D = v[j],
        E = r ? v[j - 1] : void 0,
        I = {},
        O = {
          kind: ["field", "accessor", "method", "getter", "setter", "class"][o],
          name: n,
          metadata: a,
          addInitializer: function (e, t) {
            if (e.v) throw Error("attempted to call addInitializer after decoration was finished");
            s(t, "An initializer", "be", !0), c.push(t);
          }.bind(null, I)
        };
      try {
        if (b) (y = s(D.call(E, P, O), "class decorators", "return")) && (P = y);else {
          var k, F;
          O.static = l, O.private = f, f ? 2 === o ? k = function (e) {
            return m(e), w.value;
          } : (o < 4 && (k = i(w, "get", m)), 3 !== o && (F = i(w, "set", m))) : (k = function (e) {
            return e[n];
          }, (o < 2 || 4 === o) && (F = function (e, t) {
            e[n] = t;
          }));
          var N = O.access = {
            has: f ? h.bind() : function (e) {
              return n in e;
            }
          };
          if (k && (N.get = k), F && (N.set = F), P = D.call(E, d ? {
            get: w.get,
            set: w.set
          } : w[A], O), d) {
            if ("object" == typeof P && P) (y = s(P.get, "accessor.get")) && (w.get = y), (y = s(P.set, "accessor.set")) && (w.set = y), (y = s(P.init, "accessor.init")) && S.push(y);else if (void 0 !== P) throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");
          } else s(P, (p ? "field" : "method") + " decorators", "return") && (p ? S.push(P) : w[A] = P);
        }
      } finally {
        I.v = !0;
      }
    }
    return (p || d) && u.push(function (e, t) {
      for (var r = S.length - 1; r >= 0; r--) t = S[r].call(e, t);
      return t;
    }), p || b || (f ? d ? u.push(i(w, "get"), i(w, "set")) : u.push(2 === o ? w[A] : i.call.bind(w[A])) : Object.defineProperty(e, n, w)), P;
  }
  function u(e, t) {
    return Object.defineProperty(e, Symbol.metadata || Symbol.for("Symbol.metadata"), {
      configurable: !0,
      enumerable: !0,
      value: t
    });
  }
  if (arguments.length >= 6) var l = a[Symbol.metadata || Symbol.for("Symbol.metadata")];
  var f = Object.create(null == l ? null : l),
    p = function (e, t, r, n) {
      var o,
        a,
        i = [],
        s = function (t) {
          return _checkInRHS(t) === e;
        },
        u = new Map();
      function l(e) {
        e && i.push(c.bind(null, e));
      }
      for (var f = 0; f < t.length; f++) {
        var p = t[f];
        if (Array.isArray(p)) {
          var d = p[1],
            h = p[2],
            m = p.length > 3,
            y = 16 & d,
            v = !!(8 & d),
            g = 0 == (d &= 7),
            b = h + "/" + v;
          if (!g && !m) {
            var w = u.get(b);
            if (!0 === w || 3 === w && 4 !== d || 4 === w && 3 !== d) throw Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: " + h);
            u.set(b, !(d > 2) || d);
          }
          applyDec(v ? e : e.prototype, p, y, m ? "#" + h : _toPropertyKey(h), d, n, v ? a = a || [] : o = o || [], i, v, m, g, 1 === d, v && m ? s : r);
        }
      }
      return l(o), l(a), i;
    }(e, t, o, f);
  return r.length || u(e, f), {
    e: p,
    get c() {
      var t = [];
      return r.length && [u(applyDec(e, [r], n, e.name, 5, f, t), f), c.bind(null, t, e)];
    }
  };
}
function _classApplyDescriptorDestructureSet(e, t) {
  if (t.set) return "__destrObj" in t || (t.__destrObj = {
    set value(r) {
      t.set.call(e, r);
    }
  }), t.__destrObj;
  if (!t.writable) throw new TypeError("attempted to set read only private field");
  return t;
}
function _classApplyDescriptorGet(e, t) {
  return t.get ? t.get.call(e) : t.value;
}
function _classApplyDescriptorSet(e, t, l) {
  if (t.set) t.set.call(e, l);else {
    if (!t.writable) throw new TypeError("attempted to set read only private field");
    t.value = l;
  }
}
function _classCheckPrivateStaticAccess(s, a, r) {
  return _assertClassBrand(a, s, r);
}
function _classCheckPrivateStaticFieldDescriptor(t, e) {
  if (void 0 === t) throw new TypeError("attempted to " + e + " private static field before its declaration");
}
function _classExtractFieldDescriptor(e, t) {
  return _classPrivateFieldGet2(t, e);
}
function _classPrivateFieldDestructureSet(e, t) {
  var r = _classPrivateFieldGet2(t, e);
  return _classApplyDescriptorDestructureSet(e, r);
}
function _classPrivateFieldGet(e, t) {
  var r = _classPrivateFieldGet2(t, e);
  return _classApplyDescriptorGet(e, r);
}
function _classPrivateFieldSet(e, t, r) {
  var s = _classPrivateFieldGet2(t, e);
  return _classApplyDescriptorSet(e, s, r), r;
}
function _classPrivateMethodGet(s, a, r) {
  return _assertClassBrand(a, s), r;
}
function _classPrivateMethodSet() {
  throw new TypeError("attempted to reassign private method");
}
function _classStaticPrivateFieldDestructureSet(t, r, s) {
  return _assertClassBrand(r, t), _classCheckPrivateStaticFieldDescriptor(s, "set"), _classApplyDescriptorDestructureSet(t, s);
}
function _classStaticPrivateFieldSpecGet(t, s, r) {
  return _assertClassBrand(s, t), _classCheckPrivateStaticFieldDescriptor(r, "get"), _classApplyDescriptorGet(t, r);
}
function _classStaticPrivateFieldSpecSet(s, t, r, e) {
  return _assertClassBrand(t, s), _classCheckPrivateStaticFieldDescriptor(r, "set"), _classApplyDescriptorSet(s, r, e), e;
}
function _classStaticPrivateMethodSet() {
  throw new TypeError("attempted to set read only static private field");
}
function _defineEnumerableProperties(e, r) {
  for (var t in r) {
    var n = r[t];
    n.configurable = n.enumerable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, t, n);
  }
  if (Object.getOwnPropertySymbols) for (var a = Object.getOwnPropertySymbols(r), b = 0; b < a.length; b++) {
    var i = a[b];
    (n = r[i]).configurable = n.enumerable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, i, n);
  }
  return e;
}
function dispose_SuppressedError(r, e) {
  return "undefined" != typeof SuppressedError ? dispose_SuppressedError = SuppressedError : (dispose_SuppressedError = function (r, e) {
    this.suppressed = e, this.error = r, this.stack = Error().stack;
  }, dispose_SuppressedError.prototype = Object.create(Error.prototype, {
    constructor: {
      value: dispose_SuppressedError,
      writable: !0,
      configurable: !0
    }
  })), new dispose_SuppressedError(r, e);
}
function _dispose(r, e, s) {
  function next() {
    for (; r.length > 0;) try {
      var o = r.pop(),
        p = o.d.call(o.v);
      if (o.a) return Promise.resolve(p).then(next, err);
    } catch (r) {
      return err(r);
    }
    if (s) throw e;
  }
  function err(r) {
    return e = s ? new dispose_SuppressedError(e, r) : r, s = !0, next();
  }
  return next();
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? Object(arguments[r]) : {},
      o = Object.keys(t);
    "function" == typeof Object.getOwnPropertySymbols && o.push.apply(o, Object.getOwnPropertySymbols(t).filter(function (e) {
      return Object.getOwnPropertyDescriptor(t, e).enumerable;
    })), o.forEach(function (r) {
      _defineProperty(e, r, t[r]);
    });
  }
  return e;
}
function _using(o, n, e) {
  if (null == n) return n;
  if (Object(n) !== n) throw new TypeError("using declarations can only be used with objects, functions, null, or undefined.");
  if (e) var r = n[Symbol.asyncDispose || Symbol.for("Symbol.asyncDispose")];
  if (null == r && (r = n[Symbol.dispose || Symbol.for("Symbol.dispose")]), "function" != typeof r) throw new TypeError("Property [Symbol.dispose] is not a function.");
  return o.push({
    v: n,
    d: r,
    a: e
  }), n;
}

var commonjsGlobal$1 = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs$1 (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function getDefaultExportFromNamespaceIfPresent$1 (n) {
	return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;
}

function getDefaultExportFromNamespaceIfNotNamed$1 (n) {
	return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;
}

function getAugmentedNamespace$1(n) {
  if (n.__esModule) return n;
  var f = n.default;
	if (typeof f == "function") {
		var a = function a () {
			if (this instanceof a) {
        return Reflect.construct(f, arguments, this.constructor);
			}
			return f.apply(this, arguments);
		};
		a.prototype = f.prototype;
  } else a = {};
  Object.defineProperty(a, '__esModule', {value: true});
	Object.keys(n).forEach(function (k) {
		var d = Object.getOwnPropertyDescriptor(n, k);
		Object.defineProperty(a, k, d.get ? d : {
			enumerable: true,
			get: function () {
				return n[k];
			}
		});
	});
	return a;
}

var events$1 = {exports: {}};

var events = events$1.exports;

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';
var R$5 = (typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === 'object' ? Reflect : null;
var ReflectApply = R$5 && typeof R$5.apply === 'function' ? R$5.apply : function ReflectApply(target, receiver, args) {
  return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;
if (R$5 && typeof R$5.ownKeys === 'function') {
  ReflectOwnKeys = R$5.ownKeys;
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}
function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}
var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
};
function EventEmitter() {
  EventEmitter.init.call(this);
}
events$1.exports = EventEmitter;
var once_1 = events$1.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;
function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + _typeof(listener));
  }
}
Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function get() {
    return defaultMaxListeners;
  },
  set: function set(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});
EventEmitter.init = function () {
  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }
  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};
function _getMaxListeners(that) {
  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}
EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};
EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = type === 'error';
  var events = this._events;
  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0) er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }
  var handler = events[type];
  if (handler === undefined) return false;
  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
  }
  return true;
};
function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;
  checkListener(listener);
  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type, listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }
  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] = prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }
  return target;
}
EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};
EventEmitter.prototype.on = EventEmitter.prototype.addListener;
EventEmitter.prototype.prependListener = function prependListener(type, listener) {
  return _addListener(this, type, listener, true);
};
function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0) return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}
function _onceWrap(target, type, listener) {
  var state = {
    fired: false,
    wrapFn: undefined,
    target: target,
    type: type,
    listener: listener
  };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}
EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};
EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
  checkListener(listener);
  this.prependListener(type, _onceWrap(this, type, listener));
  return this;
};

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener = function removeListener(type, listener) {
  var list, events, position, i, originalListener;
  checkListener(listener);
  events = this._events;
  if (events === undefined) return this;
  list = events[type];
  if (list === undefined) return this;
  if (list === listener || list.listener === listener) {
    if (--this._eventsCount === 0) this._events = Object.create(null);else {
      delete events[type];
      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
    }
  } else if (typeof list !== 'function') {
    position = -1;
    for (i = list.length - 1; i >= 0; i--) {
      if (list[i] === listener || list[i].listener === listener) {
        originalListener = list[i].listener;
        position = i;
        break;
      }
    }
    if (position < 0) return this;
    if (position === 0) list.shift();else {
      spliceOne(list, position);
    }
    if (list.length === 1) events[type] = list[0];
    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
  }
  return this;
};
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
  var listeners, events, i;
  events = this._events;
  if (events === undefined) return this;

  // not listening for removeListener, no need to emit
  if (events.removeListener === undefined) {
    if (arguments.length === 0) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    } else if (events[type] !== undefined) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
    }
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    var keys = Object.keys(events);
    var key;
    for (i = 0; i < keys.length; ++i) {
      key = keys[i];
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = Object.create(null);
    this._eventsCount = 0;
    return this;
  }
  listeners = events[type];
  if (typeof listeners === 'function') {
    this.removeListener(type, listeners);
  } else if (listeners !== undefined) {
    // LIFO order
    for (i = listeners.length - 1; i >= 0; i--) {
      this.removeListener(type, listeners[i]);
    }
  }
  return this;
};
function _listeners(target, type, unwrap) {
  var events = target._events;
  if (events === undefined) return [];
  var evlistener = events[type];
  if (evlistener === undefined) return [];
  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}
EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};
EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};
EventEmitter.listenerCount = function (emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};
EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;
  if (events !== undefined) {
    var evlistener = events[type];
    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }
  return 0;
}
EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};
function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i) copy[i] = arr[i];
  return copy;
}
function spliceOne(list, index) {
  for (; index + 1 < list.length; index++) list[index] = list[index + 1];
  list.pop();
}
function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}
function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }
    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    }
    ;
    eventTargetAgnosticAddListener(emitter, name, resolver, {
      once: true
    });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, {
        once: true
      });
    }
  });
}
function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}
function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + _typeof(emitter));
  }
}
var eventsExports = events$1.exports;
var es = /*@__PURE__*/getDefaultExportFromCjs$1(eventsExports);

var cjs$3 = {};

/* global Reflect, Promise */

var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
  };
  return _extendStatics(d, b);
};
function __extends(d, b) {
  _extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return _assign.apply(this, arguments);
};
function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
    d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter$2(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
function __createBinding(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
}
function __exportStar(m, exports) {
  for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
    m = s && o[s],
    i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
    r,
    ar = [],
    e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];
  return r;
}
;
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
    i,
    q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;
  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }
  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;
  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
    i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);
  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }
  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
;
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  result["default"] = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}

var tslib_es6 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  get __assign () { return _assign; },
  __asyncDelegator: __asyncDelegator,
  __asyncGenerator: __asyncGenerator,
  __asyncValues: __asyncValues,
  __await: __await,
  __awaiter: __awaiter$2,
  __classPrivateFieldGet: __classPrivateFieldGet,
  __classPrivateFieldSet: __classPrivateFieldSet,
  __createBinding: __createBinding,
  __decorate: __decorate,
  __exportStar: __exportStar,
  __extends: __extends,
  __generator: __generator,
  __importDefault: __importDefault,
  __importStar: __importStar,
  __makeTemplateObject: __makeTemplateObject,
  __metadata: __metadata,
  __param: __param,
  __read: __read,
  __rest: __rest,
  __spread: __spread,
  __spreadArrays: __spreadArrays,
  __values: __values
});

var require$$0$4 = /*@__PURE__*/getAugmentedNamespace$1(tslib_es6);

var utils$B = {};

var delay = {};

var hasRequiredDelay;
function requireDelay() {
  if (hasRequiredDelay) return delay;
  hasRequiredDelay = 1;
  "use strict";
  Object.defineProperty(delay, "__esModule", {
    value: true
  });
  delay.delay = void 0;
  function delay$1(timeout) {
    return new Promise(function (resolve) {
      setTimeout(function () {
        resolve(true);
      }, timeout);
    });
  }
  delay.delay = delay$1;
  return delay;
}

var convert = {};

var constants = {};

var misc = {};

var hasRequiredMisc;
function requireMisc() {
  if (hasRequiredMisc) return misc;
  hasRequiredMisc = 1;
  "use strict";
  Object.defineProperty(misc, "__esModule", {
    value: true
  });
  misc.ONE_THOUSAND = misc.ONE_HUNDRED = void 0;
  misc.ONE_HUNDRED = 100;
  misc.ONE_THOUSAND = 1000;
  return misc;
}

var time = {};

var hasRequiredTime;
function requireTime() {
  if (hasRequiredTime) return time;
  hasRequiredTime = 1;
  (function (exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
    exports.ONE_SECOND = 1;
    exports.FIVE_SECONDS = 5;
    exports.TEN_SECONDS = 10;
    exports.THIRTY_SECONDS = 30;
    exports.SIXTY_SECONDS = 60;
    exports.ONE_MINUTE = exports.SIXTY_SECONDS;
    exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
    exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
    exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
    exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
    exports.ONE_HOUR = exports.SIXTY_MINUTES;
    exports.THREE_HOURS = exports.ONE_HOUR * 3;
    exports.SIX_HOURS = exports.ONE_HOUR * 6;
    exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
    exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
    exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
    exports.THREE_DAYS = exports.ONE_DAY * 3;
    exports.FIVE_DAYS = exports.ONE_DAY * 5;
    exports.SEVEN_DAYS = exports.ONE_DAY * 7;
    exports.THIRTY_DAYS = exports.ONE_DAY * 30;
    exports.ONE_WEEK = exports.SEVEN_DAYS;
    exports.TWO_WEEKS = exports.ONE_WEEK * 2;
    exports.THREE_WEEKS = exports.ONE_WEEK * 3;
    exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
    exports.ONE_YEAR = exports.ONE_DAY * 365;
  })(time);
  return time;
}

var hasRequiredConstants;
function requireConstants() {
  if (hasRequiredConstants) return constants;
  hasRequiredConstants = 1;
  (function (exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var tslib_1 = require$$0$4;
    tslib_1.__exportStar(requireMisc(), exports);
    tslib_1.__exportStar(requireTime(), exports);
  })(constants);
  return constants;
}

var hasRequiredConvert;
function requireConvert() {
  if (hasRequiredConvert) return convert;
  hasRequiredConvert = 1;
  "use strict";
  Object.defineProperty(convert, "__esModule", {
    value: true
  });
  convert.fromMiliseconds = convert.toMiliseconds = void 0;
  var constants_1 = requireConstants();
  function toMiliseconds(seconds) {
    return seconds * constants_1.ONE_THOUSAND;
  }
  convert.toMiliseconds = toMiliseconds;
  function fromMiliseconds(miliseconds) {
    return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
  }
  convert.fromMiliseconds = fromMiliseconds;
  return convert;
}

var hasRequiredUtils;
function requireUtils() {
  if (hasRequiredUtils) return utils$B;
  hasRequiredUtils = 1;
  (function (exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var tslib_1 = require$$0$4;
    tslib_1.__exportStar(requireDelay(), exports);
    tslib_1.__exportStar(requireConvert(), exports);
  })(utils$B);
  return utils$B;
}

var watch$2 = {};

var hasRequiredWatch$1;
function requireWatch$1() {
  if (hasRequiredWatch$1) return watch$2;
  hasRequiredWatch$1 = 1;
  "use strict";
  Object.defineProperty(watch$2, "__esModule", {
    value: true
  });
  watch$2.Watch = void 0;
  var Watch = /*#__PURE__*/function () {
    function Watch() {
      _classCallCheck(this, Watch);
      this.timestamps = new Map();
    }
    return _createClass(Watch, [{
      key: "start",
      value: function start(label) {
        if (this.timestamps.has(label)) {
          throw new Error("Watch already started for label: ".concat(label));
        }
        this.timestamps.set(label, {
          started: Date.now()
        });
      }
    }, {
      key: "stop",
      value: function stop(label) {
        var timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
          throw new Error("Watch already stopped for label: ".concat(label));
        }
        var elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, {
          started: timestamp.started,
          elapsed: elapsed
        });
      }
    }, {
      key: "get",
      value: function get(label) {
        var timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
          throw new Error("No timestamp found for label: ".concat(label));
        }
        return timestamp;
      }
    }, {
      key: "elapsed",
      value: function elapsed(label) {
        var timestamp = this.get(label);
        var elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
      }
    }]);
  }();
  watch$2.Watch = Watch;
  watch$2["default"] = Watch;
  return watch$2;
}

var types = {};

var watch$1 = {};

var hasRequiredWatch;
function requireWatch() {
  if (hasRequiredWatch) return watch$1;
  hasRequiredWatch = 1;
  "use strict";
  Object.defineProperty(watch$1, "__esModule", {
    value: true
  });
  watch$1.IWatch = void 0;
  var IWatch = /*#__PURE__*/_createClass(function IWatch() {
    _classCallCheck(this, IWatch);
  });
  watch$1.IWatch = IWatch;
  return watch$1;
}

var hasRequiredTypes;
function requireTypes() {
  if (hasRequiredTypes) return types;
  hasRequiredTypes = 1;
  (function (exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var tslib_1 = require$$0$4;
    tslib_1.__exportStar(requireWatch(), exports);
  })(types);
  return types;
}

(function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var tslib_1 = require$$0$4;
  tslib_1.__exportStar(requireUtils(), exports);
  tslib_1.__exportStar(requireWatch$1(), exports);
  tslib_1.__exportStar(requireTypes(), exports);
  tslib_1.__exportStar(requireConstants(), exports);
})(cjs$3);
var index$f = /*@__PURE__*/getDefaultExportFromCjs$1(cjs$3);

var IEvents = /*#__PURE__*/_createClass(function IEvents() {
  _classCallCheck(this, IEvents);
});

var n$5 = /*#__PURE__*/function (_v) {
  function n(e) {
    _classCallCheck(this, n);
    return _callSuper(this, n);
  }
  _inherits(n, _v);
  return _createClass(n);
}(IEvents);
var s$1 = cjs$3.FIVE_SECONDS,
  r$4 = {
    pulse: "heartbeat_pulse"
  };
var i$2 = /*#__PURE__*/function (_n) {
  function i(e) {
    var _this;
    _classCallCheck(this, i);
    _this = _callSuper(this, i, [e]), _this.events = new eventsExports.EventEmitter(), _this.interval = s$1, _this.interval = (e === null || e === void 0 ? void 0 : e.interval) || s$1;
    return _this;
  }
  _inherits(i, _n);
  return _createClass(i, [{
    key: "init",
    value: function () {
      var _init = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.initialize();
            case 2:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "stop",
    value: function stop() {
      clearInterval(this.intervalRef);
    }
  }, {
    key: "on",
    value: function on(e, t) {
      this.events.on(e, t);
    }
  }, {
    key: "once",
    value: function once(e, t) {
      this.events.once(e, t);
    }
  }, {
    key: "off",
    value: function off(e, t) {
      this.events.off(e, t);
    }
  }, {
    key: "removeListener",
    value: function removeListener(e, t) {
      this.events.removeListener(e, t);
    }
  }, {
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var _this2 = this;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              this.intervalRef = setInterval(function () {
                return _this2.pulse();
              }, cjs$3.toMiliseconds(this.interval));
            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
  }, {
    key: "pulse",
    value: function pulse() {
      this.events.emit(r$4.pulse);
    }
  }], [{
    key: "init",
    value: function () {
      var _init2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {
        var t;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              t = new i(e);
              _context3.next = 3;
              return t.init();
            case 3:
              return _context3.abrupt("return", t);
            case 4:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function init(_x) {
        return _init2.apply(this, arguments);
      }
      return init;
    }()
  }]);
}(n$5);

var suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
var suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
var JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && _typeof(value) === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn("[destr] Dropping \"".concat(key, "\" key to prevent prototype pollution."));
}
function destr(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (typeof value !== "string") {
    return value;
  }
  var _value = value.trim();
  if (
  // eslint-disable-next-line unicorn/prefer-at
  value[0] === '"' && value.endsWith('"') && !value.includes("\\")) {
    return _value.slice(1, -1);
  }
  if (_value.length <= 9) {
    var _lval = _value.toLowerCase();
    if (_lval === "true") {
      return true;
    }
    if (_lval === "false") {
      return false;
    }
    if (_lval === "undefined") {
      return void 0;
    }
    if (_lval === "null") {
      return null;
    }
    if (_lval === "nan") {
      return Number.NaN;
    }
    if (_lval === "infinity") {
      return Number.POSITIVE_INFINITY;
    }
    if (_lval === "-infinity") {
      return Number.NEGATIVE_INFINITY;
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}
function safeDestr(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return destr(value, _objectSpread2(_objectSpread2({}, options), {}, {
    strict: true
  }));
}

function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_) {
  try {
    for (var _len = arguments.length, arguments_ = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      arguments_[_key - 1] = arguments[_key];
    }
    return wrapToPromise(function_.apply(void 0, arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive(value) {
  var type = _typeof(value);
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  var proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify(value) {
  if (isPrimitive(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
function checkBufferSupport() {
  if (typeof Buffer === "undefined") {
    throw new TypeError("[unstorage] Buffer is not supported!");
  }
}
var BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  checkBufferSupport();
  var base64 = Buffer.from(value).toString("base64");
  return BASE64_PREFIX + base64;
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  checkBufferSupport();
  return Buffer.from(value.slice(BASE64_PREFIX.length), "base64");
}
var storageKeyProperties = ["hasItem", "getItem", "getItemRaw", "setItem", "setItemRaw", "removeItem", "getMeta", "setMeta", "removeMeta", "getKeys", "clear", "mount", "unmount"];
function prefixStorage(storage, base) {
  base = normalizeBaseKey(base);
  if (!base) {
    return storage;
  }
  var nsStorage = _objectSpread2({}, storage);
  var _iterator = _createForOfIteratorHelper(storageKeyProperties),
    _step;
  try {
    var _loop = function _loop() {
      var property = _step.value;
      nsStorage[property] = function () {
        var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          args[_key3 - 1] = arguments[_key3];
        }
        return (
          // @ts-ignore
          storage[property].apply(storage, [base + key].concat(args))
        );
      };
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  nsStorage.getKeys = function () {
    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
    for (var _len2 = arguments.length, arguments_ = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      arguments_[_key2 - 1] = arguments[_key2];
    }
    return storage.getKeys.apply(storage, [base + key].concat(arguments_)).then(function (keys) {
      return keys.map(function (key2) {
        return key2.slice(base.length);
      });
    });
  };
  return nsStorage;
}
function normalizeKey(key) {
  if (!key) {
    return "";
  }
  return key.split("?")[0].replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "");
}
function joinKeys() {
  for (var _len4 = arguments.length, keys = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    keys[_key4] = arguments[_key4];
  }
  return normalizeKey(keys.join(":"));
}
function normalizeBaseKey(base) {
  base = normalizeKey(base);
  return base ? base + ":" : "";
}

function defineDriver(factory) {
  return factory;
}
var DRIVER_NAME = "memory";
var memory = defineDriver(function () {
  var data = /* @__PURE__ */new Map();
  return {
    name: DRIVER_NAME,
    getInstance: function getInstance() {
      return data;
    },
    hasItem: function hasItem(key) {
      return data.has(key);
    },
    getItem: function getItem(key) {
      var _data$get;
      return (_data$get = data.get(key)) !== null && _data$get !== void 0 ? _data$get : null;
    },
    getItemRaw: function getItemRaw(key) {
      var _data$get2;
      return (_data$get2 = data.get(key)) !== null && _data$get2 !== void 0 ? _data$get2 : null;
    },
    setItem: function setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw: function setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem: function removeItem(key) {
      data["delete"](key);
    },
    getKeys: function getKeys() {
      return _toConsumableArray(data.keys());
    },
    clear: function clear() {
      data.clear();
    },
    dispose: function dispose() {
      data.clear();
    }
  };
});
function createStorage() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var context = {
    mounts: {
      "": options.driver || memory()
    },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  var _getMount8 = function getMount(key) {
    var _iterator = _createForOfIteratorHelper(context.mountpoints),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var base = _step.value;
        if (key.startsWith(base)) {
          return {
            base: base,
            relativeKey: key.slice(base.length),
            driver: context.mounts[base]
          };
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  var _getMounts = function getMounts(base, includeParent) {
    return context.mountpoints.filter(function (mountpoint) {
      return mountpoint.startsWith(base) || includeParent && base.startsWith(mountpoint);
    }).map(function (mountpoint) {
      return {
        relativeBase: base.length > mountpoint.length ? base.slice(mountpoint.length) : void 0,
        mountpoint: mountpoint,
        driver: context.mounts[mountpoint]
      };
    });
  };
  var onChange = function onChange(event, key) {
    if (!context.watching) {
      return;
    }
    key = normalizeKey(key);
    var _iterator2 = _createForOfIteratorHelper(context.watchListeners),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var listener = _step2.value;
        listener(event, key);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  };
  var startWatch = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      var mountpoint;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!context.watching) {
              _context.next = 2;
              break;
            }
            return _context.abrupt("return");
          case 2:
            context.watching = true;
            _context.t0 = _regeneratorRuntime().keys(context.mounts);
          case 4:
            if ((_context.t1 = _context.t0()).done) {
              _context.next = 11;
              break;
            }
            mountpoint = _context.t1.value;
            _context.next = 8;
            return watch(context.mounts[mountpoint], onChange, mountpoint);
          case 8:
            context.unwatch[mountpoint] = _context.sent;
            _context.next = 4;
            break;
          case 11:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function startWatch() {
      return _ref.apply(this, arguments);
    };
  }();
  var stopWatch = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      var mountpoint;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            if (context.watching) {
              _context2.next = 2;
              break;
            }
            return _context2.abrupt("return");
          case 2:
            _context2.t0 = _regeneratorRuntime().keys(context.unwatch);
          case 3:
            if ((_context2.t1 = _context2.t0()).done) {
              _context2.next = 9;
              break;
            }
            mountpoint = _context2.t1.value;
            _context2.next = 7;
            return context.unwatch[mountpoint]();
          case 7:
            _context2.next = 3;
            break;
          case 9:
            context.unwatch = {};
            context.watching = false;
          case 11:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function stopWatch() {
      return _ref2.apply(this, arguments);
    };
  }();
  var runBatch = function runBatch(items, commonOptions, cb) {
    var batches = /* @__PURE__ */new Map();
    var getBatch = function getBatch(mount) {
      var batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    var _iterator3 = _createForOfIteratorHelper(items),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var item = _step3.value;
        var isStringItem = typeof item === "string";
        var key = normalizeKey(isStringItem ? item : item.key);
        var value = isStringItem ? void 0 : item.value;
        var options2 = isStringItem || !item.options ? commonOptions : _objectSpread2(_objectSpread2({}, commonOptions), item.options);
        var mount = _getMount8(key);
        getBatch(mount).items.push({
          key: key,
          value: value,
          relativeKey: mount.relativeKey,
          options: options2
        });
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return Promise.all(_toConsumableArray(batches.values()).map(function (batch) {
      return cb(batch);
    })).then(function (r) {
      return r.flat();
    });
  };
  var storage = {
    // Item
    hasItem: function hasItem(key) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      key = normalizeKey(key);
      var _getMount = _getMount8(key),
        relativeKey = _getMount.relativeKey,
        driver = _getMount.driver;
      return asyncCall(driver.hasItem, relativeKey, opts);
    },
    getItem: function getItem(key) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      key = normalizeKey(key);
      var _getMount2 = _getMount8(key),
        relativeKey = _getMount2.relativeKey,
        driver = _getMount2.driver;
      return asyncCall(driver.getItem, relativeKey, opts).then(function (value) {
        return destr(value);
      });
    },
    getItems: function getItems(items, commonOptions) {
      return runBatch(items, commonOptions, function (batch) {
        if (batch.driver.getItems) {
          return asyncCall(batch.driver.getItems, batch.items.map(function (item) {
            return {
              key: item.relativeKey,
              options: item.options
            };
          }), commonOptions).then(function (r) {
            return r.map(function (item) {
              return {
                key: joinKeys(batch.base, item.key),
                value: destr(item.value)
              };
            });
          });
        }
        return Promise.all(batch.items.map(function (item) {
          return asyncCall(batch.driver.getItem, item.relativeKey, item.options).then(function (value) {
            return {
              key: item.key,
              value: destr(value)
            };
          });
        }));
      });
    },
    getItemRaw: function getItemRaw(key) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      key = normalizeKey(key);
      var _getMount3 = _getMount8(key),
        relativeKey = _getMount3.relativeKey,
        driver = _getMount3.driver;
      if (driver.getItemRaw) {
        return asyncCall(driver.getItemRaw, relativeKey, opts);
      }
      return asyncCall(driver.getItem, relativeKey, opts).then(function (value) {
        return deserializeRaw(value);
      });
    },
    setItem: function setItem(key, value) {
      var _arguments = arguments;
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var opts, _getMount4, relativeKey, driver;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              opts = _arguments.length > 2 && _arguments[2] !== undefined ? _arguments[2] : {};
              if (!(value === void 0)) {
                _context3.next = 3;
                break;
              }
              return _context3.abrupt("return", storage.removeItem(key));
            case 3:
              key = normalizeKey(key);
              _getMount4 = _getMount8(key), relativeKey = _getMount4.relativeKey, driver = _getMount4.driver;
              if (driver.setItem) {
                _context3.next = 7;
                break;
              }
              return _context3.abrupt("return");
            case 7:
              _context3.next = 9;
              return asyncCall(driver.setItem, relativeKey, stringify(value), opts);
            case 9:
              if (!driver.watch) {
                onChange("update", key);
              }
            case 10:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }))();
    },
    setItems: function setItems(items, commonOptions) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return runBatch(items, commonOptions, /*#__PURE__*/function () {
                var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(batch) {
                  return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                    while (1) switch (_context4.prev = _context4.next) {
                      case 0:
                        if (!batch.driver.setItems) {
                          _context4.next = 2;
                          break;
                        }
                        return _context4.abrupt("return", asyncCall(batch.driver.setItems, batch.items.map(function (item) {
                          return {
                            key: item.relativeKey,
                            value: stringify(item.value),
                            options: item.options
                          };
                        }), commonOptions));
                      case 2:
                        if (batch.driver.setItem) {
                          _context4.next = 4;
                          break;
                        }
                        return _context4.abrupt("return");
                      case 4:
                        _context4.next = 6;
                        return Promise.all(batch.items.map(function (item) {
                          return asyncCall(batch.driver.setItem, item.relativeKey, stringify(item.value), item.options);
                        }));
                      case 6:
                      case "end":
                        return _context4.stop();
                    }
                  }, _callee4);
                }));
                return function (_x) {
                  return _ref3.apply(this, arguments);
                };
              }());
            case 2:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }))();
    },
    setItemRaw: function setItemRaw(key, value) {
      var _arguments2 = arguments;
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
        var opts, _getMount5, relativeKey, driver;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              opts = _arguments2.length > 2 && _arguments2[2] !== undefined ? _arguments2[2] : {};
              if (!(value === void 0)) {
                _context6.next = 3;
                break;
              }
              return _context6.abrupt("return", storage.removeItem(key, opts));
            case 3:
              key = normalizeKey(key);
              _getMount5 = _getMount8(key), relativeKey = _getMount5.relativeKey, driver = _getMount5.driver;
              if (!driver.setItemRaw) {
                _context6.next = 10;
                break;
              }
              _context6.next = 8;
              return asyncCall(driver.setItemRaw, relativeKey, value, opts);
            case 8:
              _context6.next = 16;
              break;
            case 10:
              if (!driver.setItem) {
                _context6.next = 15;
                break;
              }
              _context6.next = 13;
              return asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);
            case 13:
              _context6.next = 16;
              break;
            case 15:
              return _context6.abrupt("return");
            case 16:
              if (!driver.watch) {
                onChange("update", key);
              }
            case 17:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }))();
    },
    removeItem: function removeItem(key) {
      var _arguments3 = arguments;
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        var opts, _getMount6, relativeKey, driver;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              opts = _arguments3.length > 1 && _arguments3[1] !== undefined ? _arguments3[1] : {};
              if (typeof opts === "boolean") {
                opts = {
                  removeMeta: opts
                };
              }
              key = normalizeKey(key);
              _getMount6 = _getMount8(key), relativeKey = _getMount6.relativeKey, driver = _getMount6.driver;
              if (driver.removeItem) {
                _context7.next = 6;
                break;
              }
              return _context7.abrupt("return");
            case 6:
              _context7.next = 8;
              return asyncCall(driver.removeItem, relativeKey, opts);
            case 8:
              if (!(opts.removeMeta || opts.removeMata)) {
                _context7.next = 11;
                break;
              }
              _context7.next = 11;
              return asyncCall(driver.removeItem, relativeKey + "$", opts);
            case 11:
              if (!driver.watch) {
                onChange("remove", key);
              }
            case 12:
            case "end":
              return _context7.stop();
          }
        }, _callee7);
      }))();
    },
    // Meta
    getMeta: function getMeta(key) {
      var _arguments4 = arguments;
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        var opts, _getMount7, relativeKey, driver, meta, value;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              opts = _arguments4.length > 1 && _arguments4[1] !== undefined ? _arguments4[1] : {};
              if (typeof opts === "boolean") {
                opts = {
                  nativeOnly: opts
                };
              }
              key = normalizeKey(key);
              _getMount7 = _getMount8(key), relativeKey = _getMount7.relativeKey, driver = _getMount7.driver;
              meta = /* @__PURE__ */Object.create(null);
              if (!driver.getMeta) {
                _context8.next = 12;
                break;
              }
              _context8.t0 = Object;
              _context8.t1 = meta;
              _context8.next = 10;
              return asyncCall(driver.getMeta, relativeKey, opts);
            case 10:
              _context8.t2 = _context8.sent;
              _context8.t0.assign.call(_context8.t0, _context8.t1, _context8.t2);
            case 12:
              if (opts.nativeOnly) {
                _context8.next = 17;
                break;
              }
              _context8.next = 15;
              return asyncCall(driver.getItem, relativeKey + "$", opts).then(function (value_) {
                return destr(value_);
              });
            case 15:
              value = _context8.sent;
              if (value && _typeof(value) === "object") {
                if (typeof value.atime === "string") {
                  value.atime = new Date(value.atime);
                }
                if (typeof value.mtime === "string") {
                  value.mtime = new Date(value.mtime);
                }
                Object.assign(meta, value);
              }
            case 17:
              return _context8.abrupt("return", meta);
            case 18:
            case "end":
              return _context8.stop();
          }
        }, _callee8);
      }))();
    },
    setMeta: function setMeta(key, value) {
      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this.setItem(key + "$", value, opts);
    },
    removeMeta: function removeMeta(key) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return this.removeItem(key + "$", opts);
    },
    // Keys
    getKeys: function getKeys(base) {
      var _arguments5 = arguments;
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
        var opts, mounts, maskedMounts, allKeys, _iterator4, _step4, _loop;
        return _regeneratorRuntime().wrap(function _callee9$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              opts = _arguments5.length > 1 && _arguments5[1] !== undefined ? _arguments5[1] : {};
              base = normalizeBaseKey(base);
              mounts = _getMounts(base, true);
              maskedMounts = [];
              allKeys = [];
              _iterator4 = _createForOfIteratorHelper(mounts);
              _context11.prev = 6;
              _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {
                var mount, rawKeys, _iterator5, _step5, _loop2;
                return _regeneratorRuntime().wrap(function _loop$(_context10) {
                  while (1) switch (_context10.prev = _context10.next) {
                    case 0:
                      mount = _step4.value;
                      _context10.next = 3;
                      return asyncCall(mount.driver.getKeys, mount.relativeBase, opts);
                    case 3:
                      rawKeys = _context10.sent;
                      _iterator5 = _createForOfIteratorHelper(rawKeys);
                      _context10.prev = 5;
                      _loop2 = /*#__PURE__*/_regeneratorRuntime().mark(function _loop2() {
                        var key, fullKey;
                        return _regeneratorRuntime().wrap(function _loop2$(_context9) {
                          while (1) switch (_context9.prev = _context9.next) {
                            case 0:
                              key = _step5.value;
                              fullKey = mount.mountpoint + normalizeKey(key);
                              if (!maskedMounts.some(function (p) {
                                return fullKey.startsWith(p);
                              })) {
                                allKeys.push(fullKey);
                              }
                            case 3:
                            case "end":
                              return _context9.stop();
                          }
                        }, _loop2);
                      });
                      _iterator5.s();
                    case 8:
                      if ((_step5 = _iterator5.n()).done) {
                        _context10.next = 12;
                        break;
                      }
                      return _context10.delegateYield(_loop2(), "t0", 10);
                    case 10:
                      _context10.next = 8;
                      break;
                    case 12:
                      _context10.next = 17;
                      break;
                    case 14:
                      _context10.prev = 14;
                      _context10.t1 = _context10["catch"](5);
                      _iterator5.e(_context10.t1);
                    case 17:
                      _context10.prev = 17;
                      _iterator5.f();
                      return _context10.finish(17);
                    case 20:
                      maskedMounts = [mount.mountpoint].concat(_toConsumableArray(maskedMounts.filter(function (p) {
                        return !p.startsWith(mount.mountpoint);
                      })));
                    case 21:
                    case "end":
                      return _context10.stop();
                  }
                }, _loop, null, [[5, 14, 17, 20]]);
              });
              _iterator4.s();
            case 9:
              if ((_step4 = _iterator4.n()).done) {
                _context11.next = 13;
                break;
              }
              return _context11.delegateYield(_loop(), "t0", 11);
            case 11:
              _context11.next = 9;
              break;
            case 13:
              _context11.next = 18;
              break;
            case 15:
              _context11.prev = 15;
              _context11.t1 = _context11["catch"](6);
              _iterator4.e(_context11.t1);
            case 18:
              _context11.prev = 18;
              _iterator4.f();
              return _context11.finish(18);
            case 21:
              return _context11.abrupt("return", base ? allKeys.filter(function (key) {
                return key.startsWith(base) && key[key.length - 1] !== "$";
              }) : allKeys.filter(function (key) {
                return key[key.length - 1] !== "$";
              }));
            case 22:
            case "end":
              return _context11.stop();
          }
        }, _callee9, null, [[6, 15, 18, 21]]);
      }))();
    },
    // Utils
    clear: function clear(base) {
      var _arguments6 = arguments;
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
        var opts;
        return _regeneratorRuntime().wrap(function _callee11$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              opts = _arguments6.length > 1 && _arguments6[1] !== undefined ? _arguments6[1] : {};
              base = normalizeBaseKey(base);
              _context13.next = 4;
              return Promise.all(_getMounts(base, false).map(/*#__PURE__*/function () {
                var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(m) {
                  var keys;
                  return _regeneratorRuntime().wrap(function _callee10$(_context12) {
                    while (1) switch (_context12.prev = _context12.next) {
                      case 0:
                        if (!m.driver.clear) {
                          _context12.next = 2;
                          break;
                        }
                        return _context12.abrupt("return", asyncCall(m.driver.clear, m.relativeBase, opts));
                      case 2:
                        if (!m.driver.removeItem) {
                          _context12.next = 7;
                          break;
                        }
                        _context12.next = 5;
                        return m.driver.getKeys(m.relativeBase || "", opts);
                      case 5:
                        keys = _context12.sent;
                        return _context12.abrupt("return", Promise.all(keys.map(function (key) {
                          return m.driver.removeItem(key, opts);
                        })));
                      case 7:
                      case "end":
                        return _context12.stop();
                    }
                  }, _callee10);
                }));
                return function (_x2) {
                  return _ref4.apply(this, arguments);
                };
              }()));
            case 4:
            case "end":
              return _context13.stop();
          }
        }, _callee11);
      }))();
    },
    dispose: function dispose() {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
        return _regeneratorRuntime().wrap(function _callee12$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              _context14.next = 2;
              return Promise.all(Object.values(context.mounts).map(function (driver) {
                return _dispose2(driver);
              }));
            case 2:
            case "end":
              return _context14.stop();
          }
        }, _callee12);
      }))();
    },
    watch: function watch(callback) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
        return _regeneratorRuntime().wrap(function _callee14$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return startWatch();
            case 2:
              context.watchListeners.push(callback);
              return _context16.abrupt("return", /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
                return _regeneratorRuntime().wrap(function _callee13$(_context15) {
                  while (1) switch (_context15.prev = _context15.next) {
                    case 0:
                      context.watchListeners = context.watchListeners.filter(function (listener) {
                        return listener !== callback;
                      });
                      if (!(context.watchListeners.length === 0)) {
                        _context15.next = 4;
                        break;
                      }
                      _context15.next = 4;
                      return stopWatch();
                    case 4:
                    case "end":
                      return _context15.stop();
                  }
                }, _callee13);
              })));
            case 4:
            case "end":
              return _context16.stop();
          }
        }, _callee14);
      }))();
    },
    unwatch: function unwatch() {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
        return _regeneratorRuntime().wrap(function _callee15$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              context.watchListeners = [];
              _context17.next = 3;
              return stopWatch();
            case 3:
            case "end":
              return _context17.stop();
          }
        }, _callee15);
      }))();
    },
    // Mount
    mount: function mount(base, driver) {
      base = normalizeBaseKey(base);
      if (base && context.mounts[base]) {
        throw new Error("already mounted at ".concat(base));
      }
      if (base) {
        context.mountpoints.push(base);
        context.mountpoints.sort(function (a, b) {
          return b.length - a.length;
        });
      }
      context.mounts[base] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base)).then(function (unwatcher) {
          context.unwatch[base] = unwatcher;
        })["catch"](console.error);
      }
      return storage;
    },
    unmount: function unmount(base) {
      var _arguments7 = arguments;
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
        var _dispose;
        return _regeneratorRuntime().wrap(function _callee16$(_context18) {
          while (1) switch (_context18.prev = _context18.next) {
            case 0:
              _dispose = _arguments7.length > 1 && _arguments7[1] !== undefined ? _arguments7[1] : true;
              base = normalizeBaseKey(base);
              if (!(!base || !context.mounts[base])) {
                _context18.next = 4;
                break;
              }
              return _context18.abrupt("return");
            case 4:
              if (context.watching && base in context.unwatch) {
                context.unwatch[base]();
                delete context.unwatch[base];
              }
              if (!_dispose) {
                _context18.next = 8;
                break;
              }
              _context18.next = 8;
              return _dispose2(context.mounts[base]);
            case 8:
              context.mountpoints = context.mountpoints.filter(function (key) {
                return key !== base;
              });
              delete context.mounts[base];
            case 10:
            case "end":
              return _context18.stop();
          }
        }, _callee16);
      }))();
    },
    getMount: function getMount() {
      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      key = normalizeKey(key) + ":";
      var m = _getMount8(key);
      return {
        driver: m.driver,
        base: m.base
      };
    },
    getMounts: function getMounts() {
      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      base = normalizeKey(base);
      var mounts = _getMounts(base, opts.parents);
      return mounts.map(function (m) {
        return {
          driver: m.driver,
          base: m.mountpoint
        };
      });
    },
    // Aliases
    keys: function keys(base) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return storage.getKeys(base, opts);
    },
    get: function get(key) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return storage.getItem(key, opts);
    },
    set: function set(key, value) {
      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return storage.setItem(key, value, opts);
    },
    has: function has(key) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return storage.hasItem(key, opts);
    },
    del: function del(key) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return storage.removeItem(key, opts);
    },
    remove: function remove(key) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return storage.removeItem(key, opts);
    }
  };
  return storage;
}
function snapshot(_x3, _x4) {
  return _snapshot.apply(this, arguments);
}
function _snapshot() {
  _snapshot = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(storage, base) {
    var keys, snapshot2;
    return _regeneratorRuntime().wrap(function _callee18$(_context20) {
      while (1) switch (_context20.prev = _context20.next) {
        case 0:
          base = normalizeBaseKey(base);
          _context20.next = 3;
          return storage.getKeys(base);
        case 3:
          keys = _context20.sent;
          snapshot2 = {};
          _context20.next = 7;
          return Promise.all(keys.map(/*#__PURE__*/function () {
            var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(key) {
              return _regeneratorRuntime().wrap(function _callee17$(_context19) {
                while (1) switch (_context19.prev = _context19.next) {
                  case 0:
                    _context19.next = 2;
                    return storage.getItem(key);
                  case 2:
                    snapshot2[key.slice(base.length)] = _context19.sent;
                  case 3:
                  case "end":
                    return _context19.stop();
                }
              }, _callee17);
            }));
            return function (_x8) {
              return _ref6.apply(this, arguments);
            };
          }()));
        case 7:
          return _context20.abrupt("return", snapshot2);
        case 8:
        case "end":
          return _context20.stop();
      }
    }, _callee18);
  }));
  return _snapshot.apply(this, arguments);
}
function restoreSnapshot(_x5, _x6) {
  return _restoreSnapshot.apply(this, arguments);
}
function _restoreSnapshot() {
  _restoreSnapshot = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(driver, snapshot2) {
    var base,
      _args21 = arguments;
    return _regeneratorRuntime().wrap(function _callee19$(_context21) {
      while (1) switch (_context21.prev = _context21.next) {
        case 0:
          base = _args21.length > 2 && _args21[2] !== undefined ? _args21[2] : "";
          base = normalizeBaseKey(base);
          _context21.next = 4;
          return Promise.all(Object.entries(snapshot2).map(function (e) {
            return driver.setItem(base + e[0], e[1]);
          }));
        case 4:
        case "end":
          return _context21.stop();
      }
    }, _callee19);
  }));
  return _restoreSnapshot.apply(this, arguments);
}
function watch(driver, onChange, base) {
  return driver.watch ? driver.watch(function (event, key) {
    return onChange(event, base + key);
  }) : function () {};
}
function _dispose2(_x7) {
  return _dispose3.apply(this, arguments);
}
function _dispose3() {
  _dispose3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(driver) {
    return _regeneratorRuntime().wrap(function _callee20$(_context22) {
      while (1) switch (_context22.prev = _context22.next) {
        case 0:
          if (!(typeof driver.dispose === "function")) {
            _context22.next = 3;
            break;
          }
          _context22.next = 3;
          return asyncCall(driver.dispose);
        case 3:
        case "end":
          return _context22.stop();
      }
    }, _callee20);
  }));
  return _dispose3.apply(this, arguments);
}
var builtinDrivers = {
  azureAppConfiguration: "unstorage/drivers/azure-app-configuration",
  azureCosmos: "unstorage/drivers/azure-cosmos",
  azureKeyVault: "unstorage/drivers/azure-key-vault",
  azureStorageBlob: "unstorage/drivers/azure-storage-blob",
  azureStorageTable: "unstorage/drivers/azure-storage-table",
  cloudflareKVBinding: "unstorage/drivers/cloudflare-kv-binding",
  cloudflareKVHTTP: "unstorage/drivers/cloudflare-kv-http",
  cloudflareR2Binding: "unstorage/drivers/cloudflare-r2-binding",
  fs: "unstorage/drivers/fs",
  fsLite: "unstorage/drivers/fs-lite",
  github: "unstorage/drivers/github",
  http: "unstorage/drivers/http",
  indexedb: "unstorage/drivers/indexedb",
  localStorage: "unstorage/drivers/localstorage",
  lruCache: "unstorage/drivers/lru-cache",
  memory: "unstorage/drivers/memory",
  mongodb: "unstorage/drivers/mongodb",
  netlifyBlobs: "unstorage/drivers/netlify-blobs",
  "null": "unstorage/drivers/null",
  overlay: "unstorage/drivers/overlay",
  planetscale: "unstorage/drivers/planetscale",
  redis: "unstorage/drivers/redis",
  sessionStorage: "unstorage/drivers/session-storage",
  vercelKV: "unstorage/drivers/vercel-kv",
  /** @deprecated */
  "cloudflare-kv-binding": "unstorage/drivers/cloudflare-kv-binding",
  /** @deprecated */
  "cloudflare-kv-http": "unstorage/drivers/cloudflare-kv-http"
};

function promisifyRequest(request) {
  return new Promise(function (resolve, reject) {
    // @ts-ignore - file size hacks
    request.oncomplete = request.onsuccess = function () {
      return resolve(request.result);
    };
    // @ts-ignore - file size hacks
    request.onabort = request.onerror = function () {
      return reject(request.error);
    };
  });
}
function createStore(dbName, storeName) {
  var request = indexedDB.open(dbName);
  request.onupgradeneeded = function () {
    return request.result.createObjectStore(storeName);
  };
  var dbp = promisifyRequest(request);
  return function (txMode, callback) {
    return dbp.then(function (db) {
      return callback(db.transaction(storeName, txMode).objectStore(storeName));
    });
  };
}
var defaultGetStoreFunc;
function defaultGetStore() {
  if (!defaultGetStoreFunc) {
    defaultGetStoreFunc = createStore('keyval-store', 'keyval');
  }
  return defaultGetStoreFunc;
}
/**
 * Get a value by its key.
 *
 * @param key
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function get(key) {
  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();
  return customStore('readonly', function (store) {
    return promisifyRequest(store.get(key));
  });
}
/**
 * Set a value with a key.
 *
 * @param key
 * @param value
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function set$1(key, value) {
  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();
  return customStore('readwrite', function (store) {
    store.put(value, key);
    return promisifyRequest(store.transaction);
  });
}
/**
 * Set multiple values at once. This is faster than calling set() multiple times.
 * It's also atomic – if one of the pairs can't be added, none will be added.
 *
 * @param entries Array of entries, where each entry is an array of `[key, value]`.
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function setMany(entries) {
  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();
  return customStore('readwrite', function (store) {
    entries.forEach(function (entry) {
      return store.put(entry[1], entry[0]);
    });
    return promisifyRequest(store.transaction);
  });
}
/**
 * Get multiple values by their keys
 *
 * @param keys
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function getMany(keys) {
  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();
  return customStore('readonly', function (store) {
    return Promise.all(keys.map(function (key) {
      return promisifyRequest(store.get(key));
    }));
  });
}
/**
 * Update a value. This lets you see the old value and update it as an atomic operation.
 *
 * @param key
 * @param updater A callback that takes the old value and returns a new value.
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function update(key, updater) {
  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();
  return customStore('readwrite', function (store) {
    return (
      // Need to create the promise manually.
      // If I try to chain promises, the transaction closes in browsers
      // that use a promise polyfill (IE10/11).
      new Promise(function (resolve, reject) {
        store.get(key).onsuccess = function () {
          try {
            store.put(updater(this.result), key);
            resolve(promisifyRequest(store.transaction));
          } catch (err) {
            reject(err);
          }
        };
      })
    );
  });
}
/**
 * Delete a particular key from the store.
 *
 * @param key
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function del(key) {
  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();
  return customStore('readwrite', function (store) {
    store["delete"](key);
    return promisifyRequest(store.transaction);
  });
}
/**
 * Delete multiple keys at once.
 *
 * @param keys List of keys to delete.
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function delMany(keys) {
  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();
  return customStore('readwrite', function (store) {
    keys.forEach(function (key) {
      return store["delete"](key);
    });
    return promisifyRequest(store.transaction);
  });
}
/**
 * Clear all values in the store.
 *
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function clear() {
  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();
  return customStore('readwrite', function (store) {
    store.clear();
    return promisifyRequest(store.transaction);
  });
}
function eachCursor(store, callback) {
  store.openCursor().onsuccess = function () {
    if (!this.result) return;
    callback(this.result);
    this.result["continue"]();
  };
  return promisifyRequest(store.transaction);
}
/**
 * Get all keys in the store.
 *
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function keys() {
  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();
  return customStore('readonly', function (store) {
    // Fast path for modern browsers
    if (store.getAllKeys) {
      return promisifyRequest(store.getAllKeys());
    }
    var items = [];
    return eachCursor(store, function (cursor) {
      return items.push(cursor.key);
    }).then(function () {
      return items;
    });
  });
}
/**
 * Get all values in the store.
 *
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function values() {
  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();
  return customStore('readonly', function (store) {
    // Fast path for modern browsers
    if (store.getAll) {
      return promisifyRequest(store.getAll());
    }
    var items = [];
    return eachCursor(store, function (cursor) {
      return items.push(cursor.value);
    }).then(function () {
      return items;
    });
  });
}
/**
 * Get all entries in the store. Each entry is an array of `[key, value]`.
 *
 * @param customStore Method to get a custom store. Use with caution (see the docs).
 */
function entries() {
  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();
  return customStore('readonly', function (store) {
    // Fast path for modern browsers
    // (although, hopefully we'll get a simpler path some day)
    if (store.getAll && store.getAllKeys) {
      return Promise.all([promisifyRequest(store.getAllKeys()), promisifyRequest(store.getAll())]).then(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
          keys = _ref2[0],
          values = _ref2[1];
        return keys.map(function (key, i) {
          return [key, values[i]];
        });
      });
    }
    var items = [];
    return customStore('readonly', function (store) {
      return eachCursor(store, function (cursor) {
        return items.push([cursor.key, cursor.value]);
      }).then(function () {
        return items;
      });
    });
  });
}

var JSONStringify = function JSONStringify(data) {
  return JSON.stringify(data, function (_, value) {
    return typeof value === "bigint" ? value.toString() + "n" : value;
  });
};
var JSONParse = function JSONParse(json) {
  var numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  var serializedData = json.replace(numbersBiggerThanMaxInt, "$1\"$2n\"$3");
  return JSON.parse(serializedData, function (_, value) {
    var isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt) return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse(value) {
  if (typeof value !== "string") {
    throw new Error("Cannot safe json parse value of type ".concat(_typeof(value)));
  }
  try {
    return JSONParse(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify(value) {
  return typeof value === "string" ? value : JSONStringify(value) || "";
}

function C$7(i) {
  return i;
}
var x$8 = "idb-keyval";
var z$8 = function z() {
  var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var t = i.base && i.base.length > 0 ? "".concat(i.base, ":") : "",
    e = function e(s) {
      return t + s;
    };
  var n;
  return i.dbName && i.storeName && (n = createStore(i.dbName, i.storeName)), {
    name: x$8,
    options: i,
    hasItem: function hasItem(s) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.t0 = _typeof;
              _context.next = 3;
              return get(e(s), n);
            case 3:
              _context.t1 = _context.sent;
              _context.t2 = (0, _context.t0)(_context.t1);
              return _context.abrupt("return", !(_context.t2 > "u"));
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }))();
    },
    getItem: function getItem(s) {
      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var _yield$u;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return get(e(s), n);
            case 2:
              _context2.t1 = _yield$u = _context2.sent;
              _context2.t0 = _context2.t1 !== null;
              if (!_context2.t0) {
                _context2.next = 6;
                break;
              }
              _context2.t0 = _yield$u !== void 0;
            case 6:
              if (!_context2.t0) {
                _context2.next = 10;
                break;
              }
              _context2.t2 = _yield$u;
              _context2.next = 11;
              break;
            case 10:
              _context2.t2 = null;
            case 11:
              return _context2.abrupt("return", _context2.t2);
            case 12:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }))();
    },
    setItem: function setItem(s, a) {
      return set$1(e(s), a, n);
    },
    removeItem: function removeItem(s) {
      return del(e(s), n);
    },
    getKeys: function getKeys() {
      return keys(n);
    },
    clear: function clear$1() {
      return clear(n);
    }
  };
};
var D$4 = "WALLET_CONNECT_V2_INDEXED_DB",
  E$5 = "keyvaluestorage";
var _$5 = /*#__PURE__*/function () {
  function _() {
    _classCallCheck(this, _);
    this.indexedDb = createStorage({
      driver: z$8({
        dbName: D$4,
        storeName: E$5
      })
    });
  }
  return _createClass(_, [{
    key: "getKeys",
    value: function () {
      var _getKeys = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              return _context3.abrupt("return", this.indexedDb.getKeys());
            case 1:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function getKeys() {
        return _getKeys.apply(this, arguments);
      }
      return getKeys;
    }()
  }, {
    key: "getEntries",
    value: function () {
      var _getEntries = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.t0 = this.indexedDb;
              _context4.next = 3;
              return this.indexedDb.getKeys();
            case 3:
              _context4.t1 = _context4.sent;
              _context4.next = 6;
              return _context4.t0.getItems.call(_context4.t0, _context4.t1);
            case 6:
              return _context4.abrupt("return", _context4.sent.map(function (t) {
                return [t.key, t.value];
              }));
            case 7:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function getEntries() {
        return _getEntries.apply(this, arguments);
      }
      return getEntries;
    }()
  }, {
    key: "getItem",
    value: function () {
      var _getItem = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(t) {
        var e;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return this.indexedDb.getItem(t);
            case 2:
              e = _context5.sent;
              if (!(e !== null)) {
                _context5.next = 5;
                break;
              }
              return _context5.abrupt("return", e);
            case 5:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function getItem(_x) {
        return _getItem.apply(this, arguments);
      }
      return getItem;
    }()
  }, {
    key: "setItem",
    value: function () {
      var _setItem = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(t, e) {
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return this.indexedDb.setItem(t, safeJsonStringify(e));
            case 2:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function setItem(_x2, _x3) {
        return _setItem.apply(this, arguments);
      }
      return setItem;
    }()
  }, {
    key: "removeItem",
    value: function () {
      var _removeItem = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(t) {
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return this.indexedDb.removeItem(t);
            case 2:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function removeItem(_x4) {
        return _removeItem.apply(this, arguments);
      }
      return removeItem;
    }()
  }]);
}();
var l$5 = (typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) < "u" ? globalThis : (typeof window === "undefined" ? "undefined" : _typeof(window)) < "u" ? window : (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" ? global : (typeof self === "undefined" ? "undefined" : _typeof(self)) < "u" ? self : {},
  c$3 = {
    exports: {}
  };
(function () {
  var i;
  function t() {}
  i = t, i.prototype.getItem = function (e) {
    return this.hasOwnProperty(e) ? String(this[e]) : null;
  }, i.prototype.setItem = function (e, n) {
    this[e] = String(n);
  }, i.prototype.removeItem = function (e) {
    delete this[e];
  }, i.prototype.clear = function () {
    var e = this;
    Object.keys(e).forEach(function (n) {
      e[n] = void 0, delete e[n];
    });
  }, i.prototype.key = function (e) {
    return e = e || 0, Object.keys(this)[e];
  }, i.prototype.__defineGetter__("length", function () {
    return Object.keys(this).length;
  }), _typeof(l$5) < "u" && l$5.localStorage ? c$3.exports = l$5.localStorage : (typeof window === "undefined" ? "undefined" : _typeof(window)) < "u" && window.localStorage ? c$3.exports = window.localStorage : c$3.exports = new t();
})();
function k$5(i) {
  var t;
  return [i[0], safeJsonParse((t = i[1]) != null ? t : "")];
}
var K$5 = /*#__PURE__*/function () {
  function K() {
    _classCallCheck(this, K);
    this.localStorage = c$3.exports;
  }
  return _createClass(K, [{
    key: "getKeys",
    value: function () {
      var _getKeys2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              return _context8.abrupt("return", Object.keys(this.localStorage));
            case 1:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
      function getKeys() {
        return _getKeys2.apply(this, arguments);
      }
      return getKeys;
    }()
  }, {
    key: "getEntries",
    value: function () {
      var _getEntries2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              return _context9.abrupt("return", Object.entries(this.localStorage).map(k$5));
            case 1:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
      function getEntries() {
        return _getEntries2.apply(this, arguments);
      }
      return getEntries;
    }()
  }, {
    key: "getItem",
    value: function () {
      var _getItem2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(t) {
        var e;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              e = this.localStorage.getItem(t);
              if (!(e !== null)) {
                _context10.next = 3;
                break;
              }
              return _context10.abrupt("return", safeJsonParse(e));
            case 3:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this);
      }));
      function getItem(_x5) {
        return _getItem2.apply(this, arguments);
      }
      return getItem;
    }()
  }, {
    key: "setItem",
    value: function () {
      var _setItem2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(t, e) {
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              this.localStorage.setItem(t, safeJsonStringify(e));
            case 1:
            case "end":
              return _context11.stop();
          }
        }, _callee11, this);
      }));
      function setItem(_x6, _x7) {
        return _setItem2.apply(this, arguments);
      }
      return setItem;
    }()
  }, {
    key: "removeItem",
    value: function () {
      var _removeItem2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(t) {
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              this.localStorage.removeItem(t);
            case 1:
            case "end":
              return _context12.stop();
          }
        }, _callee12, this);
      }));
      function removeItem(_x8) {
        return _removeItem2.apply(this, arguments);
      }
      return removeItem;
    }()
  }]);
}();
var N$2 = "wc_storage_version",
  y$6 = 1,
  O$7 = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(i, t, e) {
      var n, s, a, m, r, o, f;
      return _regeneratorRuntime().wrap(function _callee13$(_context13) {
        while (1) switch (_context13.prev = _context13.next) {
          case 0:
            n = N$2;
            _context13.next = 3;
            return t.getItem(n);
          case 3:
            s = _context13.sent;
            if (!(s && s >= y$6)) {
              _context13.next = 7;
              break;
            }
            e(t);
            return _context13.abrupt("return");
          case 7:
            _context13.next = 9;
            return i.getKeys();
          case 9:
            a = _context13.sent;
            if (a.length) {
              _context13.next = 13;
              break;
            }
            e(t);
            return _context13.abrupt("return");
          case 13:
            m = [];
          case 14:
            if (!a.length) {
              _context13.next = 28;
              break;
            }
            r = a.shift();
            if (r) {
              _context13.next = 18;
              break;
            }
            return _context13.abrupt("continue", 26);
          case 18:
            o = r.toLowerCase();
            if (!(o.includes("wc@") || o.includes("walletconnect") || o.includes("wc_") || o.includes("wallet_connect"))) {
              _context13.next = 26;
              break;
            }
            _context13.next = 22;
            return i.getItem(r);
          case 22:
            f = _context13.sent;
            _context13.next = 25;
            return t.setItem(r, f);
          case 25:
            m.push(r);
          case 26:
            _context13.next = 14;
            break;
          case 28:
            _context13.next = 30;
            return t.setItem(n, y$6);
          case 30:
            e(t);
            j$2(i, m);
          case 32:
          case "end":
            return _context13.stop();
        }
      }, _callee13);
    }));
    return function O(_x9, _x10, _x11) {
      return _ref.apply(this, arguments);
    };
  }(),
  j$2 = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(i, t) {
      return _regeneratorRuntime().wrap(function _callee15$(_context15) {
        while (1) switch (_context15.prev = _context15.next) {
          case 0:
            t.length && t.forEach(/*#__PURE__*/function () {
              var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(e) {
                return _regeneratorRuntime().wrap(function _callee14$(_context14) {
                  while (1) switch (_context14.prev = _context14.next) {
                    case 0:
                      _context14.next = 2;
                      return i.removeItem(e);
                    case 2:
                    case "end":
                      return _context14.stop();
                  }
                }, _callee14);
              }));
              return function (_x14) {
                return _ref3.apply(this, arguments);
              };
            }());
          case 1:
          case "end":
            return _context15.stop();
        }
      }, _callee15);
    }));
    return function j(_x12, _x13) {
      return _ref2.apply(this, arguments);
    };
  }();
var h$4 = /*#__PURE__*/function () {
  function h() {
    var _this = this;
    _classCallCheck(this, h);
    this.initialized = !1, this.setInitialized = function (e) {
      _this.storage = e, _this.initialized = !0;
    };
    var t = new K$5();
    this.storage = t;
    try {
      var e = new _$5();
      O$7(t, e, this.setInitialized);
    } catch (_unused) {
      this.initialized = !0;
    }
  }
  return _createClass(h, [{
    key: "getKeys",
    value: function () {
      var _getKeys3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return this.initialize();
            case 2:
              return _context16.abrupt("return", this.storage.getKeys());
            case 3:
            case "end":
              return _context16.stop();
          }
        }, _callee16, this);
      }));
      function getKeys() {
        return _getKeys3.apply(this, arguments);
      }
      return getKeys;
    }()
  }, {
    key: "getEntries",
    value: function () {
      var _getEntries3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              _context17.next = 2;
              return this.initialize();
            case 2:
              return _context17.abrupt("return", this.storage.getEntries());
            case 3:
            case "end":
              return _context17.stop();
          }
        }, _callee17, this);
      }));
      function getEntries() {
        return _getEntries3.apply(this, arguments);
      }
      return getEntries;
    }()
  }, {
    key: "getItem",
    value: function () {
      var _getItem3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(t) {
        return _regeneratorRuntime().wrap(function _callee18$(_context18) {
          while (1) switch (_context18.prev = _context18.next) {
            case 0:
              _context18.next = 2;
              return this.initialize();
            case 2:
              return _context18.abrupt("return", this.storage.getItem(t));
            case 3:
            case "end":
              return _context18.stop();
          }
        }, _callee18, this);
      }));
      function getItem(_x15) {
        return _getItem3.apply(this, arguments);
      }
      return getItem;
    }()
  }, {
    key: "setItem",
    value: function () {
      var _setItem3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(t, e) {
        return _regeneratorRuntime().wrap(function _callee19$(_context19) {
          while (1) switch (_context19.prev = _context19.next) {
            case 0:
              _context19.next = 2;
              return this.initialize();
            case 2:
              return _context19.abrupt("return", this.storage.setItem(t, e));
            case 3:
            case "end":
              return _context19.stop();
          }
        }, _callee19, this);
      }));
      function setItem(_x16, _x17) {
        return _setItem3.apply(this, arguments);
      }
      return setItem;
    }()
  }, {
    key: "removeItem",
    value: function () {
      var _removeItem3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(t) {
        return _regeneratorRuntime().wrap(function _callee20$(_context20) {
          while (1) switch (_context20.prev = _context20.next) {
            case 0:
              _context20.next = 2;
              return this.initialize();
            case 2:
              return _context20.abrupt("return", this.storage.removeItem(t));
            case 3:
            case "end":
              return _context20.stop();
          }
        }, _callee20, this);
      }));
      function removeItem(_x18) {
        return _removeItem3.apply(this, arguments);
      }
      return removeItem;
    }()
  }, {
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {
        var _this2 = this;
        return _regeneratorRuntime().wrap(function _callee21$(_context21) {
          while (1) switch (_context21.prev = _context21.next) {
            case 0:
              _context21.t0 = this.initialized;
              if (_context21.t0) {
                _context21.next = 4;
                break;
              }
              _context21.next = 4;
              return new Promise(function (t) {
                var e = setInterval(function () {
                  _this2.initialized && (clearInterval(e), t());
                }, 20);
              });
            case 4:
            case "end":
              return _context21.stop();
          }
        }, _callee21, this);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
  }]);
}();

'use strict';
function tryStringify(o) {
  try {
    return JSON.stringify(o);
  } catch (e) {
    return '"[Circular]"';
  }
}
var quickFormatUnescaped = format$1;
function format$1(f, args, opts) {
  var ss = opts && opts.stringify || tryStringify;
  var offset = 1;
  if (_typeof(f) === 'object' && f !== null) {
    var len = args.length + offset;
    if (len === 1) return f;
    var objects = new Array(len);
    objects[0] = ss(f);
    for (var index = 1; index < len; index++) {
      objects[index] = ss(args[index]);
    }
    return objects.join(' ');
  }
  if (typeof f !== 'string') {
    return f;
  }
  var argLen = args.length;
  if (argLen === 0) return f;
  var str = '';
  var a = 1 - offset;
  var lastPos = -1;
  var flen = f && f.length || 0;
  for (var i = 0; i < flen;) {
    if (f.charCodeAt(i) === 37 && i + 1 < flen) {
      lastPos = lastPos > -1 ? lastPos : 0;
      switch (f.charCodeAt(i + 1)) {
        case 100: // 'd'
        case 102:
          // 'f'
          if (a >= argLen) break;
          if (args[a] == null) break;
          if (lastPos < i) str += f.slice(lastPos, i);
          str += Number(args[a]);
          lastPos = i + 2;
          i++;
          break;
        case 105:
          // 'i'
          if (a >= argLen) break;
          if (args[a] == null) break;
          if (lastPos < i) str += f.slice(lastPos, i);
          str += Math.floor(Number(args[a]));
          lastPos = i + 2;
          i++;
          break;
        case 79: // 'O'
        case 111: // 'o'
        case 106:
          // 'j'
          if (a >= argLen) break;
          if (args[a] === undefined) break;
          if (lastPos < i) str += f.slice(lastPos, i);
          var type = _typeof(args[a]);
          if (type === 'string') {
            str += '\'' + args[a] + '\'';
            lastPos = i + 2;
            i++;
            break;
          }
          if (type === 'function') {
            str += args[a].name || '<anonymous>';
            lastPos = i + 2;
            i++;
            break;
          }
          str += ss(args[a]);
          lastPos = i + 2;
          i++;
          break;
        case 115:
          // 's'
          if (a >= argLen) break;
          if (lastPos < i) str += f.slice(lastPos, i);
          str += String(args[a]);
          lastPos = i + 2;
          i++;
          break;
        case 37:
          // '%'
          if (lastPos < i) str += f.slice(lastPos, i);
          str += '%';
          lastPos = i + 2;
          i++;
          a--;
          break;
      }
      ++a;
    }
    ++i;
  }
  if (lastPos === -1) return f;else if (lastPos < flen) {
    str += f.slice(lastPos);
  }
  return str;
}
var index$e = /*@__PURE__*/getDefaultExportFromCjs$1(quickFormatUnescaped);

'use strict';
var format = quickFormatUnescaped;
var browser$3 = pino;
var _console = pfGlobalThisOrFallback().console || {};
var stdSerializers = {
  mapHttpRequest: mock,
  mapHttpResponse: mock,
  wrapRequestSerializer: passthrough,
  wrapResponseSerializer: passthrough,
  wrapErrorSerializer: passthrough,
  req: mock,
  res: mock,
  err: asErrValue
};
function shouldSerialize(serialize, serializers) {
  if (Array.isArray(serialize)) {
    var hasToFilter = serialize.filter(function (k) {
      return k !== '!stdSerializers.err';
    });
    return hasToFilter;
  } else if (serialize === true) {
    return Object.keys(serializers);
  }
  return false;
}
function pino(opts) {
  opts = opts || {};
  opts.browser = opts.browser || {};
  var transmit = opts.browser.transmit;
  if (transmit && typeof transmit.send !== 'function') {
    throw Error('pino: transmit option must have a send function');
  }
  var proto = opts.browser.write || _console;
  if (opts.browser.write) opts.browser.asObject = true;
  var serializers = opts.serializers || {};
  var serialize = shouldSerialize(opts.browser.serialize, serializers);
  var stdErrSerialize = opts.browser.serialize;
  if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf('!stdSerializers.err') > -1) stdErrSerialize = false;
  var levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace'];
  if (typeof proto === 'function') {
    proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
  }
  if (opts.enabled === false) opts.level = 'silent';
  var level = opts.level || 'info';
  var logger = Object.create(proto);
  if (!logger.log) logger.log = noop;
  Object.defineProperty(logger, 'levelVal', {
    get: getLevelVal
  });
  Object.defineProperty(logger, 'level', {
    get: getLevel,
    set: setLevel
  });
  var setOpts = {
    transmit: transmit,
    serialize: serialize,
    asObject: opts.browser.asObject,
    levels: levels,
    timestamp: getTimeFunction(opts)
  };
  logger.levels = pino.levels;
  logger.level = level;
  logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
  logger.serializers = serializers;
  logger._serialize = serialize;
  logger._stdErrSerialize = stdErrSerialize;
  logger.child = child;
  if (transmit) logger._logEvent = createLogEventShape();
  function getLevelVal() {
    return this.level === 'silent' ? Infinity : this.levels.values[this.level];
  }
  function getLevel() {
    return this._level;
  }
  function setLevel(level) {
    if (level !== 'silent' && !this.levels.values[level]) {
      throw Error('unknown level ' + level);
    }
    this._level = level;
    set(setOpts, logger, 'error', 'log'); // <-- must stay first
    set(setOpts, logger, 'fatal', 'error');
    set(setOpts, logger, 'warn', 'error');
    set(setOpts, logger, 'info', 'log');
    set(setOpts, logger, 'debug', 'log');
    set(setOpts, logger, 'trace', 'log');
  }
  function child(bindings, childOptions) {
    if (!bindings) {
      throw new Error('missing bindings for child Pino');
    }
    childOptions = childOptions || {};
    if (serialize && bindings.serializers) {
      childOptions.serializers = bindings.serializers;
    }
    var childOptionsSerializers = childOptions.serializers;
    if (serialize && childOptionsSerializers) {
      var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
      var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
      delete bindings.serializers;
      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
    }
    function Child(parent) {
      this._childLevel = (parent._childLevel | 0) + 1;
      this.error = bind(parent, bindings, 'error');
      this.fatal = bind(parent, bindings, 'fatal');
      this.warn = bind(parent, bindings, 'warn');
      this.info = bind(parent, bindings, 'info');
      this.debug = bind(parent, bindings, 'debug');
      this.trace = bind(parent, bindings, 'trace');
      if (childSerializers) {
        this.serializers = childSerializers;
        this._serialize = childSerialize;
      }
      if (transmit) {
        this._logEvent = createLogEventShape([].concat(parent._logEvent.bindings, bindings));
      }
    }
    Child.prototype = this;
    return new Child(this);
  }
  return logger;
}
pino.levels = {
  values: {
    fatal: 60,
    error: 50,
    warn: 40,
    info: 30,
    debug: 20,
    trace: 10
  },
  labels: {
    10: 'trace',
    20: 'debug',
    30: 'info',
    40: 'warn',
    50: 'error',
    60: 'fatal'
  }
};
pino.stdSerializers = stdSerializers;
pino.stdTimeFunctions = Object.assign({}, {
  nullTime: nullTime,
  epochTime: epochTime,
  unixTime: unixTime,
  isoTime: isoTime
});
function set(opts, logger, level, fallback) {
  var proto = Object.getPrototypeOf(logger);
  logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;
  wrap(opts, logger, level);
}
function wrap(opts, logger, level) {
  if (!opts.transmit && logger[level] === noop) return;
  logger[level] = function (write) {
    return function LOG() {
      var ts = opts.timestamp();
      var args = new Array(arguments.length);
      var proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
      for (var i = 0; i < args.length; i++) args[i] = arguments[i];
      if (opts.serialize && !opts.asObject) {
        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
      }
      if (opts.asObject) write.call(proto, asObject(this, level, args, ts));else write.apply(proto, args);
      if (opts.transmit) {
        var transmitLevel = opts.transmit.level || logger.level;
        var transmitValue = pino.levels.values[transmitLevel];
        var methodValue = pino.levels.values[level];
        if (methodValue < transmitValue) return;
        transmit(this, {
          ts: ts,
          methodLevel: level,
          methodValue: methodValue,
          transmitLevel: transmitLevel,
          transmitValue: pino.levels.values[opts.transmit.level || logger.level],
          send: opts.transmit.send,
          val: logger.levelVal
        }, args);
      }
    };
  }(logger[level]);
}
function asObject(logger, level, args, ts) {
  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
  var argsCloned = args.slice();
  var msg = argsCloned[0];
  var o = {};
  if (ts) {
    o.time = ts;
  }
  o.level = pino.levels.values[level];
  var lvl = (logger._childLevel | 0) + 1;
  if (lvl < 1) lvl = 1;
  // deliberate, catching objects, arrays
  if (msg !== null && _typeof(msg) === 'object') {
    while (lvl-- && _typeof(argsCloned[0]) === 'object') {
      Object.assign(o, argsCloned.shift());
    }
    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined;
  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned);
  if (msg !== undefined) o.msg = msg;
  return o;
}
function applySerializers(args, serialize, serializers, stdErrSerialize) {
  for (var i in args) {
    if (stdErrSerialize && args[i] instanceof Error) {
      args[i] = pino.stdSerializers.err(args[i]);
    } else if (_typeof(args[i]) === 'object' && !Array.isArray(args[i])) {
      for (var k in args[i]) {
        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {
          args[i][k] = serializers[k](args[i][k]);
        }
      }
    }
  }
}
function bind(parent, bindings, level) {
  return function () {
    var args = new Array(1 + arguments.length);
    args[0] = bindings;
    for (var i = 1; i < args.length; i++) {
      args[i] = arguments[i - 1];
    }
    return parent[level].apply(this, args);
  };
}
function transmit(logger, opts, args) {
  var send = opts.send;
  var ts = opts.ts;
  var methodLevel = opts.methodLevel;
  var methodValue = opts.methodValue;
  var val = opts.val;
  var bindings = logger._logEvent.bindings;
  applySerializers(args, logger._serialize || Object.keys(logger.serializers), logger.serializers, logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize);
  logger._logEvent.ts = ts;
  logger._logEvent.messages = args.filter(function (arg) {
    // bindings can only be objects, so reference equality check via indexOf is fine
    return bindings.indexOf(arg) === -1;
  });
  logger._logEvent.level.label = methodLevel;
  logger._logEvent.level.value = methodValue;
  send(methodLevel, logger._logEvent, val);
  logger._logEvent = createLogEventShape(bindings);
}
function createLogEventShape(bindings) {
  return {
    ts: 0,
    messages: [],
    bindings: bindings || [],
    level: {
      label: '',
      value: 0
    }
  };
}
function asErrValue(err) {
  var obj = {
    type: err.constructor.name,
    msg: err.message,
    stack: err.stack
  };
  for (var key in err) {
    if (obj[key] === undefined) {
      obj[key] = err[key];
    }
  }
  return obj;
}
function getTimeFunction(opts) {
  if (typeof opts.timestamp === 'function') {
    return opts.timestamp;
  }
  if (opts.timestamp === false) {
    return nullTime;
  }
  return epochTime;
}
function mock() {
  return {};
}
function passthrough(a) {
  return a;
}
function noop() {}
function nullTime() {
  return false;
}
function epochTime() {
  return Date.now();
}
function unixTime() {
  return Math.round(Date.now() / 1000.0);
}
function isoTime() {
  return new Date(Date.now()).toISOString();
} // using Date.now() for testability

/* eslint-disable */
/* istanbul ignore next */
function pfGlobalThisOrFallback() {
  function defd(o) {
    return typeof o !== 'undefined' && o;
  }
  try {
    if (typeof globalThis !== 'undefined') return globalThis;
    Object.defineProperty(Object.prototype, 'globalThis', {
      get: function get() {
        delete Object.prototype.globalThis;
        return this.globalThis = this;
      },
      configurable: true
    });
    return globalThis;
  } catch (e) {
    return defd(self) || defd(window) || defd(this) || {};
  }
}
/* eslint-enable */

var qt$5 = /*@__PURE__*/getDefaultExportFromCjs$1(browser$3);

var c$2 = {
    level: "info"
  },
  n$4 = "custom_context",
  l$4 = 1e3 * 1024;
var O$6 = /*#__PURE__*/function () {
  function O(e) {
    _classCallCheck(this, O);
    this.nodeValue = e, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;
  }
  return _createClass(O, [{
    key: "value",
    get: function get() {
      return this.nodeValue;
    }
  }, {
    key: "size",
    get: function get() {
      return this.sizeInBytes;
    }
  }]);
}();
var d$4 = /*#__PURE__*/function () {
  function d(e) {
    _classCallCheck(this, d);
    this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e, this.sizeInBytes = 0;
  }
  return _createClass(d, [{
    key: "append",
    value: function append(e) {
      var t = new O$6(e);
      if (t.size > this.maxSizeInBytes) throw new Error("[LinkedList] Value too big to insert into list: ".concat(e, " with size ").concat(t.size));
      for (; this.size + t.size > this.maxSizeInBytes;) this.shift();
      this.head ? (this.tail && (this.tail.next = t), this.tail = t) : (this.head = t, this.tail = t), this.lengthInNodes++, this.sizeInBytes += t.size;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (!this.head) return;
      var e = this.head;
      this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e.size;
    }
  }, {
    key: "toArray",
    value: function toArray() {
      var e = [];
      var t = this.head;
      for (; t !== null;) e.push(t.value), t = t.next;
      return e;
    }
  }, {
    key: "length",
    get: function get() {
      return this.lengthInNodes;
    }
  }, {
    key: "size",
    get: function get() {
      return this.sizeInBytes;
    }
  }, {
    key: "toOrderedArray",
    value: function toOrderedArray() {
      return Array.from(this);
    }
  }, {
    key: Symbol.iterator,
    value: function value() {
      var e = this.head;
      return {
        next: function next() {
          if (!e) return {
            done: !0,
            value: null
          };
          var t = e.value;
          return e = e.next, {
            done: !1,
            value: t
          };
        }
      };
    }
  }]);
}();
var L$4 = /*#__PURE__*/function () {
  function L(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : l$4;
    _classCallCheck(this, L);
    this.level = e !== null && e !== void 0 ? e : "error", this.levelValue = browser$3.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t, this.logs = new d$4(this.MAX_LOG_SIZE_IN_BYTES);
  }
  return _createClass(L, [{
    key: "forwardToConsole",
    value: function forwardToConsole(e, t) {
      t === browser$3.levels.values.error ? console.error(e) : t === browser$3.levels.values.warn ? console.warn(e) : t === browser$3.levels.values.debug ? console.debug(e) : t === browser$3.levels.values.trace ? console.trace(e) : console.log(e);
    }
  }, {
    key: "appendToLogs",
    value: function appendToLogs(e) {
      this.logs.append(safeJsonStringify({
        timestamp: new Date().toISOString(),
        log: e
      }));
      var t = typeof e == "string" ? JSON.parse(e).level : e.level;
      t >= this.levelValue && this.forwardToConsole(e, t);
    }
  }, {
    key: "getLogs",
    value: function getLogs() {
      return this.logs;
    }
  }, {
    key: "clearLogs",
    value: function clearLogs() {
      this.logs = new d$4(this.MAX_LOG_SIZE_IN_BYTES);
    }
  }, {
    key: "getLogArray",
    value: function getLogArray() {
      return Array.from(this.logs);
    }
  }, {
    key: "logsToBlob",
    value: function logsToBlob(e) {
      var t = this.getLogArray();
      return t.push(safeJsonStringify({
        extraMetadata: e
      })), new Blob(t, {
        type: "application/json"
      });
    }
  }]);
}();
var m$3 = /*#__PURE__*/function () {
  function m(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : l$4;
    _classCallCheck(this, m);
    this.baseChunkLogger = new L$4(e, t);
  }
  return _createClass(m, [{
    key: "write",
    value: function write(e) {
      this.baseChunkLogger.appendToLogs(e);
    }
  }, {
    key: "getLogs",
    value: function getLogs() {
      return this.baseChunkLogger.getLogs();
    }
  }, {
    key: "clearLogs",
    value: function clearLogs() {
      this.baseChunkLogger.clearLogs();
    }
  }, {
    key: "getLogArray",
    value: function getLogArray() {
      return this.baseChunkLogger.getLogArray();
    }
  }, {
    key: "logsToBlob",
    value: function logsToBlob(e) {
      return this.baseChunkLogger.logsToBlob(e);
    }
  }, {
    key: "downloadLogsBlobInBrowser",
    value: function downloadLogsBlobInBrowser(e) {
      var t = URL.createObjectURL(this.logsToBlob(e)),
        o = document.createElement("a");
      o.href = t, o.download = "walletconnect-logs-".concat(new Date().toISOString(), ".txt"), document.body.appendChild(o), o.click(), document.body.removeChild(o), URL.revokeObjectURL(t);
    }
  }]);
}();
var B$4 = /*#__PURE__*/function () {
  function B(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : l$4;
    _classCallCheck(this, B);
    this.baseChunkLogger = new L$4(e, t);
  }
  return _createClass(B, [{
    key: "write",
    value: function write(e) {
      this.baseChunkLogger.appendToLogs(e);
    }
  }, {
    key: "getLogs",
    value: function getLogs() {
      return this.baseChunkLogger.getLogs();
    }
  }, {
    key: "clearLogs",
    value: function clearLogs() {
      this.baseChunkLogger.clearLogs();
    }
  }, {
    key: "getLogArray",
    value: function getLogArray() {
      return this.baseChunkLogger.getLogArray();
    }
  }, {
    key: "logsToBlob",
    value: function logsToBlob(e) {
      return this.baseChunkLogger.logsToBlob(e);
    }
  }]);
}();
var x$7 = Object.defineProperty,
  S$a = Object.defineProperties,
  _$4 = Object.getOwnPropertyDescriptors,
  p$4 = Object.getOwnPropertySymbols,
  T$1 = Object.prototype.hasOwnProperty,
  z$7 = Object.prototype.propertyIsEnumerable,
  f$6 = function f(r, e, t) {
    return e in r ? x$7(r, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : r[e] = t;
  },
  i$1 = function i(r, e) {
    for (var t in e || (e = {})) T$1.call(e, t) && f$6(r, t, e[t]);
    if (p$4) {
      var _iterator = _createForOfIteratorHelper(p$4(e)),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var t = _step.value;
          z$7.call(e, t) && f$6(r, t, e[t]);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return r;
  },
  g$6 = function g(r, e) {
    return S$a(r, _$4(e));
  };
function k$4(r) {
  return g$6(i$1({}, r), {
    level: (r === null || r === void 0 ? void 0 : r.level) || c$2.level
  });
}
function v$6(r) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : n$4;
  return r[e] || "";
}
function b$7(r, e) {
  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : n$4;
  return r[t] = e, r;
}
function y$5(r) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : n$4;
  var t = "";
  return _typeof(r.bindings) > "u" ? t = v$6(r, e) : t = r.bindings().context || "", t;
}
function w$5(r, e) {
  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : n$4;
  var o = y$5(r, t);
  return o.trim() ? "".concat(o, "/").concat(e) : e;
}
function E$4(r, e) {
  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : n$4;
  var o = w$5(r, e, t),
    a = r.child({
      context: o
    });
  return b$7(a, o, t);
}
function C$6(r) {
  var e, t;
  var o = new m$3((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);
  return {
    logger: qt$5(g$6(i$1({}, r.opts), {
      level: "trace",
      browser: g$6(i$1({}, (t = r.opts) == null ? void 0 : t.browser), {
        write: function write(a) {
          return o.write(a);
        }
      })
    })),
    chunkLoggerController: o
  };
}
function I$8(r) {
  var e;
  var t = new B$4((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);
  return {
    logger: qt$5(g$6(i$1({}, r.opts), {
      level: "trace"
    }), t),
    chunkLoggerController: t
  };
}
function A$3(r) {
  return _typeof(r.loggerOverride) < "u" && typeof r.loggerOverride != "string" ? {
    logger: r.loggerOverride,
    chunkLoggerController: null
  } : (typeof window === "undefined" ? "undefined" : _typeof(window)) < "u" ? C$6(r) : I$8(r);
}

var n$3 = /*#__PURE__*/function (_o) {
  function n(s) {
    var _this;
    _classCallCheck(this, n);
    _this = _callSuper(this, n), _this.opts = s, _this.protocol = "wc", _this.version = 2;
    return _this;
  }
  _inherits(n, _o);
  return _createClass(n);
}(IEvents);
var l$3 = /*#__PURE__*/_createClass(function l(s, t, e) {
  _classCallCheck(this, l);
  this.core = s, this.logger = t;
});
var h$3 = /*#__PURE__*/function (_o2) {
  function h(s, t) {
    var _this2;
    _classCallCheck(this, h);
    _this2 = _callSuper(this, h), _this2.core = s, _this2.logger = t, _this2.records = new Map();
    return _this2;
  }
  _inherits(h, _o2);
  return _createClass(h);
}(IEvents);
var a$3 = /*#__PURE__*/_createClass(function a(s, t) {
  _classCallCheck(this, a);
  this.logger = s, this.core = t;
});
var g$5 = /*#__PURE__*/function (_o3) {
  function g(s, t) {
    var _this3;
    _classCallCheck(this, g);
    _this3 = _callSuper(this, g), _this3.relayer = s, _this3.logger = t;
    return _this3;
  }
  _inherits(g, _o3);
  return _createClass(g);
}(IEvents);
var u$2 = /*#__PURE__*/function (_o4) {
  function u(s) {
    _classCallCheck(this, u);
    return _callSuper(this, u);
  }
  _inherits(u, _o4);
  return _createClass(u);
}(IEvents);
var p$3 = /*#__PURE__*/_createClass(function p(s, t, e, f) {
  _classCallCheck(this, p);
  this.core = s, this.logger = t, this.name = e;
});
var I$7 = /*#__PURE__*/_createClass(function I() {
  _classCallCheck(this, I);
  this.map = new Map();
});
var d$3 = /*#__PURE__*/function (_o5) {
  function d(s, t) {
    var _this4;
    _classCallCheck(this, d);
    _this4 = _callSuper(this, d), _this4.relayer = s, _this4.logger = t;
    return _this4;
  }
  _inherits(d, _o5);
  return _createClass(d);
}(IEvents);
var E$3 = /*#__PURE__*/_createClass(function E(s, t) {
  _classCallCheck(this, E);
  this.core = s, this.logger = t;
});
var x$6 = /*#__PURE__*/function (_o6) {
  function x(s, t) {
    var _this5;
    _classCallCheck(this, x);
    _this5 = _callSuper(this, x), _this5.core = s, _this5.logger = t;
    return _this5;
  }
  _inherits(x, _o6);
  return _createClass(x);
}(IEvents);
var m$2 = /*#__PURE__*/_createClass(function m(s, t) {
  _classCallCheck(this, m);
  this.logger = s, this.core = t;
});
var y$4 = /*#__PURE__*/_createClass(function y(s, t, e) {
  _classCallCheck(this, y);
  this.core = s, this.logger = t, this.store = e;
});
var v$5 = /*#__PURE__*/_createClass(function v(s, t) {
  _classCallCheck(this, v);
  this.projectId = s, this.logger = t;
});
var C$5 = /*#__PURE__*/_createClass(function C(s, t, e) {
  _classCallCheck(this, C);
  this.core = s, this.logger = t, this.telemetryEnabled = e;
});
var b$6 = /*#__PURE__*/function (_c) {
  function b() {
    _classCallCheck(this, b);
    return _callSuper(this, b);
  }
  _inherits(b, _c);
  return _createClass(b);
}(es);
var S$9 = /*#__PURE__*/_createClass(function S(s) {
  _classCallCheck(this, S);
  this.opts = s, this.protocol = "wc", this.version = 2;
});
var w$4 = /*#__PURE__*/function (_i) {
  function w() {
    _classCallCheck(this, w);
    return _callSuper(this, w);
  }
  _inherits(w, _i);
  return _createClass(w);
}(eventsExports.EventEmitter);
var M$6 = /*#__PURE__*/_createClass(function M(s) {
  _classCallCheck(this, M);
  this.client = s;
});

var ed25519$1 = {};

var random$1 = {};

var system = {};

var browser$2 = {};

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(browser$2, "__esModule", {
  value: true
});
var BrowserRandomSource_1 = browser$2.BrowserRandomSource = void 0;
var QUOTA = 65536;
var BrowserRandomSource = /*#__PURE__*/function () {
  function BrowserRandomSource() {
    _classCallCheck(this, BrowserRandomSource);
    this.isAvailable = false;
    this.isInstantiated = false;
    var browserCrypto = typeof self !== 'undefined' ? self.crypto || self.msCrypto // IE11 has msCrypto
    : null;
    if (browserCrypto && browserCrypto.getRandomValues !== undefined) {
      this._crypto = browserCrypto;
      this.isAvailable = true;
      this.isInstantiated = true;
    }
  }
  return _createClass(BrowserRandomSource, [{
    key: "randomBytes",
    value: function randomBytes(length) {
      if (!this.isAvailable || !this._crypto) {
        throw new Error("Browser random byte generator is not available.");
      }
      var out = new Uint8Array(length);
      for (var i = 0; i < out.length; i += QUOTA) {
        this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));
      }
      return out;
    }
  }]);
}();
BrowserRandomSource_1 = browser$2.BrowserRandomSource = BrowserRandomSource;

function commonjsRequire$1(path) {
	throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}

var node = {};

var wipe$1 = {};

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(wipe$1, "__esModule", {
  value: true
});
/**
 * Sets all values in the given array to zero and returns it.
 *
 * The fact that it sets bytes to zero can be relied on.
 *
 * There is no guarantee that this function makes data disappear from memory,
 * as runtime implementation can, for example, have copying garbage collector
 * that will make copies of sensitive data before we wipe it. Or that an
 * operating system will write our data to swap or sleep image. Another thing
 * is that an optimizing compiler can remove calls to this function or make it
 * no-op. There's nothing we can do with it, so we just do our best and hope
 * that everything will be okay and good will triumph over evil.
 */
function wipe(array) {
  // Right now it's similar to array.fill(0). If it turns
  // out that runtimes optimize this call away, maybe
  // we can try something else.
  for (var i = 0; i < array.length; i++) {
    array[i] = 0;
  }
  return array;
}
var wipe_2 = wipe$1.wipe = wipe;

var _nodeResolve_empty = {};

var _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  default: _nodeResolve_empty
});

var require$$0$3 = /*@__PURE__*/getAugmentedNamespace$1(_nodeResolve_empty$1);

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(node, "__esModule", {
  value: true
});
var NodeRandomSource_1 = node.NodeRandomSource = void 0;
var wipe_1$3 = wipe$1;
var NodeRandomSource = /*#__PURE__*/function () {
  function NodeRandomSource() {
    _classCallCheck(this, NodeRandomSource);
    this.isAvailable = false;
    this.isInstantiated = false;
    if (typeof commonjsRequire$1 !== "undefined") {
      var nodeCrypto = require$$0$3;
      if (nodeCrypto && nodeCrypto.randomBytes) {
        this._crypto = nodeCrypto;
        this.isAvailable = true;
        this.isInstantiated = true;
      }
    }
  }
  return _createClass(NodeRandomSource, [{
    key: "randomBytes",
    value: function randomBytes(length) {
      if (!this.isAvailable || !this._crypto) {
        throw new Error("Node.js random byte generator is not available.");
      }
      // Get random bytes (result is Buffer).
      var buffer = this._crypto.randomBytes(length);
      // Make sure we got the length that we requested.
      if (buffer.length !== length) {
        throw new Error("NodeRandomSource: got fewer bytes than requested");
      }
      // Allocate output array.
      var out = new Uint8Array(length);
      // Copy bytes from buffer to output.
      for (var i = 0; i < out.length; i++) {
        out[i] = buffer[i];
      }
      // Cleanup.
      (0, wipe_1$3.wipe)(buffer);
      return out;
    }
  }]);
}();
NodeRandomSource_1 = node.NodeRandomSource = NodeRandomSource;

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(system, "__esModule", {
  value: true
});
var SystemRandomSource_1 = system.SystemRandomSource = void 0;
var browser_1 = browser$2;
var node_1 = node;
var SystemRandomSource = /*#__PURE__*/function () {
  function SystemRandomSource() {
    _classCallCheck(this, SystemRandomSource);
    this.isAvailable = false;
    this.name = "";
    // Try browser.
    this._source = new browser_1.BrowserRandomSource();
    if (this._source.isAvailable) {
      this.isAvailable = true;
      this.name = "Browser";
      return;
    }
    // If no browser source, try Node.
    this._source = new node_1.NodeRandomSource();
    if (this._source.isAvailable) {
      this.isAvailable = true;
      this.name = "Node";
      return;
    }
    // No sources, we're out of options.
  }
  return _createClass(SystemRandomSource, [{
    key: "randomBytes",
    value: function randomBytes(length) {
      if (!this.isAvailable) {
        throw new Error("System random byte generator is not available.");
      }
      return this._source.randomBytes(length);
    }
  }]);
}();
SystemRandomSource_1 = system.SystemRandomSource = SystemRandomSource;

var binary = {};

var int$1 = {};

(function (exports) {
  "use strict";

  // Copyright (C) 2016 Dmitry Chestnykh
  // MIT License. See LICENSE file for details.
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
   * Package int provides helper functions for integerss.
   */
  // Shim using 16-bit pieces.
  function imulShim(a, b) {
    var ah = a >>> 16 & 0xffff,
      al = a & 0xffff;
    var bh = b >>> 16 & 0xffff,
      bl = b & 0xffff;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  }
  /** 32-bit integer multiplication.  */
  // Use system Math.imul if available, otherwise use our shim.
  exports.mul = Math.imul || imulShim;
  /** 32-bit integer addition.  */
  function add(a, b) {
    return a + b | 0;
  }
  exports.add = add;
  /**  32-bit integer subtraction.  */
  function sub(a, b) {
    return a - b | 0;
  }
  exports.sub = sub;
  /** 32-bit integer left rotation */
  function rotl(x, n) {
    return x << n | x >>> 32 - n;
  }
  exports.rotl = rotl;
  /** 32-bit integer left rotation */
  function rotr(x, n) {
    return x << 32 - n | x >>> n;
  }
  exports.rotr = rotr;
  function isIntegerShim(n) {
    return typeof n === "number" && isFinite(n) && Math.floor(n) === n;
  }
  /**
   * Returns true if the argument is an integer number.
   *
   * In ES2015, Number.isInteger.
   */
  exports.isInteger = Number.isInteger || isIntegerShim;
  /**
   *  Math.pow(2, 53) - 1
   *
   *  In ES2015 Number.MAX_SAFE_INTEGER.
   */
  exports.MAX_SAFE_INTEGER = 9007199254740991;
  /**
   * Returns true if the argument is a safe integer number
   * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)
   *
   * In ES2015, Number.isSafeInteger.
   */
  exports.isSafeInteger = function (n) {
    return exports.isInteger(n) && n >= -exports.MAX_SAFE_INTEGER && n <= exports.MAX_SAFE_INTEGER;
  };
})(int$1);
var int = /*@__PURE__*/getDefaultExportFromCjs$1(int$1);

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(binary, "__esModule", {
  value: true
});
/**
 * Package binary provides functions for encoding and decoding numbers in byte arrays.
 */
var int_1 = int$1;
// TODO(dchest): add asserts for correct value ranges and array offsets.
/**
 * Reads 2 bytes from array starting at offset as big-endian
 * signed 16-bit integer and returns it.
 */
function readInt16BE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  return (array[offset + 0] << 8 | array[offset + 1]) << 16 >> 16;
}
var readInt16BE_1 = binary.readInt16BE = readInt16BE;
/**
 * Reads 2 bytes from array starting at offset as big-endian
 * unsigned 16-bit integer and returns it.
 */
function readUint16BE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  return (array[offset + 0] << 8 | array[offset + 1]) >>> 0;
}
var readUint16BE_1 = binary.readUint16BE = readUint16BE;
/**
 * Reads 2 bytes from array starting at offset as little-endian
 * signed 16-bit integer and returns it.
 */
function readInt16LE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  return (array[offset + 1] << 8 | array[offset]) << 16 >> 16;
}
var readInt16LE_1 = binary.readInt16LE = readInt16LE;
/**
 * Reads 2 bytes from array starting at offset as little-endian
 * unsigned 16-bit integer and returns it.
 */
function readUint16LE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  return (array[offset + 1] << 8 | array[offset]) >>> 0;
}
var readUint16LE_1 = binary.readUint16LE = readUint16LE;
/**
 * Writes 2-byte big-endian representation of 16-bit unsigned
 * value to byte array starting at offset.
 *
 * If byte array is not given, creates a new 2-byte one.
 *
 * Returns the output byte array.
 */
function writeUint16BE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(2);
  }
  if (offset === void 0) {
    offset = 0;
  }
  out[offset + 0] = value >>> 8;
  out[offset + 1] = value >>> 0;
  return out;
}
var writeUint16BE_1 = binary.writeUint16BE = writeUint16BE;
var writeInt16BE = binary.writeInt16BE = writeUint16BE;
/**
 * Writes 2-byte little-endian representation of 16-bit unsigned
 * value to array starting at offset.
 *
 * If byte array is not given, creates a new 2-byte one.
 *
 * Returns the output byte array.
 */
function writeUint16LE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(2);
  }
  if (offset === void 0) {
    offset = 0;
  }
  out[offset + 0] = value >>> 0;
  out[offset + 1] = value >>> 8;
  return out;
}
var writeUint16LE_1 = binary.writeUint16LE = writeUint16LE;
var writeInt16LE = binary.writeInt16LE = writeUint16LE;
/**
 * Reads 4 bytes from array starting at offset as big-endian
 * signed 32-bit integer and returns it.
 */
function readInt32BE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  return array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3];
}
var readInt32BE_1 = binary.readInt32BE = readInt32BE;
/**
 * Reads 4 bytes from array starting at offset as big-endian
 * unsigned 32-bit integer and returns it.
 */
function readUint32BE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  return (array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3]) >>> 0;
}
var readUint32BE_1 = binary.readUint32BE = readUint32BE;
/**
 * Reads 4 bytes from array starting at offset as little-endian
 * signed 32-bit integer and returns it.
 */
function readInt32LE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  return array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset];
}
var readInt32LE_1 = binary.readInt32LE = readInt32LE;
/**
 * Reads 4 bytes from array starting at offset as little-endian
 * unsigned 32-bit integer and returns it.
 */
function readUint32LE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  return (array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset]) >>> 0;
}
var readUint32LE_1 = binary.readUint32LE = readUint32LE;
/**
 * Writes 4-byte big-endian representation of 32-bit unsigned
 * value to byte array starting at offset.
 *
 * If byte array is not given, creates a new 4-byte one.
 *
 * Returns the output byte array.
 */
function writeUint32BE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(4);
  }
  if (offset === void 0) {
    offset = 0;
  }
  out[offset + 0] = value >>> 24;
  out[offset + 1] = value >>> 16;
  out[offset + 2] = value >>> 8;
  out[offset + 3] = value >>> 0;
  return out;
}
var writeUint32BE_1 = binary.writeUint32BE = writeUint32BE;
var writeInt32BE = binary.writeInt32BE = writeUint32BE;
/**
 * Writes 4-byte little-endian representation of 32-bit unsigned
 * value to array starting at offset.
 *
 * If byte array is not given, creates a new 4-byte one.
 *
 * Returns the output byte array.
 */
function writeUint32LE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(4);
  }
  if (offset === void 0) {
    offset = 0;
  }
  out[offset + 0] = value >>> 0;
  out[offset + 1] = value >>> 8;
  out[offset + 2] = value >>> 16;
  out[offset + 3] = value >>> 24;
  return out;
}
var writeUint32LE_1 = binary.writeUint32LE = writeUint32LE;
var writeInt32LE = binary.writeInt32LE = writeUint32LE;
/**
 * Reads 8 bytes from array starting at offset as big-endian
 * signed 64-bit integer and returns it.
 *
 * IMPORTANT: due to JavaScript limitation, supports exact
 * numbers in range -9007199254740991 to 9007199254740991.
 * If the number stored in the byte array is outside this range,
 * the result is not exact.
 */
function readInt64BE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  var hi = readInt32BE(array, offset);
  var lo = readInt32BE(array, offset + 4);
  return hi * 0x100000000 + lo - (lo >> 31) * 0x100000000;
}
var readInt64BE_1 = binary.readInt64BE = readInt64BE;
/**
 * Reads 8 bytes from array starting at offset as big-endian
 * unsigned 64-bit integer and returns it.
 *
 * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.
 */
function readUint64BE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  var hi = readUint32BE(array, offset);
  var lo = readUint32BE(array, offset + 4);
  return hi * 0x100000000 + lo;
}
var readUint64BE_1 = binary.readUint64BE = readUint64BE;
/**
 * Reads 8 bytes from array starting at offset as little-endian
 * signed 64-bit integer and returns it.
 *
 * IMPORTANT: due to JavaScript limitation, supports exact
 * numbers in range -9007199254740991 to 9007199254740991.
 * If the number stored in the byte array is outside this range,
 * the result is not exact.
 */
function readInt64LE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  var lo = readInt32LE(array, offset);
  var hi = readInt32LE(array, offset + 4);
  return hi * 0x100000000 + lo - (lo >> 31) * 0x100000000;
}
var readInt64LE_1 = binary.readInt64LE = readInt64LE;
/**
 * Reads 8 bytes from array starting at offset as little-endian
 * unsigned 64-bit integer and returns it.
 *
 * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.
 */
function readUint64LE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  var lo = readUint32LE(array, offset);
  var hi = readUint32LE(array, offset + 4);
  return hi * 0x100000000 + lo;
}
var readUint64LE_1 = binary.readUint64LE = readUint64LE;
/**
 * Writes 8-byte big-endian representation of 64-bit unsigned
 * value to byte array starting at offset.
 *
 * Due to JavaScript limitation, supports values up to 2^53-1.
 *
 * If byte array is not given, creates a new 8-byte one.
 *
 * Returns the output byte array.
 */
function writeUint64BE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(8);
  }
  if (offset === void 0) {
    offset = 0;
  }
  writeUint32BE(value / 0x100000000 >>> 0, out, offset);
  writeUint32BE(value >>> 0, out, offset + 4);
  return out;
}
var writeUint64BE_1 = binary.writeUint64BE = writeUint64BE;
var writeInt64BE = binary.writeInt64BE = writeUint64BE;
/**
 * Writes 8-byte little-endian representation of 64-bit unsigned
 * value to byte array starting at offset.
 *
 * Due to JavaScript limitation, supports values up to 2^53-1.
 *
 * If byte array is not given, creates a new 8-byte one.
 *
 * Returns the output byte array.
 */
function writeUint64LE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(8);
  }
  if (offset === void 0) {
    offset = 0;
  }
  writeUint32LE(value >>> 0, out, offset);
  writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);
  return out;
}
var writeUint64LE_1 = binary.writeUint64LE = writeUint64LE;
var writeInt64LE = binary.writeInt64LE = writeUint64LE;
/**
 * Reads bytes from array starting at offset as big-endian
 * unsigned bitLen-bit integer and returns it.
 *
 * Supports bit lengths divisible by 8, up to 48.
 */
function readUintBE(bitLength, array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  // TODO(dchest): implement support for bitLengths non-divisible by 8
  if (bitLength % 8 !== 0) {
    throw new Error("readUintBE supports only bitLengths divisible by 8");
  }
  if (bitLength / 8 > array.length - offset) {
    throw new Error("readUintBE: array is too short for the given bitLength");
  }
  var result = 0;
  var mul = 1;
  for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {
    result += array[i] * mul;
    mul *= 256;
  }
  return result;
}
var readUintBE_1 = binary.readUintBE = readUintBE;
/**
 * Reads bytes from array starting at offset as little-endian
 * unsigned bitLen-bit integer and returns it.
 *
 * Supports bit lengths divisible by 8, up to 48.
 */
function readUintLE(bitLength, array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  // TODO(dchest): implement support for bitLengths non-divisible by 8
  if (bitLength % 8 !== 0) {
    throw new Error("readUintLE supports only bitLengths divisible by 8");
  }
  if (bitLength / 8 > array.length - offset) {
    throw new Error("readUintLE: array is too short for the given bitLength");
  }
  var result = 0;
  var mul = 1;
  for (var i = offset; i < offset + bitLength / 8; i++) {
    result += array[i] * mul;
    mul *= 256;
  }
  return result;
}
var readUintLE_1 = binary.readUintLE = readUintLE;
/**
 * Writes a big-endian representation of bitLen-bit unsigned
 * value to array starting at offset.
 *
 * Supports bit lengths divisible by 8, up to 48.
 *
 * If byte array is not given, creates a new one.
 *
 * Returns the output byte array.
 */
function writeUintBE(bitLength, value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(bitLength / 8);
  }
  if (offset === void 0) {
    offset = 0;
  }
  // TODO(dchest): implement support for bitLengths non-divisible by 8
  if (bitLength % 8 !== 0) {
    throw new Error("writeUintBE supports only bitLengths divisible by 8");
  }
  if (!int_1.isSafeInteger(value)) {
    throw new Error("writeUintBE value must be an integer");
  }
  var div = 1;
  for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {
    out[i] = value / div & 0xff;
    div *= 256;
  }
  return out;
}
var writeUintBE_1 = binary.writeUintBE = writeUintBE;
/**
 * Writes a little-endian representation of bitLen-bit unsigned
 * value to array starting at offset.
 *
 * Supports bit lengths divisible by 8, up to 48.
 *
 * If byte array is not given, creates a new one.
 *
 * Returns the output byte array.
 */
function writeUintLE(bitLength, value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(bitLength / 8);
  }
  if (offset === void 0) {
    offset = 0;
  }
  // TODO(dchest): implement support for bitLengths non-divisible by 8
  if (bitLength % 8 !== 0) {
    throw new Error("writeUintLE supports only bitLengths divisible by 8");
  }
  if (!int_1.isSafeInteger(value)) {
    throw new Error("writeUintLE value must be an integer");
  }
  var div = 1;
  for (var i = offset; i < offset + bitLength / 8; i++) {
    out[i] = value / div & 0xff;
    div *= 256;
  }
  return out;
}
var writeUintLE_1 = binary.writeUintLE = writeUintLE;
/**
 * Reads 4 bytes from array starting at offset as big-endian
 * 32-bit floating-point number and returns it.
 */
function readFloat32BE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
  return view.getFloat32(offset);
}
var readFloat32BE_1 = binary.readFloat32BE = readFloat32BE;
/**
 * Reads 4 bytes from array starting at offset as little-endian
 * 32-bit floating-point number and returns it.
 */
function readFloat32LE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
  return view.getFloat32(offset, true);
}
var readFloat32LE_1 = binary.readFloat32LE = readFloat32LE;
/**
 * Reads 8 bytes from array starting at offset as big-endian
 * 64-bit floating-point number ("double") and returns it.
 */
function readFloat64BE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
  return view.getFloat64(offset);
}
var readFloat64BE_1 = binary.readFloat64BE = readFloat64BE;
/**
 * Reads 8 bytes from array starting at offset as little-endian
 * 64-bit floating-point number ("double") and returns it.
 */
function readFloat64LE(array, offset) {
  if (offset === void 0) {
    offset = 0;
  }
  var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
  return view.getFloat64(offset, true);
}
var readFloat64LE_1 = binary.readFloat64LE = readFloat64LE;
/**
 * Writes 4-byte big-endian floating-point representation of value
 * to byte array starting at offset.
 *
 * If byte array is not given, creates a new 4-byte one.
 *
 * Returns the output byte array.
 */
function writeFloat32BE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(4);
  }
  if (offset === void 0) {
    offset = 0;
  }
  var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
  view.setFloat32(offset, value);
  return out;
}
var writeFloat32BE_1 = binary.writeFloat32BE = writeFloat32BE;
/**
 * Writes 4-byte little-endian floating-point representation of value
 * to byte array starting at offset.
 *
 * If byte array is not given, creates a new 4-byte one.
 *
 * Returns the output byte array.
 */
function writeFloat32LE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(4);
  }
  if (offset === void 0) {
    offset = 0;
  }
  var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
  view.setFloat32(offset, value, true);
  return out;
}
var writeFloat32LE_1 = binary.writeFloat32LE = writeFloat32LE;
/**
 * Writes 8-byte big-endian floating-point representation of value
 * to byte array starting at offset.
 *
 * If byte array is not given, creates a new 8-byte one.
 *
 * Returns the output byte array.
 */
function writeFloat64BE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(8);
  }
  if (offset === void 0) {
    offset = 0;
  }
  var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
  view.setFloat64(offset, value);
  return out;
}
var writeFloat64BE_1 = binary.writeFloat64BE = writeFloat64BE;
/**
 * Writes 8-byte little-endian floating-point representation of value
 * to byte array starting at offset.
 *
 * If byte array is not given, creates a new 8-byte one.
 *
 * Returns the output byte array.
 */
function writeFloat64LE(value, out, offset) {
  if (out === void 0) {
    out = new Uint8Array(8);
  }
  if (offset === void 0) {
    offset = 0;
  }
  var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
  view.setFloat64(offset, value, true);
  return out;
}
var writeFloat64LE_1 = binary.writeFloat64LE = writeFloat64LE;

(function (exports) {
  "use strict";

  // Copyright (C) 2016 Dmitry Chestnykh
  // MIT License. See LICENSE file for details.
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;
  var system_1 = system;
  var binary_1 = binary;
  var wipe_1 = wipe$1;
  exports.defaultRandomSource = new system_1.SystemRandomSource();
  function randomBytes(length) {
    var prng = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : exports.defaultRandomSource;
    return prng.randomBytes(length);
  }
  exports.randomBytes = randomBytes;
  /**
   * Returns a uniformly random unsigned 32-bit integer.
   */
  function randomUint32() {
    var prng = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exports.defaultRandomSource;
    // Generate 4-byte random buffer.
    var buf = randomBytes(4, prng);
    // Convert bytes from buffer into a 32-bit integer.
    // It's not important which byte order to use, since
    // the result is random.
    var result = (0, binary_1.readUint32LE)(buf);
    // Clean the buffer.
    (0, wipe_1.wipe)(buf);
    return result;
  }
  exports.randomUint32 = randomUint32;
  /** 62 alphanumeric characters for default charset of randomString() */
  var ALPHANUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
  /**
   * Returns a uniform random string of the given length
   * with characters from the given charset.
   *
   * Charset must not have more than 256 characters.
   *
   * Default charset generates case-sensitive alphanumeric
   * strings (0-9, A-Z, a-z).
   */
  function randomString(length) {
    var charset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ALPHANUMERIC;
    var prng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : exports.defaultRandomSource;
    if (charset.length < 2) {
      throw new Error("randomString charset is too short");
    }
    if (charset.length > 256) {
      throw new Error("randomString charset is too long");
    }
    var out = '';
    var charsLen = charset.length;
    var maxByte = 256 - 256 % charsLen;
    while (length > 0) {
      var buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);
      for (var i = 0; i < buf.length && length > 0; i++) {
        var randomByte = buf[i];
        if (randomByte < maxByte) {
          out += charset.charAt(randomByte % charsLen);
          length--;
        }
      }
      (0, wipe_1.wipe)(buf);
    }
    return out;
  }
  exports.randomString = randomString;
  /**
   * Returns uniform random string containing at least the given
   * number of bits of entropy.
   *
   * For example, randomStringForEntropy(128) will return a 22-character
   * alphanumeric string, while randomStringForEntropy(128, "0123456789")
   * will return a 39-character numeric string, both will contain at
   * least 128 bits of entropy.
   *
   * Default charset generates case-sensitive alphanumeric
   * strings (0-9, A-Z, a-z).
   */
  function randomStringForEntropy(bits) {
    var charset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ALPHANUMERIC;
    var prng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : exports.defaultRandomSource;
    var length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));
    return randomString(length, charset, prng);
  }
  exports.randomStringForEntropy = randomStringForEntropy;
})(random$1);
var random = /*@__PURE__*/getDefaultExportFromCjs$1(random$1);

var sha512$3 = {};

(function (exports) {
  "use strict";

  // Copyright (C) 2016 Dmitry Chestnykh
  // MIT License. See LICENSE file for details.
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var binary_1 = binary;
  var wipe_1 = wipe$1;
  exports.DIGEST_LENGTH = 64;
  exports.BLOCK_SIZE = 128;
  /**
   * SHA-2-512 cryptographic hash algorithm.
   */
  var SHA512 = /** @class */function () {
    function SHA512() {
      /** Length of hash output */
      this.digestLength = exports.DIGEST_LENGTH;
      /** Block size */
      this.blockSize = exports.BLOCK_SIZE;
      // Note: Int32Array is used instead of Uint32Array for performance reasons.
      this._stateHi = new Int32Array(8); // hash state, high bytes
      this._stateLo = new Int32Array(8); // hash state, low bytes
      this._tempHi = new Int32Array(16); // temporary state, high bytes
      this._tempLo = new Int32Array(16); // temporary state, low bytes
      this._buffer = new Uint8Array(256); // buffer for data to hash
      this._bufferLength = 0; // number of bytes in buffer
      this._bytesHashed = 0; // number of total bytes hashed
      this._finished = false; // indicates whether the hash was finalized
      this.reset();
    }
    SHA512.prototype._initState = function () {
      this._stateHi[0] = 0x6a09e667;
      this._stateHi[1] = 0xbb67ae85;
      this._stateHi[2] = 0x3c6ef372;
      this._stateHi[3] = 0xa54ff53a;
      this._stateHi[4] = 0x510e527f;
      this._stateHi[5] = 0x9b05688c;
      this._stateHi[6] = 0x1f83d9ab;
      this._stateHi[7] = 0x5be0cd19;
      this._stateLo[0] = 0xf3bcc908;
      this._stateLo[1] = 0x84caa73b;
      this._stateLo[2] = 0xfe94f82b;
      this._stateLo[3] = 0x5f1d36f1;
      this._stateLo[4] = 0xade682d1;
      this._stateLo[5] = 0x2b3e6c1f;
      this._stateLo[6] = 0xfb41bd6b;
      this._stateLo[7] = 0x137e2179;
    };
    /**
     * Resets hash state making it possible
     * to re-use this instance to hash other data.
     */
    SHA512.prototype.reset = function () {
      this._initState();
      this._bufferLength = 0;
      this._bytesHashed = 0;
      this._finished = false;
      return this;
    };
    /**
     * Cleans internal buffers and resets hash state.
     */
    SHA512.prototype.clean = function () {
      wipe_1.wipe(this._buffer);
      wipe_1.wipe(this._tempHi);
      wipe_1.wipe(this._tempLo);
      this.reset();
    };
    /**
     * Updates hash state with the given data.
     *
     * Throws error when trying to update already finalized hash:
     * instance must be reset to update it again.
     */
    SHA512.prototype.update = function (data, dataLength) {
      if (dataLength === void 0) {
        dataLength = data.length;
      }
      if (this._finished) {
        throw new Error("SHA512: can't update because hash was finished.");
      }
      var dataPos = 0;
      this._bytesHashed += dataLength;
      if (this._bufferLength > 0) {
        while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {
          this._buffer[this._bufferLength++] = data[dataPos++];
          dataLength--;
        }
        if (this._bufferLength === this.blockSize) {
          hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);
          this._bufferLength = 0;
        }
      }
      if (dataLength >= this.blockSize) {
        dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);
        dataLength %= this.blockSize;
      }
      while (dataLength > 0) {
        this._buffer[this._bufferLength++] = data[dataPos++];
        dataLength--;
      }
      return this;
    };
    /**
     * Finalizes hash state and puts hash into out.
     * If hash was already finalized, puts the same value.
     */
    SHA512.prototype.finish = function (out) {
      if (!this._finished) {
        var bytesHashed = this._bytesHashed;
        var left = this._bufferLength;
        var bitLenHi = bytesHashed / 0x20000000 | 0;
        var bitLenLo = bytesHashed << 3;
        var padLength = bytesHashed % 128 < 112 ? 128 : 256;
        this._buffer[left] = 0x80;
        for (var i = left + 1; i < padLength - 8; i++) {
          this._buffer[i] = 0;
        }
        binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
        binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
        hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);
        this._finished = true;
      }
      for (var i = 0; i < this.digestLength / 8; i++) {
        binary_1.writeUint32BE(this._stateHi[i], out, i * 8);
        binary_1.writeUint32BE(this._stateLo[i], out, i * 8 + 4);
      }
      return this;
    };
    /**
     * Returns the final hash digest.
     */
    SHA512.prototype.digest = function () {
      var out = new Uint8Array(this.digestLength);
      this.finish(out);
      return out;
    };
    /**
     * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be
     * used with restoreState(). Only chain value is saved, not buffers or
     * other state variables.
     */
    SHA512.prototype.saveState = function () {
      if (this._finished) {
        throw new Error("SHA256: cannot save finished state");
      }
      return {
        stateHi: new Int32Array(this._stateHi),
        stateLo: new Int32Array(this._stateLo),
        buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,
        bufferLength: this._bufferLength,
        bytesHashed: this._bytesHashed
      };
    };
    /**
     * Function useful for HMAC/PBKDF2 optimization. Restores state saved by
     * saveState() and sets bytesHashed to the given value.
     */
    SHA512.prototype.restoreState = function (savedState) {
      this._stateHi.set(savedState.stateHi);
      this._stateLo.set(savedState.stateLo);
      this._bufferLength = savedState.bufferLength;
      if (savedState.buffer) {
        this._buffer.set(savedState.buffer);
      }
      this._bytesHashed = savedState.bytesHashed;
      this._finished = false;
      return this;
    };
    /**
     * Cleans state returned by saveState().
     */
    SHA512.prototype.cleanSavedState = function (savedState) {
      wipe_1.wipe(savedState.stateHi);
      wipe_1.wipe(savedState.stateLo);
      if (savedState.buffer) {
        wipe_1.wipe(savedState.buffer);
      }
      savedState.bufferLength = 0;
      savedState.bytesHashed = 0;
    };
    return SHA512;
  }();
  exports.SHA512 = SHA512;
  // Constants
  var K = new Int32Array([0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817]);
  function hashBlocks(wh, wl, hh, hl, m, pos, len) {
    var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],
      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];
    var h, l;
    var th, tl;
    var a, b, c, d;
    while (len >= 128) {
      for (var i = 0; i < 16; i++) {
        var j = 8 * i + pos;
        wh[i] = binary_1.readUint32BE(m, j);
        wl[i] = binary_1.readUint32BE(m, j + 4);
      }
      for (var i = 0; i < 80; i++) {
        var bh0 = ah0;
        var bh1 = ah1;
        var bh2 = ah2;
        var bh3 = ah3;
        var bh4 = ah4;
        var bh5 = ah5;
        var bh6 = ah6;
        var bh7 = ah7;
        var bl0 = al0;
        var bl1 = al1;
        var bl2 = al2;
        var bl3 = al3;
        var bl4 = al4;
        var bl5 = al5;
        var bl6 = al6;
        var bl7 = al7;
        // add
        h = ah7;
        l = al7;
        a = l & 0xffff;
        b = l >>> 16;
        c = h & 0xffff;
        d = h >>> 16;
        // Sigma1
        h = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));
        l = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        // Ch
        h = ah4 & ah5 ^ ~ah4 & ah6;
        l = al4 & al5 ^ ~al4 & al6;
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        // K
        h = K[i * 2];
        l = K[i * 2 + 1];
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        // w
        h = wh[i % 16];
        l = wl[i % 16];
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        b += a >>> 16;
        c += b >>> 16;
        d += c >>> 16;
        th = c & 0xffff | d << 16;
        tl = a & 0xffff | b << 16;
        // add
        h = th;
        l = tl;
        a = l & 0xffff;
        b = l >>> 16;
        c = h & 0xffff;
        d = h >>> 16;
        // Sigma0
        h = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));
        l = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        // Maj
        h = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;
        l = al0 & al1 ^ al0 & al2 ^ al1 & al2;
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        b += a >>> 16;
        c += b >>> 16;
        d += c >>> 16;
        bh7 = c & 0xffff | d << 16;
        bl7 = a & 0xffff | b << 16;
        // add
        h = bh3;
        l = bl3;
        a = l & 0xffff;
        b = l >>> 16;
        c = h & 0xffff;
        d = h >>> 16;
        h = th;
        l = tl;
        a += l & 0xffff;
        b += l >>> 16;
        c += h & 0xffff;
        d += h >>> 16;
        b += a >>> 16;
        c += b >>> 16;
        d += c >>> 16;
        bh3 = c & 0xffff | d << 16;
        bl3 = a & 0xffff | b << 16;
        ah1 = bh0;
        ah2 = bh1;
        ah3 = bh2;
        ah4 = bh3;
        ah5 = bh4;
        ah6 = bh5;
        ah7 = bh6;
        ah0 = bh7;
        al1 = bl0;
        al2 = bl1;
        al3 = bl2;
        al4 = bl3;
        al5 = bl4;
        al6 = bl5;
        al7 = bl6;
        al0 = bl7;
        if (i % 16 === 15) {
          for (var j = 0; j < 16; j++) {
            // add
            h = wh[j];
            l = wl[j];
            a = l & 0xffff;
            b = l >>> 16;
            c = h & 0xffff;
            d = h >>> 16;
            h = wh[(j + 9) % 16];
            l = wl[(j + 9) % 16];
            a += l & 0xffff;
            b += l >>> 16;
            c += h & 0xffff;
            d += h >>> 16;
            // sigma0
            th = wh[(j + 1) % 16];
            tl = wl[(j + 1) % 16];
            h = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;
            l = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);
            a += l & 0xffff;
            b += l >>> 16;
            c += h & 0xffff;
            d += h >>> 16;
            // sigma1
            th = wh[(j + 14) % 16];
            tl = wl[(j + 14) % 16];
            h = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;
            l = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);
            a += l & 0xffff;
            b += l >>> 16;
            c += h & 0xffff;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            wh[j] = c & 0xffff | d << 16;
            wl[j] = a & 0xffff | b << 16;
          }
        }
      }
      // add
      h = ah0;
      l = al0;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[0];
      l = hl[0];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[0] = ah0 = c & 0xffff | d << 16;
      hl[0] = al0 = a & 0xffff | b << 16;
      h = ah1;
      l = al1;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[1];
      l = hl[1];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[1] = ah1 = c & 0xffff | d << 16;
      hl[1] = al1 = a & 0xffff | b << 16;
      h = ah2;
      l = al2;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[2];
      l = hl[2];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[2] = ah2 = c & 0xffff | d << 16;
      hl[2] = al2 = a & 0xffff | b << 16;
      h = ah3;
      l = al3;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[3];
      l = hl[3];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[3] = ah3 = c & 0xffff | d << 16;
      hl[3] = al3 = a & 0xffff | b << 16;
      h = ah4;
      l = al4;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[4];
      l = hl[4];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[4] = ah4 = c & 0xffff | d << 16;
      hl[4] = al4 = a & 0xffff | b << 16;
      h = ah5;
      l = al5;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[5];
      l = hl[5];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[5] = ah5 = c & 0xffff | d << 16;
      hl[5] = al5 = a & 0xffff | b << 16;
      h = ah6;
      l = al6;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[6];
      l = hl[6];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[6] = ah6 = c & 0xffff | d << 16;
      hl[6] = al6 = a & 0xffff | b << 16;
      h = ah7;
      l = al7;
      a = l & 0xffff;
      b = l >>> 16;
      c = h & 0xffff;
      d = h >>> 16;
      h = hh[7];
      l = hl[7];
      a += l & 0xffff;
      b += l >>> 16;
      c += h & 0xffff;
      d += h >>> 16;
      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;
      hh[7] = ah7 = c & 0xffff | d << 16;
      hl[7] = al7 = a & 0xffff | b << 16;
      pos += 128;
      len -= 128;
    }
    return pos;
  }
  function hash(data) {
    var h = new SHA512();
    h.update(data);
    var digest = h.digest();
    h.clean();
    return digest;
  }
  exports.hash = hash;
})(sha512$3);
var sha512$2 = /*@__PURE__*/getDefaultExportFromCjs$1(sha512$3);

(function (exports) {
  "use strict";

  // Copyright (C) 2016 Dmitry Chestnykh
  // MIT License. See LICENSE file for details.
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.convertSecretKeyToX25519 = exports.convertPublicKeyToX25519 = exports.verify = exports.sign = exports.extractPublicKeyFromSecretKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.SEED_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = exports.SIGNATURE_LENGTH = void 0;
  /**
   * Package ed25519 implements Ed25519 public-key signature algorithm.
   */
  var random_1 = random$1;
  var sha512_1 = sha512$3;
  var wipe_1 = wipe$1;
  exports.SIGNATURE_LENGTH = 64;
  exports.PUBLIC_KEY_LENGTH = 32;
  exports.SECRET_KEY_LENGTH = 64;
  exports.SEED_LENGTH = 32;
  // Returns new zero-filled 16-element GF (Float64Array).
  // If passed an array of numbers, prefills the returned
  // array with them.
  //
  // We use Float64Array, because we need 48-bit numbers
  // for this implementation.
  function gf(init) {
    var r = new Float64Array(16);
    if (init) {
      for (var i = 0; i < init.length; i++) {
        r[i] = init[i];
      }
    }
    return r;
  }
  // Base point.
  var _9 = new Uint8Array(32);
  _9[0] = 9;
  var gf0 = gf();
  var gf1 = gf([1]);
  var D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]);
  var D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]);
  var X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]);
  var Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]);
  var I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);
  function set25519(r, a) {
    for (var i = 0; i < 16; i++) {
      r[i] = a[i] | 0;
    }
  }
  function car25519(o) {
    var c = 1;
    for (var i = 0; i < 16; i++) {
      var v = o[i] + c + 65535;
      c = Math.floor(v / 65536);
      o[i] = v - c * 65536;
    }
    o[0] += c - 1 + 37 * (c - 1);
  }
  function sel25519(p, q, b) {
    var c = ~(b - 1);
    for (var i = 0; i < 16; i++) {
      var t = c & (p[i] ^ q[i]);
      p[i] ^= t;
      q[i] ^= t;
    }
  }
  function pack25519(o, n) {
    var m = gf();
    var t = gf();
    for (var i = 0; i < 16; i++) {
      t[i] = n[i];
    }
    car25519(t);
    car25519(t);
    car25519(t);
    for (var j = 0; j < 2; j++) {
      m[0] = t[0] - 0xffed;
      for (var _i = 1; _i < 15; _i++) {
        m[_i] = t[_i] - 0xffff - (m[_i - 1] >> 16 & 1);
        m[_i - 1] &= 0xffff;
      }
      m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);
      var b = m[15] >> 16 & 1;
      m[14] &= 0xffff;
      sel25519(t, m, 1 - b);
    }
    for (var _i2 = 0; _i2 < 16; _i2++) {
      o[2 * _i2] = t[_i2] & 0xff;
      o[2 * _i2 + 1] = t[_i2] >> 8;
    }
  }
  function verify32(x, y) {
    var d = 0;
    for (var i = 0; i < 32; i++) {
      d |= x[i] ^ y[i];
    }
    return (1 & d - 1 >>> 8) - 1;
  }
  function neq25519(a, b) {
    var c = new Uint8Array(32);
    var d = new Uint8Array(32);
    pack25519(c, a);
    pack25519(d, b);
    return verify32(c, d);
  }
  function par25519(a) {
    var d = new Uint8Array(32);
    pack25519(d, a);
    return d[0] & 1;
  }
  function unpack25519(o, n) {
    for (var i = 0; i < 16; i++) {
      o[i] = n[2 * i] + (n[2 * i + 1] << 8);
    }
    o[15] &= 0x7fff;
  }
  function add(o, a, b) {
    for (var i = 0; i < 16; i++) {
      o[i] = a[i] + b[i];
    }
  }
  function sub(o, a, b) {
    for (var i = 0; i < 16; i++) {
      o[i] = a[i] - b[i];
    }
  }
  function mul(o, a, b) {
    var v,
      c,
      t0 = 0,
      t1 = 0,
      t2 = 0,
      t3 = 0,
      t4 = 0,
      t5 = 0,
      t6 = 0,
      t7 = 0,
      t8 = 0,
      t9 = 0,
      t10 = 0,
      t11 = 0,
      t12 = 0,
      t13 = 0,
      t14 = 0,
      t15 = 0,
      t16 = 0,
      t17 = 0,
      t18 = 0,
      t19 = 0,
      t20 = 0,
      t21 = 0,
      t22 = 0,
      t23 = 0,
      t24 = 0,
      t25 = 0,
      t26 = 0,
      t27 = 0,
      t28 = 0,
      t29 = 0,
      t30 = 0,
      b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7],
      b8 = b[8],
      b9 = b[9],
      b10 = b[10],
      b11 = b[11],
      b12 = b[12],
      b13 = b[13],
      b14 = b[14],
      b15 = b[15];
    v = a[0];
    t0 += v * b0;
    t1 += v * b1;
    t2 += v * b2;
    t3 += v * b3;
    t4 += v * b4;
    t5 += v * b5;
    t6 += v * b6;
    t7 += v * b7;
    t8 += v * b8;
    t9 += v * b9;
    t10 += v * b10;
    t11 += v * b11;
    t12 += v * b12;
    t13 += v * b13;
    t14 += v * b14;
    t15 += v * b15;
    v = a[1];
    t1 += v * b0;
    t2 += v * b1;
    t3 += v * b2;
    t4 += v * b3;
    t5 += v * b4;
    t6 += v * b5;
    t7 += v * b6;
    t8 += v * b7;
    t9 += v * b8;
    t10 += v * b9;
    t11 += v * b10;
    t12 += v * b11;
    t13 += v * b12;
    t14 += v * b13;
    t15 += v * b14;
    t16 += v * b15;
    v = a[2];
    t2 += v * b0;
    t3 += v * b1;
    t4 += v * b2;
    t5 += v * b3;
    t6 += v * b4;
    t7 += v * b5;
    t8 += v * b6;
    t9 += v * b7;
    t10 += v * b8;
    t11 += v * b9;
    t12 += v * b10;
    t13 += v * b11;
    t14 += v * b12;
    t15 += v * b13;
    t16 += v * b14;
    t17 += v * b15;
    v = a[3];
    t3 += v * b0;
    t4 += v * b1;
    t5 += v * b2;
    t6 += v * b3;
    t7 += v * b4;
    t8 += v * b5;
    t9 += v * b6;
    t10 += v * b7;
    t11 += v * b8;
    t12 += v * b9;
    t13 += v * b10;
    t14 += v * b11;
    t15 += v * b12;
    t16 += v * b13;
    t17 += v * b14;
    t18 += v * b15;
    v = a[4];
    t4 += v * b0;
    t5 += v * b1;
    t6 += v * b2;
    t7 += v * b3;
    t8 += v * b4;
    t9 += v * b5;
    t10 += v * b6;
    t11 += v * b7;
    t12 += v * b8;
    t13 += v * b9;
    t14 += v * b10;
    t15 += v * b11;
    t16 += v * b12;
    t17 += v * b13;
    t18 += v * b14;
    t19 += v * b15;
    v = a[5];
    t5 += v * b0;
    t6 += v * b1;
    t7 += v * b2;
    t8 += v * b3;
    t9 += v * b4;
    t10 += v * b5;
    t11 += v * b6;
    t12 += v * b7;
    t13 += v * b8;
    t14 += v * b9;
    t15 += v * b10;
    t16 += v * b11;
    t17 += v * b12;
    t18 += v * b13;
    t19 += v * b14;
    t20 += v * b15;
    v = a[6];
    t6 += v * b0;
    t7 += v * b1;
    t8 += v * b2;
    t9 += v * b3;
    t10 += v * b4;
    t11 += v * b5;
    t12 += v * b6;
    t13 += v * b7;
    t14 += v * b8;
    t15 += v * b9;
    t16 += v * b10;
    t17 += v * b11;
    t18 += v * b12;
    t19 += v * b13;
    t20 += v * b14;
    t21 += v * b15;
    v = a[7];
    t7 += v * b0;
    t8 += v * b1;
    t9 += v * b2;
    t10 += v * b3;
    t11 += v * b4;
    t12 += v * b5;
    t13 += v * b6;
    t14 += v * b7;
    t15 += v * b8;
    t16 += v * b9;
    t17 += v * b10;
    t18 += v * b11;
    t19 += v * b12;
    t20 += v * b13;
    t21 += v * b14;
    t22 += v * b15;
    v = a[8];
    t8 += v * b0;
    t9 += v * b1;
    t10 += v * b2;
    t11 += v * b3;
    t12 += v * b4;
    t13 += v * b5;
    t14 += v * b6;
    t15 += v * b7;
    t16 += v * b8;
    t17 += v * b9;
    t18 += v * b10;
    t19 += v * b11;
    t20 += v * b12;
    t21 += v * b13;
    t22 += v * b14;
    t23 += v * b15;
    v = a[9];
    t9 += v * b0;
    t10 += v * b1;
    t11 += v * b2;
    t12 += v * b3;
    t13 += v * b4;
    t14 += v * b5;
    t15 += v * b6;
    t16 += v * b7;
    t17 += v * b8;
    t18 += v * b9;
    t19 += v * b10;
    t20 += v * b11;
    t21 += v * b12;
    t22 += v * b13;
    t23 += v * b14;
    t24 += v * b15;
    v = a[10];
    t10 += v * b0;
    t11 += v * b1;
    t12 += v * b2;
    t13 += v * b3;
    t14 += v * b4;
    t15 += v * b5;
    t16 += v * b6;
    t17 += v * b7;
    t18 += v * b8;
    t19 += v * b9;
    t20 += v * b10;
    t21 += v * b11;
    t22 += v * b12;
    t23 += v * b13;
    t24 += v * b14;
    t25 += v * b15;
    v = a[11];
    t11 += v * b0;
    t12 += v * b1;
    t13 += v * b2;
    t14 += v * b3;
    t15 += v * b4;
    t16 += v * b5;
    t17 += v * b6;
    t18 += v * b7;
    t19 += v * b8;
    t20 += v * b9;
    t21 += v * b10;
    t22 += v * b11;
    t23 += v * b12;
    t24 += v * b13;
    t25 += v * b14;
    t26 += v * b15;
    v = a[12];
    t12 += v * b0;
    t13 += v * b1;
    t14 += v * b2;
    t15 += v * b3;
    t16 += v * b4;
    t17 += v * b5;
    t18 += v * b6;
    t19 += v * b7;
    t20 += v * b8;
    t21 += v * b9;
    t22 += v * b10;
    t23 += v * b11;
    t24 += v * b12;
    t25 += v * b13;
    t26 += v * b14;
    t27 += v * b15;
    v = a[13];
    t13 += v * b0;
    t14 += v * b1;
    t15 += v * b2;
    t16 += v * b3;
    t17 += v * b4;
    t18 += v * b5;
    t19 += v * b6;
    t20 += v * b7;
    t21 += v * b8;
    t22 += v * b9;
    t23 += v * b10;
    t24 += v * b11;
    t25 += v * b12;
    t26 += v * b13;
    t27 += v * b14;
    t28 += v * b15;
    v = a[14];
    t14 += v * b0;
    t15 += v * b1;
    t16 += v * b2;
    t17 += v * b3;
    t18 += v * b4;
    t19 += v * b5;
    t20 += v * b6;
    t21 += v * b7;
    t22 += v * b8;
    t23 += v * b9;
    t24 += v * b10;
    t25 += v * b11;
    t26 += v * b12;
    t27 += v * b13;
    t28 += v * b14;
    t29 += v * b15;
    v = a[15];
    t15 += v * b0;
    t16 += v * b1;
    t17 += v * b2;
    t18 += v * b3;
    t19 += v * b4;
    t20 += v * b5;
    t21 += v * b6;
    t22 += v * b7;
    t23 += v * b8;
    t24 += v * b9;
    t25 += v * b10;
    t26 += v * b11;
    t27 += v * b12;
    t28 += v * b13;
    t29 += v * b14;
    t30 += v * b15;
    t0 += 38 * t16;
    t1 += 38 * t17;
    t2 += 38 * t18;
    t3 += 38 * t19;
    t4 += 38 * t20;
    t5 += 38 * t21;
    t6 += 38 * t22;
    t7 += 38 * t23;
    t8 += 38 * t24;
    t9 += 38 * t25;
    t10 += 38 * t26;
    t11 += 38 * t27;
    t12 += 38 * t28;
    t13 += 38 * t29;
    t14 += 38 * t30;
    // t15 left as is
    // first car
    c = 1;
    v = t0 + c + 65535;
    c = Math.floor(v / 65536);
    t0 = v - c * 65536;
    v = t1 + c + 65535;
    c = Math.floor(v / 65536);
    t1 = v - c * 65536;
    v = t2 + c + 65535;
    c = Math.floor(v / 65536);
    t2 = v - c * 65536;
    v = t3 + c + 65535;
    c = Math.floor(v / 65536);
    t3 = v - c * 65536;
    v = t4 + c + 65535;
    c = Math.floor(v / 65536);
    t4 = v - c * 65536;
    v = t5 + c + 65535;
    c = Math.floor(v / 65536);
    t5 = v - c * 65536;
    v = t6 + c + 65535;
    c = Math.floor(v / 65536);
    t6 = v - c * 65536;
    v = t7 + c + 65535;
    c = Math.floor(v / 65536);
    t7 = v - c * 65536;
    v = t8 + c + 65535;
    c = Math.floor(v / 65536);
    t8 = v - c * 65536;
    v = t9 + c + 65535;
    c = Math.floor(v / 65536);
    t9 = v - c * 65536;
    v = t10 + c + 65535;
    c = Math.floor(v / 65536);
    t10 = v - c * 65536;
    v = t11 + c + 65535;
    c = Math.floor(v / 65536);
    t11 = v - c * 65536;
    v = t12 + c + 65535;
    c = Math.floor(v / 65536);
    t12 = v - c * 65536;
    v = t13 + c + 65535;
    c = Math.floor(v / 65536);
    t13 = v - c * 65536;
    v = t14 + c + 65535;
    c = Math.floor(v / 65536);
    t14 = v - c * 65536;
    v = t15 + c + 65535;
    c = Math.floor(v / 65536);
    t15 = v - c * 65536;
    t0 += c - 1 + 37 * (c - 1);
    // second car
    c = 1;
    v = t0 + c + 65535;
    c = Math.floor(v / 65536);
    t0 = v - c * 65536;
    v = t1 + c + 65535;
    c = Math.floor(v / 65536);
    t1 = v - c * 65536;
    v = t2 + c + 65535;
    c = Math.floor(v / 65536);
    t2 = v - c * 65536;
    v = t3 + c + 65535;
    c = Math.floor(v / 65536);
    t3 = v - c * 65536;
    v = t4 + c + 65535;
    c = Math.floor(v / 65536);
    t4 = v - c * 65536;
    v = t5 + c + 65535;
    c = Math.floor(v / 65536);
    t5 = v - c * 65536;
    v = t6 + c + 65535;
    c = Math.floor(v / 65536);
    t6 = v - c * 65536;
    v = t7 + c + 65535;
    c = Math.floor(v / 65536);
    t7 = v - c * 65536;
    v = t8 + c + 65535;
    c = Math.floor(v / 65536);
    t8 = v - c * 65536;
    v = t9 + c + 65535;
    c = Math.floor(v / 65536);
    t9 = v - c * 65536;
    v = t10 + c + 65535;
    c = Math.floor(v / 65536);
    t10 = v - c * 65536;
    v = t11 + c + 65535;
    c = Math.floor(v / 65536);
    t11 = v - c * 65536;
    v = t12 + c + 65535;
    c = Math.floor(v / 65536);
    t12 = v - c * 65536;
    v = t13 + c + 65535;
    c = Math.floor(v / 65536);
    t13 = v - c * 65536;
    v = t14 + c + 65535;
    c = Math.floor(v / 65536);
    t14 = v - c * 65536;
    v = t15 + c + 65535;
    c = Math.floor(v / 65536);
    t15 = v - c * 65536;
    t0 += c - 1 + 37 * (c - 1);
    o[0] = t0;
    o[1] = t1;
    o[2] = t2;
    o[3] = t3;
    o[4] = t4;
    o[5] = t5;
    o[6] = t6;
    o[7] = t7;
    o[8] = t8;
    o[9] = t9;
    o[10] = t10;
    o[11] = t11;
    o[12] = t12;
    o[13] = t13;
    o[14] = t14;
    o[15] = t15;
  }
  function square(o, a) {
    mul(o, a, a);
  }
  function inv25519(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) {
      c[a] = i[a];
    }
    for (a = 253; a >= 0; a--) {
      square(c, c);
      if (a !== 2 && a !== 4) {
        mul(c, c, i);
      }
    }
    for (a = 0; a < 16; a++) {
      o[a] = c[a];
    }
  }
  function pow2523(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) {
      c[a] = i[a];
    }
    for (a = 250; a >= 0; a--) {
      square(c, c);
      if (a !== 1) {
        mul(c, c, i);
      }
    }
    for (a = 0; a < 16; a++) {
      o[a] = c[a];
    }
  }
  function edadd(p, q) {
    var a = gf(),
      b = gf(),
      c = gf(),
      d = gf(),
      e = gf(),
      f = gf(),
      g = gf(),
      h = gf(),
      t = gf();
    sub(a, p[1], p[0]);
    sub(t, q[1], q[0]);
    mul(a, a, t);
    add(b, p[0], p[1]);
    add(t, q[0], q[1]);
    mul(b, b, t);
    mul(c, p[3], q[3]);
    mul(c, c, D2);
    mul(d, p[2], q[2]);
    add(d, d, d);
    sub(e, b, a);
    sub(f, d, c);
    add(g, d, c);
    add(h, b, a);
    mul(p[0], e, f);
    mul(p[1], h, g);
    mul(p[2], g, f);
    mul(p[3], e, h);
  }
  function cswap(p, q, b) {
    for (var i = 0; i < 4; i++) {
      sel25519(p[i], q[i], b);
    }
  }
  function pack(r, p) {
    var tx = gf(),
      ty = gf(),
      zi = gf();
    inv25519(zi, p[2]);
    mul(tx, p[0], zi);
    mul(ty, p[1], zi);
    pack25519(r, ty);
    r[31] ^= par25519(tx) << 7;
  }
  function scalarmult(p, q, s) {
    set25519(p[0], gf0);
    set25519(p[1], gf1);
    set25519(p[2], gf1);
    set25519(p[3], gf0);
    for (var i = 255; i >= 0; --i) {
      var b = s[i / 8 | 0] >> (i & 7) & 1;
      cswap(p, q, b);
      edadd(q, p);
      edadd(p, p);
      cswap(p, q, b);
    }
  }
  function scalarbase(p, s) {
    var q = [gf(), gf(), gf(), gf()];
    set25519(q[0], X);
    set25519(q[1], Y);
    set25519(q[2], gf1);
    mul(q[3], X, Y);
    scalarmult(p, q, s);
  }
  // Generates key pair from secret 32-byte seed.
  function generateKeyPairFromSeed(seed) {
    if (seed.length !== exports.SEED_LENGTH) {
      throw new Error("ed25519: seed must be ".concat(exports.SEED_LENGTH, " bytes"));
    }
    var d = (0, sha512_1.hash)(seed);
    d[0] &= 248;
    d[31] &= 127;
    d[31] |= 64;
    var publicKey = new Uint8Array(32);
    var p = [gf(), gf(), gf(), gf()];
    scalarbase(p, d);
    pack(publicKey, p);
    var secretKey = new Uint8Array(64);
    secretKey.set(seed);
    secretKey.set(publicKey, 32);
    return {
      publicKey: publicKey,
      secretKey: secretKey
    };
  }
  exports.generateKeyPairFromSeed = generateKeyPairFromSeed;
  function generateKeyPair(prng) {
    var seed = (0, random_1.randomBytes)(32, prng);
    var result = generateKeyPairFromSeed(seed);
    (0, wipe_1.wipe)(seed);
    return result;
  }
  exports.generateKeyPair = generateKeyPair;
  function extractPublicKeyFromSecretKey(secretKey) {
    if (secretKey.length !== exports.SECRET_KEY_LENGTH) {
      throw new Error("ed25519: secret key must be ".concat(exports.SECRET_KEY_LENGTH, " bytes"));
    }
    return new Uint8Array(secretKey.subarray(32));
  }
  exports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;
  var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);
  function modL(r, x) {
    var carry;
    var i;
    var j;
    var k;
    for (i = 63; i >= 32; --i) {
      carry = 0;
      for (j = i - 32, k = i - 12; j < k; ++j) {
        x[j] += carry - 16 * x[i] * L[j - (i - 32)];
        carry = Math.floor((x[j] + 128) / 256);
        x[j] -= carry * 256;
      }
      x[j] += carry;
      x[i] = 0;
    }
    carry = 0;
    for (j = 0; j < 32; j++) {
      x[j] += carry - (x[31] >> 4) * L[j];
      carry = x[j] >> 8;
      x[j] &= 255;
    }
    for (j = 0; j < 32; j++) {
      x[j] -= carry * L[j];
    }
    for (i = 0; i < 32; i++) {
      x[i + 1] += x[i] >> 8;
      r[i] = x[i] & 255;
    }
  }
  function reduce(r) {
    var x = new Float64Array(64);
    for (var i = 0; i < 64; i++) {
      x[i] = r[i];
    }
    for (var _i3 = 0; _i3 < 64; _i3++) {
      r[_i3] = 0;
    }
    modL(r, x);
  }
  // Returns 64-byte signature of the message under the 64-byte secret key.
  function sign(secretKey, message) {
    var x = new Float64Array(64);
    var p = [gf(), gf(), gf(), gf()];
    var d = (0, sha512_1.hash)(secretKey.subarray(0, 32));
    d[0] &= 248;
    d[31] &= 127;
    d[31] |= 64;
    var signature = new Uint8Array(64);
    signature.set(d.subarray(32), 32);
    var hs = new sha512_1.SHA512();
    hs.update(signature.subarray(32));
    hs.update(message);
    var r = hs.digest();
    hs.clean();
    reduce(r);
    scalarbase(p, r);
    pack(signature, p);
    hs.reset();
    hs.update(signature.subarray(0, 32));
    hs.update(secretKey.subarray(32));
    hs.update(message);
    var h = hs.digest();
    reduce(h);
    for (var i = 0; i < 32; i++) {
      x[i] = r[i];
    }
    for (var _i4 = 0; _i4 < 32; _i4++) {
      for (var j = 0; j < 32; j++) {
        x[_i4 + j] += h[_i4] * d[j];
      }
    }
    modL(signature.subarray(32), x);
    return signature;
  }
  exports.sign = sign;
  function unpackneg(r, p) {
    var t = gf(),
      chk = gf(),
      num = gf(),
      den = gf(),
      den2 = gf(),
      den4 = gf(),
      den6 = gf();
    set25519(r[2], gf1);
    unpack25519(r[1], p);
    square(num, r[1]);
    mul(den, num, D);
    sub(num, num, r[2]);
    add(den, r[2], den);
    square(den2, den);
    square(den4, den2);
    mul(den6, den4, den2);
    mul(t, den6, num);
    mul(t, t, den);
    pow2523(t, t);
    mul(t, t, num);
    mul(t, t, den);
    mul(t, t, den);
    mul(r[0], t, den);
    square(chk, r[0]);
    mul(chk, chk, den);
    if (neq25519(chk, num)) {
      mul(r[0], r[0], I);
    }
    square(chk, r[0]);
    mul(chk, chk, den);
    if (neq25519(chk, num)) {
      return -1;
    }
    if (par25519(r[0]) === p[31] >> 7) {
      sub(r[0], gf0, r[0]);
    }
    mul(r[3], r[0], r[1]);
    return 0;
  }
  function verify(publicKey, message, signature) {
    var t = new Uint8Array(32);
    var p = [gf(), gf(), gf(), gf()];
    var q = [gf(), gf(), gf(), gf()];
    if (signature.length !== exports.SIGNATURE_LENGTH) {
      throw new Error("ed25519: signature must be ".concat(exports.SIGNATURE_LENGTH, " bytes"));
    }
    if (unpackneg(q, publicKey)) {
      return false;
    }
    var hs = new sha512_1.SHA512();
    hs.update(signature.subarray(0, 32));
    hs.update(publicKey);
    hs.update(message);
    var h = hs.digest();
    reduce(h);
    scalarmult(p, q, h);
    scalarbase(q, signature.subarray(32));
    edadd(p, q);
    pack(t, p);
    if (verify32(signature, t)) {
      return false;
    }
    return true;
  }
  exports.verify = verify;
  /**
   * Convert Ed25519 public key to X25519 public key.
   *
   * Throws if given an invalid public key.
   */
  function convertPublicKeyToX25519(publicKey) {
    var q = [gf(), gf(), gf(), gf()];
    if (unpackneg(q, publicKey)) {
      throw new Error("Ed25519: invalid public key");
    }
    // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p
    var a = gf();
    var b = gf();
    var y = q[1];
    add(a, gf1, y);
    sub(b, gf1, y);
    inv25519(b, b);
    mul(a, a, b);
    var z = new Uint8Array(32);
    pack25519(z, a);
    return z;
  }
  exports.convertPublicKeyToX25519 = convertPublicKeyToX25519;
  /**
   *  Convert Ed25519 secret (private) key to X25519 secret key.
   */
  function convertSecretKeyToX25519(secretKey) {
    var d = (0, sha512_1.hash)(secretKey.subarray(0, 32));
    d[0] &= 248;
    d[31] &= 127;
    d[31] |= 64;
    var o = new Uint8Array(d.subarray(0, 32));
    (0, wipe_1.wipe)(d);
    return o;
  }
  exports.convertSecretKeyToX25519 = convertSecretKeyToX25519;
})(ed25519$1);
var ed25519 = /*@__PURE__*/getDefaultExportFromCjs$1(ed25519$1);

var JWT_IRIDIUM_ALG = "EdDSA";
var JWT_IRIDIUM_TYP = "JWT";
var JWT_DELIMITER = ".";
var JWT_ENCODING = "base64url";
var JSON_ENCODING = "utf8";
var DATA_ENCODING = "utf8";
var DID_DELIMITER = ":";
var DID_PREFIX = "did";
var DID_METHOD = "key";
var MULTICODEC_ED25519_ENCODING = "base58btc";
var MULTICODEC_ED25519_BASE = "z";
var MULTICODEC_ED25519_HEADER = "K36";
var MULTICODEC_ED25519_LENGTH = 32;
var KEY_PAIR_SEED_LENGTH = 32;

function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

function alloc$1() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {
    return asUint8Array(globalThis.Buffer.alloc(size));
  }
  return new Uint8Array(size);
}
function allocUnsafe$1() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return asUint8Array(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

function concat$2(arrays, length) {
  if (!length) {
    length = arrays.reduce(function (acc, curr) {
      return acc + curr.length;
    }, 0);
  }
  var output = allocUnsafe$1(length);
  var offset = 0;
  var _iterator = _createForOfIteratorHelper(arrays),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var arr = _step.value;
      output.set(arr, offset);
      offset += arr.length;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return asUint8Array(output);
}

function base$5(ALPHABET, name) {
  if (ALPHABET.length >= 255) {
    throw new TypeError('Alphabet too long');
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j = 0; j < BASE_MAP.length; j++) {
    BASE_MAP[j] = 255;
  }
  for (var i = 0; i < ALPHABET.length; i++) {
    var x = ALPHABET.charAt(i);
    var xc = x.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x + ' is ambiguous');
    }
    BASE_MAP[xc] = i;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode(source) {
    if (source instanceof Uint8Array) ;else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError('Expected Uint8Array');
    }
    if (source.length === 0) {
      return '';
    }
    var zeroes = 0;
    var length = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i = 0;
      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error('Non-zero carry');
      }
      length = i;
      pbegin++;
    }
    var it2 = size - length;
    while (it2 !== size && b58[it2] === 0) {
      it2++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it2 < size; ++it2) {
      str += ALPHABET.charAt(b58[it2]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== 'string') {
      throw new TypeError('Expected String');
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === ' ') {
      return;
    }
    var zeroes = 0;
    var length = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i = 0;
      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {
        carry += BASE * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error('Non-zero carry');
      }
      length = i;
      psz++;
    }
    if (source[psz] === ' ') {
      return;
    }
    var it4 = size - length;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j = zeroes;
    while (it4 !== size) {
      vch[j++] = b256[it4++];
    }
    return vch;
  }
  function decode(string) {
    var buffer = decodeUnsafe(string);
    if (buffer) {
      return buffer;
    }
    throw new Error("Non-".concat(name, " character"));
  }
  return {
    encode: encode,
    decodeUnsafe: decodeUnsafe,
    decode: decode
  };
}
var src = base$5;
var _brrp__multiformats_scope_baseX = src;

var empty = new Uint8Array(0);
var toHex$2 = function toHex(d) {
  return d.reduce(function (hex, _byte) {
    return hex + _byte.toString(16).padStart(2, '0');
  }, '');
};
var fromHex = function fromHex(hex) {
  var hexes = hex.match(/../g);
  return hexes ? new Uint8Array(hexes.map(function (b) {
    return parseInt(b, 16);
  })) : empty;
};
var equals$2 = function equals(aa, bb) {
  if (aa === bb) return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (var ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
var coerce = function coerce(o) {
  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o;
  if (o instanceof ArrayBuffer) return new Uint8Array(o);
  if (ArrayBuffer.isView(o)) {
    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
  }
  throw new Error('Unknown type, must be binary type');
};
var isBinary = function isBinary(o) {
  return o instanceof ArrayBuffer || ArrayBuffer.isView(o);
};
var fromString$2 = function fromString(str) {
  return new TextEncoder().encode(str);
};
var toString$2 = function toString(b) {
  return new TextDecoder().decode(b);
};

var bytes = /*#__PURE__*/Object.freeze({
  __proto__: null,
  coerce: coerce,
  empty: empty,
  equals: equals$2,
  fromHex: fromHex,
  fromString: fromString$2,
  isBinary: isBinary,
  toHex: toHex$2,
  toString: toString$2
});

var Encoder = /*#__PURE__*/function () {
  function Encoder(name, prefix, baseEncode) {
    _classCallCheck(this, Encoder);
    this.name = name;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  return _createClass(Encoder, [{
    key: "encode",
    value: function encode(bytes) {
      if (bytes instanceof Uint8Array) {
        return "".concat(this.prefix).concat(this.baseEncode(bytes));
      } else {
        throw Error('Unknown type, must be binary type');
      }
    }
  }]);
}();
var Decoder = /*#__PURE__*/function () {
  function Decoder(name, prefix, baseDecode) {
    _classCallCheck(this, Decoder);
    this.name = name;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === undefined) {
      throw new Error('Invalid prefix character');
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  return _createClass(Decoder, [{
    key: "decode",
    value: function decode(text) {
      if (typeof text === 'string') {
        if (text.codePointAt(0) !== this.prefixCodePoint) {
          throw Error("Unable to decode multibase string ".concat(JSON.stringify(text), ", ").concat(this.name, " decoder only supports inputs prefixed with ").concat(this.prefix));
        }
        return this.baseDecode(text.slice(this.prefix.length));
      } else {
        throw Error('Can only multibase decode strings');
      }
    }
  }, {
    key: "or",
    value: function or(decoder) {
      return _or(this, decoder);
    }
  }]);
}();
var ComposedDecoder = /*#__PURE__*/function () {
  function ComposedDecoder(decoders) {
    _classCallCheck(this, ComposedDecoder);
    this.decoders = decoders;
  }
  return _createClass(ComposedDecoder, [{
    key: "or",
    value: function or(decoder) {
      return _or(this, decoder);
    }
  }, {
    key: "decode",
    value: function decode(input) {
      var prefix = input[0];
      var decoder = this.decoders[prefix];
      if (decoder) {
        return decoder.decode(input);
      } else {
        throw RangeError("Unable to decode multibase string ".concat(JSON.stringify(input), ", only inputs prefixed with ").concat(Object.keys(this.decoders), " are supported"));
      }
    }
  }]);
}();
var _or = function _or(left, right) {
  return new ComposedDecoder(_objectSpread2(_objectSpread2({}, left.decoders || _defineProperty({}, left.prefix, left)), right.decoders || _defineProperty({}, right.prefix, right)));
};
var Codec = /*#__PURE__*/function () {
  function Codec(name, prefix, baseEncode, baseDecode) {
    _classCallCheck(this, Codec);
    this.name = name;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name, prefix, baseEncode);
    this.decoder = new Decoder(name, prefix, baseDecode);
  }
  return _createClass(Codec, [{
    key: "encode",
    value: function encode(input) {
      return this.encoder.encode(input);
    }
  }, {
    key: "decode",
    value: function decode(input) {
      return this.decoder.decode(input);
    }
  }]);
}();
var from$1 = function from(_ref3) {
  var name = _ref3.name,
    prefix = _ref3.prefix,
    encode = _ref3.encode,
    decode = _ref3.decode;
  return new Codec(name, prefix, encode, decode);
};
var baseX = function baseX(_ref4) {
  var prefix = _ref4.prefix,
    name = _ref4.name,
    alphabet = _ref4.alphabet;
  var _basex = _brrp__multiformats_scope_baseX(alphabet, name),
    encode = _basex.encode,
    _decode = _basex.decode;
  return from$1({
    prefix: prefix,
    name: name,
    encode: encode,
    decode: function decode(text) {
      return coerce(_decode(text));
    }
  });
};
var _decode2 = function decode(string, alphabet, bitsPerChar, name) {
  var codes = {};
  for (var i = 0; i < alphabet.length; ++i) {
    codes[alphabet[i]] = i;
  }
  var end = string.length;
  while (string[end - 1] === '=') {
    --end;
  }
  var out = new Uint8Array(end * bitsPerChar / 8 | 0);
  var bits = 0;
  var buffer = 0;
  var written = 0;
  for (var _i = 0; _i < end; ++_i) {
    var value = codes[string[_i]];
    if (value === undefined) {
      throw new SyntaxError("Non-".concat(name, " character"));
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError('Unexpected end of data');
  }
  return out;
};
var _encode$1 = function encode(data, alphabet, bitsPerChar) {
  var pad = alphabet[alphabet.length - 1] === '=';
  var mask = (1 << bitsPerChar) - 1;
  var out = '';
  var bits = 0;
  var buffer = 0;
  for (var i = 0; i < data.length; ++i) {
    buffer = buffer << 8 | data[i];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet[mask & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += '=';
    }
  }
  return out;
};
var rfc4648 = function rfc4648(_ref5) {
  var name = _ref5.name,
    prefix = _ref5.prefix,
    bitsPerChar = _ref5.bitsPerChar,
    alphabet = _ref5.alphabet;
  return from$1({
    prefix: prefix,
    name: name,
    encode: function encode(input) {
      return _encode$1(input, alphabet, bitsPerChar);
    },
    decode: function decode(input) {
      return _decode2(input, alphabet, bitsPerChar, name);
    }
  });
};

var identity$2 = from$1({
  prefix: '\0',
  name: 'identity',
  encode: function encode(buf) {
    return toString$2(buf);
  },
  decode: function decode(str) {
    return fromString$2(str);
  }
});

var identityBase = /*#__PURE__*/Object.freeze({
  __proto__: null,
  identity: identity$2
});

var base2 = rfc4648({
  prefix: '0',
  name: 'base2',
  alphabet: '01',
  bitsPerChar: 1
});

var base2$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  base2: base2
});

var base8 = rfc4648({
  prefix: '7',
  name: 'base8',
  alphabet: '01234567',
  bitsPerChar: 3
});

var base8$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  base8: base8
});

var base10 = baseX({
  prefix: '9',
  name: 'base10',
  alphabet: '0123456789'
});

var base10$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  base10: base10
});

var base16 = rfc4648({
  prefix: 'f',
  name: 'base16',
  alphabet: '0123456789abcdef',
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: 'F',
  name: 'base16upper',
  alphabet: '0123456789ABCDEF',
  bitsPerChar: 4
});

var base16$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  base16: base16,
  base16upper: base16upper
});

var base32 = rfc4648({
  prefix: 'b',
  name: 'base32',
  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: 'B',
  name: 'base32upper',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: 'c',
  name: 'base32pad',
  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: 'C',
  name: 'base32padupper',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: 'v',
  name: 'base32hex',
  alphabet: '0123456789abcdefghijklmnopqrstuv',
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: 'V',
  name: 'base32hexupper',
  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: 't',
  name: 'base32hexpad',
  alphabet: '0123456789abcdefghijklmnopqrstuv=',
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: 'T',
  name: 'base32hexpadupper',
  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: 'h',
  name: 'base32z',
  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',
  bitsPerChar: 5
});

var base32$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  base32: base32,
  base32hex: base32hex,
  base32hexpad: base32hexpad,
  base32hexpadupper: base32hexpadupper,
  base32hexupper: base32hexupper,
  base32pad: base32pad,
  base32padupper: base32padupper,
  base32upper: base32upper,
  base32z: base32z
});

var base36 = baseX({
  prefix: 'k',
  name: 'base36',
  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'
});
var base36upper = baseX({
  prefix: 'K',
  name: 'base36upper',
  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
});

var base36$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  base36: base36,
  base36upper: base36upper
});

var base58btc = baseX({
  name: 'base58btc',
  prefix: 'z',
  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'
});
var base58flickr = baseX({
  name: 'base58flickr',
  prefix: 'Z',
  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'
});

var base58 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  base58btc: base58btc,
  base58flickr: base58flickr
});

var base64 = rfc4648({
  prefix: 'm',
  name: 'base64',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: 'M',
  name: 'base64pad',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: 'u',
  name: 'base64url',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: 'U',
  name: 'base64urlpad',
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',
  bitsPerChar: 6
});

var base64$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  base64: base64,
  base64pad: base64pad,
  base64url: base64url,
  base64urlpad: base64urlpad
});

var alphabet = Array.from("\uD83D\uDE80\uD83E\uDE90\u2604\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09\u2600\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02\u2764\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09\u263A\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E\u270C\u2728\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D\u2763\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33\u270B\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13\u2B50\u2705\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6\u2714\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90\u2639\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20\u261D\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B\u26BD\uD83E\uDD19\u2615\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81\u26A1\uD83C\uDF1E\uD83C\uDF88\u274C\u270A\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C\u2708\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74\u25B6\u27A1\u2753\uD83D\uDC8E\uD83D\uDCB8\u2B07\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A\u26A0\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37\u260E\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51\u2744\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42");
var alphabetBytesToChars = alphabet.reduce(function (p, c, i) {
  p[i] = c;
  return p;
}, []);
var alphabetCharsToBytes = alphabet.reduce(function (p, c, i) {
  p[c.codePointAt(0)] = i;
  return p;
}, []);
function encode$6(data) {
  return data.reduce(function (p, c) {
    p += alphabetBytesToChars[c];
    return p;
  }, '');
}
function decode$8(str) {
  var byts = [];
  var _iterator = _createForOfIteratorHelper(str),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _char = _step.value;
      var byt = alphabetCharsToBytes[_char.codePointAt(0)];
      if (byt === undefined) {
        throw new Error("Non-base256emoji character: ".concat(_char));
      }
      byts.push(byt);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return new Uint8Array(byts);
}
var base256emoji = from$1({
  prefix: "\uD83D\uDE80",
  name: 'base256emoji',
  encode: encode$6,
  decode: decode$8
});

var base256emoji$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  base256emoji: base256emoji
});

var encode_1 = encode$5;
var MSB = 128,
  REST = 127,
  MSBALL = ~REST,
  INT = Math.pow(2, 31);
function encode$5(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode$5.bytes = offset - oldOffset + 1;
  return out;
}
var decode$7 = read;
var MSB$1 = 128,
  REST$1 = 127;
function read(buf, offset) {
  var res = 0,
    offset = offset || 0,
    shift = 0,
    counter = offset,
    b,
    l = buf.length;
  do {
    if (counter >= l) {
      read.bytes = 0;
      throw new RangeError('Could not decode varint');
    }
    b = buf[counter++];
    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N2 = Math.pow(2, 14);
var N3 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function length(value) {
  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint$1 = {
  encode: encode_1,
  decode: decode$7,
  encodingLength: length
};
var _brrp_varint = varint$1;

var decode$6 = function decode(data) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var code = _brrp_varint.decode(data, offset);
  return [code, _brrp_varint.decode.bytes];
};
var encodeTo = function encodeTo(_int, target) {
  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  _brrp_varint.encode(_int, target, offset);
  return target;
};
var encodingLength = function encodingLength(_int2) {
  return _brrp_varint.encodingLength(_int2);
};

var varint = /*#__PURE__*/Object.freeze({
  __proto__: null,
  decode: decode$6,
  encodeTo: encodeTo,
  encodingLength: encodingLength
});

var create = function create(code, digest) {
  var size = digest.byteLength;
  var sizeOffset = encodingLength(code);
  var digestOffset = sizeOffset + encodingLength(size);
  var bytes = new Uint8Array(digestOffset + size);
  encodeTo(code, bytes, 0);
  encodeTo(size, bytes, sizeOffset);
  bytes.set(digest, digestOffset);
  return new Digest(code, size, digest, bytes);
};
var decode$5 = function decode(multihash) {
  var bytes = coerce(multihash);
  var _varint$decode = decode$6(bytes),
    _varint$decode2 = _slicedToArray(_varint$decode, 2),
    code = _varint$decode2[0],
    sizeOffset = _varint$decode2[1];
  var _varint$decode3 = decode$6(bytes.subarray(sizeOffset)),
    _varint$decode4 = _slicedToArray(_varint$decode3, 2),
    size = _varint$decode4[0],
    digestOffset = _varint$decode4[1];
  var digest = bytes.subarray(sizeOffset + digestOffset);
  if (digest.byteLength !== size) {
    throw new Error('Incorrect length');
  }
  return new Digest(code, size, digest, bytes);
};
var equals$1 = function equals(a, b) {
  if (a === b) {
    return true;
  } else {
    return a.code === b.code && a.size === b.size && equals$2(a.bytes, b.bytes);
  }
};
var Digest = /*#__PURE__*/_createClass(function Digest(code, size, digest, bytes) {
  _classCallCheck(this, Digest);
  this.code = code;
  this.size = size;
  this.digest = digest;
  this.bytes = bytes;
});

var digest$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Digest: Digest,
  create: create,
  decode: decode$5,
  equals: equals$1
});

var from = function from(_ref) {
  var name = _ref.name,
    code = _ref.code,
    encode = _ref.encode;
  return new Hasher(name, code, encode);
};
var Hasher = /*#__PURE__*/function () {
  function Hasher(name, code, encode) {
    _classCallCheck(this, Hasher);
    this.name = name;
    this.code = code;
    this.encode = encode;
  }
  return _createClass(Hasher, [{
    key: "digest",
    value: function digest(input) {
      var _this = this;
      if (input instanceof Uint8Array) {
        var result = this.encode(input);
        return result instanceof Uint8Array ? create(this.code, result) : result.then(function (digest) {
          return create(_this.code, digest);
        });
      } else {
        throw Error('Unknown type, must be binary type');
      }
    }
  }]);
}();

var hasher = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Hasher: Hasher,
  from: from
});

var sha$1 = function sha(name) {
  return /*#__PURE__*/function () {
    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = Uint8Array;
            _context.next = 3;
            return crypto.subtle.digest(name, data);
          case 3:
            _context.t1 = _context.sent;
            return _context.abrupt("return", new _context.t0(_context.t1));
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();
};
var sha256$3 = from({
  name: 'sha2-256',
  code: 18,
  encode: sha$1('SHA-256')
});
var sha512$1 = from({
  name: 'sha2-512',
  code: 19,
  encode: sha$1('SHA-512')
});

var sha2 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  sha256: sha256$3,
  sha512: sha512$1
});

var code$2 = 0;
var name$4 = 'identity';
var encode$4 = coerce;
var digest = function digest(input) {
  return create(code$2, encode$4(input));
};
var identity = {
  code: code$2,
  name: name$4,
  encode: encode$4,
  digest: digest
};

var identity$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  identity: identity
});

var name$3 = 'raw';
var code$1 = 85;
var encode$3 = function encode(node) {
  return coerce(node);
};
var decode$4 = function decode(data) {
  return coerce(data);
};

var raw = /*#__PURE__*/Object.freeze({
  __proto__: null,
  code: code$1,
  decode: decode$4,
  encode: encode$3,
  name: name$3
});

var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();
var name$2 = 'json';
var code = 512;
var encode$2 = function encode(node) {
  return textEncoder.encode(JSON.stringify(node));
};
var decode$3 = function decode(data) {
  return JSON.parse(textDecoder.decode(data));
};

var json = /*#__PURE__*/Object.freeze({
  __proto__: null,
  code: code,
  decode: decode$3,
  encode: encode$2,
  name: name$2
});

var CID = /*#__PURE__*/function () {
  function CID(version, code, multihash, bytes) {
    _classCallCheck(this, CID);
    this.code = code;
    this.version = version;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  return _createClass(CID, [{
    key: "toV0",
    value: function toV0() {
      switch (this.version) {
        case 0:
          {
            return this;
          }
        default:
          {
            var code = this.code,
              multihash = this.multihash;
            if (code !== DAG_PB_CODE) {
              throw new Error('Cannot convert a non dag-pb CID to CIDv0');
            }
            if (multihash.code !== SHA_256_CODE) {
              throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');
            }
            return CID.createV0(multihash);
          }
      }
    }
  }, {
    key: "toV1",
    value: function toV1() {
      switch (this.version) {
        case 0:
          {
            var _this$multihash = this.multihash,
              code = _this$multihash.code,
              digest = _this$multihash.digest;
            var multihash = create(code, digest);
            return CID.createV1(this.code, multihash);
          }
        case 1:
          {
            return this;
          }
        default:
          {
            throw Error("Can not convert CID version ".concat(this.version, " to version 0. This is a bug please report"));
          }
      }
    }
  }, {
    key: "equals",
    value: function equals(other) {
      return other && this.code === other.code && this.version === other.version && equals$1(this.multihash, other.multihash);
    }
  }, {
    key: "toString",
    value: function toString(base) {
      var bytes = this.bytes,
        version = this.version,
        _baseCache = this._baseCache;
      switch (version) {
        case 0:
          return toStringV0(bytes, _baseCache, base || base58btc.encoder);
        default:
          return toStringV1(bytes, _baseCache, base || base32.encoder);
      }
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        code: this.code,
        version: this.version,
        hash: this.multihash.bytes
      };
    }
  }, {
    key: Symbol.toStringTag,
    get: function get() {
      return 'CID';
    }
  }, {
    key: Symbol["for"]('nodejs.util.inspect.custom'),
    value: function value() {
      return 'CID(' + this.toString() + ')';
    }
  }, {
    key: "toBaseEncodedString",
    get: function get() {
      throw new Error('Deprecated, use .toString()');
    }
  }, {
    key: "codec",
    get: function get() {
      throw new Error('"codec" property is deprecated, use integer "code" property instead');
    }
  }, {
    key: "buffer",
    get: function get() {
      throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');
    }
  }, {
    key: "multibaseName",
    get: function get() {
      throw new Error('"multibaseName" property is deprecated');
    }
  }, {
    key: "prefix",
    get: function get() {
      throw new Error('"prefix" property is deprecated');
    }
  }], [{
    key: "isCID",
    value: function isCID(value) {
      deprecate(/^0\.0/, IS_CID_DEPRECATION);
      return !!(value && (value[cidSymbol] || value.asCID === value));
    }
  }, {
    key: "asCID",
    value: function asCID(value) {
      if (value instanceof CID) {
        return value;
      } else if (value != null && value.asCID === value) {
        var _version = value.version,
          code = value.code,
          multihash = value.multihash,
          bytes = value.bytes;
        return new CID(_version, code, multihash, bytes || encodeCID(_version, code, multihash.bytes));
      } else if (value != null && value[cidSymbol] === true) {
        var _version2 = value.version,
          _multihash = value.multihash,
          _code = value.code;
        var digest = decode$5(_multihash);
        return CID.create(_version2, _code, digest);
      } else {
        return null;
      }
    }
  }, {
    key: "create",
    value: function create(version, code, digest) {
      if (typeof code !== 'number') {
        throw new Error('String codecs are no longer supported');
      }
      switch (version) {
        case 0:
          {
            if (code !== DAG_PB_CODE) {
              throw new Error("Version 0 CID must use dag-pb (code: ".concat(DAG_PB_CODE, ") block encoding"));
            } else {
              return new CID(version, code, digest, digest.bytes);
            }
          }
        case 1:
          {
            var bytes = encodeCID(version, code, digest.bytes);
            return new CID(version, code, digest, bytes);
          }
        default:
          {
            throw new Error('Invalid version');
          }
      }
    }
  }, {
    key: "createV0",
    value: function createV0(digest) {
      return CID.create(0, DAG_PB_CODE, digest);
    }
  }, {
    key: "createV1",
    value: function createV1(code, digest) {
      return CID.create(1, code, digest);
    }
  }, {
    key: "decode",
    value: function decode(bytes) {
      var _CID$decodeFirst = CID.decodeFirst(bytes),
        _CID$decodeFirst2 = _slicedToArray(_CID$decodeFirst, 2),
        cid = _CID$decodeFirst2[0],
        remainder = _CID$decodeFirst2[1];
      if (remainder.length) {
        throw new Error('Incorrect length');
      }
      return cid;
    }
  }, {
    key: "decodeFirst",
    value: function decodeFirst(bytes) {
      var specs = CID.inspectBytes(bytes);
      var prefixSize = specs.size - specs.multihashSize;
      var multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
      if (multihashBytes.byteLength !== specs.multihashSize) {
        throw new Error('Incorrect length');
      }
      var digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
      var digest = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
      var cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);
      return [cid, bytes.subarray(specs.size)];
    }
  }, {
    key: "inspectBytes",
    value: function inspectBytes(initialBytes) {
      var offset = 0;
      var next = function next() {
        var _varint$decode = decode$6(initialBytes.subarray(offset)),
          _varint$decode2 = _slicedToArray(_varint$decode, 2),
          i = _varint$decode2[0],
          length = _varint$decode2[1];
        offset += length;
        return i;
      };
      var version = next();
      var codec = DAG_PB_CODE;
      if (version === 18) {
        version = 0;
        offset = 0;
      } else if (version === 1) {
        codec = next();
      }
      if (version !== 0 && version !== 1) {
        throw new RangeError("Invalid CID version ".concat(version));
      }
      var prefixSize = offset;
      var multihashCode = next();
      var digestSize = next();
      var size = offset + digestSize;
      var multihashSize = size - prefixSize;
      return {
        version: version,
        codec: codec,
        multihashCode: multihashCode,
        digestSize: digestSize,
        multihashSize: multihashSize,
        size: size
      };
    }
  }, {
    key: "parse",
    value: function parse(source, base) {
      var _parseCIDtoBytes = parseCIDtoBytes(source, base),
        _parseCIDtoBytes2 = _slicedToArray(_parseCIDtoBytes, 2),
        prefix = _parseCIDtoBytes2[0],
        bytes = _parseCIDtoBytes2[1];
      var cid = CID.decode(bytes);
      cid._baseCache.set(prefix, source);
      return cid;
    }
  }]);
}();
var parseCIDtoBytes = function parseCIDtoBytes(source, base) {
  switch (source[0]) {
    case 'Q':
      {
        var decoder = base || base58btc;
        return [base58btc.prefix, decoder.decode("".concat(base58btc.prefix).concat(source))];
      }
    case base58btc.prefix:
      {
        var _decoder = base || base58btc;
        return [base58btc.prefix, _decoder.decode(source)];
      }
    case base32.prefix:
      {
        var _decoder2 = base || base32;
        return [base32.prefix, _decoder2.decode(source)];
      }
    default:
      {
        if (base == null) {
          throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');
        }
        return [source[0], base.decode(source)];
      }
  }
};
var toStringV0 = function toStringV0(bytes, cache, base) {
  var prefix = base.prefix;
  if (prefix !== base58btc.prefix) {
    throw Error("Cannot string encode V0 in ".concat(base.name, " encoding"));
  }
  var cid = cache.get(prefix);
  if (cid == null) {
    var _cid = base.encode(bytes).slice(1);
    cache.set(prefix, _cid);
    return _cid;
  } else {
    return cid;
  }
};
var toStringV1 = function toStringV1(bytes, cache, base) {
  var prefix = base.prefix;
  var cid = cache.get(prefix);
  if (cid == null) {
    var _cid2 = base.encode(bytes);
    cache.set(prefix, _cid2);
    return _cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = function encodeCID(version, code, multihash) {
  var codeOffset = encodingLength(version);
  var hashOffset = codeOffset + encodingLength(code);
  var bytes = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version, bytes, 0);
  encodeTo(code, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
var cidSymbol = Symbol["for"]('@ipld/js-cid/CID');
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version$c = '0.0.0-dev';
var deprecate = function deprecate(range, message) {
  if (range.test(version$c)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
var IS_CID_DEPRECATION = "CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n";

var bases = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, identityBase), base2$1), base8$1), base10$1), base16$1), base32$1), base36$1), base58), base64$1), base256emoji$1);
var hashes = _objectSpread2(_objectSpread2({}, sha2), identity$1);
var codecs = {
  raw: raw,
  json: json
};

function createCodec$1(name, prefix, encode, decode) {
  return {
    name: name,
    prefix: prefix,
    encoder: {
      name: name,
      prefix: prefix,
      encode: encode
    },
    decoder: {
      decode: decode
    }
  };
}
var string$1 = createCodec$1('utf8', 'u', function (buf) {
  var decoder = new TextDecoder('utf8');
  return 'u' + decoder.decode(buf);
}, function (str) {
  var encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii$1 = createCodec$1('ascii', 'a', function (buf) {
  var string = 'a';
  for (var i = 0; i < buf.length; i++) {
    string += String.fromCharCode(buf[i]);
  }
  return string;
}, function (str) {
  str = str.substring(1);
  var buf = allocUnsafe$1(str.length);
  for (var i = 0; i < str.length; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
});
var BASES$1 = _objectSpread2({
  utf8: string$1,
  'utf-8': string$1,
  hex: bases.base16,
  latin1: ascii$1,
  ascii: ascii$1,
  binary: ascii$1
}, bases);

function toString$1(array) {
  var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';
  var base = BASES$1[encoding];
  if (!base) {
    throw new Error("Unsupported encoding \"".concat(encoding, "\""));
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');
  }
  return base.encoder.encode(array).substring(1);
}

function fromString$1(string) {
  var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';
  var base = BASES$1[encoding];
  if (!base) {
    throw new Error("Unsupported encoding \"".concat(encoding, "\""));
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));
  }
  return base.decoder.decode("".concat(base.prefix).concat(string));
}

function decodeJSON(str) {
  return safeJsonParse(toString$1(fromString$1(str, JWT_ENCODING), JSON_ENCODING));
}
function encodeJSON(val) {
  return toString$1(fromString$1(safeJsonStringify(val), JSON_ENCODING), JWT_ENCODING);
}
function encodeIss(publicKey) {
  var header = fromString$1(MULTICODEC_ED25519_HEADER, MULTICODEC_ED25519_ENCODING);
  var multicodec = MULTICODEC_ED25519_BASE + toString$1(concat$2([header, publicKey]), MULTICODEC_ED25519_ENCODING);
  return [DID_PREFIX, DID_METHOD, multicodec].join(DID_DELIMITER);
}
function decodeIss(issuer) {
  var _issuer$split = issuer.split(DID_DELIMITER),
    _issuer$split2 = _slicedToArray(_issuer$split, 3),
    prefix = _issuer$split2[0],
    method = _issuer$split2[1],
    multicodec = _issuer$split2[2];
  if (prefix !== DID_PREFIX || method !== DID_METHOD) {
    throw new Error("Issuer must be a DID with method \"key\"");
  }
  var base = multicodec.slice(0, 1);
  if (base !== MULTICODEC_ED25519_BASE) {
    throw new Error("Issuer must be a key in mulicodec format");
  }
  var bytes = fromString$1(multicodec.slice(1), MULTICODEC_ED25519_ENCODING);
  var type = toString$1(bytes.slice(0, 2), MULTICODEC_ED25519_ENCODING);
  if (type !== MULTICODEC_ED25519_HEADER) {
    throw new Error("Issuer must be a public key with type \"Ed25519\"");
  }
  var publicKey = bytes.slice(2);
  if (publicKey.length !== MULTICODEC_ED25519_LENGTH) {
    throw new Error("Issuer must be a public key with length 32 bytes");
  }
  return publicKey;
}
function encodeSig(bytes) {
  return toString$1(bytes, JWT_ENCODING);
}
function decodeSig(encoded) {
  return fromString$1(encoded, JWT_ENCODING);
}
function encodeData(params) {
  return fromString$1([encodeJSON(params.header), encodeJSON(params.payload)].join(JWT_DELIMITER), DATA_ENCODING);
}
function decodeData(data) {
  var params = toString$1(data, DATA_ENCODING).split(JWT_DELIMITER);
  var header = decodeJSON(params[0]);
  var payload = decodeJSON(params[1]);
  return {
    header: header,
    payload: payload
  };
}
function encodeJWT(params) {
  return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(JWT_DELIMITER);
}
function decodeJWT(jwt) {
  var params = jwt.split(JWT_DELIMITER);
  var header = decodeJSON(params[0]);
  var payload = decodeJSON(params[1]);
  var signature = decodeSig(params[2]);
  var data = fromString$1(params.slice(0, 2).join(JWT_DELIMITER), DATA_ENCODING);
  return {
    header: header,
    payload: payload,
    signature: signature,
    data: data
  };
}

function generateKeyPair() {
  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : random$1.randomBytes(KEY_PAIR_SEED_LENGTH);
  return ed25519$1.generateKeyPairFromSeed(seed);
}
function signJWT(_x, _x2, _x3, _x4) {
  return _signJWT.apply(this, arguments);
}
function _signJWT() {
  _signJWT = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(sub, aud, ttl, keyPair) {
    var iat,
      header,
      iss,
      exp,
      payload,
      data,
      signature,
      _args = arguments;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          iat = _args.length > 4 && _args[4] !== undefined ? _args[4] : cjs$3.fromMiliseconds(Date.now());
          header = {
            alg: JWT_IRIDIUM_ALG,
            typ: JWT_IRIDIUM_TYP
          };
          iss = encodeIss(keyPair.publicKey);
          exp = iat + ttl;
          payload = {
            iss: iss,
            sub: sub,
            aud: aud,
            iat: iat,
            exp: exp
          };
          data = encodeData({
            header: header,
            payload: payload
          });
          signature = ed25519$1.sign(keyPair.secretKey, data);
          return _context.abrupt("return", encodeJWT({
            header: header,
            payload: payload,
            signature: signature
          }));
        case 8:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _signJWT.apply(this, arguments);
}
function verifyJWT(_x5) {
  return _verifyJWT.apply(this, arguments);
}
function _verifyJWT() {
  _verifyJWT = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(jwt) {
    var _decodeJWT, header, payload, data, signature, publicKey;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _decodeJWT = decodeJWT(jwt), header = _decodeJWT.header, payload = _decodeJWT.payload, data = _decodeJWT.data, signature = _decodeJWT.signature;
          if (!(header.alg !== JWT_IRIDIUM_ALG || header.typ !== JWT_IRIDIUM_TYP)) {
            _context2.next = 3;
            break;
          }
          throw new Error("JWT must use EdDSA algorithm");
        case 3:
          publicKey = decodeIss(payload.iss);
          return _context2.abrupt("return", ed25519$1.verify(publicKey, data, signature));
        case 5:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _verifyJWT.apply(this, arguments);
}

var __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var BrowserInfo = /** @class */function () {
  function BrowserInfo(name, version, os) {
    this.name = name;
    this.version = version;
    this.os = os;
    this.type = 'browser';
  }
  return BrowserInfo;
}();
var NodeInfo = /** @class */function () {
  function NodeInfo(version) {
    this.version = version;
    this.type = 'node';
    this.name = 'node';
    this.os = process.platform;
  }
  return NodeInfo;
}();
var SearchBotDeviceInfo = /** @class */function () {
  function SearchBotDeviceInfo(name, version, os, bot) {
    this.name = name;
    this.version = version;
    this.os = os;
    this.bot = bot;
    this.type = 'bot-device';
  }
  return SearchBotDeviceInfo;
}();
var BotInfo = /** @class */function () {
  function BotInfo() {
    this.type = 'bot';
    this.bot = true; // NOTE: deprecated test name instead
    this.name = 'bot';
    this.version = null;
    this.os = null;
  }
  return BotInfo;
}();
var ReactNativeInfo = /** @class */function () {
  function ReactNativeInfo() {
    this.type = 'react-native';
    this.name = 'react-native';
    this.version = null;
    this.os = null;
  }
  return ReactNativeInfo;
}();
// tslint:disable-next-line:max-line-length
var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [['aol', /AOLShield\/([0-9\._]+)/], ['edge', /Edge\/([0-9\._]+)/], ['edge-ios', /EdgiOS\/([0-9\._]+)/], ['yandexbrowser', /YaBrowser\/([0-9\._]+)/], ['kakaotalk', /KAKAOTALK\s([0-9\.]+)/], ['samsung', /SamsungBrowser\/([0-9\.]+)/], ['silk', /\bSilk\/([0-9._-]+)\b/], ['miui', /MiuiBrowser\/([0-9\.]+)$/], ['beaker', /BeakerBrowser\/([0-9\.]+)/], ['edge-chromium', /EdgA?\/([0-9\.]+)/], ['chromium-webview', /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/], ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/], ['phantomjs', /PhantomJS\/([0-9\.]+)(:?\s|$)/], ['crios', /CriOS\/([0-9\.]+)(:?\s|$)/], ['firefox', /Firefox\/([0-9\.]+)(?:\s|$)/], ['fxios', /FxiOS\/([0-9\.]+)/], ['opera-mini', /Opera Mini.*Version\/([0-9\.]+)/], ['opera', /Opera\/([0-9\.]+)(?:\s|$)/], ['opera', /OPR\/([0-9\.]+)(:?\s|$)/], ['pie', /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/], ['pie', /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/], ['netfront', /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/], ['ie', /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/], ['ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/], ['ie', /MSIE\s(7\.0)/], ['bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/], ['android', /Android\s([0-9\.]+)/], ['ios', /Version\/([0-9\._]+).*Mobile.*Safari.*/], ['safari', /Version\/([0-9\._]+).*Safari/], ['facebook', /FB[AS]V\/([0-9\.]+)/], ['instagram', /Instagram\s([0-9\.]+)/], ['ios-webview', /AppleWebKit\/([0-9\.]+).*Mobile/], ['ios-webview', /AppleWebKit\/([0-9\.]+).*Gecko\)$/], ['curl', /^curl\/([0-9\.]+)$/], ['searchbot', SEARCHBOX_UA_REGEX]];
var operatingSystemRules = [['iOS', /iP(hone|od|ad)/], ['Android OS', /Android/], ['BlackBerry OS', /BlackBerry|BB10/], ['Windows Mobile', /IEMobile/], ['Amazon OS', /Kindle/], ['Windows 3.11', /Win16/], ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/], ['Windows 98', /(Windows 98)|(Win98)/], ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/], ['Windows XP', /(Windows NT 5.1)|(Windows XP)/], ['Windows Server 2003', /(Windows NT 5.2)/], ['Windows Vista', /(Windows NT 6.0)/], ['Windows 7', /(Windows NT 6.1)/], ['Windows 8', /(Windows NT 6.2)/], ['Windows 8.1', /(Windows NT 6.3)/], ['Windows 10', /(Windows NT 10.0)/], ['Windows ME', /Windows ME/], ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/], ['Open BSD', /OpenBSD/], ['Sun OS', /SunOS/], ['Chrome OS', /CrOS/], ['Linux', /(Linux)|(X11)/], ['Mac OS', /(Mac_PowerPC)|(Macintosh)/], ['QNX', /QNX/], ['BeOS', /BeOS/], ['OS/2', /OS\/2/]];
function detect(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }
  if (typeof document === 'undefined' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return new ReactNativeInfo();
  }
  if (typeof navigator !== 'undefined') {
    return parseUserAgent(navigator.userAgent);
  }
  return getNodeVersion();
}
function matchUserAgent(ua) {
  // opted for using reduce here rather than Array#first with a regex.test call
  // this is primarily because using the reduce we only perform the regex
  // execution once rather than once for the test and for the exec again below
  // probably something that needs to be benchmarked though
  return ua !== '' && userAgentRules.reduce(function (matched, _a) {
    var browser = _a[0],
      regex = _a[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function browserName(ua) {
  var data = matchUserAgent(ua);
  return data ? data[0] : null;
}
function parseUserAgent(ua) {
  var matchedRule = matchUserAgent(ua);
  if (!matchedRule) {
    return null;
  }
  var name = matchedRule[0],
    match = matchedRule[1];
  if (name === 'searchbot') {
    return new BotInfo();
  }
  // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)
  var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);
    }
  } else {
    versionParts = [];
  }
  var version = versionParts.join('.');
  var os = detectOS(ua);
  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);
  }
  return new BrowserInfo(name, version, os);
}
function detectOS(ua) {
  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
    var _a = operatingSystemRules[ii],
      os = _a[0],
      regex = _a[1];
    var match = regex.exec(ua);
    if (match) {
      return os;
    }
  }
  return null;
}
function getNodeVersion() {
  var isNode = typeof process !== 'undefined' && process.version;
  return isNode ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
  var output = [];
  for (var ii = 0; ii < count; ii++) {
    output.push('0');
  }
  return output;
}

var cjs$2 = {};

"use strict";
Object.defineProperty(cjs$2, "__esModule", {
  value: true
});
var getLocalStorage_1 = cjs$2.getLocalStorage = getLocalStorageOrThrow_1 = cjs$2.getLocalStorageOrThrow = getCrypto_1 = cjs$2.getCrypto = getCryptoOrThrow_1 = cjs$2.getCryptoOrThrow = getLocation_1 = cjs$2.getLocation = getLocationOrThrow_1 = cjs$2.getLocationOrThrow = getNavigator_1 = cjs$2.getNavigator = getNavigatorOrThrow_1 = cjs$2.getNavigatorOrThrow = getDocument_1 = cjs$2.getDocument = getDocumentOrThrow_1 = cjs$2.getDocumentOrThrow = getFromWindowOrThrow_1 = cjs$2.getFromWindowOrThrow = getFromWindow_1 = cjs$2.getFromWindow = void 0;
function getFromWindow(name) {
  var res = undefined;
  if (typeof window !== "undefined" && typeof window[name] !== "undefined") {
    res = window[name];
  }
  return res;
}
var getFromWindow_1 = cjs$2.getFromWindow = getFromWindow;
function getFromWindowOrThrow(name) {
  var res = getFromWindow(name);
  if (!res) {
    throw new Error("".concat(name, " is not defined in Window"));
  }
  return res;
}
var getFromWindowOrThrow_1 = cjs$2.getFromWindowOrThrow = getFromWindowOrThrow;
function getDocumentOrThrow() {
  return getFromWindowOrThrow("document");
}
var getDocumentOrThrow_1 = cjs$2.getDocumentOrThrow = getDocumentOrThrow;
function getDocument() {
  return getFromWindow("document");
}
var getDocument_1 = cjs$2.getDocument = getDocument;
function getNavigatorOrThrow() {
  return getFromWindowOrThrow("navigator");
}
var getNavigatorOrThrow_1 = cjs$2.getNavigatorOrThrow = getNavigatorOrThrow;
function getNavigator() {
  return getFromWindow("navigator");
}
var getNavigator_1 = cjs$2.getNavigator = getNavigator;
function getLocationOrThrow() {
  return getFromWindowOrThrow("location");
}
var getLocationOrThrow_1 = cjs$2.getLocationOrThrow = getLocationOrThrow;
function getLocation() {
  return getFromWindow("location");
}
var getLocation_1 = cjs$2.getLocation = getLocation;
function getCryptoOrThrow() {
  return getFromWindowOrThrow("crypto");
}
var getCryptoOrThrow_1 = cjs$2.getCryptoOrThrow = getCryptoOrThrow;
function getCrypto() {
  return getFromWindow("crypto");
}
var getCrypto_1 = cjs$2.getCrypto = getCrypto;
function getLocalStorageOrThrow() {
  return getFromWindowOrThrow("localStorage");
}
var getLocalStorageOrThrow_1 = cjs$2.getLocalStorageOrThrow = getLocalStorageOrThrow;
function getLocalStorage() {
  return getFromWindow("localStorage");
}
getLocalStorage_1 = cjs$2.getLocalStorage = getLocalStorage;

var cjs$1 = {};

"use strict";
Object.defineProperty(cjs$1, "__esModule", {
  value: true
});
var getWindowMetadata_1 = cjs$1.getWindowMetadata = void 0;
var window_getters_1 = cjs$2;
function getWindowMetadata() {
  var doc;
  var loc;
  try {
    doc = window_getters_1.getDocumentOrThrow();
    loc = window_getters_1.getLocationOrThrow();
  } catch (e) {
    return null;
  }
  function getIcons() {
    var links = doc.getElementsByTagName("link");
    var icons = [];
    for (var i = 0; i < links.length; i++) {
      var link = links[i];
      var rel = link.getAttribute("rel");
      if (rel) {
        if (rel.toLowerCase().indexOf("icon") > -1) {
          var href = link.getAttribute("href");
          if (href) {
            if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
              var absoluteHref = loc.protocol + "//" + loc.host;
              if (href.indexOf("/") === 0) {
                absoluteHref += href;
              } else {
                var path = loc.pathname.split("/");
                path.pop();
                var finalPath = path.join("/");
                absoluteHref += finalPath + "/" + href;
              }
              icons.push(absoluteHref);
            } else if (href.indexOf("//") === 0) {
              var absoluteUrl = loc.protocol + href;
              icons.push(absoluteUrl);
            } else {
              icons.push(href);
            }
          }
        }
      }
    }
    return icons;
  }
  function getWindowMetadataOfAny() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var metaTags = doc.getElementsByTagName("meta");
    var _loop = function _loop() {
        var tag = metaTags[i];
        var attributes = ["itemprop", "property", "name"].map(function (target) {
          return tag.getAttribute(target);
        }).filter(function (attr) {
          if (attr) {
            return args.includes(attr);
          }
          return false;
        });
        if (attributes.length && attributes) {
          var content = tag.getAttribute("content");
          if (content) {
            return {
              v: content
            };
          }
        }
      },
      _ret;
    for (var i = 0; i < metaTags.length; i++) {
      _ret = _loop();
      if (_ret) return _ret.v;
    }
    return "";
  }
  function getName() {
    var name = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
    if (!name) {
      name = doc.title;
    }
    return name;
  }
  function getDescription() {
    var description = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
    return description;
  }
  var name = getName();
  var description = getDescription();
  var url = loc.origin;
  var icons = getIcons();
  var meta = {
    description: description,
    url: url,
    icons: icons,
    name: name
  };
  return meta;
}
getWindowMetadata_1 = cjs$1.getWindowMetadata = getWindowMetadata;

var queryString = {};

'use strict';
var strictUriEncode = function strictUriEncode(str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {
    return "%".concat(x.charCodeAt(0).toString(16).toUpperCase());
  });
};
var index$d = /*@__PURE__*/getDefaultExportFromCjs$1(strictUriEncode);

'use strict';
var token = '%[a-f0-9]{2}';
var singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');
var multiMatcher = new RegExp('(' + token + ')+', 'gi');
function decodeComponents(components, split) {
  try {
    // Try to decode the entire string first
    return [decodeURIComponent(components.join(''))];
  } catch (err) {
    // Do nothing
  }
  if (components.length === 1) {
    return components;
  }
  split = split || 1;

  // Split the array in 2 parts
  var left = components.slice(0, split);
  var right = components.slice(split);
  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
}
function decode$2(input) {
  try {
    return decodeURIComponent(input);
  } catch (err) {
    var tokens = input.match(singleMatcher) || [];
    for (var i = 1; i < tokens.length; i++) {
      input = decodeComponents(tokens, i).join('');
      tokens = input.match(singleMatcher) || [];
    }
    return input;
  }
}
function customDecodeURIComponent(input) {
  // Keep track of all the replacements and prefill the map with the `BOM`
  var replaceMap = {
    '%FE%FF': "\uFFFD\uFFFD",
    '%FF%FE': "\uFFFD\uFFFD"
  };
  var match = multiMatcher.exec(input);
  while (match) {
    try {
      // Decode as big chunks as possible
      replaceMap[match[0]] = decodeURIComponent(match[0]);
    } catch (err) {
      var result = decode$2(match[0]);
      if (result !== match[0]) {
        replaceMap[match[0]] = result;
      }
    }
    match = multiMatcher.exec(input);
  }

  // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else
  replaceMap['%C2'] = "\uFFFD";
  var entries = Object.keys(replaceMap);
  for (var i = 0; i < entries.length; i++) {
    // Replace all decoded components
    var key = entries[i];
    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
  }
  return input;
}
var decodeUriComponent = function decodeUriComponent(encodedURI) {
  if (typeof encodedURI !== 'string') {
    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + _typeof(encodedURI) + '`');
  }
  try {
    encodedURI = encodedURI.replace(/\+/g, ' ');

    // Try the built in decoder first
    return decodeURIComponent(encodedURI);
  } catch (err) {
    // Fallback to a more advanced decoder
    return customDecodeURIComponent(encodedURI);
  }
};
var index$c = /*@__PURE__*/getDefaultExportFromCjs$1(decodeUriComponent);

'use strict';
var splitOnFirst = function splitOnFirst(string, separator) {
  if (!(typeof string === 'string' && typeof separator === 'string')) {
    throw new TypeError('Expected the arguments to be of type `string`');
  }
  if (separator === '') {
    return [string];
  }
  var separatorIndex = string.indexOf(separator);
  if (separatorIndex === -1) {
    return [string];
  }
  return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];
};
var index$b = /*@__PURE__*/getDefaultExportFromCjs$1(splitOnFirst);

'use strict';
var filterObj = function filterObj(obj, predicate) {
  var ret = {};
  var keys = Object.keys(obj);
  var isArr = Array.isArray(predicate);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var val = obj[key];
    if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
      ret[key] = val;
    }
  }
  return ret;
};
var index$a = /*@__PURE__*/getDefaultExportFromCjs$1(filterObj);

(function (exports) {
  'use strict';

  var strictUriEncode$1 = strictUriEncode;
  var decodeComponent = decodeUriComponent;
  var splitOnFirst$1 = splitOnFirst;
  var filterObject = filterObj;
  var isNullOrUndefined = function isNullOrUndefined(value) {
    return value === null || value === undefined;
  };
  var encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');
  function encoderForArrayFormat(options) {
    switch (options.arrayFormat) {
      case 'index':
        return function (key) {
          return function (result, value) {
            var index = result.length;
            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {
              return result;
            }
            if (value === null) {
              return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);
            }
            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);
          };
        };
      case 'bracket':
        return function (key) {
          return function (result, value) {
            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {
              return result;
            }
            if (value === null) {
              return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);
            }
            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);
          };
        };
      case 'colon-list-separator':
        return function (key) {
          return function (result, value) {
            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {
              return result;
            }
            if (value === null) {
              return [].concat(_toConsumableArray(result), [[encode(key, options), ':list='].join('')]);
            }
            return [].concat(_toConsumableArray(result), [[encode(key, options), ':list=', encode(value, options)].join('')]);
          };
        };
      case 'comma':
      case 'separator':
      case 'bracket-separator':
        {
          var keyValueSep = options.arrayFormat === 'bracket-separator' ? '[]=' : '=';
          return function (key) {
            return function (result, value) {
              if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {
                return result;
              }

              // Translate null to an empty string so that it doesn't serialize as 'null'
              value = value === null ? '' : value;
              if (result.length === 0) {
                return [[encode(key, options), keyValueSep, encode(value, options)].join('')];
              }
              return [[result, encode(value, options)].join(options.arrayFormatSeparator)];
            };
          };
        }
      default:
        return function (key) {
          return function (result, value) {
            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {
              return result;
            }
            if (value === null) {
              return [].concat(_toConsumableArray(result), [encode(key, options)]);
            }
            return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);
          };
        };
    }
  }
  function parserForArrayFormat(options) {
    var result;
    switch (options.arrayFormat) {
      case 'index':
        return function (key, value, accumulator) {
          result = /\[(\d*)\]$/.exec(key);
          key = key.replace(/\[\d*\]$/, '');
          if (!result) {
            accumulator[key] = value;
            return;
          }
          if (accumulator[key] === undefined) {
            accumulator[key] = {};
          }
          accumulator[key][result[1]] = value;
        };
      case 'bracket':
        return function (key, value, accumulator) {
          result = /(\[\])$/.exec(key);
          key = key.replace(/\[\]$/, '');
          if (!result) {
            accumulator[key] = value;
            return;
          }
          if (accumulator[key] === undefined) {
            accumulator[key] = [value];
            return;
          }
          accumulator[key] = [].concat(accumulator[key], value);
        };
      case 'colon-list-separator':
        return function (key, value, accumulator) {
          result = /(:list)$/.exec(key);
          key = key.replace(/:list$/, '');
          if (!result) {
            accumulator[key] = value;
            return;
          }
          if (accumulator[key] === undefined) {
            accumulator[key] = [value];
            return;
          }
          accumulator[key] = [].concat(accumulator[key], value);
        };
      case 'comma':
      case 'separator':
        return function (key, value, accumulator) {
          var isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);
          var isEncodedArray = typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator);
          value = isEncodedArray ? decode(value, options) : value;
          var newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(function (item) {
            return decode(item, options);
          }) : value === null ? value : decode(value, options);
          accumulator[key] = newValue;
        };
      case 'bracket-separator':
        return function (key, value, accumulator) {
          var isArray = /(\[\])$/.test(key);
          key = key.replace(/\[\]$/, '');
          if (!isArray) {
            accumulator[key] = value ? decode(value, options) : value;
            return;
          }
          var arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map(function (item) {
            return decode(item, options);
          });
          if (accumulator[key] === undefined) {
            accumulator[key] = arrayValue;
            return;
          }
          accumulator[key] = [].concat(accumulator[key], arrayValue);
        };
      default:
        return function (key, value, accumulator) {
          if (accumulator[key] === undefined) {
            accumulator[key] = value;
            return;
          }
          accumulator[key] = [].concat(accumulator[key], value);
        };
    }
  }
  function validateArrayFormatSeparator(value) {
    if (typeof value !== 'string' || value.length !== 1) {
      throw new TypeError('arrayFormatSeparator must be single character string');
    }
  }
  function encode(value, options) {
    if (options.encode) {
      return options.strict ? strictUriEncode$1(value) : encodeURIComponent(value);
    }
    return value;
  }
  function decode(value, options) {
    if (options.decode) {
      return decodeComponent(value);
    }
    return value;
  }
  function keysSorter(input) {
    if (Array.isArray(input)) {
      return input.sort();
    }
    if (_typeof(input) === 'object') {
      return keysSorter(Object.keys(input)).sort(function (a, b) {
        return Number(a) - Number(b);
      }).map(function (key) {
        return input[key];
      });
    }
    return input;
  }
  function removeHash(input) {
    var hashStart = input.indexOf('#');
    if (hashStart !== -1) {
      input = input.slice(0, hashStart);
    }
    return input;
  }
  function getHash(url) {
    var hash = '';
    var hashStart = url.indexOf('#');
    if (hashStart !== -1) {
      hash = url.slice(hashStart);
    }
    return hash;
  }
  function extract(input) {
    input = removeHash(input);
    var queryStart = input.indexOf('?');
    if (queryStart === -1) {
      return '';
    }
    return input.slice(queryStart + 1);
  }
  function parseValue(value, options) {
    if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {
      value = Number(value);
    } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {
      value = value.toLowerCase() === 'true';
    }
    return value;
  }
  function parse(query, options) {
    options = Object.assign({
      decode: true,
      sort: true,
      arrayFormat: 'none',
      arrayFormatSeparator: ',',
      parseNumbers: false,
      parseBooleans: false
    }, options);
    validateArrayFormatSeparator(options.arrayFormatSeparator);
    var formatter = parserForArrayFormat(options);

    // Create an object with no prototype
    var ret = Object.create(null);
    if (typeof query !== 'string') {
      return ret;
    }
    query = query.trim().replace(/^[?#&]/, '');
    if (!query) {
      return ret;
    }
    var _iterator = _createForOfIteratorHelper(query.split('&')),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var param = _step.value;
        if (param === '') {
          continue;
        }
        var _splitOnFirst = splitOnFirst$1(options.decode ? param.replace(/\+/g, ' ') : param, '='),
          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),
          _key = _splitOnFirst2[0],
          _value = _splitOnFirst2[1];

        // Missing `=` should be `null`:
        // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
        _value = _value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? _value : decode(_value, options);
        formatter(decode(_key, options), _value, ret);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    for (var _i = 0, _Object$keys = Object.keys(ret); _i < _Object$keys.length; _i++) {
      var key = _Object$keys[_i];
      var value = ret[key];
      if (_typeof(value) === 'object' && value !== null) {
        for (var _i2 = 0, _Object$keys2 = Object.keys(value); _i2 < _Object$keys2.length; _i2++) {
          var k = _Object$keys2[_i2];
          value[k] = parseValue(value[k], options);
        }
      } else {
        ret[key] = parseValue(value, options);
      }
    }
    if (options.sort === false) {
      return ret;
    }
    return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {
      var value = ret[key];
      if (Boolean(value) && _typeof(value) === 'object' && !Array.isArray(value)) {
        // Sort object keys, not values
        result[key] = keysSorter(value);
      } else {
        result[key] = value;
      }
      return result;
    }, Object.create(null));
  }
  exports.extract = extract;
  exports.parse = parse;
  exports.stringify = function (object, options) {
    if (!object) {
      return '';
    }
    options = Object.assign({
      encode: true,
      strict: true,
      arrayFormat: 'none',
      arrayFormatSeparator: ','
    }, options);
    validateArrayFormatSeparator(options.arrayFormatSeparator);
    var shouldFilter = function shouldFilter(key) {
      return options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === '';
    };
    var formatter = encoderForArrayFormat(options);
    var objectCopy = {};
    for (var _i3 = 0, _Object$keys3 = Object.keys(object); _i3 < _Object$keys3.length; _i3++) {
      var key = _Object$keys3[_i3];
      if (!shouldFilter(key)) {
        objectCopy[key] = object[key];
      }
    }
    var keys = Object.keys(objectCopy);
    if (options.sort !== false) {
      keys.sort(options.sort);
    }
    return keys.map(function (key) {
      var value = object[key];
      if (value === undefined) {
        return '';
      }
      if (value === null) {
        return encode(key, options);
      }
      if (Array.isArray(value)) {
        if (value.length === 0 && options.arrayFormat === 'bracket-separator') {
          return encode(key, options) + '[]';
        }
        return value.reduce(formatter(key), []).join('&');
      }
      return encode(key, options) + '=' + encode(value, options);
    }).filter(function (x) {
      return x.length > 0;
    }).join('&');
  };
  exports.parseUrl = function (url, options) {
    options = Object.assign({
      decode: true
    }, options);
    var _splitOnFirst3 = splitOnFirst$1(url, '#'),
      _splitOnFirst4 = _slicedToArray(_splitOnFirst3, 2),
      url_ = _splitOnFirst4[0],
      hash = _splitOnFirst4[1];
    return Object.assign({
      url: url_.split('?')[0] || '',
      query: parse(extract(url), options)
    }, options && options.parseFragmentIdentifier && hash ? {
      fragmentIdentifier: decode(hash, options)
    } : {});
  };
  exports.stringifyUrl = function (object, options) {
    options = Object.assign(_defineProperty({
      encode: true,
      strict: true
    }, encodeFragmentIdentifier, true), options);
    var url = removeHash(object.url).split('?')[0] || '';
    var queryFromUrl = exports.extract(object.url);
    var parsedQueryFromUrl = exports.parse(queryFromUrl, {
      sort: false
    });
    var query = Object.assign(parsedQueryFromUrl, object.query);
    var queryString = exports.stringify(query, options);
    if (queryString) {
      queryString = "?".concat(queryString);
    }
    var hash = getHash(object.url);
    if (object.fragmentIdentifier) {
      hash = "#".concat(options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier);
    }
    return "".concat(url).concat(queryString).concat(hash);
  };
  exports.pick = function (input, filter, options) {
    options = Object.assign(_defineProperty({
      parseFragmentIdentifier: true
    }, encodeFragmentIdentifier, false), options);
    var _exports$parseUrl = exports.parseUrl(input, options),
      url = _exports$parseUrl.url,
      query = _exports$parseUrl.query,
      fragmentIdentifier = _exports$parseUrl.fragmentIdentifier;
    return exports.stringifyUrl({
      url: url,
      query: filterObject(query, filter),
      fragmentIdentifier: fragmentIdentifier
    }, options);
  };
  exports.exclude = function (input, filter, options) {
    var exclusionFilter = Array.isArray(filter) ? function (key) {
      return !filter.includes(key);
    } : function (key, value) {
      return !filter(key, value);
    };
    return exports.pick(input, exclusionFilter, options);
  };
})(queryString);
var index$9 = /*@__PURE__*/getDefaultExportFromCjs$1(queryString);

var sha3$2 = {exports: {}};

var sha3 = sha3$2.exports;
(function (module) {
  /*jslint bitwise: true */
  (function () {
    'use strict';

    var INPUT_ERROR = 'input is invalid type';
    var FINALIZE_ERROR = 'finalize already called';
    var WINDOW = (typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object';
    var root = WINDOW ? window : {};
    if (root.JS_SHA3_NO_WINDOW) {
      WINDOW = false;
    }
    var WEB_WORKER = !WINDOW && (typeof self === "undefined" ? "undefined" : _typeof(self)) === 'object';
    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && (typeof process === "undefined" ? "undefined" : _typeof(process)) === 'object' && process.versions && process.versions.node;
    if (NODE_JS) {
      root = commonjsGlobal$1;
    } else if (WEB_WORKER) {
      root = self;
    }
    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;
    var AMD = typeof undefined === 'function' && undefined.amd;
    var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
    var HEX_CHARS = '0123456789abcdef'.split('');
    var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
    var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
    var KECCAK_PADDING = [1, 256, 65536, 16777216];
    var PADDING = [6, 1536, 393216, 100663296];
    var SHIFT = [0, 8, 16, 24];
    var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
    var BITS = [224, 256, 384, 512];
    var SHAKE_BITS = [128, 256];
    var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];
    var CSHAKE_BYTEPAD = {
      '128': 168,
      '256': 136
    };
    if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
      Array.isArray = function (obj) {
        return Object.prototype.toString.call(obj) === '[object Array]';
      };
    }
    if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
      ArrayBuffer.isView = function (obj) {
        return _typeof(obj) === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
      };
    }
    var createOutputMethod = function createOutputMethod(bits, padding, outputType) {
      return function (message) {
        return new Keccak(bits, padding, bits).update(message)[outputType]();
      };
    };
    var createShakeOutputMethod = function createShakeOutputMethod(bits, padding, outputType) {
      return function (message, outputBits) {
        return new Keccak(bits, padding, outputBits).update(message)[outputType]();
      };
    };
    var createCshakeOutputMethod = function createCshakeOutputMethod(bits, padding, outputType) {
      return function (message, outputBits, n, s) {
        return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();
      };
    };
    var createKmacOutputMethod = function createKmacOutputMethod(bits, padding, outputType) {
      return function (key, message, outputBits, s) {
        return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();
      };
    };
    var createOutputMethods = function createOutputMethods(method, createMethod, bits, padding) {
      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
        var type = OUTPUT_TYPES[i];
        method[type] = createMethod(bits, padding, type);
      }
      return method;
    };
    var createMethod = function createMethod(bits, padding) {
      var method = createOutputMethod(bits, padding, 'hex');
      method.create = function () {
        return new Keccak(bits, padding, bits);
      };
      method.update = function (message) {
        return method.create().update(message);
      };
      return createOutputMethods(method, createOutputMethod, bits, padding);
    };
    var createShakeMethod = function createShakeMethod(bits, padding) {
      var method = createShakeOutputMethod(bits, padding, 'hex');
      method.create = function (outputBits) {
        return new Keccak(bits, padding, outputBits);
      };
      method.update = function (message, outputBits) {
        return method.create(outputBits).update(message);
      };
      return createOutputMethods(method, createShakeOutputMethod, bits, padding);
    };
    var createCshakeMethod = function createCshakeMethod(bits, padding) {
      var w = CSHAKE_BYTEPAD[bits];
      var method = createCshakeOutputMethod(bits, padding, 'hex');
      method.create = function (outputBits, n, s) {
        if (!n && !s) {
          return methods['shake' + bits].create(outputBits);
        } else {
          return new Keccak(bits, padding, outputBits).bytepad([n, s], w);
        }
      };
      method.update = function (message, outputBits, n, s) {
        return method.create(outputBits, n, s).update(message);
      };
      return createOutputMethods(method, createCshakeOutputMethod, bits, padding);
    };
    var createKmacMethod = function createKmacMethod(bits, padding) {
      var w = CSHAKE_BYTEPAD[bits];
      var method = createKmacOutputMethod(bits, padding, 'hex');
      method.create = function (key, outputBits, s) {
        return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);
      };
      method.update = function (key, message, outputBits, s) {
        return method.create(key, outputBits, s).update(message);
      };
      return createOutputMethods(method, createKmacOutputMethod, bits, padding);
    };
    var algorithms = [{
      name: 'keccak',
      padding: KECCAK_PADDING,
      bits: BITS,
      createMethod: createMethod
    }, {
      name: 'sha3',
      padding: PADDING,
      bits: BITS,
      createMethod: createMethod
    }, {
      name: 'shake',
      padding: SHAKE_PADDING,
      bits: SHAKE_BITS,
      createMethod: createShakeMethod
    }, {
      name: 'cshake',
      padding: CSHAKE_PADDING,
      bits: SHAKE_BITS,
      createMethod: createCshakeMethod
    }, {
      name: 'kmac',
      padding: CSHAKE_PADDING,
      bits: SHAKE_BITS,
      createMethod: createKmacMethod
    }];
    var methods = {},
      methodNames = [];
    for (var i = 0; i < algorithms.length; ++i) {
      var algorithm = algorithms[i];
      var bits = algorithm.bits;
      for (var j = 0; j < bits.length; ++j) {
        var methodName = algorithm.name + '_' + bits[j];
        methodNames.push(methodName);
        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
        if (algorithm.name !== 'sha3') {
          var newMethodName = algorithm.name + bits[j];
          methodNames.push(newMethodName);
          methods[newMethodName] = methods[methodName];
        }
      }
    }
    function Keccak(bits, padding, outputBits) {
      this.blocks = [];
      this.s = [];
      this.padding = padding;
      this.outputBits = outputBits;
      this.reset = true;
      this.finalized = false;
      this.block = 0;
      this.start = 0;
      this.blockCount = 1600 - (bits << 1) >> 5;
      this.byteCount = this.blockCount << 2;
      this.outputBlocks = outputBits >> 5;
      this.extraBytes = (outputBits & 31) >> 3;
      for (var i = 0; i < 50; ++i) {
        this.s[i] = 0;
      }
    }
    Keccak.prototype.update = function (message) {
      if (this.finalized) {
        throw new Error(FINALIZE_ERROR);
      }
      var notString,
        type = _typeof(message);
      if (type !== 'string') {
        if (type === 'object') {
          if (message === null) {
            throw new Error(INPUT_ERROR);
          } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
            message = new Uint8Array(message);
          } else if (!Array.isArray(message)) {
            if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
              throw new Error(INPUT_ERROR);
            }
          }
        } else {
          throw new Error(INPUT_ERROR);
        }
        notString = true;
      }
      var blocks = this.blocks,
        byteCount = this.byteCount,
        length = message.length,
        blockCount = this.blockCount,
        index = 0,
        s = this.s,
        i,
        code;
      while (index < length) {
        if (this.reset) {
          this.reset = false;
          blocks[0] = this.block;
          for (i = 1; i < blockCount + 1; ++i) {
            blocks[i] = 0;
          }
        }
        if (notString) {
          for (i = this.start; index < length && i < byteCount; ++index) {
            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
          }
        } else {
          for (i = this.start; index < length && i < byteCount; ++index) {
            code = message.charCodeAt(index);
            if (code < 0x80) {
              blocks[i >> 2] |= code << SHIFT[i++ & 3];
            } else if (code < 0x800) {
              blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
            } else if (code < 0xd800 || code >= 0xe000) {
              blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
            } else {
              code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);
              blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
            }
          }
        }
        this.lastByteIndex = i;
        if (i >= byteCount) {
          this.start = i - byteCount;
          this.block = blocks[blockCount];
          for (i = 0; i < blockCount; ++i) {
            s[i] ^= blocks[i];
          }
          f(s);
          this.reset = true;
        } else {
          this.start = i;
        }
      }
      return this;
    };
    Keccak.prototype.encode = function (x, right) {
      var o = x & 255,
        n = 1;
      var bytes = [o];
      x = x >> 8;
      o = x & 255;
      while (o > 0) {
        bytes.unshift(o);
        x = x >> 8;
        o = x & 255;
        ++n;
      }
      if (right) {
        bytes.push(n);
      } else {
        bytes.unshift(n);
      }
      this.update(bytes);
      return bytes.length;
    };
    Keccak.prototype.encodeString = function (str) {
      var notString,
        type = _typeof(str);
      if (type !== 'string') {
        if (type === 'object') {
          if (str === null) {
            throw new Error(INPUT_ERROR);
          } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
            str = new Uint8Array(str);
          } else if (!Array.isArray(str)) {
            if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
              throw new Error(INPUT_ERROR);
            }
          }
        } else {
          throw new Error(INPUT_ERROR);
        }
        notString = true;
      }
      var bytes = 0,
        length = str.length;
      if (notString) {
        bytes = length;
      } else {
        for (var i = 0; i < str.length; ++i) {
          var code = str.charCodeAt(i);
          if (code < 0x80) {
            bytes += 1;
          } else if (code < 0x800) {
            bytes += 2;
          } else if (code < 0xd800 || code >= 0xe000) {
            bytes += 3;
          } else {
            code = 0x10000 + ((code & 0x3ff) << 10 | str.charCodeAt(++i) & 0x3ff);
            bytes += 4;
          }
        }
      }
      bytes += this.encode(bytes * 8);
      this.update(str);
      return bytes;
    };
    Keccak.prototype.bytepad = function (strs, w) {
      var bytes = this.encode(w);
      for (var i = 0; i < strs.length; ++i) {
        bytes += this.encodeString(strs[i]);
      }
      var paddingBytes = w - bytes % w;
      var zeros = [];
      zeros.length = paddingBytes;
      this.update(zeros);
      return this;
    };
    Keccak.prototype.finalize = function () {
      if (this.finalized) {
        return;
      }
      this.finalized = true;
      var blocks = this.blocks,
        i = this.lastByteIndex,
        blockCount = this.blockCount,
        s = this.s;
      blocks[i >> 2] |= this.padding[i & 3];
      if (this.lastByteIndex === this.byteCount) {
        blocks[0] = blocks[blockCount];
        for (i = 1; i < blockCount + 1; ++i) {
          blocks[i] = 0;
        }
      }
      blocks[blockCount - 1] |= 0x80000000;
      for (i = 0; i < blockCount; ++i) {
        s[i] ^= blocks[i];
      }
      f(s);
    };
    Keccak.prototype.toString = Keccak.prototype.hex = function () {
      this.finalize();
      var blockCount = this.blockCount,
        s = this.s,
        outputBlocks = this.outputBlocks,
        extraBytes = this.extraBytes,
        i = 0,
        j = 0;
      var hex = '',
        block;
      while (j < outputBlocks) {
        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
          block = s[i];
          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];
        }
        if (j % blockCount === 0) {
          f(s);
          i = 0;
        }
      }
      if (extraBytes) {
        block = s[i];
        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];
        if (extraBytes > 1) {
          hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];
        }
        if (extraBytes > 2) {
          hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];
        }
      }
      return hex;
    };
    Keccak.prototype.arrayBuffer = function () {
      this.finalize();
      var blockCount = this.blockCount,
        s = this.s,
        outputBlocks = this.outputBlocks,
        extraBytes = this.extraBytes,
        i = 0,
        j = 0;
      var bytes = this.outputBits >> 3;
      var buffer;
      if (extraBytes) {
        buffer = new ArrayBuffer(outputBlocks + 1 << 2);
      } else {
        buffer = new ArrayBuffer(bytes);
      }
      var array = new Uint32Array(buffer);
      while (j < outputBlocks) {
        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
          array[j] = s[i];
        }
        if (j % blockCount === 0) {
          f(s);
        }
      }
      if (extraBytes) {
        array[i] = s[i];
        buffer = buffer.slice(0, bytes);
      }
      return buffer;
    };
    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
    Keccak.prototype.digest = Keccak.prototype.array = function () {
      this.finalize();
      var blockCount = this.blockCount,
        s = this.s,
        outputBlocks = this.outputBlocks,
        extraBytes = this.extraBytes,
        i = 0,
        j = 0;
      var array = [],
        offset,
        block;
      while (j < outputBlocks) {
        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
          offset = j << 2;
          block = s[i];
          array[offset] = block & 0xFF;
          array[offset + 1] = block >> 8 & 0xFF;
          array[offset + 2] = block >> 16 & 0xFF;
          array[offset + 3] = block >> 24 & 0xFF;
        }
        if (j % blockCount === 0) {
          f(s);
        }
      }
      if (extraBytes) {
        offset = j << 2;
        block = s[i];
        array[offset] = block & 0xFF;
        if (extraBytes > 1) {
          array[offset + 1] = block >> 8 & 0xFF;
        }
        if (extraBytes > 2) {
          array[offset + 2] = block >> 16 & 0xFF;
        }
      }
      return array;
    };
    function Kmac(bits, padding, outputBits) {
      Keccak.call(this, bits, padding, outputBits);
    }
    Kmac.prototype = new Keccak();
    Kmac.prototype.finalize = function () {
      this.encode(this.outputBits, true);
      return Keccak.prototype.finalize.call(this);
    };
    var f = function f(s) {
      var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
      for (n = 0; n < 48; n += 2) {
        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];
        h = c8 ^ (c2 << 1 | c3 >>> 31);
        l = c9 ^ (c3 << 1 | c2 >>> 31);
        s[0] ^= h;
        s[1] ^= l;
        s[10] ^= h;
        s[11] ^= l;
        s[20] ^= h;
        s[21] ^= l;
        s[30] ^= h;
        s[31] ^= l;
        s[40] ^= h;
        s[41] ^= l;
        h = c0 ^ (c4 << 1 | c5 >>> 31);
        l = c1 ^ (c5 << 1 | c4 >>> 31);
        s[2] ^= h;
        s[3] ^= l;
        s[12] ^= h;
        s[13] ^= l;
        s[22] ^= h;
        s[23] ^= l;
        s[32] ^= h;
        s[33] ^= l;
        s[42] ^= h;
        s[43] ^= l;
        h = c2 ^ (c6 << 1 | c7 >>> 31);
        l = c3 ^ (c7 << 1 | c6 >>> 31);
        s[4] ^= h;
        s[5] ^= l;
        s[14] ^= h;
        s[15] ^= l;
        s[24] ^= h;
        s[25] ^= l;
        s[34] ^= h;
        s[35] ^= l;
        s[44] ^= h;
        s[45] ^= l;
        h = c4 ^ (c8 << 1 | c9 >>> 31);
        l = c5 ^ (c9 << 1 | c8 >>> 31);
        s[6] ^= h;
        s[7] ^= l;
        s[16] ^= h;
        s[17] ^= l;
        s[26] ^= h;
        s[27] ^= l;
        s[36] ^= h;
        s[37] ^= l;
        s[46] ^= h;
        s[47] ^= l;
        h = c6 ^ (c0 << 1 | c1 >>> 31);
        l = c7 ^ (c1 << 1 | c0 >>> 31);
        s[8] ^= h;
        s[9] ^= l;
        s[18] ^= h;
        s[19] ^= l;
        s[28] ^= h;
        s[29] ^= l;
        s[38] ^= h;
        s[39] ^= l;
        s[48] ^= h;
        s[49] ^= l;
        b0 = s[0];
        b1 = s[1];
        b32 = s[11] << 4 | s[10] >>> 28;
        b33 = s[10] << 4 | s[11] >>> 28;
        b14 = s[20] << 3 | s[21] >>> 29;
        b15 = s[21] << 3 | s[20] >>> 29;
        b46 = s[31] << 9 | s[30] >>> 23;
        b47 = s[30] << 9 | s[31] >>> 23;
        b28 = s[40] << 18 | s[41] >>> 14;
        b29 = s[41] << 18 | s[40] >>> 14;
        b20 = s[2] << 1 | s[3] >>> 31;
        b21 = s[3] << 1 | s[2] >>> 31;
        b2 = s[13] << 12 | s[12] >>> 20;
        b3 = s[12] << 12 | s[13] >>> 20;
        b34 = s[22] << 10 | s[23] >>> 22;
        b35 = s[23] << 10 | s[22] >>> 22;
        b16 = s[33] << 13 | s[32] >>> 19;
        b17 = s[32] << 13 | s[33] >>> 19;
        b48 = s[42] << 2 | s[43] >>> 30;
        b49 = s[43] << 2 | s[42] >>> 30;
        b40 = s[5] << 30 | s[4] >>> 2;
        b41 = s[4] << 30 | s[5] >>> 2;
        b22 = s[14] << 6 | s[15] >>> 26;
        b23 = s[15] << 6 | s[14] >>> 26;
        b4 = s[25] << 11 | s[24] >>> 21;
        b5 = s[24] << 11 | s[25] >>> 21;
        b36 = s[34] << 15 | s[35] >>> 17;
        b37 = s[35] << 15 | s[34] >>> 17;
        b18 = s[45] << 29 | s[44] >>> 3;
        b19 = s[44] << 29 | s[45] >>> 3;
        b10 = s[6] << 28 | s[7] >>> 4;
        b11 = s[7] << 28 | s[6] >>> 4;
        b42 = s[17] << 23 | s[16] >>> 9;
        b43 = s[16] << 23 | s[17] >>> 9;
        b24 = s[26] << 25 | s[27] >>> 7;
        b25 = s[27] << 25 | s[26] >>> 7;
        b6 = s[36] << 21 | s[37] >>> 11;
        b7 = s[37] << 21 | s[36] >>> 11;
        b38 = s[47] << 24 | s[46] >>> 8;
        b39 = s[46] << 24 | s[47] >>> 8;
        b30 = s[8] << 27 | s[9] >>> 5;
        b31 = s[9] << 27 | s[8] >>> 5;
        b12 = s[18] << 20 | s[19] >>> 12;
        b13 = s[19] << 20 | s[18] >>> 12;
        b44 = s[29] << 7 | s[28] >>> 25;
        b45 = s[28] << 7 | s[29] >>> 25;
        b26 = s[38] << 8 | s[39] >>> 24;
        b27 = s[39] << 8 | s[38] >>> 24;
        b8 = s[48] << 14 | s[49] >>> 18;
        b9 = s[49] << 14 | s[48] >>> 18;
        s[0] = b0 ^ ~b2 & b4;
        s[1] = b1 ^ ~b3 & b5;
        s[10] = b10 ^ ~b12 & b14;
        s[11] = b11 ^ ~b13 & b15;
        s[20] = b20 ^ ~b22 & b24;
        s[21] = b21 ^ ~b23 & b25;
        s[30] = b30 ^ ~b32 & b34;
        s[31] = b31 ^ ~b33 & b35;
        s[40] = b40 ^ ~b42 & b44;
        s[41] = b41 ^ ~b43 & b45;
        s[2] = b2 ^ ~b4 & b6;
        s[3] = b3 ^ ~b5 & b7;
        s[12] = b12 ^ ~b14 & b16;
        s[13] = b13 ^ ~b15 & b17;
        s[22] = b22 ^ ~b24 & b26;
        s[23] = b23 ^ ~b25 & b27;
        s[32] = b32 ^ ~b34 & b36;
        s[33] = b33 ^ ~b35 & b37;
        s[42] = b42 ^ ~b44 & b46;
        s[43] = b43 ^ ~b45 & b47;
        s[4] = b4 ^ ~b6 & b8;
        s[5] = b5 ^ ~b7 & b9;
        s[14] = b14 ^ ~b16 & b18;
        s[15] = b15 ^ ~b17 & b19;
        s[24] = b24 ^ ~b26 & b28;
        s[25] = b25 ^ ~b27 & b29;
        s[34] = b34 ^ ~b36 & b38;
        s[35] = b35 ^ ~b37 & b39;
        s[44] = b44 ^ ~b46 & b48;
        s[45] = b45 ^ ~b47 & b49;
        s[6] = b6 ^ ~b8 & b0;
        s[7] = b7 ^ ~b9 & b1;
        s[16] = b16 ^ ~b18 & b10;
        s[17] = b17 ^ ~b19 & b11;
        s[26] = b26 ^ ~b28 & b20;
        s[27] = b27 ^ ~b29 & b21;
        s[36] = b36 ^ ~b38 & b30;
        s[37] = b37 ^ ~b39 & b31;
        s[46] = b46 ^ ~b48 & b40;
        s[47] = b47 ^ ~b49 & b41;
        s[8] = b8 ^ ~b0 & b2;
        s[9] = b9 ^ ~b1 & b3;
        s[18] = b18 ^ ~b10 & b12;
        s[19] = b19 ^ ~b11 & b13;
        s[28] = b28 ^ ~b20 & b22;
        s[29] = b29 ^ ~b21 & b23;
        s[38] = b38 ^ ~b30 & b32;
        s[39] = b39 ^ ~b31 & b33;
        s[48] = b48 ^ ~b40 & b42;
        s[49] = b49 ^ ~b41 & b43;
        s[0] ^= RC[n];
        s[1] ^= RC[n + 1];
      }
    };
    if (COMMON_JS) {
      module.exports = methods;
    } else {
      for (i = 0; i < methodNames.length; ++i) {
        root[methodNames[i]] = methods[methodNames[i]];
      }
      if (AMD) {
        undefined(function () {
          return methods;
        });
      }
    }
  })();
})(sha3$2);
var sha3Exports = sha3$2.exports;
var sha3$1 = /*@__PURE__*/getDefaultExportFromCjs$1(sha3Exports);

var version$b = "logger/5.7.0";

"use strict";
var _permanentCensorErrors = false;
var _censorErrors = false;
var LogLevels = {
  debug: 1,
  "default": 2,
  info: 2,
  warning: 3,
  error: 4,
  off: 5
};
var _logLevel = LogLevels["default"];
var _globalLogger = null;
function _checkNormalize() {
  try {
    var missing = [];
    // Make sure all forms of normalization are supported
    ["NFD", "NFC", "NFKD", "NFKC"].forEach(function (form) {
      try {
        if ("test".normalize(form) !== "test") {
          throw new Error("bad normalize");
        }
        ;
      } catch (error) {
        missing.push(form);
      }
    });
    if (missing.length) {
      throw new Error("missing " + missing.join(", "));
    }
    if (String.fromCharCode(0xe9).normalize("NFD") !== String.fromCharCode(0x65, 0x0301)) {
      throw new Error("broken implementation");
    }
  } catch (error) {
    return error.message;
  }
  return null;
}
var _normalizeError = _checkNormalize();
var LogLevel;
(function (LogLevel) {
  LogLevel["DEBUG"] = "DEBUG";
  LogLevel["INFO"] = "INFO";
  LogLevel["WARNING"] = "WARNING";
  LogLevel["ERROR"] = "ERROR";
  LogLevel["OFF"] = "OFF";
})(LogLevel || (LogLevel = {}));
var ErrorCode;
(function (ErrorCode) {
  ///////////////////
  // Generic Errors
  // Unknown Error
  ErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
  // Not Implemented
  ErrorCode["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
  // Unsupported Operation
  //   - operation
  ErrorCode["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
  // Network Error (i.e. Ethereum Network, such as an invalid chain ID)
  //   - event ("noNetwork" is not re-thrown in provider.ready; otherwise thrown)
  ErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR";
  // Some sort of bad response from the server
  ErrorCode["SERVER_ERROR"] = "SERVER_ERROR";
  // Timeout
  ErrorCode["TIMEOUT"] = "TIMEOUT";
  ///////////////////
  // Operational  Errors
  // Buffer Overrun
  ErrorCode["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
  // Numeric Fault
  //   - operation: the operation being executed
  //   - fault: the reason this faulted
  ErrorCode["NUMERIC_FAULT"] = "NUMERIC_FAULT";
  ///////////////////
  // Argument Errors
  // Missing new operator to an object
  //  - name: The name of the class
  ErrorCode["MISSING_NEW"] = "MISSING_NEW";
  // Invalid argument (e.g. value is incompatible with type) to a function:
  //   - argument: The argument name that was invalid
  //   - value: The value of the argument
  ErrorCode["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
  // Missing argument to a function:
  //   - count: The number of arguments received
  //   - expectedCount: The number of arguments expected
  ErrorCode["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
  // Too many arguments
  //   - count: The number of arguments received
  //   - expectedCount: The number of arguments expected
  ErrorCode["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
  ///////////////////
  // Blockchain Errors
  // Call exception
  //  - transaction: the transaction
  //  - address?: the contract address
  //  - args?: The arguments passed into the function
  //  - method?: The Solidity method signature
  //  - errorSignature?: The EIP848 error signature
  //  - errorArgs?: The EIP848 error parameters
  //  - reason: The reason (only for EIP848 "Error(string)")
  ErrorCode["CALL_EXCEPTION"] = "CALL_EXCEPTION";
  // Insufficient funds (< value + gasLimit * gasPrice)
  //   - transaction: the transaction attempted
  ErrorCode["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
  // Nonce has already been used
  //   - transaction: the transaction attempted
  ErrorCode["NONCE_EXPIRED"] = "NONCE_EXPIRED";
  // The replacement fee for the transaction is too low
  //   - transaction: the transaction attempted
  ErrorCode["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
  // The gas limit could not be estimated
  //   - transaction: the transaction passed to estimateGas
  ErrorCode["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
  // The transaction was replaced by one with a higher gas price
  //   - reason: "cancelled", "replaced" or "repriced"
  //   - cancelled: true if reason == "cancelled" or reason == "replaced")
  //   - hash: original transaction hash
  //   - replacement: the full TransactionsResponse for the replacement
  //   - receipt: the receipt of the replacement
  ErrorCode["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
  ///////////////////
  // Interaction Errors
  // The user rejected the action, such as signing a message or sending
  // a transaction
  ErrorCode["ACTION_REJECTED"] = "ACTION_REJECTED";
})(ErrorCode || (ErrorCode = {}));
;
var HEX = "0123456789abcdef";
var Logger = /*#__PURE__*/function () {
  function Logger(version) {
    _classCallCheck(this, Logger);
    Object.defineProperty(this, "version", {
      enumerable: true,
      value: version,
      writable: false
    });
  }
  return _createClass(Logger, [{
    key: "_log",
    value: function _log(logLevel, args) {
      var level = logLevel.toLowerCase();
      if (LogLevels[level] == null) {
        this.throwArgumentError("invalid log level name", "logLevel", logLevel);
      }
      if (_logLevel > LogLevels[level]) {
        return;
      }
      console.log.apply(console, args);
    }
  }, {
    key: "debug",
    value: function debug() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this._log(Logger.levels.DEBUG, args);
    }
  }, {
    key: "info",
    value: function info() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      this._log(Logger.levels.INFO, args);
    }
  }, {
    key: "warn",
    value: function warn() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      this._log(Logger.levels.WARNING, args);
    }
  }, {
    key: "makeError",
    value: function makeError(message, code, params) {
      // Errors are being censored
      if (_censorErrors) {
        return this.makeError("censored error", code, {});
      }
      if (!code) {
        code = Logger.errors.UNKNOWN_ERROR;
      }
      if (!params) {
        params = {};
      }
      var messageDetails = [];
      Object.keys(params).forEach(function (key) {
        var value = params[key];
        try {
          if (value instanceof Uint8Array) {
            var hex = "";
            for (var i = 0; i < value.length; i++) {
              hex += HEX[value[i] >> 4];
              hex += HEX[value[i] & 0x0f];
            }
            messageDetails.push(key + "=Uint8Array(0x" + hex + ")");
          } else {
            messageDetails.push(key + "=" + JSON.stringify(value));
          }
        } catch (error) {
          messageDetails.push(key + "=" + JSON.stringify(params[key].toString()));
        }
      });
      messageDetails.push("code=".concat(code));
      messageDetails.push("version=".concat(this.version));
      var reason = message;
      var url = "";
      switch (code) {
        case ErrorCode.NUMERIC_FAULT:
          {
            url = "NUMERIC_FAULT";
            var fault = message;
            switch (fault) {
              case "overflow":
              case "underflow":
              case "division-by-zero":
                url += "-" + fault;
                break;
              case "negative-power":
              case "negative-width":
                url += "-unsupported";
                break;
              case "unbound-bitwise-result":
                url += "-unbound-result";
                break;
            }
            break;
          }
        case ErrorCode.CALL_EXCEPTION:
        case ErrorCode.INSUFFICIENT_FUNDS:
        case ErrorCode.MISSING_NEW:
        case ErrorCode.NONCE_EXPIRED:
        case ErrorCode.REPLACEMENT_UNDERPRICED:
        case ErrorCode.TRANSACTION_REPLACED:
        case ErrorCode.UNPREDICTABLE_GAS_LIMIT:
          url = code;
          break;
      }
      if (url) {
        message += " [ See: https:/\/links.ethers.org/v5-errors-" + url + " ]";
      }
      if (messageDetails.length) {
        message += " (" + messageDetails.join(", ") + ")";
      }
      // @TODO: Any??
      var error = new Error(message);
      error.reason = reason;
      error.code = code;
      Object.keys(params).forEach(function (key) {
        error[key] = params[key];
      });
      return error;
    }
  }, {
    key: "throwError",
    value: function throwError(message, code, params) {
      throw this.makeError(message, code, params);
    }
  }, {
    key: "throwArgumentError",
    value: function throwArgumentError(message, name, value) {
      return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {
        argument: name,
        value: value
      });
    }
  }, {
    key: "assert",
    value: function assert(condition, message, code, params) {
      if (!!condition) {
        return;
      }
      this.throwError(message, code, params);
    }
  }, {
    key: "assertArgument",
    value: function assertArgument(condition, message, name, value) {
      if (!!condition) {
        return;
      }
      this.throwArgumentError(message, name, value);
    }
  }, {
    key: "checkNormalize",
    value: function checkNormalize(message) {
      if (message == null) {
        message = "platform missing String.prototype.normalize";
      }
      if (_normalizeError) {
        this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "String.prototype.normalize",
          form: _normalizeError
        });
      }
    }
  }, {
    key: "checkSafeUint53",
    value: function checkSafeUint53(value, message) {
      if (typeof value !== "number") {
        return;
      }
      if (message == null) {
        message = "value not safe";
      }
      if (value < 0 || value >= 0x1fffffffffffff) {
        this.throwError(message, Logger.errors.NUMERIC_FAULT, {
          operation: "checkSafeInteger",
          fault: "out-of-safe-range",
          value: value
        });
      }
      if (value % 1) {
        this.throwError(message, Logger.errors.NUMERIC_FAULT, {
          operation: "checkSafeInteger",
          fault: "non-integer",
          value: value
        });
      }
    }
  }, {
    key: "checkArgumentCount",
    value: function checkArgumentCount(count, expectedCount, message) {
      if (message) {
        message = ": " + message;
      } else {
        message = "";
      }
      if (count < expectedCount) {
        this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, {
          count: count,
          expectedCount: expectedCount
        });
      }
      if (count > expectedCount) {
        this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, {
          count: count,
          expectedCount: expectedCount
        });
      }
    }
  }, {
    key: "checkNew",
    value: function checkNew(target, kind) {
      if (target === Object || target == null) {
        this.throwError("missing new", Logger.errors.MISSING_NEW, {
          name: kind.name
        });
      }
    }
  }, {
    key: "checkAbstract",
    value: function checkAbstract(target, kind) {
      if (target === kind) {
        this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, {
          name: target.name,
          operation: "new"
        });
      } else if (target === Object || target == null) {
        this.throwError("missing new", Logger.errors.MISSING_NEW, {
          name: kind.name
        });
      }
    }
  }], [{
    key: "globalLogger",
    value: function globalLogger() {
      if (!_globalLogger) {
        _globalLogger = new Logger(version$b);
      }
      return _globalLogger;
    }
  }, {
    key: "setCensorship",
    value: function setCensorship(censorship, permanent) {
      if (!censorship && permanent) {
        this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "setCensorship"
        });
      }
      if (_permanentCensorErrors) {
        if (!censorship) {
          return;
        }
        this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "setCensorship"
        });
      }
      _censorErrors = !!censorship;
      _permanentCensorErrors = !!permanent;
    }
  }, {
    key: "setLogLevel",
    value: function setLogLevel(logLevel) {
      var level = LogLevels[logLevel.toLowerCase()];
      if (level == null) {
        Logger.globalLogger().warn("invalid log level - " + logLevel);
        return;
      }
      _logLevel = level;
    }
  }, {
    key: "from",
    value: function from(version) {
      return new Logger(version);
    }
  }]);
}();
Logger.errors = ErrorCode;
Logger.levels = LogLevel;

var version$a = "bytes/5.7.0";

"use strict";
var logger$a = new Logger(version$a);
///////////////////////////////
function isHexable(value) {
  return !!value.toHexString;
}
function addSlice(array) {
  if (array.slice) {
    return array;
  }
  array.slice = function () {
    var args = Array.prototype.slice.call(arguments);
    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
  };
  return array;
}
function isBytesLike(value) {
  return isHexString(value) && !(value.length % 2) || isBytes(value);
}
function isInteger(value) {
  return typeof value === "number" && value == value && value % 1 === 0;
}
function isBytes(value) {
  if (value == null) {
    return false;
  }
  if (value.constructor === Uint8Array) {
    return true;
  }
  if (typeof value === "string") {
    return false;
  }
  if (!isInteger(value.length) || value.length < 0) {
    return false;
  }
  for (var i = 0; i < value.length; i++) {
    var v = value[i];
    if (!isInteger(v) || v < 0 || v >= 256) {
      return false;
    }
  }
  return true;
}
function arrayify(value, options) {
  if (!options) {
    options = {};
  }
  if (typeof value === "number") {
    logger$a.checkSafeUint53(value, "invalid arrayify value");
    var result = [];
    while (value) {
      result.unshift(value & 0xff);
      value = parseInt(String(value / 256));
    }
    if (result.length === 0) {
      result.push(0);
    }
    return addSlice(new Uint8Array(result));
  }
  if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (isHexable(value)) {
    value = value.toHexString();
  }
  if (isHexString(value)) {
    var hex = value.substring(2);
    if (hex.length % 2) {
      if (options.hexPad === "left") {
        hex = "0" + hex;
      } else if (options.hexPad === "right") {
        hex += "0";
      } else {
        logger$a.throwArgumentError("hex data is odd-length", "value", value);
      }
    }
    var _result = [];
    for (var i = 0; i < hex.length; i += 2) {
      _result.push(parseInt(hex.substring(i, i + 2), 16));
    }
    return addSlice(new Uint8Array(_result));
  }
  if (isBytes(value)) {
    return addSlice(new Uint8Array(value));
  }
  return logger$a.throwArgumentError("invalid arrayify value", "value", value);
}
function concat$1(items) {
  var objects = items.map(function (item) {
    return arrayify(item);
  });
  var length = objects.reduce(function (accum, item) {
    return accum + item.length;
  }, 0);
  var result = new Uint8Array(length);
  objects.reduce(function (offset, object) {
    result.set(object, offset);
    return offset + object.length;
  }, 0);
  return addSlice(result);
}
function stripZeros(value) {
  var result = arrayify(value);
  if (result.length === 0) {
    return result;
  }
  // Find the first non-zero entry
  var start = 0;
  while (start < result.length && result[start] === 0) {
    start++;
  }
  // If we started with zeros, strip them
  if (start) {
    result = result.slice(start);
  }
  return result;
}
function zeroPad(value, length) {
  value = arrayify(value);
  if (value.length > length) {
    logger$a.throwArgumentError("value out of range", "value", arguments[0]);
  }
  var result = new Uint8Array(length);
  result.set(value, length - value.length);
  return addSlice(result);
}
function isHexString(value, length) {
  if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
    return false;
  }
  if (length && value.length !== 2 + 2 * length) {
    return false;
  }
  return true;
}
var HexCharacters = "0123456789abcdef";
function hexlify(value, options) {
  if (!options) {
    options = {};
  }
  if (typeof value === "number") {
    logger$a.checkSafeUint53(value, "invalid hexlify value");
    var hex = "";
    while (value) {
      hex = HexCharacters[value & 0xf] + hex;
      value = Math.floor(value / 16);
    }
    if (hex.length) {
      if (hex.length % 2) {
        hex = "0" + hex;
      }
      return "0x" + hex;
    }
    return "0x00";
  }
  if (typeof value === "bigint") {
    value = value.toString(16);
    if (value.length % 2) {
      return "0x0" + value;
    }
    return "0x" + value;
  }
  if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  if (isHexable(value)) {
    return value.toHexString();
  }
  if (isHexString(value)) {
    if (value.length % 2) {
      if (options.hexPad === "left") {
        value = "0x0" + value.substring(2);
      } else if (options.hexPad === "right") {
        value += "0";
      } else {
        logger$a.throwArgumentError("hex data is odd-length", "value", value);
      }
    }
    return value.toLowerCase();
  }
  if (isBytes(value)) {
    var result = "0x";
    for (var i = 0; i < value.length; i++) {
      var v = value[i];
      result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];
    }
    return result;
  }
  return logger$a.throwArgumentError("invalid hexlify value", "value", value);
}
/*
function unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {
    if (typeof(value) === "string" && value.length % 2 && value.substring(0, 2) === "0x") {
        return "0x0" + value.substring(2);
    }
    return value;
}
*/
function hexDataLength(data) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    return null;
  }
  return (data.length - 2) / 2;
}
function hexDataSlice(data, offset, endOffset) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    logger$a.throwArgumentError("invalid hexData", "value", data);
  }
  offset = 2 + 2 * offset;
  if (endOffset != null) {
    return "0x" + data.substring(offset, 2 + 2 * endOffset);
  }
  return "0x" + data.substring(offset);
}
function hexConcat(items) {
  var result = "0x";
  items.forEach(function (item) {
    result += hexlify(item).substring(2);
  });
  return result;
}
function hexValue(value) {
  var trimmed = hexStripZeros(hexlify(value, {
    hexPad: "left"
  }));
  if (trimmed === "0x") {
    return "0x0";
  }
  return trimmed;
}
function hexStripZeros(value) {
  if (typeof value !== "string") {
    value = hexlify(value);
  }
  if (!isHexString(value)) {
    logger$a.throwArgumentError("invalid hex string", "value", value);
  }
  value = value.substring(2);
  var offset = 0;
  while (offset < value.length && value[offset] === "0") {
    offset++;
  }
  return "0x" + value.substring(offset);
}
function hexZeroPad(value, length) {
  if (typeof value !== "string") {
    value = hexlify(value);
  } else if (!isHexString(value)) {
    logger$a.throwArgumentError("invalid hex string", "value", value);
  }
  if (value.length > 2 * length + 2) {
    logger$a.throwArgumentError("value out of range", "value", arguments[1]);
  }
  while (value.length < 2 * length + 2) {
    value = "0x0" + value.substring(2);
  }
  return value;
}
function splitSignature(signature) {
  var result = {
    r: "0x",
    s: "0x",
    _vs: "0x",
    recoveryParam: 0,
    v: 0,
    yParityAndS: "0x",
    compact: "0x"
  };
  if (isBytesLike(signature)) {
    var bytes = arrayify(signature);
    // Get the r, s and v
    if (bytes.length === 64) {
      // EIP-2098; pull the v from the top bit of s and clear it
      result.v = 27 + (bytes[32] >> 7);
      bytes[32] &= 0x7f;
      result.r = hexlify(bytes.slice(0, 32));
      result.s = hexlify(bytes.slice(32, 64));
    } else if (bytes.length === 65) {
      result.r = hexlify(bytes.slice(0, 32));
      result.s = hexlify(bytes.slice(32, 64));
      result.v = bytes[64];
    } else {
      logger$a.throwArgumentError("invalid signature string", "signature", signature);
    }
    // Allow a recid to be used as the v
    if (result.v < 27) {
      if (result.v === 0 || result.v === 1) {
        result.v += 27;
      } else {
        logger$a.throwArgumentError("signature invalid v byte", "signature", signature);
      }
    }
    // Compute recoveryParam from v
    result.recoveryParam = 1 - result.v % 2;
    // Compute _vs from recoveryParam and s
    if (result.recoveryParam) {
      bytes[32] |= 0x80;
    }
    result._vs = hexlify(bytes.slice(32, 64));
  } else {
    result.r = signature.r;
    result.s = signature.s;
    result.v = signature.v;
    result.recoveryParam = signature.recoveryParam;
    result._vs = signature._vs;
    // If the _vs is available, use it to populate missing s, v and recoveryParam
    // and verify non-missing s, v and recoveryParam
    if (result._vs != null) {
      var _vs2 = zeroPad(arrayify(result._vs), 32);
      result._vs = hexlify(_vs2);
      // Set or check the recid
      var recoveryParam = _vs2[0] >= 128 ? 1 : 0;
      if (result.recoveryParam == null) {
        result.recoveryParam = recoveryParam;
      } else if (result.recoveryParam !== recoveryParam) {
        logger$a.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature);
      }
      // Set or check the s
      _vs2[0] &= 0x7f;
      var s = hexlify(_vs2);
      if (result.s == null) {
        result.s = s;
      } else if (result.s !== s) {
        logger$a.throwArgumentError("signature v mismatch _vs", "signature", signature);
      }
    }
    // Use recid and v to populate each other
    if (result.recoveryParam == null) {
      if (result.v == null) {
        logger$a.throwArgumentError("signature missing v and recoveryParam", "signature", signature);
      } else if (result.v === 0 || result.v === 1) {
        result.recoveryParam = result.v;
      } else {
        result.recoveryParam = 1 - result.v % 2;
      }
    } else {
      if (result.v == null) {
        result.v = 27 + result.recoveryParam;
      } else {
        var recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;
        if (result.recoveryParam !== recId) {
          logger$a.throwArgumentError("signature recoveryParam mismatch v", "signature", signature);
        }
      }
    }
    if (result.r == null || !isHexString(result.r)) {
      logger$a.throwArgumentError("signature missing or invalid r", "signature", signature);
    } else {
      result.r = hexZeroPad(result.r, 32);
    }
    if (result.s == null || !isHexString(result.s)) {
      logger$a.throwArgumentError("signature missing or invalid s", "signature", signature);
    } else {
      result.s = hexZeroPad(result.s, 32);
    }
    var vs = arrayify(result.s);
    if (vs[0] >= 128) {
      logger$a.throwArgumentError("signature s out of range", "signature", signature);
    }
    if (result.recoveryParam) {
      vs[0] |= 0x80;
    }
    var _vs = hexlify(vs);
    if (result._vs) {
      if (!isHexString(result._vs)) {
        logger$a.throwArgumentError("signature invalid _vs", "signature", signature);
      }
      result._vs = hexZeroPad(result._vs, 32);
    }
    // Set or check the _vs
    if (result._vs == null) {
      result._vs = _vs;
    } else if (result._vs !== _vs) {
      logger$a.throwArgumentError("signature _vs mismatch v and s", "signature", signature);
    }
  }
  result.yParityAndS = result._vs;
  result.compact = result.r + result.yParityAndS.substring(2);
  return result;
}
function joinSignature(signature) {
  signature = splitSignature(signature);
  return hexlify(concat$1([signature.r, signature.s, signature.recoveryParam ? "0x1c" : "0x1b"]));
}

"use strict";
function keccak256(data) {
  return '0x' + sha3$1.keccak_256(arrayify(data));
}

var AddressZero = "0x0000000000000000000000000000000000000000";

var bn$a = {exports: {}};

var bn$9 = bn$a.exports;
(function (module) {
  (function (module, exports) {
    'use strict';

    // Utils
    function assert(val, msg) {
      if (!val) throw new Error(msg || 'Assertion failed');
    }

    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function TempCtor() {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }

    // BN

    function BN(number, base, endian) {
      if (BN.isBN(number)) {
        return number;
      }
      this.negative = 0;
      this.words = null;
      this.length = 0;

      // Reduction context
      this.red = null;
      if (number !== null) {
        if (base === 'le' || base === 'be') {
          endian = base;
          base = 10;
        }
        this._init(number || 0, base || 10, endian || 'be');
      }
    }
    if (_typeof(module) === 'object') {
      module.exports = BN;
    } else {
      exports.BN = BN;
    }
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
      if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
        Buffer = window.Buffer;
      } else {
        Buffer = require$$0$3.Buffer;
      }
    } catch (e) {}
    BN.isBN = function isBN(num) {
      if (num instanceof BN) {
        return true;
      }
      return num !== null && _typeof(num) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
      if (left.cmp(right) > 0) return left;
      return right;
    };
    BN.min = function min(left, right) {
      if (left.cmp(right) < 0) return left;
      return right;
    };
    BN.prototype._init = function init(number, base, endian) {
      if (typeof number === 'number') {
        return this._initNumber(number, base, endian);
      }
      if (_typeof(number) === 'object') {
        return this._initArray(number, base, endian);
      }
      if (base === 'hex') {
        base = 16;
      }
      assert(base === (base | 0) && base >= 2 && base <= 36);
      number = number.toString().replace(/\s+/g, '');
      var start = 0;
      if (number[0] === '-') {
        start++;
        this.negative = 1;
      }
      if (start < number.length) {
        if (base === 16) {
          this._parseHex(number, start, endian);
        } else {
          this._parseBase(number, base, start);
          if (endian === 'le') {
            this._initArray(this.toArray(), base, endian);
          }
        }
      }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
      if (number < 0) {
        this.negative = 1;
        number = -number;
      }
      if (number < 0x4000000) {
        this.words = [number & 0x3ffffff];
        this.length = 1;
      } else if (number < 0x10000000000000) {
        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];
        this.length = 2;
      } else {
        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];
        this.length = 3;
      }
      if (endian !== 'le') return;

      // Reverse the bytes
      this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
      // Perhaps a Uint8Array
      assert(typeof number.length === 'number');
      if (number.length <= 0) {
        this.words = [0];
        this.length = 1;
        return this;
      }
      this.length = Math.ceil(number.length / 3);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }
      var j, w;
      var off = 0;
      if (endian === 'be') {
        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
          this.words[j] |= w << off & 0x3ffffff;
          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      } else if (endian === 'le') {
        for (i = 0, j = 0; i < number.length; i += 3) {
          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
          this.words[j] |= w << off & 0x3ffffff;
          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      }
      return this._strip();
    };
    function parseHex4Bits(string, index) {
      var c = string.charCodeAt(index);
      // '0' - '9'
      if (c >= 48 && c <= 57) {
        return c - 48;
        // 'A' - 'F'
      } else if (c >= 65 && c <= 70) {
        return c - 55;
        // 'a' - 'f'
      } else if (c >= 97 && c <= 102) {
        return c - 87;
      } else {
        assert(false, 'Invalid character in ' + string);
      }
    }
    function parseHexByte(string, lowerBound, index) {
      var r = parseHex4Bits(string, index);
      if (index - 1 >= lowerBound) {
        r |= parseHex4Bits(string, index - 1) << 4;
      }
      return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
      // Create possibly bigger array to ensure that it fits the number
      this.length = Math.ceil((number.length - start) / 6);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }

      // 24-bits chunks
      var off = 0;
      var j = 0;
      var w;
      if (endian === 'be') {
        for (i = number.length - 1; i >= start; i -= 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 0x3ffffff;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      } else {
        var parseLength = number.length - start;
        for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 0x3ffffff;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      }
      this._strip();
    };
    function parseBase(str, start, end, mul) {
      var r = 0;
      var b = 0;
      var len = Math.min(str.length, end);
      for (var i = start; i < len; i++) {
        var c = str.charCodeAt(i) - 48;
        r *= mul;

        // 'a'
        if (c >= 49) {
          b = c - 49 + 0xa;

          // 'A'
        } else if (c >= 17) {
          b = c - 17 + 0xa;

          // '0' - '9'
        } else {
          b = c;
        }
        assert(c >= 0 && b < mul, 'Invalid character');
        r += b;
      }
      return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
      // Initialize as zero
      this.words = [0];
      this.length = 1;

      // Find length of limb in base
      for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
        limbLen++;
      }
      limbLen--;
      limbPow = limbPow / base | 0;
      var total = number.length - start;
      var mod = total % limbLen;
      var end = Math.min(total, total - mod) + start;
      var word = 0;
      for (var i = start; i < end; i += limbLen) {
        word = parseBase(number, i, i + limbLen, base);
        this.imuln(limbPow);
        if (this.words[0] + word < 0x4000000) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      if (mod !== 0) {
        var pow = 1;
        word = parseBase(number, i, number.length, base);
        for (i = 0; i < mod; i++) {
          pow *= base;
        }
        this.imuln(pow);
        if (this.words[0] + word < 0x4000000) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      this._strip();
    };
    BN.prototype.copy = function copy(dest) {
      dest.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        dest.words[i] = this.words[i];
      }
      dest.length = this.length;
      dest.negative = this.negative;
      dest.red = this.red;
    };
    function move(dest, src) {
      dest.words = src.words;
      dest.length = src.length;
      dest.negative = src.negative;
      dest.red = src.red;
    }
    BN.prototype._move = function _move(dest) {
      move(dest, this);
    };
    BN.prototype.clone = function clone() {
      var r = new BN(null);
      this.copy(r);
      return r;
    };
    BN.prototype._expand = function _expand(size) {
      while (this.length < size) {
        this.words[this.length++] = 0;
      }
      return this;
    };

    // Remove leading `0` from `this`
    BN.prototype._strip = function strip() {
      while (this.length > 1 && this.words[this.length - 1] === 0) {
        this.length--;
      }
      return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
      // -0 = 0
      if (this.length === 1 && this.words[0] === 0) {
        this.negative = 0;
      }
      return this;
    };

    // Check Symbol.for because not everywhere where Symbol defined
    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
    if (typeof Symbol !== 'undefined' && typeof Symbol["for"] === 'function') {
      try {
        BN.prototype[Symbol["for"]('nodejs.util.inspect.custom')] = inspect;
      } catch (e) {
        BN.prototype.inspect = inspect;
      }
    } else {
      BN.prototype.inspect = inspect;
    }
    function inspect() {
      return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    }

    /*
     var zeros = [];
    var groupSizes = [];
    var groupBases = [];
     var s = '';
    var i = -1;
    while (++i < BN.wordSize) {
      zeros[i] = s;
      s += '0';
    }
    groupSizes[0] = 0;
    groupSizes[1] = 0;
    groupBases[0] = 0;
    groupBases[1] = 0;
    var base = 2 - 1;
    while (++base < 36 + 1) {
      var groupSize = 0;
      var groupBase = 1;
      while (groupBase < (1 << BN.wordSize) / base) {
        groupBase *= base;
        groupSize += 1;
      }
      groupSizes[base] = groupSize;
      groupBases[base] = groupBase;
    }
     */

    var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];
    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];
    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    BN.prototype.toString = function toString(base, padding) {
      base = base || 10;
      padding = padding | 0 || 1;
      var out;
      if (base === 16 || base === 'hex') {
        out = '';
        var off = 0;
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = this.words[i];
          var word = ((w << off | carry) & 0xffffff).toString(16);
          carry = w >>> 24 - off & 0xffffff;
          off += 2;
          if (off >= 26) {
            off -= 26;
            i--;
          }
          if (carry !== 0 || i !== this.length - 1) {
            out = zeros[6 - word.length] + word + out;
          } else {
            out = word + out;
          }
        }
        if (carry !== 0) {
          out = carry.toString(16) + out;
        }
        while (out.length % padding !== 0) {
          out = '0' + out;
        }
        if (this.negative !== 0) {
          out = '-' + out;
        }
        return out;
      }
      if (base === (base | 0) && base >= 2 && base <= 36) {
        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
        var groupSize = groupSizes[base];
        // var groupBase = Math.pow(base, groupSize);
        var groupBase = groupBases[base];
        out = '';
        var c = this.clone();
        c.negative = 0;
        while (!c.isZero()) {
          var r = c.modrn(groupBase).toString(base);
          c = c.idivn(groupBase);
          if (!c.isZero()) {
            out = zeros[groupSize - r.length] + r + out;
          } else {
            out = r + out;
          }
        }
        if (this.isZero()) {
          out = '0' + out;
        }
        while (out.length % padding !== 0) {
          out = '0' + out;
        }
        if (this.negative !== 0) {
          out = '-' + out;
        }
        return out;
      }
      assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
      var ret = this.words[0];
      if (this.length === 2) {
        ret += this.words[1] * 0x4000000;
      } else if (this.length === 3 && this.words[2] === 0x01) {
        // NOTE: at this stage it is known that the top bit is set
        ret += 0x10000000000000 + this.words[1] * 0x4000000;
      } else if (this.length > 2) {
        assert(false, 'Number can only safely store up to 53 bits');
      }
      return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
      return this.toString(16, 2);
    };
    if (Buffer) {
      BN.prototype.toBuffer = function toBuffer(endian, length) {
        return this.toArrayLike(Buffer, endian, length);
      };
    }
    BN.prototype.toArray = function toArray(endian, length) {
      return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate(ArrayType, size) {
      if (ArrayType.allocUnsafe) {
        return ArrayType.allocUnsafe(size);
      }
      return new ArrayType(size);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
      this._strip();
      var byteLength = this.byteLength();
      var reqLength = length || Math.max(1, byteLength);
      assert(byteLength <= reqLength, 'byte array longer than desired length');
      assert(reqLength > 0, 'Requested array length <= 0');
      var res = allocate(ArrayType, reqLength);
      var postfix = endian === 'le' ? 'LE' : 'BE';
      this['_toArrayLike' + postfix](res, byteLength);
      return res;
    };
    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
      var position = 0;
      var carry = 0;
      for (var i = 0, shift = 0; i < this.length; i++) {
        var word = this.words[i] << shift | carry;
        res[position++] = word & 0xff;
        if (position < res.length) {
          res[position++] = word >> 8 & 0xff;
        }
        if (position < res.length) {
          res[position++] = word >> 16 & 0xff;
        }
        if (shift === 6) {
          if (position < res.length) {
            res[position++] = word >> 24 & 0xff;
          }
          carry = 0;
          shift = 0;
        } else {
          carry = word >>> 24;
          shift += 2;
        }
      }
      if (position < res.length) {
        res[position++] = carry;
        while (position < res.length) {
          res[position++] = 0;
        }
      }
    };
    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
      var position = res.length - 1;
      var carry = 0;
      for (var i = 0, shift = 0; i < this.length; i++) {
        var word = this.words[i] << shift | carry;
        res[position--] = word & 0xff;
        if (position >= 0) {
          res[position--] = word >> 8 & 0xff;
        }
        if (position >= 0) {
          res[position--] = word >> 16 & 0xff;
        }
        if (shift === 6) {
          if (position >= 0) {
            res[position--] = word >> 24 & 0xff;
          }
          carry = 0;
          shift = 0;
        } else {
          carry = word >>> 24;
          shift += 2;
        }
      }
      if (position >= 0) {
        res[position--] = carry;
        while (position >= 0) {
          res[position--] = 0;
        }
      }
    };
    if (Math.clz32) {
      BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
      };
    } else {
      BN.prototype._countBits = function _countBits(w) {
        var t = w;
        var r = 0;
        if (t >= 0x1000) {
          r += 13;
          t >>>= 13;
        }
        if (t >= 0x40) {
          r += 7;
          t >>>= 7;
        }
        if (t >= 0x8) {
          r += 4;
          t >>>= 4;
        }
        if (t >= 0x02) {
          r += 2;
          t >>>= 2;
        }
        return r + t;
      };
    }
    BN.prototype._zeroBits = function _zeroBits(w) {
      // Short-cut
      if (w === 0) return 26;
      var t = w;
      var r = 0;
      if ((t & 0x1fff) === 0) {
        r += 13;
        t >>>= 13;
      }
      if ((t & 0x7f) === 0) {
        r += 7;
        t >>>= 7;
      }
      if ((t & 0xf) === 0) {
        r += 4;
        t >>>= 4;
      }
      if ((t & 0x3) === 0) {
        r += 2;
        t >>>= 2;
      }
      if ((t & 0x1) === 0) {
        r++;
      }
      return r;
    };

    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
      var w = this.words[this.length - 1];
      var hi = this._countBits(w);
      return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
      var w = new Array(num.bitLength());
      for (var bit = 0; bit < w.length; bit++) {
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        w[bit] = num.words[off] >>> wbit & 0x01;
      }
      return w;
    }

    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
      if (this.isZero()) return 0;
      var r = 0;
      for (var i = 0; i < this.length; i++) {
        var b = this._zeroBits(this.words[i]);
        r += b;
        if (b !== 26) break;
      }
      return r;
    };
    BN.prototype.byteLength = function byteLength() {
      return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
      if (this.negative !== 0) {
        return this.abs().inotn(width).iaddn(1);
      }
      return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
      if (this.testn(width - 1)) {
        return this.notn(width).iaddn(1).ineg();
      }
      return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
      return this.negative !== 0;
    };

    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
      return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
      if (!this.isZero()) {
        this.negative ^= 1;
      }
      return this;
    };

    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
      while (this.length < num.length) {
        this.words[this.length++] = 0;
      }
      for (var i = 0; i < num.length; i++) {
        this.words[i] = this.words[i] | num.words[i];
      }
      return this._strip();
    };
    BN.prototype.ior = function ior(num) {
      assert((this.negative | num.negative) === 0);
      return this.iuor(num);
    };

    // Or `num` with `this`
    BN.prototype.or = function or(num) {
      if (this.length > num.length) return this.clone().ior(num);
      return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
      if (this.length > num.length) return this.clone().iuor(num);
      return num.clone().iuor(this);
    };

    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
      // b = min-length(num, this)
      var b;
      if (this.length > num.length) {
        b = num;
      } else {
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = this.words[i] & num.words[i];
      }
      this.length = b.length;
      return this._strip();
    };
    BN.prototype.iand = function iand(num) {
      assert((this.negative | num.negative) === 0);
      return this.iuand(num);
    };

    // And `num` with `this`
    BN.prototype.and = function and(num) {
      if (this.length > num.length) return this.clone().iand(num);
      return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
      if (this.length > num.length) return this.clone().iuand(num);
      return num.clone().iuand(this);
    };

    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
      // a.length > b.length
      var a;
      var b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = a.words[i] ^ b.words[i];
      }
      if (this !== a) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = a.length;
      return this._strip();
    };
    BN.prototype.ixor = function ixor(num) {
      assert((this.negative | num.negative) === 0);
      return this.iuxor(num);
    };

    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
      if (this.length > num.length) return this.clone().ixor(num);
      return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
      if (this.length > num.length) return this.clone().iuxor(num);
      return num.clone().iuxor(this);
    };

    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
      assert(typeof width === 'number' && width >= 0);
      var bytesNeeded = Math.ceil(width / 26) | 0;
      var bitsLeft = width % 26;

      // Extend the buffer with leading zeroes
      this._expand(bytesNeeded);
      if (bitsLeft > 0) {
        bytesNeeded--;
      }

      // Handle complete words
      for (var i = 0; i < bytesNeeded; i++) {
        this.words[i] = ~this.words[i] & 0x3ffffff;
      }

      // Handle the residue
      if (bitsLeft > 0) {
        this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;
      }

      // And remove leading zeroes
      return this._strip();
    };
    BN.prototype.notn = function notn(width) {
      return this.clone().inotn(width);
    };

    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
      assert(typeof bit === 'number' && bit >= 0);
      var off = bit / 26 | 0;
      var wbit = bit % 26;
      this._expand(off + 1);
      if (val) {
        this.words[off] = this.words[off] | 1 << wbit;
      } else {
        this.words[off] = this.words[off] & ~(1 << wbit);
      }
      return this._strip();
    };

    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
      var r;

      // negative + positive
      if (this.negative !== 0 && num.negative === 0) {
        this.negative = 0;
        r = this.isub(num);
        this.negative ^= 1;
        return this._normSign();

        // positive + negative
      } else if (this.negative === 0 && num.negative !== 0) {
        num.negative = 0;
        r = this.isub(num);
        num.negative = 1;
        return r._normSign();
      }

      // a.length > b.length
      var a, b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
        this.words[i] = r & 0x3ffffff;
        carry = r >>> 26;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r = (a.words[i] | 0) + carry;
        this.words[i] = r & 0x3ffffff;
        carry = r >>> 26;
      }
      this.length = a.length;
      if (carry !== 0) {
        this.words[this.length] = carry;
        this.length++;
        // Copy the rest of the words
      } else if (a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      return this;
    };

    // Add `num` to `this`
    BN.prototype.add = function add(num) {
      var res;
      if (num.negative !== 0 && this.negative === 0) {
        num.negative = 0;
        res = this.sub(num);
        num.negative ^= 1;
        return res;
      } else if (num.negative === 0 && this.negative !== 0) {
        this.negative = 0;
        res = num.sub(this);
        this.negative = 1;
        return res;
      }
      if (this.length > num.length) return this.clone().iadd(num);
      return num.clone().iadd(this);
    };

    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
      // this - (-num) = this + num
      if (num.negative !== 0) {
        num.negative = 0;
        var r = this.iadd(num);
        num.negative = 1;
        return r._normSign();

        // -this - num = -(this + num)
      } else if (this.negative !== 0) {
        this.negative = 0;
        this.iadd(num);
        this.negative = 1;
        return this._normSign();
      }

      // At this point both numbers are positive
      var cmp = this.cmp(num);

      // Optimization - zeroify
      if (cmp === 0) {
        this.negative = 0;
        this.length = 1;
        this.words[0] = 0;
        return this;
      }

      // a > b
      var a, b;
      if (cmp > 0) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
        carry = r >> 26;
        this.words[i] = r & 0x3ffffff;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r = (a.words[i] | 0) + carry;
        carry = r >> 26;
        this.words[i] = r & 0x3ffffff;
      }

      // Copy rest of the words
      if (carry === 0 && i < a.length && a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = Math.max(this.length, i);
      if (a !== this) {
        this.negative = 1;
      }
      return this._strip();
    };

    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
      return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
      out.negative = num.negative ^ self.negative;
      var len = self.length + num.length | 0;
      out.length = len;
      len = len - 1 | 0;

      // Peel one iteration (compiler can't do it, because of code complexity)
      var a = self.words[0] | 0;
      var b = num.words[0] | 0;
      var r = a * b;
      var lo = r & 0x3ffffff;
      var carry = r / 0x4000000 | 0;
      out.words[0] = lo;
      for (var k = 1; k < len; k++) {
        // Sum all words with the same `i + j = k` and accumulate `ncarry`,
        // note that ncarry could be >= 0x3ffffff
        var ncarry = carry >>> 26;
        var rword = carry & 0x3ffffff;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
          var i = k - j | 0;
          a = self.words[i] | 0;
          b = num.words[j] | 0;
          r = a * b + rword;
          ncarry += r / 0x4000000 | 0;
          rword = r & 0x3ffffff;
        }
        out.words[k] = rword | 0;
        carry = ncarry | 0;
      }
      if (carry !== 0) {
        out.words[k] = carry | 0;
      } else {
        out.length--;
      }
      return out._strip();
    }

    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo(self, num, out) {
      var a = self.words;
      var b = num.words;
      var o = out.words;
      var c = 0;
      var lo;
      var mid;
      var hi;
      var a0 = a[0] | 0;
      var al0 = a0 & 0x1fff;
      var ah0 = a0 >>> 13;
      var a1 = a[1] | 0;
      var al1 = a1 & 0x1fff;
      var ah1 = a1 >>> 13;
      var a2 = a[2] | 0;
      var al2 = a2 & 0x1fff;
      var ah2 = a2 >>> 13;
      var a3 = a[3] | 0;
      var al3 = a3 & 0x1fff;
      var ah3 = a3 >>> 13;
      var a4 = a[4] | 0;
      var al4 = a4 & 0x1fff;
      var ah4 = a4 >>> 13;
      var a5 = a[5] | 0;
      var al5 = a5 & 0x1fff;
      var ah5 = a5 >>> 13;
      var a6 = a[6] | 0;
      var al6 = a6 & 0x1fff;
      var ah6 = a6 >>> 13;
      var a7 = a[7] | 0;
      var al7 = a7 & 0x1fff;
      var ah7 = a7 >>> 13;
      var a8 = a[8] | 0;
      var al8 = a8 & 0x1fff;
      var ah8 = a8 >>> 13;
      var a9 = a[9] | 0;
      var al9 = a9 & 0x1fff;
      var ah9 = a9 >>> 13;
      var b0 = b[0] | 0;
      var bl0 = b0 & 0x1fff;
      var bh0 = b0 >>> 13;
      var b1 = b[1] | 0;
      var bl1 = b1 & 0x1fff;
      var bh1 = b1 >>> 13;
      var b2 = b[2] | 0;
      var bl2 = b2 & 0x1fff;
      var bh2 = b2 >>> 13;
      var b3 = b[3] | 0;
      var bl3 = b3 & 0x1fff;
      var bh3 = b3 >>> 13;
      var b4 = b[4] | 0;
      var bl4 = b4 & 0x1fff;
      var bh4 = b4 >>> 13;
      var b5 = b[5] | 0;
      var bl5 = b5 & 0x1fff;
      var bh5 = b5 >>> 13;
      var b6 = b[6] | 0;
      var bl6 = b6 & 0x1fff;
      var bh6 = b6 >>> 13;
      var b7 = b[7] | 0;
      var bl7 = b7 & 0x1fff;
      var bh7 = b7 >>> 13;
      var b8 = b[8] | 0;
      var bl8 = b8 & 0x1fff;
      var bh8 = b8 >>> 13;
      var b9 = b[9] | 0;
      var bl9 = b9 & 0x1fff;
      var bh9 = b9 >>> 13;
      out.negative = self.negative ^ num.negative;
      out.length = 19;
      /* k = 0 */
      lo = Math.imul(al0, bl0);
      mid = Math.imul(al0, bh0);
      mid = mid + Math.imul(ah0, bl0) | 0;
      hi = Math.imul(ah0, bh0);
      var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
      w0 &= 0x3ffffff;
      /* k = 1 */
      lo = Math.imul(al1, bl0);
      mid = Math.imul(al1, bh0);
      mid = mid + Math.imul(ah1, bl0) | 0;
      hi = Math.imul(ah1, bh0);
      lo = lo + Math.imul(al0, bl1) | 0;
      mid = mid + Math.imul(al0, bh1) | 0;
      mid = mid + Math.imul(ah0, bl1) | 0;
      hi = hi + Math.imul(ah0, bh1) | 0;
      var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
      w1 &= 0x3ffffff;
      /* k = 2 */
      lo = Math.imul(al2, bl0);
      mid = Math.imul(al2, bh0);
      mid = mid + Math.imul(ah2, bl0) | 0;
      hi = Math.imul(ah2, bh0);
      lo = lo + Math.imul(al1, bl1) | 0;
      mid = mid + Math.imul(al1, bh1) | 0;
      mid = mid + Math.imul(ah1, bl1) | 0;
      hi = hi + Math.imul(ah1, bh1) | 0;
      lo = lo + Math.imul(al0, bl2) | 0;
      mid = mid + Math.imul(al0, bh2) | 0;
      mid = mid + Math.imul(ah0, bl2) | 0;
      hi = hi + Math.imul(ah0, bh2) | 0;
      var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
      w2 &= 0x3ffffff;
      /* k = 3 */
      lo = Math.imul(al3, bl0);
      mid = Math.imul(al3, bh0);
      mid = mid + Math.imul(ah3, bl0) | 0;
      hi = Math.imul(ah3, bh0);
      lo = lo + Math.imul(al2, bl1) | 0;
      mid = mid + Math.imul(al2, bh1) | 0;
      mid = mid + Math.imul(ah2, bl1) | 0;
      hi = hi + Math.imul(ah2, bh1) | 0;
      lo = lo + Math.imul(al1, bl2) | 0;
      mid = mid + Math.imul(al1, bh2) | 0;
      mid = mid + Math.imul(ah1, bl2) | 0;
      hi = hi + Math.imul(ah1, bh2) | 0;
      lo = lo + Math.imul(al0, bl3) | 0;
      mid = mid + Math.imul(al0, bh3) | 0;
      mid = mid + Math.imul(ah0, bl3) | 0;
      hi = hi + Math.imul(ah0, bh3) | 0;
      var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
      w3 &= 0x3ffffff;
      /* k = 4 */
      lo = Math.imul(al4, bl0);
      mid = Math.imul(al4, bh0);
      mid = mid + Math.imul(ah4, bl0) | 0;
      hi = Math.imul(ah4, bh0);
      lo = lo + Math.imul(al3, bl1) | 0;
      mid = mid + Math.imul(al3, bh1) | 0;
      mid = mid + Math.imul(ah3, bl1) | 0;
      hi = hi + Math.imul(ah3, bh1) | 0;
      lo = lo + Math.imul(al2, bl2) | 0;
      mid = mid + Math.imul(al2, bh2) | 0;
      mid = mid + Math.imul(ah2, bl2) | 0;
      hi = hi + Math.imul(ah2, bh2) | 0;
      lo = lo + Math.imul(al1, bl3) | 0;
      mid = mid + Math.imul(al1, bh3) | 0;
      mid = mid + Math.imul(ah1, bl3) | 0;
      hi = hi + Math.imul(ah1, bh3) | 0;
      lo = lo + Math.imul(al0, bl4) | 0;
      mid = mid + Math.imul(al0, bh4) | 0;
      mid = mid + Math.imul(ah0, bl4) | 0;
      hi = hi + Math.imul(ah0, bh4) | 0;
      var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
      w4 &= 0x3ffffff;
      /* k = 5 */
      lo = Math.imul(al5, bl0);
      mid = Math.imul(al5, bh0);
      mid = mid + Math.imul(ah5, bl0) | 0;
      hi = Math.imul(ah5, bh0);
      lo = lo + Math.imul(al4, bl1) | 0;
      mid = mid + Math.imul(al4, bh1) | 0;
      mid = mid + Math.imul(ah4, bl1) | 0;
      hi = hi + Math.imul(ah4, bh1) | 0;
      lo = lo + Math.imul(al3, bl2) | 0;
      mid = mid + Math.imul(al3, bh2) | 0;
      mid = mid + Math.imul(ah3, bl2) | 0;
      hi = hi + Math.imul(ah3, bh2) | 0;
      lo = lo + Math.imul(al2, bl3) | 0;
      mid = mid + Math.imul(al2, bh3) | 0;
      mid = mid + Math.imul(ah2, bl3) | 0;
      hi = hi + Math.imul(ah2, bh3) | 0;
      lo = lo + Math.imul(al1, bl4) | 0;
      mid = mid + Math.imul(al1, bh4) | 0;
      mid = mid + Math.imul(ah1, bl4) | 0;
      hi = hi + Math.imul(ah1, bh4) | 0;
      lo = lo + Math.imul(al0, bl5) | 0;
      mid = mid + Math.imul(al0, bh5) | 0;
      mid = mid + Math.imul(ah0, bl5) | 0;
      hi = hi + Math.imul(ah0, bh5) | 0;
      var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
      w5 &= 0x3ffffff;
      /* k = 6 */
      lo = Math.imul(al6, bl0);
      mid = Math.imul(al6, bh0);
      mid = mid + Math.imul(ah6, bl0) | 0;
      hi = Math.imul(ah6, bh0);
      lo = lo + Math.imul(al5, bl1) | 0;
      mid = mid + Math.imul(al5, bh1) | 0;
      mid = mid + Math.imul(ah5, bl1) | 0;
      hi = hi + Math.imul(ah5, bh1) | 0;
      lo = lo + Math.imul(al4, bl2) | 0;
      mid = mid + Math.imul(al4, bh2) | 0;
      mid = mid + Math.imul(ah4, bl2) | 0;
      hi = hi + Math.imul(ah4, bh2) | 0;
      lo = lo + Math.imul(al3, bl3) | 0;
      mid = mid + Math.imul(al3, bh3) | 0;
      mid = mid + Math.imul(ah3, bl3) | 0;
      hi = hi + Math.imul(ah3, bh3) | 0;
      lo = lo + Math.imul(al2, bl4) | 0;
      mid = mid + Math.imul(al2, bh4) | 0;
      mid = mid + Math.imul(ah2, bl4) | 0;
      hi = hi + Math.imul(ah2, bh4) | 0;
      lo = lo + Math.imul(al1, bl5) | 0;
      mid = mid + Math.imul(al1, bh5) | 0;
      mid = mid + Math.imul(ah1, bl5) | 0;
      hi = hi + Math.imul(ah1, bh5) | 0;
      lo = lo + Math.imul(al0, bl6) | 0;
      mid = mid + Math.imul(al0, bh6) | 0;
      mid = mid + Math.imul(ah0, bl6) | 0;
      hi = hi + Math.imul(ah0, bh6) | 0;
      var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
      w6 &= 0x3ffffff;
      /* k = 7 */
      lo = Math.imul(al7, bl0);
      mid = Math.imul(al7, bh0);
      mid = mid + Math.imul(ah7, bl0) | 0;
      hi = Math.imul(ah7, bh0);
      lo = lo + Math.imul(al6, bl1) | 0;
      mid = mid + Math.imul(al6, bh1) | 0;
      mid = mid + Math.imul(ah6, bl1) | 0;
      hi = hi + Math.imul(ah6, bh1) | 0;
      lo = lo + Math.imul(al5, bl2) | 0;
      mid = mid + Math.imul(al5, bh2) | 0;
      mid = mid + Math.imul(ah5, bl2) | 0;
      hi = hi + Math.imul(ah5, bh2) | 0;
      lo = lo + Math.imul(al4, bl3) | 0;
      mid = mid + Math.imul(al4, bh3) | 0;
      mid = mid + Math.imul(ah4, bl3) | 0;
      hi = hi + Math.imul(ah4, bh3) | 0;
      lo = lo + Math.imul(al3, bl4) | 0;
      mid = mid + Math.imul(al3, bh4) | 0;
      mid = mid + Math.imul(ah3, bl4) | 0;
      hi = hi + Math.imul(ah3, bh4) | 0;
      lo = lo + Math.imul(al2, bl5) | 0;
      mid = mid + Math.imul(al2, bh5) | 0;
      mid = mid + Math.imul(ah2, bl5) | 0;
      hi = hi + Math.imul(ah2, bh5) | 0;
      lo = lo + Math.imul(al1, bl6) | 0;
      mid = mid + Math.imul(al1, bh6) | 0;
      mid = mid + Math.imul(ah1, bl6) | 0;
      hi = hi + Math.imul(ah1, bh6) | 0;
      lo = lo + Math.imul(al0, bl7) | 0;
      mid = mid + Math.imul(al0, bh7) | 0;
      mid = mid + Math.imul(ah0, bl7) | 0;
      hi = hi + Math.imul(ah0, bh7) | 0;
      var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
      w7 &= 0x3ffffff;
      /* k = 8 */
      lo = Math.imul(al8, bl0);
      mid = Math.imul(al8, bh0);
      mid = mid + Math.imul(ah8, bl0) | 0;
      hi = Math.imul(ah8, bh0);
      lo = lo + Math.imul(al7, bl1) | 0;
      mid = mid + Math.imul(al7, bh1) | 0;
      mid = mid + Math.imul(ah7, bl1) | 0;
      hi = hi + Math.imul(ah7, bh1) | 0;
      lo = lo + Math.imul(al6, bl2) | 0;
      mid = mid + Math.imul(al6, bh2) | 0;
      mid = mid + Math.imul(ah6, bl2) | 0;
      hi = hi + Math.imul(ah6, bh2) | 0;
      lo = lo + Math.imul(al5, bl3) | 0;
      mid = mid + Math.imul(al5, bh3) | 0;
      mid = mid + Math.imul(ah5, bl3) | 0;
      hi = hi + Math.imul(ah5, bh3) | 0;
      lo = lo + Math.imul(al4, bl4) | 0;
      mid = mid + Math.imul(al4, bh4) | 0;
      mid = mid + Math.imul(ah4, bl4) | 0;
      hi = hi + Math.imul(ah4, bh4) | 0;
      lo = lo + Math.imul(al3, bl5) | 0;
      mid = mid + Math.imul(al3, bh5) | 0;
      mid = mid + Math.imul(ah3, bl5) | 0;
      hi = hi + Math.imul(ah3, bh5) | 0;
      lo = lo + Math.imul(al2, bl6) | 0;
      mid = mid + Math.imul(al2, bh6) | 0;
      mid = mid + Math.imul(ah2, bl6) | 0;
      hi = hi + Math.imul(ah2, bh6) | 0;
      lo = lo + Math.imul(al1, bl7) | 0;
      mid = mid + Math.imul(al1, bh7) | 0;
      mid = mid + Math.imul(ah1, bl7) | 0;
      hi = hi + Math.imul(ah1, bh7) | 0;
      lo = lo + Math.imul(al0, bl8) | 0;
      mid = mid + Math.imul(al0, bh8) | 0;
      mid = mid + Math.imul(ah0, bl8) | 0;
      hi = hi + Math.imul(ah0, bh8) | 0;
      var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
      w8 &= 0x3ffffff;
      /* k = 9 */
      lo = Math.imul(al9, bl0);
      mid = Math.imul(al9, bh0);
      mid = mid + Math.imul(ah9, bl0) | 0;
      hi = Math.imul(ah9, bh0);
      lo = lo + Math.imul(al8, bl1) | 0;
      mid = mid + Math.imul(al8, bh1) | 0;
      mid = mid + Math.imul(ah8, bl1) | 0;
      hi = hi + Math.imul(ah8, bh1) | 0;
      lo = lo + Math.imul(al7, bl2) | 0;
      mid = mid + Math.imul(al7, bh2) | 0;
      mid = mid + Math.imul(ah7, bl2) | 0;
      hi = hi + Math.imul(ah7, bh2) | 0;
      lo = lo + Math.imul(al6, bl3) | 0;
      mid = mid + Math.imul(al6, bh3) | 0;
      mid = mid + Math.imul(ah6, bl3) | 0;
      hi = hi + Math.imul(ah6, bh3) | 0;
      lo = lo + Math.imul(al5, bl4) | 0;
      mid = mid + Math.imul(al5, bh4) | 0;
      mid = mid + Math.imul(ah5, bl4) | 0;
      hi = hi + Math.imul(ah5, bh4) | 0;
      lo = lo + Math.imul(al4, bl5) | 0;
      mid = mid + Math.imul(al4, bh5) | 0;
      mid = mid + Math.imul(ah4, bl5) | 0;
      hi = hi + Math.imul(ah4, bh5) | 0;
      lo = lo + Math.imul(al3, bl6) | 0;
      mid = mid + Math.imul(al3, bh6) | 0;
      mid = mid + Math.imul(ah3, bl6) | 0;
      hi = hi + Math.imul(ah3, bh6) | 0;
      lo = lo + Math.imul(al2, bl7) | 0;
      mid = mid + Math.imul(al2, bh7) | 0;
      mid = mid + Math.imul(ah2, bl7) | 0;
      hi = hi + Math.imul(ah2, bh7) | 0;
      lo = lo + Math.imul(al1, bl8) | 0;
      mid = mid + Math.imul(al1, bh8) | 0;
      mid = mid + Math.imul(ah1, bl8) | 0;
      hi = hi + Math.imul(ah1, bh8) | 0;
      lo = lo + Math.imul(al0, bl9) | 0;
      mid = mid + Math.imul(al0, bh9) | 0;
      mid = mid + Math.imul(ah0, bl9) | 0;
      hi = hi + Math.imul(ah0, bh9) | 0;
      var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
      w9 &= 0x3ffffff;
      /* k = 10 */
      lo = Math.imul(al9, bl1);
      mid = Math.imul(al9, bh1);
      mid = mid + Math.imul(ah9, bl1) | 0;
      hi = Math.imul(ah9, bh1);
      lo = lo + Math.imul(al8, bl2) | 0;
      mid = mid + Math.imul(al8, bh2) | 0;
      mid = mid + Math.imul(ah8, bl2) | 0;
      hi = hi + Math.imul(ah8, bh2) | 0;
      lo = lo + Math.imul(al7, bl3) | 0;
      mid = mid + Math.imul(al7, bh3) | 0;
      mid = mid + Math.imul(ah7, bl3) | 0;
      hi = hi + Math.imul(ah7, bh3) | 0;
      lo = lo + Math.imul(al6, bl4) | 0;
      mid = mid + Math.imul(al6, bh4) | 0;
      mid = mid + Math.imul(ah6, bl4) | 0;
      hi = hi + Math.imul(ah6, bh4) | 0;
      lo = lo + Math.imul(al5, bl5) | 0;
      mid = mid + Math.imul(al5, bh5) | 0;
      mid = mid + Math.imul(ah5, bl5) | 0;
      hi = hi + Math.imul(ah5, bh5) | 0;
      lo = lo + Math.imul(al4, bl6) | 0;
      mid = mid + Math.imul(al4, bh6) | 0;
      mid = mid + Math.imul(ah4, bl6) | 0;
      hi = hi + Math.imul(ah4, bh6) | 0;
      lo = lo + Math.imul(al3, bl7) | 0;
      mid = mid + Math.imul(al3, bh7) | 0;
      mid = mid + Math.imul(ah3, bl7) | 0;
      hi = hi + Math.imul(ah3, bh7) | 0;
      lo = lo + Math.imul(al2, bl8) | 0;
      mid = mid + Math.imul(al2, bh8) | 0;
      mid = mid + Math.imul(ah2, bl8) | 0;
      hi = hi + Math.imul(ah2, bh8) | 0;
      lo = lo + Math.imul(al1, bl9) | 0;
      mid = mid + Math.imul(al1, bh9) | 0;
      mid = mid + Math.imul(ah1, bl9) | 0;
      hi = hi + Math.imul(ah1, bh9) | 0;
      var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
      w10 &= 0x3ffffff;
      /* k = 11 */
      lo = Math.imul(al9, bl2);
      mid = Math.imul(al9, bh2);
      mid = mid + Math.imul(ah9, bl2) | 0;
      hi = Math.imul(ah9, bh2);
      lo = lo + Math.imul(al8, bl3) | 0;
      mid = mid + Math.imul(al8, bh3) | 0;
      mid = mid + Math.imul(ah8, bl3) | 0;
      hi = hi + Math.imul(ah8, bh3) | 0;
      lo = lo + Math.imul(al7, bl4) | 0;
      mid = mid + Math.imul(al7, bh4) | 0;
      mid = mid + Math.imul(ah7, bl4) | 0;
      hi = hi + Math.imul(ah7, bh4) | 0;
      lo = lo + Math.imul(al6, bl5) | 0;
      mid = mid + Math.imul(al6, bh5) | 0;
      mid = mid + Math.imul(ah6, bl5) | 0;
      hi = hi + Math.imul(ah6, bh5) | 0;
      lo = lo + Math.imul(al5, bl6) | 0;
      mid = mid + Math.imul(al5, bh6) | 0;
      mid = mid + Math.imul(ah5, bl6) | 0;
      hi = hi + Math.imul(ah5, bh6) | 0;
      lo = lo + Math.imul(al4, bl7) | 0;
      mid = mid + Math.imul(al4, bh7) | 0;
      mid = mid + Math.imul(ah4, bl7) | 0;
      hi = hi + Math.imul(ah4, bh7) | 0;
      lo = lo + Math.imul(al3, bl8) | 0;
      mid = mid + Math.imul(al3, bh8) | 0;
      mid = mid + Math.imul(ah3, bl8) | 0;
      hi = hi + Math.imul(ah3, bh8) | 0;
      lo = lo + Math.imul(al2, bl9) | 0;
      mid = mid + Math.imul(al2, bh9) | 0;
      mid = mid + Math.imul(ah2, bl9) | 0;
      hi = hi + Math.imul(ah2, bh9) | 0;
      var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
      w11 &= 0x3ffffff;
      /* k = 12 */
      lo = Math.imul(al9, bl3);
      mid = Math.imul(al9, bh3);
      mid = mid + Math.imul(ah9, bl3) | 0;
      hi = Math.imul(ah9, bh3);
      lo = lo + Math.imul(al8, bl4) | 0;
      mid = mid + Math.imul(al8, bh4) | 0;
      mid = mid + Math.imul(ah8, bl4) | 0;
      hi = hi + Math.imul(ah8, bh4) | 0;
      lo = lo + Math.imul(al7, bl5) | 0;
      mid = mid + Math.imul(al7, bh5) | 0;
      mid = mid + Math.imul(ah7, bl5) | 0;
      hi = hi + Math.imul(ah7, bh5) | 0;
      lo = lo + Math.imul(al6, bl6) | 0;
      mid = mid + Math.imul(al6, bh6) | 0;
      mid = mid + Math.imul(ah6, bl6) | 0;
      hi = hi + Math.imul(ah6, bh6) | 0;
      lo = lo + Math.imul(al5, bl7) | 0;
      mid = mid + Math.imul(al5, bh7) | 0;
      mid = mid + Math.imul(ah5, bl7) | 0;
      hi = hi + Math.imul(ah5, bh7) | 0;
      lo = lo + Math.imul(al4, bl8) | 0;
      mid = mid + Math.imul(al4, bh8) | 0;
      mid = mid + Math.imul(ah4, bl8) | 0;
      hi = hi + Math.imul(ah4, bh8) | 0;
      lo = lo + Math.imul(al3, bl9) | 0;
      mid = mid + Math.imul(al3, bh9) | 0;
      mid = mid + Math.imul(ah3, bl9) | 0;
      hi = hi + Math.imul(ah3, bh9) | 0;
      var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
      w12 &= 0x3ffffff;
      /* k = 13 */
      lo = Math.imul(al9, bl4);
      mid = Math.imul(al9, bh4);
      mid = mid + Math.imul(ah9, bl4) | 0;
      hi = Math.imul(ah9, bh4);
      lo = lo + Math.imul(al8, bl5) | 0;
      mid = mid + Math.imul(al8, bh5) | 0;
      mid = mid + Math.imul(ah8, bl5) | 0;
      hi = hi + Math.imul(ah8, bh5) | 0;
      lo = lo + Math.imul(al7, bl6) | 0;
      mid = mid + Math.imul(al7, bh6) | 0;
      mid = mid + Math.imul(ah7, bl6) | 0;
      hi = hi + Math.imul(ah7, bh6) | 0;
      lo = lo + Math.imul(al6, bl7) | 0;
      mid = mid + Math.imul(al6, bh7) | 0;
      mid = mid + Math.imul(ah6, bl7) | 0;
      hi = hi + Math.imul(ah6, bh7) | 0;
      lo = lo + Math.imul(al5, bl8) | 0;
      mid = mid + Math.imul(al5, bh8) | 0;
      mid = mid + Math.imul(ah5, bl8) | 0;
      hi = hi + Math.imul(ah5, bh8) | 0;
      lo = lo + Math.imul(al4, bl9) | 0;
      mid = mid + Math.imul(al4, bh9) | 0;
      mid = mid + Math.imul(ah4, bl9) | 0;
      hi = hi + Math.imul(ah4, bh9) | 0;
      var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
      w13 &= 0x3ffffff;
      /* k = 14 */
      lo = Math.imul(al9, bl5);
      mid = Math.imul(al9, bh5);
      mid = mid + Math.imul(ah9, bl5) | 0;
      hi = Math.imul(ah9, bh5);
      lo = lo + Math.imul(al8, bl6) | 0;
      mid = mid + Math.imul(al8, bh6) | 0;
      mid = mid + Math.imul(ah8, bl6) | 0;
      hi = hi + Math.imul(ah8, bh6) | 0;
      lo = lo + Math.imul(al7, bl7) | 0;
      mid = mid + Math.imul(al7, bh7) | 0;
      mid = mid + Math.imul(ah7, bl7) | 0;
      hi = hi + Math.imul(ah7, bh7) | 0;
      lo = lo + Math.imul(al6, bl8) | 0;
      mid = mid + Math.imul(al6, bh8) | 0;
      mid = mid + Math.imul(ah6, bl8) | 0;
      hi = hi + Math.imul(ah6, bh8) | 0;
      lo = lo + Math.imul(al5, bl9) | 0;
      mid = mid + Math.imul(al5, bh9) | 0;
      mid = mid + Math.imul(ah5, bl9) | 0;
      hi = hi + Math.imul(ah5, bh9) | 0;
      var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
      w14 &= 0x3ffffff;
      /* k = 15 */
      lo = Math.imul(al9, bl6);
      mid = Math.imul(al9, bh6);
      mid = mid + Math.imul(ah9, bl6) | 0;
      hi = Math.imul(ah9, bh6);
      lo = lo + Math.imul(al8, bl7) | 0;
      mid = mid + Math.imul(al8, bh7) | 0;
      mid = mid + Math.imul(ah8, bl7) | 0;
      hi = hi + Math.imul(ah8, bh7) | 0;
      lo = lo + Math.imul(al7, bl8) | 0;
      mid = mid + Math.imul(al7, bh8) | 0;
      mid = mid + Math.imul(ah7, bl8) | 0;
      hi = hi + Math.imul(ah7, bh8) | 0;
      lo = lo + Math.imul(al6, bl9) | 0;
      mid = mid + Math.imul(al6, bh9) | 0;
      mid = mid + Math.imul(ah6, bl9) | 0;
      hi = hi + Math.imul(ah6, bh9) | 0;
      var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
      w15 &= 0x3ffffff;
      /* k = 16 */
      lo = Math.imul(al9, bl7);
      mid = Math.imul(al9, bh7);
      mid = mid + Math.imul(ah9, bl7) | 0;
      hi = Math.imul(ah9, bh7);
      lo = lo + Math.imul(al8, bl8) | 0;
      mid = mid + Math.imul(al8, bh8) | 0;
      mid = mid + Math.imul(ah8, bl8) | 0;
      hi = hi + Math.imul(ah8, bh8) | 0;
      lo = lo + Math.imul(al7, bl9) | 0;
      mid = mid + Math.imul(al7, bh9) | 0;
      mid = mid + Math.imul(ah7, bl9) | 0;
      hi = hi + Math.imul(ah7, bh9) | 0;
      var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
      w16 &= 0x3ffffff;
      /* k = 17 */
      lo = Math.imul(al9, bl8);
      mid = Math.imul(al9, bh8);
      mid = mid + Math.imul(ah9, bl8) | 0;
      hi = Math.imul(ah9, bh8);
      lo = lo + Math.imul(al8, bl9) | 0;
      mid = mid + Math.imul(al8, bh9) | 0;
      mid = mid + Math.imul(ah8, bl9) | 0;
      hi = hi + Math.imul(ah8, bh9) | 0;
      var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
      w17 &= 0x3ffffff;
      /* k = 18 */
      lo = Math.imul(al9, bl9);
      mid = Math.imul(al9, bh9);
      mid = mid + Math.imul(ah9, bl9) | 0;
      hi = Math.imul(ah9, bh9);
      var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
      w18 &= 0x3ffffff;
      o[0] = w0;
      o[1] = w1;
      o[2] = w2;
      o[3] = w3;
      o[4] = w4;
      o[5] = w5;
      o[6] = w6;
      o[7] = w7;
      o[8] = w8;
      o[9] = w9;
      o[10] = w10;
      o[11] = w11;
      o[12] = w12;
      o[13] = w13;
      o[14] = w14;
      o[15] = w15;
      o[16] = w16;
      o[17] = w17;
      o[18] = w18;
      if (c !== 0) {
        o[19] = c;
        out.length++;
      }
      return out;
    };

    // Polyfill comb
    if (!Math.imul) {
      comb10MulTo = smallMulTo;
    }
    function bigMulTo(self, num, out) {
      out.negative = num.negative ^ self.negative;
      out.length = self.length + num.length;
      var carry = 0;
      var hncarry = 0;
      for (var k = 0; k < out.length - 1; k++) {
        // Sum all words with the same `i + j = k` and accumulate `ncarry`,
        // note that ncarry could be >= 0x3ffffff
        var ncarry = hncarry;
        hncarry = 0;
        var rword = carry & 0x3ffffff;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
          var i = k - j;
          var a = self.words[i] | 0;
          var b = num.words[j] | 0;
          var r = a * b;
          var lo = r & 0x3ffffff;
          ncarry = ncarry + (r / 0x4000000 | 0) | 0;
          lo = lo + rword | 0;
          rword = lo & 0x3ffffff;
          ncarry = ncarry + (lo >>> 26) | 0;
          hncarry += ncarry >>> 26;
          ncarry &= 0x3ffffff;
        }
        out.words[k] = rword;
        carry = ncarry;
        ncarry = hncarry;
      }
      if (carry !== 0) {
        out.words[k] = carry;
      } else {
        out.length--;
      }
      return out._strip();
    }
    function jumboMulTo(self, num, out) {
      // Temporary disable, see https://github.com/indutny/bn.js/issues/211
      // var fftm = new FFTM();
      // return fftm.mulp(self, num, out);
      return bigMulTo(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
      var res;
      var len = this.length + num.length;
      if (this.length === 10 && num.length === 10) {
        res = comb10MulTo(this, num, out);
      } else if (len < 63) {
        res = smallMulTo(this, num, out);
      } else if (len < 1024) {
        res = bigMulTo(this, num, out);
      } else {
        res = jumboMulTo(this, num, out);
      }
      return res;
    };

    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion

    function FFTM(x, y) {
      this.x = x;
      this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
      var t = new Array(N);
      var l = BN.prototype._countBits(N) - 1;
      for (var i = 0; i < N; i++) {
        t[i] = this.revBin(i, l, N);
      }
      return t;
    };

    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
      if (x === 0 || x === N - 1) return x;
      var rb = 0;
      for (var i = 0; i < l; i++) {
        rb |= (x & 1) << l - i - 1;
        x >>= 1;
      }
      return rb;
    };

    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
      for (var i = 0; i < N; i++) {
        rtws[i] = rws[rbt[i]];
        itws[i] = iws[rbt[i]];
      }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
      this.permute(rbt, rws, iws, rtws, itws, N);
      for (var s = 1; s < N; s <<= 1) {
        var l = s << 1;
        var rtwdf = Math.cos(2 * Math.PI / l);
        var itwdf = Math.sin(2 * Math.PI / l);
        for (var p = 0; p < N; p += l) {
          var rtwdf_ = rtwdf;
          var itwdf_ = itwdf;
          for (var j = 0; j < s; j++) {
            var re = rtws[p + j];
            var ie = itws[p + j];
            var ro = rtws[p + j + s];
            var io = itws[p + j + s];
            var rx = rtwdf_ * ro - itwdf_ * io;
            io = rtwdf_ * io + itwdf_ * ro;
            ro = rx;
            rtws[p + j] = re + ro;
            itws[p + j] = ie + io;
            rtws[p + j + s] = re - ro;
            itws[p + j + s] = ie - io;

            /* jshint maxdepth : false */
            if (j !== l) {
              rx = rtwdf * rtwdf_ - itwdf * itwdf_;
              itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
              rtwdf_ = rx;
            }
          }
        }
      }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
      var N = Math.max(m, n) | 1;
      var odd = N & 1;
      var i = 0;
      for (N = N / 2 | 0; N; N = N >>> 1) {
        i++;
      }
      return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
      if (N <= 1) return;
      for (var i = 0; i < N / 2; i++) {
        var t = rws[i];
        rws[i] = rws[N - i - 1];
        rws[N - i - 1] = t;
        t = iws[i];
        iws[i] = -iws[N - i - 1];
        iws[N - i - 1] = -t;
      }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
      var carry = 0;
      for (var i = 0; i < N / 2; i++) {
        var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;
        ws[i] = w & 0x3ffffff;
        if (w < 0x4000000) {
          carry = 0;
        } else {
          carry = w / 0x4000000 | 0;
        }
      }
      return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
      var carry = 0;
      for (var i = 0; i < len; i++) {
        carry = carry + (ws[i] | 0);
        rws[2 * i] = carry & 0x1fff;
        carry = carry >>> 13;
        rws[2 * i + 1] = carry & 0x1fff;
        carry = carry >>> 13;
      }

      // Pad with zeroes
      for (i = 2 * len; i < N; ++i) {
        rws[i] = 0;
      }
      assert(carry === 0);
      assert((carry & ~0x1fff) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
      var ph = new Array(N);
      for (var i = 0; i < N; i++) {
        ph[i] = 0;
      }
      return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
      var N = 2 * this.guessLen13b(x.length, y.length);
      var rbt = this.makeRBT(N);
      var _ = this.stub(N);
      var rws = new Array(N);
      var rwst = new Array(N);
      var iwst = new Array(N);
      var nrws = new Array(N);
      var nrwst = new Array(N);
      var niwst = new Array(N);
      var rmws = out.words;
      rmws.length = N;
      this.convert13b(x.words, x.length, rws, N);
      this.convert13b(y.words, y.length, nrws, N);
      this.transform(rws, _, rwst, iwst, N, rbt);
      this.transform(nrws, _, nrwst, niwst, N, rbt);
      for (var i = 0; i < N; i++) {
        var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
        iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
        rwst[i] = rx;
      }
      this.conjugate(rwst, iwst, N);
      this.transform(rwst, iwst, rmws, _, N, rbt);
      this.conjugate(rmws, _, N);
      this.normalize13b(rmws, N);
      out.negative = x.negative ^ y.negative;
      out.length = x.length + y.length;
      return out._strip();
    };

    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
      var out = new BN(null);
      out.words = new Array(this.length + num.length);
      return this.mulTo(num, out);
    };

    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
      var out = new BN(null);
      out.words = new Array(this.length + num.length);
      return jumboMulTo(this, num, out);
    };

    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
      return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
      var isNegNum = num < 0;
      if (isNegNum) num = -num;
      assert(typeof num === 'number');
      assert(num < 0x4000000);

      // Carry
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = (this.words[i] | 0) * num;
        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
        carry >>= 26;
        carry += w / 0x4000000 | 0;
        // NOTE: lo is 27bit maximum
        carry += lo >>> 26;
        this.words[i] = lo & 0x3ffffff;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return isNegNum ? this.ineg() : this;
    };
    BN.prototype.muln = function muln(num) {
      return this.clone().imuln(num);
    };

    // `this` * `this`
    BN.prototype.sqr = function sqr() {
      return this.mul(this);
    };

    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
      return this.imul(this.clone());
    };

    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
      var w = toBitArray(num);
      if (w.length === 0) return new BN(1);

      // Skip leading zeroes
      var res = this;
      for (var i = 0; i < w.length; i++, res = res.sqr()) {
        if (w[i] !== 0) break;
      }
      if (++i < w.length) {
        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
          if (w[i] === 0) continue;
          res = res.mul(q);
        }
      }
      return res;
    };

    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
      assert(typeof bits === 'number' && bits >= 0);
      var r = bits % 26;
      var s = (bits - r) / 26;
      var carryMask = 0x3ffffff >>> 26 - r << 26 - r;
      var i;
      if (r !== 0) {
        var carry = 0;
        for (i = 0; i < this.length; i++) {
          var newCarry = this.words[i] & carryMask;
          var c = (this.words[i] | 0) - newCarry << r;
          this.words[i] = c | carry;
          carry = newCarry >>> 26 - r;
        }
        if (carry) {
          this.words[i] = carry;
          this.length++;
        }
      }
      if (s !== 0) {
        for (i = this.length - 1; i >= 0; i--) {
          this.words[i + s] = this.words[i];
        }
        for (i = 0; i < s; i++) {
          this.words[i] = 0;
        }
        this.length += s;
      }
      return this._strip();
    };
    BN.prototype.ishln = function ishln(bits) {
      // TODO(indutny): implement me
      assert(this.negative === 0);
      return this.iushln(bits);
    };

    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
      assert(typeof bits === 'number' && bits >= 0);
      var h;
      if (hint) {
        h = (hint - hint % 26) / 26;
      } else {
        h = 0;
      }
      var r = bits % 26;
      var s = Math.min((bits - r) / 26, this.length);
      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
      var maskedWords = extended;
      h -= s;
      h = Math.max(0, h);

      // Extended mode, copy masked part
      if (maskedWords) {
        for (var i = 0; i < s; i++) {
          maskedWords.words[i] = this.words[i];
        }
        maskedWords.length = s;
      }
      if (s === 0) {
        // No-op, we should not move anything at all
      } else if (this.length > s) {
        this.length -= s;
        for (i = 0; i < this.length; i++) {
          this.words[i] = this.words[i + s];
        }
      } else {
        this.words[0] = 0;
        this.length = 1;
      }
      var carry = 0;
      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
        var word = this.words[i] | 0;
        this.words[i] = carry << 26 - r | word >>> r;
        carry = word & mask;
      }

      // Push carried bits as a mask
      if (maskedWords && carry !== 0) {
        maskedWords.words[maskedWords.length++] = carry;
      }
      if (this.length === 0) {
        this.words[0] = 0;
        this.length = 1;
      }
      return this._strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
      // TODO(indutny): implement me
      assert(this.negative === 0);
      return this.iushrn(bits, hint, extended);
    };

    // Shift-left
    BN.prototype.shln = function shln(bits) {
      return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
      return this.clone().iushln(bits);
    };

    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
      return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
      return this.clone().iushrn(bits);
    };

    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
      assert(typeof bit === 'number' && bit >= 0);
      var r = bit % 26;
      var s = (bit - r) / 26;
      var q = 1 << r;

      // Fast case: bit is much higher than all existing words
      if (this.length <= s) return false;

      // Check bit and return
      var w = this.words[s];
      return !!(w & q);
    };

    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
      assert(typeof bits === 'number' && bits >= 0);
      var r = bits % 26;
      var s = (bits - r) / 26;
      assert(this.negative === 0, 'imaskn works only with positive numbers');
      if (this.length <= s) {
        return this;
      }
      if (r !== 0) {
        s++;
      }
      this.length = Math.min(s, this.length);
      if (r !== 0) {
        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
        this.words[this.length - 1] &= mask;
      }
      return this._strip();
    };

    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
      return this.clone().imaskn(bits);
    };

    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
      assert(typeof num === 'number');
      assert(num < 0x4000000);
      if (num < 0) return this.isubn(-num);

      // Possible sign change
      if (this.negative !== 0) {
        if (this.length === 1 && (this.words[0] | 0) <= num) {
          this.words[0] = num - (this.words[0] | 0);
          this.negative = 0;
          return this;
        }
        this.negative = 0;
        this.isubn(num);
        this.negative = 1;
        return this;
      }

      // Add without checks
      return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
      this.words[0] += num;

      // Carry
      for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
        this.words[i] -= 0x4000000;
        if (i === this.length - 1) {
          this.words[i + 1] = 1;
        } else {
          this.words[i + 1]++;
        }
      }
      this.length = Math.max(this.length, i + 1);
      return this;
    };

    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
      assert(typeof num === 'number');
      assert(num < 0x4000000);
      if (num < 0) return this.iaddn(-num);
      if (this.negative !== 0) {
        this.negative = 0;
        this.iaddn(num);
        this.negative = 1;
        return this;
      }
      this.words[0] -= num;
      if (this.length === 1 && this.words[0] < 0) {
        this.words[0] = -this.words[0];
        this.negative = 1;
      } else {
        // Carry
        for (var i = 0; i < this.length && this.words[i] < 0; i++) {
          this.words[i] += 0x4000000;
          this.words[i + 1] -= 1;
        }
      }
      return this._strip();
    };
    BN.prototype.addn = function addn(num) {
      return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
      return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
      this.negative = 0;
      return this;
    };
    BN.prototype.abs = function abs() {
      return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
      var len = num.length + shift;
      var i;
      this._expand(len);
      var w;
      var carry = 0;
      for (i = 0; i < num.length; i++) {
        w = (this.words[i + shift] | 0) + carry;
        var right = (num.words[i] | 0) * mul;
        w -= right & 0x3ffffff;
        carry = (w >> 26) - (right / 0x4000000 | 0);
        this.words[i + shift] = w & 0x3ffffff;
      }
      for (; i < this.length - shift; i++) {
        w = (this.words[i + shift] | 0) + carry;
        carry = w >> 26;
        this.words[i + shift] = w & 0x3ffffff;
      }
      if (carry === 0) return this._strip();

      // Subtraction overflow
      assert(carry === -1);
      carry = 0;
      for (i = 0; i < this.length; i++) {
        w = -(this.words[i] | 0) + carry;
        carry = w >> 26;
        this.words[i] = w & 0x3ffffff;
      }
      this.negative = 1;
      return this._strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
      var shift = this.length - num.length;
      var a = this.clone();
      var b = num;

      // Normalize
      var bhi = b.words[b.length - 1] | 0;
      var bhiBits = this._countBits(bhi);
      shift = 26 - bhiBits;
      if (shift !== 0) {
        b = b.ushln(shift);
        a.iushln(shift);
        bhi = b.words[b.length - 1] | 0;
      }

      // Initialize quotient
      var m = a.length - b.length;
      var q;
      if (mode !== 'mod') {
        q = new BN(null);
        q.length = m + 1;
        q.words = new Array(q.length);
        for (var i = 0; i < q.length; i++) {
          q.words[i] = 0;
        }
      }
      var diff = a.clone()._ishlnsubmul(b, 1, m);
      if (diff.negative === 0) {
        a = diff;
        if (q) {
          q.words[m] = 1;
        }
      }
      for (var j = m - 1; j >= 0; j--) {
        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);

        // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
        // (0x7ffffff)
        qj = Math.min(qj / bhi | 0, 0x3ffffff);
        a._ishlnsubmul(b, qj, j);
        while (a.negative !== 0) {
          qj--;
          a.negative = 0;
          a._ishlnsubmul(b, 1, j);
          if (!a.isZero()) {
            a.negative ^= 1;
          }
        }
        if (q) {
          q.words[j] = qj;
        }
      }
      if (q) {
        q._strip();
      }
      a._strip();

      // Denormalize
      if (mode !== 'div' && shift !== 0) {
        a.iushrn(shift);
      }
      return {
        div: q || null,
        mod: a
      };
    };

    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
      assert(!num.isZero());
      if (this.isZero()) {
        return {
          div: new BN(0),
          mod: new BN(0)
        };
      }
      var div, mod, res;
      if (this.negative !== 0 && num.negative === 0) {
        res = this.neg().divmod(num, mode);
        if (mode !== 'mod') {
          div = res.div.neg();
        }
        if (mode !== 'div') {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.iadd(num);
          }
        }
        return {
          div: div,
          mod: mod
        };
      }
      if (this.negative === 0 && num.negative !== 0) {
        res = this.divmod(num.neg(), mode);
        if (mode !== 'mod') {
          div = res.div.neg();
        }
        return {
          div: div,
          mod: res.mod
        };
      }
      if ((this.negative & num.negative) !== 0) {
        res = this.neg().divmod(num.neg(), mode);
        if (mode !== 'div') {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.isub(num);
          }
        }
        return {
          div: res.div,
          mod: mod
        };
      }

      // Both numbers are positive at this point

      // Strip both numbers to approximate shift value
      if (num.length > this.length || this.cmp(num) < 0) {
        return {
          div: new BN(0),
          mod: this
        };
      }

      // Very short reduction
      if (num.length === 1) {
        if (mode === 'div') {
          return {
            div: this.divn(num.words[0]),
            mod: null
          };
        }
        if (mode === 'mod') {
          return {
            div: null,
            mod: new BN(this.modrn(num.words[0]))
          };
        }
        return {
          div: this.divn(num.words[0]),
          mod: new BN(this.modrn(num.words[0]))
        };
      }
      return this._wordDiv(num, mode);
    };

    // Find `this` / `num`
    BN.prototype.div = function div(num) {
      return this.divmod(num, 'div', false).div;
    };

    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
      return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
      return this.divmod(num, 'mod', true).mod;
    };

    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
      var dm = this.divmod(num);

      // Fast case - exact division
      if (dm.mod.isZero()) return dm.div;
      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
      var half = num.ushrn(1);
      var r2 = num.andln(1);
      var cmp = mod.cmp(half);

      // Round down
      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

      // Round up
      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modrn = function modrn(num) {
      var isNegNum = num < 0;
      if (isNegNum) num = -num;
      assert(num <= 0x3ffffff);
      var p = (1 << 26) % num;
      var acc = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        acc = (p * acc + (this.words[i] | 0)) % num;
      }
      return isNegNum ? -acc : acc;
    };

    // WARNING: DEPRECATED
    BN.prototype.modn = function modn(num) {
      return this.modrn(num);
    };

    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
      var isNegNum = num < 0;
      if (isNegNum) num = -num;
      assert(num <= 0x3ffffff);
      var carry = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var w = (this.words[i] | 0) + carry * 0x4000000;
        this.words[i] = w / num | 0;
        carry = w % num;
      }
      this._strip();
      return isNegNum ? this.ineg() : this;
    };
    BN.prototype.divn = function divn(num) {
      return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
      assert(p.negative === 0);
      assert(!p.isZero());
      var x = this;
      var y = p.clone();
      if (x.negative !== 0) {
        x = x.umod(p);
      } else {
        x = x.clone();
      }

      // A * x + B * y = x
      var A = new BN(1);
      var B = new BN(0);

      // C * x + D * y = y
      var C = new BN(0);
      var D = new BN(1);
      var g = 0;
      while (x.isEven() && y.isEven()) {
        x.iushrn(1);
        y.iushrn(1);
        ++g;
      }
      var yp = y.clone();
      var xp = x.clone();
      while (!x.isZero()) {
        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
        if (i > 0) {
          x.iushrn(i);
          while (i-- > 0) {
            if (A.isOdd() || B.isOdd()) {
              A.iadd(yp);
              B.isub(xp);
            }
            A.iushrn(1);
            B.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
        if (j > 0) {
          y.iushrn(j);
          while (j-- > 0) {
            if (C.isOdd() || D.isOdd()) {
              C.iadd(yp);
              D.isub(xp);
            }
            C.iushrn(1);
            D.iushrn(1);
          }
        }
        if (x.cmp(y) >= 0) {
          x.isub(y);
          A.isub(C);
          B.isub(D);
        } else {
          y.isub(x);
          C.isub(A);
          D.isub(B);
        }
      }
      return {
        a: C,
        b: D,
        gcd: y.iushln(g)
      };
    };

    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
      assert(p.negative === 0);
      assert(!p.isZero());
      var a = this;
      var b = p.clone();
      if (a.negative !== 0) {
        a = a.umod(p);
      } else {
        a = a.clone();
      }
      var x1 = new BN(1);
      var x2 = new BN(0);
      var delta = b.clone();
      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
        if (i > 0) {
          a.iushrn(i);
          while (i-- > 0) {
            if (x1.isOdd()) {
              x1.iadd(delta);
            }
            x1.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
        if (j > 0) {
          b.iushrn(j);
          while (j-- > 0) {
            if (x2.isOdd()) {
              x2.iadd(delta);
            }
            x2.iushrn(1);
          }
        }
        if (a.cmp(b) >= 0) {
          a.isub(b);
          x1.isub(x2);
        } else {
          b.isub(a);
          x2.isub(x1);
        }
      }
      var res;
      if (a.cmpn(1) === 0) {
        res = x1;
      } else {
        res = x2;
      }
      if (res.cmpn(0) < 0) {
        res.iadd(p);
      }
      return res;
    };
    BN.prototype.gcd = function gcd(num) {
      if (this.isZero()) return num.abs();
      if (num.isZero()) return this.abs();
      var a = this.clone();
      var b = num.clone();
      a.negative = 0;
      b.negative = 0;

      // Remove common factor of two
      for (var shift = 0; a.isEven() && b.isEven(); shift++) {
        a.iushrn(1);
        b.iushrn(1);
      }
      do {
        while (a.isEven()) {
          a.iushrn(1);
        }
        while (b.isEven()) {
          b.iushrn(1);
        }
        var r = a.cmp(b);
        if (r < 0) {
          // Swap `a` and `b` to make `a` always bigger than `b`
          var t = a;
          a = b;
          b = t;
        } else if (r === 0 || b.cmpn(1) === 0) {
          break;
        }
        a.isub(b);
      } while (true);
      return b.iushln(shift);
    };

    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
      return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
      return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
      return (this.words[0] & 1) === 1;
    };

    // And first word and num
    BN.prototype.andln = function andln(num) {
      return this.words[0] & num;
    };

    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
      assert(typeof bit === 'number');
      var r = bit % 26;
      var s = (bit - r) / 26;
      var q = 1 << r;

      // Fast case: bit is much higher than all existing words
      if (this.length <= s) {
        this._expand(s + 1);
        this.words[s] |= q;
        return this;
      }

      // Add bit and propagate, if needed
      var carry = q;
      for (var i = s; carry !== 0 && i < this.length; i++) {
        var w = this.words[i] | 0;
        w += carry;
        carry = w >>> 26;
        w &= 0x3ffffff;
        this.words[i] = w;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return this;
    };
    BN.prototype.isZero = function isZero() {
      return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
      var negative = num < 0;
      if (this.negative !== 0 && !negative) return -1;
      if (this.negative === 0 && negative) return 1;
      this._strip();
      var res;
      if (this.length > 1) {
        res = 1;
      } else {
        if (negative) {
          num = -num;
        }
        assert(num <= 0x3ffffff, 'Number is too big');
        var w = this.words[0] | 0;
        res = w === num ? 0 : w < num ? -1 : 1;
      }
      if (this.negative !== 0) return -res | 0;
      return res;
    };

    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
      if (this.negative !== 0 && num.negative === 0) return -1;
      if (this.negative === 0 && num.negative !== 0) return 1;
      var res = this.ucmp(num);
      if (this.negative !== 0) return -res | 0;
      return res;
    };

    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
      // At this point both numbers have the same sign
      if (this.length > num.length) return 1;
      if (this.length < num.length) return -1;
      var res = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var a = this.words[i] | 0;
        var b = num.words[i] | 0;
        if (a === b) continue;
        if (a < b) {
          res = -1;
        } else if (a > b) {
          res = 1;
        }
        break;
      }
      return res;
    };
    BN.prototype.gtn = function gtn(num) {
      return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
      return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
      return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
      return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
      return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
      return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
      return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
      return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
      return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
      return this.cmp(num) === 0;
    };

    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
      return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
      assert(!this.red, 'Already a number in reduction context');
      assert(this.negative === 0, 'red works only with positives');
      return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
      assert(this.red, 'fromRed works only with numbers in reduction context');
      return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
      this.red = ctx;
      return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
      assert(!this.red, 'Already a number in reduction context');
      return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
      assert(this.red, 'redAdd works only with red numbers');
      return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
      assert(this.red, 'redIAdd works only with red numbers');
      return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
      assert(this.red, 'redSub works only with red numbers');
      return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
      assert(this.red, 'redISub works only with red numbers');
      return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
      assert(this.red, 'redShl works only with red numbers');
      return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
      assert(this.red, 'redMul works only with red numbers');
      this.red._verify2(this, num);
      return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
      assert(this.red, 'redMul works only with red numbers');
      this.red._verify2(this, num);
      return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
      assert(this.red, 'redSqr works only with red numbers');
      this.red._verify1(this);
      return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
      assert(this.red, 'redISqr works only with red numbers');
      this.red._verify1(this);
      return this.red.isqr(this);
    };

    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
      assert(this.red, 'redSqrt works only with red numbers');
      this.red._verify1(this);
      return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
      assert(this.red, 'redInvm works only with red numbers');
      this.red._verify1(this);
      return this.red.invm(this);
    };

    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
      assert(this.red, 'redNeg works only with red numbers');
      this.red._verify1(this);
      return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
      assert(this.red && !num.red, 'redPow(normalNum)');
      this.red._verify1(this);
      return this.red.pow(this, num);
    };

    // Prime numbers with efficient reduction
    var primes = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };

    // Pseudo-Mersenne prime
    function MPrime(name, p) {
      // P = 2 ^ N - K
      this.name = name;
      this.p = new BN(p, 16);
      this.n = this.p.bitLength();
      this.k = new BN(1).iushln(this.n).isub(this.p);
      this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
      var tmp = new BN(null);
      tmp.words = new Array(Math.ceil(this.n / 13));
      return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
      // Assumes that `num` is less than `P^2`
      // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
      var r = num;
      var rlen;
      do {
        this.split(r, this.tmp);
        r = this.imulK(r);
        r = r.iadd(this.tmp);
        rlen = r.bitLength();
      } while (rlen > this.n);
      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
      if (cmp === 0) {
        r.words[0] = 0;
        r.length = 1;
      } else if (cmp > 0) {
        r.isub(this.p);
      } else {
        if (r.strip !== undefined) {
          // r is a BN v4 instance
          r.strip();
        } else {
          // r is a BN v5 instance
          r._strip();
        }
      }
      return r;
    };
    MPrime.prototype.split = function split(input, out) {
      input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
      return num.imul(this.k);
    };
    function K256() {
      MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split(input, output) {
      // 256 = 9 * 26 + 22
      var mask = 0x3fffff;
      var outLen = Math.min(input.length, 9);
      for (var i = 0; i < outLen; i++) {
        output.words[i] = input.words[i];
      }
      output.length = outLen;
      if (input.length <= 9) {
        input.words[0] = 0;
        input.length = 1;
        return;
      }

      // Shift by 9 limbs
      var prev = input.words[9];
      output.words[output.length++] = prev & mask;
      for (i = 10; i < input.length; i++) {
        var next = input.words[i] | 0;
        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
        prev = next;
      }
      prev >>>= 22;
      input.words[i - 10] = prev;
      if (prev === 0 && input.length > 10) {
        input.length -= 10;
      } else {
        input.length -= 9;
      }
    };
    K256.prototype.imulK = function imulK(num) {
      // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
      num.words[num.length] = 0;
      num.words[num.length + 1] = 0;
      num.length += 2;

      // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
      var lo = 0;
      for (var i = 0; i < num.length; i++) {
        var w = num.words[i] | 0;
        lo += w * 0x3d1;
        num.words[i] = lo & 0x3ffffff;
        lo = w * 0x40 + (lo / 0x4000000 | 0);
      }

      // Fast length reduction
      if (num.words[num.length - 1] === 0) {
        num.length--;
        if (num.words[num.length - 1] === 0) {
          num.length--;
        }
      }
      return num;
    };
    function P224() {
      MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
      MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
      // 2 ^ 255 - 19
      MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK(num) {
      // K = 0x13
      var carry = 0;
      for (var i = 0; i < num.length; i++) {
        var hi = (num.words[i] | 0) * 0x13 + carry;
        var lo = hi & 0x3ffffff;
        hi >>>= 26;
        num.words[i] = lo;
        carry = hi;
      }
      if (carry !== 0) {
        num.words[num.length++] = carry;
      }
      return num;
    };

    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
      // Cached version of prime
      if (primes[name]) return primes[name];
      var prime;
      if (name === 'k256') {
        prime = new K256();
      } else if (name === 'p224') {
        prime = new P224();
      } else if (name === 'p192') {
        prime = new P192();
      } else if (name === 'p25519') {
        prime = new P25519();
      } else {
        throw new Error('Unknown prime ' + name);
      }
      primes[name] = prime;
      return prime;
    };

    //
    // Base reduction engine
    //
    function Red(m) {
      if (typeof m === 'string') {
        var prime = BN._prime(m);
        this.m = prime.p;
        this.prime = prime;
      } else {
        assert(m.gtn(1), 'modulus must be greater than 1');
        this.m = m;
        this.prime = null;
      }
    }
    Red.prototype._verify1 = function _verify1(a) {
      assert(a.negative === 0, 'red works only with positives');
      assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
      assert((a.negative | b.negative) === 0, 'red works only with positives');
      assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
      if (this.prime) return this.prime.ireduce(a)._forceRed(this);
      move(a, a.umod(this.m)._forceRed(this));
      return a;
    };
    Red.prototype.neg = function neg(a) {
      if (a.isZero()) {
        return a.clone();
      }
      return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add(a, b) {
      this._verify2(a, b);
      var res = a.add(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd(a, b) {
      this._verify2(a, b);
      var res = a.iadd(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res;
    };
    Red.prototype.sub = function sub(a, b) {
      this._verify2(a, b);
      var res = a.sub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.isub = function isub(a, b) {
      this._verify2(a, b);
      var res = a.isub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res;
    };
    Red.prototype.shl = function shl(a, num) {
      this._verify1(a);
      return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul(a, b) {
      this._verify2(a, b);
      return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul(a, b) {
      this._verify2(a, b);
      return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr(a) {
      return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr(a) {
      return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
      if (a.isZero()) return a.clone();
      var mod3 = this.m.andln(3);
      assert(mod3 % 2 === 1);

      // Fast case
      if (mod3 === 3) {
        var pow = this.m.add(new BN(1)).iushrn(2);
        return this.pow(a, pow);
      }

      // Tonelli-Shanks algorithm (Totally unoptimized and slow)
      //
      // Find Q and S, that Q * 2 ^ S = (P - 1)
      var q = this.m.subn(1);
      var s = 0;
      while (!q.isZero() && q.andln(1) === 0) {
        s++;
        q.iushrn(1);
      }
      assert(!q.isZero());
      var one = new BN(1).toRed(this);
      var nOne = one.redNeg();

      // Find quadratic non-residue
      // NOTE: Max is such because of generalized Riemann hypothesis.
      var lpow = this.m.subn(1).iushrn(1);
      var z = this.m.bitLength();
      z = new BN(2 * z * z).toRed(this);
      while (this.pow(z, lpow).cmp(nOne) !== 0) {
        z.redIAdd(nOne);
      }
      var c = this.pow(z, q);
      var r = this.pow(a, q.addn(1).iushrn(1));
      var t = this.pow(a, q);
      var m = s;
      while (t.cmp(one) !== 0) {
        var tmp = t;
        for (var i = 0; tmp.cmp(one) !== 0; i++) {
          tmp = tmp.redSqr();
        }
        assert(i < m);
        var b = this.pow(c, new BN(1).iushln(m - i - 1));
        r = r.redMul(b);
        c = b.redSqr();
        t = t.redMul(c);
        m = i;
      }
      return r;
    };
    Red.prototype.invm = function invm(a) {
      var inv = a._invmp(this.m);
      if (inv.negative !== 0) {
        inv.negative = 0;
        return this.imod(inv).redNeg();
      } else {
        return this.imod(inv);
      }
    };
    Red.prototype.pow = function pow(a, num) {
      if (num.isZero()) return new BN(1).toRed(this);
      if (num.cmpn(1) === 0) return a.clone();
      var windowSize = 4;
      var wnd = new Array(1 << windowSize);
      wnd[0] = new BN(1).toRed(this);
      wnd[1] = a;
      for (var i = 2; i < wnd.length; i++) {
        wnd[i] = this.mul(wnd[i - 1], a);
      }
      var res = wnd[0];
      var current = 0;
      var currentLen = 0;
      var start = num.bitLength() % 26;
      if (start === 0) {
        start = 26;
      }
      for (i = num.length - 1; i >= 0; i--) {
        var word = num.words[i];
        for (var j = start - 1; j >= 0; j--) {
          var bit = word >> j & 1;
          if (res !== wnd[0]) {
            res = this.sqr(res);
          }
          if (bit === 0 && current === 0) {
            currentLen = 0;
            continue;
          }
          current <<= 1;
          current |= bit;
          currentLen++;
          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
          res = this.mul(res, wnd[current]);
          currentLen = 0;
          current = 0;
        }
        start = 26;
      }
      return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
      var r = num.umod(this.m);
      return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
      var res = num.clone();
      res.red = null;
      return res;
    };

    //
    // Montgomery method engine
    //

    BN.mont = function mont(num) {
      return new Mont(num);
    };
    function Mont(m) {
      Red.call(this, m);
      this.shift = this.m.bitLength();
      if (this.shift % 26 !== 0) {
        this.shift += 26 - this.shift % 26;
      }
      this.r = new BN(1).iushln(this.shift);
      this.r2 = this.imod(this.r.sqr());
      this.rinv = this.r._invmp(this.m);
      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
      this.minv = this.minv.umod(this.r);
      this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo(num) {
      return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom(num) {
      var r = this.imod(num.mul(this.rinv));
      r.red = null;
      return r;
    };
    Mont.prototype.imul = function imul(a, b) {
      if (a.isZero() || b.isZero()) {
        a.words[0] = 0;
        a.length = 1;
        return a;
      }
      var t = a.imul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.mul = function mul(a, b) {
      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
      var t = a.mul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.invm = function invm(a) {
      // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
      var res = this.imod(a._invmp(this.m).mul(this.r2));
      return res._forceRed(this);
    };
  })('object' === 'undefined' || module, commonjsGlobal$1);
})(bn$a);
var bnExports$2 = bn$a.exports;
var _BN = /*@__PURE__*/getDefaultExportFromCjs$1(bnExports$2);

var version$9 = "bignumber/5.7.0";

"use strict";
var BN$h = _BN.BN;
var logger$9 = new Logger(version$9);
var _constructorGuard$1 = {};
var MAX_SAFE = 0x1fffffffffffff;
function isBigNumberish(value) {
  return value != null && (BigNumber.isBigNumber(value) || typeof value === "number" && value % 1 === 0 || typeof value === "string" && !!value.match(/^-?[0-9]+$/) || isHexString(value) || typeof value === "bigint" || isBytes(value));
}
// Only warn about passing 10 into radix once
var _warnedToStringRadix = false;
var BigNumber = /*#__PURE__*/function () {
  function BigNumber(constructorGuard, hex) {
    _classCallCheck(this, BigNumber);
    if (constructorGuard !== _constructorGuard$1) {
      logger$9.throwError("cannot call constructor directly; use BigNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new (BigNumber)"
      });
    }
    this._hex = hex;
    this._isBigNumber = true;
    Object.freeze(this);
  }
  return _createClass(BigNumber, [{
    key: "fromTwos",
    value: function fromTwos(value) {
      return toBigNumber(toBN(this).fromTwos(value));
    }
  }, {
    key: "toTwos",
    value: function toTwos(value) {
      return toBigNumber(toBN(this).toTwos(value));
    }
  }, {
    key: "abs",
    value: function abs() {
      if (this._hex[0] === "-") {
        return BigNumber.from(this._hex.substring(1));
      }
      return this;
    }
  }, {
    key: "add",
    value: function add(other) {
      return toBigNumber(toBN(this).add(toBN(other)));
    }
  }, {
    key: "sub",
    value: function sub(other) {
      return toBigNumber(toBN(this).sub(toBN(other)));
    }
  }, {
    key: "div",
    value: function div(other) {
      var o = BigNumber.from(other);
      if (o.isZero()) {
        throwFault$1("division-by-zero", "div");
      }
      return toBigNumber(toBN(this).div(toBN(other)));
    }
  }, {
    key: "mul",
    value: function mul(other) {
      return toBigNumber(toBN(this).mul(toBN(other)));
    }
  }, {
    key: "mod",
    value: function mod(other) {
      var value = toBN(other);
      if (value.isNeg()) {
        throwFault$1("division-by-zero", "mod");
      }
      return toBigNumber(toBN(this).umod(value));
    }
  }, {
    key: "pow",
    value: function pow(other) {
      var value = toBN(other);
      if (value.isNeg()) {
        throwFault$1("negative-power", "pow");
      }
      return toBigNumber(toBN(this).pow(value));
    }
  }, {
    key: "and",
    value: function and(other) {
      var value = toBN(other);
      if (this.isNegative() || value.isNeg()) {
        throwFault$1("unbound-bitwise-result", "and");
      }
      return toBigNumber(toBN(this).and(value));
    }
  }, {
    key: "or",
    value: function or(other) {
      var value = toBN(other);
      if (this.isNegative() || value.isNeg()) {
        throwFault$1("unbound-bitwise-result", "or");
      }
      return toBigNumber(toBN(this).or(value));
    }
  }, {
    key: "xor",
    value: function xor(other) {
      var value = toBN(other);
      if (this.isNegative() || value.isNeg()) {
        throwFault$1("unbound-bitwise-result", "xor");
      }
      return toBigNumber(toBN(this).xor(value));
    }
  }, {
    key: "mask",
    value: function mask(value) {
      if (this.isNegative() || value < 0) {
        throwFault$1("negative-width", "mask");
      }
      return toBigNumber(toBN(this).maskn(value));
    }
  }, {
    key: "shl",
    value: function shl(value) {
      if (this.isNegative() || value < 0) {
        throwFault$1("negative-width", "shl");
      }
      return toBigNumber(toBN(this).shln(value));
    }
  }, {
    key: "shr",
    value: function shr(value) {
      if (this.isNegative() || value < 0) {
        throwFault$1("negative-width", "shr");
      }
      return toBigNumber(toBN(this).shrn(value));
    }
  }, {
    key: "eq",
    value: function eq(other) {
      return toBN(this).eq(toBN(other));
    }
  }, {
    key: "lt",
    value: function lt(other) {
      return toBN(this).lt(toBN(other));
    }
  }, {
    key: "lte",
    value: function lte(other) {
      return toBN(this).lte(toBN(other));
    }
  }, {
    key: "gt",
    value: function gt(other) {
      return toBN(this).gt(toBN(other));
    }
  }, {
    key: "gte",
    value: function gte(other) {
      return toBN(this).gte(toBN(other));
    }
  }, {
    key: "isNegative",
    value: function isNegative() {
      return this._hex[0] === "-";
    }
  }, {
    key: "isZero",
    value: function isZero() {
      return toBN(this).isZero();
    }
  }, {
    key: "toNumber",
    value: function toNumber() {
      try {
        return toBN(this).toNumber();
      } catch (error) {
        throwFault$1("overflow", "toNumber", this.toString());
      }
      return null;
    }
  }, {
    key: "toBigInt",
    value: function toBigInt() {
      try {
        return BigInt(this.toString());
      } catch (e) {}
      return logger$9.throwError("this platform does not support BigInt", Logger.errors.UNSUPPORTED_OPERATION, {
        value: this.toString()
      });
    }
  }, {
    key: "toString",
    value: function toString() {
      // Lots of people expect this, which we do not support, so check (See: #889)
      if (arguments.length > 0) {
        if (arguments[0] === 10) {
          if (!_warnedToStringRadix) {
            _warnedToStringRadix = true;
            logger$9.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
          }
        } else if (arguments[0] === 16) {
          logger$9.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Logger.errors.UNEXPECTED_ARGUMENT, {});
        } else {
          logger$9.throwError("BigNumber.toString does not accept parameters", Logger.errors.UNEXPECTED_ARGUMENT, {});
        }
      }
      return toBN(this).toString(10);
    }
  }, {
    key: "toHexString",
    value: function toHexString() {
      return this._hex;
    }
  }, {
    key: "toJSON",
    value: function toJSON(key) {
      return {
        type: "BigNumber",
        hex: this.toHexString()
      };
    }
  }], [{
    key: "from",
    value: function from(value) {
      if (value instanceof BigNumber) {
        return value;
      }
      if (typeof value === "string") {
        if (value.match(/^-?0x[0-9a-f]+$/i)) {
          return new BigNumber(_constructorGuard$1, toHex$1(value));
        }
        if (value.match(/^-?[0-9]+$/)) {
          return new BigNumber(_constructorGuard$1, toHex$1(new BN$h(value)));
        }
        return logger$9.throwArgumentError("invalid BigNumber string", "value", value);
      }
      if (typeof value === "number") {
        if (value % 1) {
          throwFault$1("underflow", "BigNumber.from", value);
        }
        if (value >= MAX_SAFE || value <= -MAX_SAFE) {
          throwFault$1("overflow", "BigNumber.from", value);
        }
        return BigNumber.from(String(value));
      }
      var anyValue = value;
      if (typeof anyValue === "bigint") {
        return BigNumber.from(anyValue.toString());
      }
      if (isBytes(anyValue)) {
        return BigNumber.from(hexlify(anyValue));
      }
      if (anyValue) {
        // Hexable interface (takes priority)
        if (anyValue.toHexString) {
          var hex = anyValue.toHexString();
          if (typeof hex === "string") {
            return BigNumber.from(hex);
          }
        } else {
          // For now, handle legacy JSON-ified values (goes away in v6)
          var _hex = anyValue._hex;
          // New-form JSON
          if (_hex == null && anyValue.type === "BigNumber") {
            _hex = anyValue.hex;
          }
          if (typeof _hex === "string") {
            if (isHexString(_hex) || _hex[0] === "-" && isHexString(_hex.substring(1))) {
              return BigNumber.from(_hex);
            }
          }
        }
      }
      return logger$9.throwArgumentError("invalid BigNumber value", "value", value);
    }
  }, {
    key: "isBigNumber",
    value: function isBigNumber(value) {
      return !!(value && value._isBigNumber);
    }
  }]);
}();
// Normalize the hex string
function toHex$1(value) {
  // For BN, call on the hex string
  if (typeof value !== "string") {
    return toHex$1(value.toString(16));
  }
  // If negative, prepend the negative sign to the normalized positive value
  if (value[0] === "-") {
    // Strip off the negative sign
    value = value.substring(1);
    // Cannot have multiple negative signs (e.g. "--0x04")
    if (value[0] === "-") {
      logger$9.throwArgumentError("invalid hex", "value", value);
    }
    // Call toHex on the positive component
    value = toHex$1(value);
    // Do not allow "-0x00"
    if (value === "0x00") {
      return value;
    }
    // Negate the value
    return "-" + value;
  }
  // Add a "0x" prefix if missing
  if (value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }
  // Normalize zero
  if (value === "0x") {
    return "0x00";
  }
  // Make the string even length
  if (value.length % 2) {
    value = "0x0" + value.substring(2);
  }
  // Trim to smallest even-length string
  while (value.length > 4 && value.substring(0, 4) === "0x00") {
    value = "0x" + value.substring(4);
  }
  return value;
}
function toBigNumber(value) {
  return BigNumber.from(toHex$1(value));
}
function toBN(value) {
  var hex = BigNumber.from(value).toHexString();
  if (hex[0] === "-") {
    return new BN$h("-" + hex.substring(3), 16);
  }
  return new BN$h(hex.substring(2), 16);
}
function throwFault$1(fault, operation, value) {
  var params = {
    fault: fault,
    operation: operation
  };
  if (value != null) {
    params.value = value;
  }
  return logger$9.throwError(fault, Logger.errors.NUMERIC_FAULT, params);
}
// value should have no prefix
function _base36To16(value) {
  return new BN$h(value, 36).toString(16);
}
// value should have no prefix
function _base16To36(value) {
  return new BN$h(value, 16).toString(36);
}

"use strict";
var logger$8 = new Logger(version$9);
var _constructorGuard = {};
var Zero$2 = BigNumber.from(0);
var NegativeOne$2 = BigNumber.from(-1);
function throwFault(message, fault, operation, value) {
  var params = {
    fault: fault,
    operation: operation
  };
  if (value !== undefined) {
    params.value = value;
  }
  return logger$8.throwError(message, Logger.errors.NUMERIC_FAULT, params);
}
// Constant to pull zeros from for multipliers
var zeros = "0";
while (zeros.length < 256) {
  zeros += zeros;
}
// Returns a string "1" followed by decimal "0"s
function getMultiplier(decimals) {
  if (typeof decimals !== "number") {
    try {
      decimals = BigNumber.from(decimals).toNumber();
    } catch (e) {}
  }
  if (typeof decimals === "number" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {
    return "1" + zeros.substring(0, decimals);
  }
  return logger$8.throwArgumentError("invalid decimal size", "decimals", decimals);
}
function formatFixed(value, decimals) {
  if (decimals == null) {
    decimals = 0;
  }
  var multiplier = getMultiplier(decimals);
  // Make sure wei is a big number (convert as necessary)
  value = BigNumber.from(value);
  var negative = value.lt(Zero$2);
  if (negative) {
    value = value.mul(NegativeOne$2);
  }
  var fraction = value.mod(multiplier).toString();
  while (fraction.length < multiplier.length - 1) {
    fraction = "0" + fraction;
  }
  // Strip training 0
  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  var whole = value.div(multiplier).toString();
  if (multiplier.length === 1) {
    value = whole;
  } else {
    value = whole + "." + fraction;
  }
  if (negative) {
    value = "-" + value;
  }
  return value;
}
function parseFixed(value, decimals) {
  if (decimals == null) {
    decimals = 0;
  }
  var multiplier = getMultiplier(decimals);
  if (typeof value !== "string" || !value.match(/^-?[0-9.]+$/)) {
    logger$8.throwArgumentError("invalid decimal value", "value", value);
  }
  // Is it negative?
  var negative = value.substring(0, 1) === "-";
  if (negative) {
    value = value.substring(1);
  }
  if (value === ".") {
    logger$8.throwArgumentError("missing value", "value", value);
  }
  // Split it into a whole and fractional part
  var comps = value.split(".");
  if (comps.length > 2) {
    logger$8.throwArgumentError("too many decimal points", "value", value);
  }
  var whole = comps[0],
    fraction = comps[1];
  if (!whole) {
    whole = "0";
  }
  if (!fraction) {
    fraction = "0";
  }
  // Trim trailing zeros
  while (fraction[fraction.length - 1] === "0") {
    fraction = fraction.substring(0, fraction.length - 1);
  }
  // Check the fraction doesn't exceed our decimals size
  if (fraction.length > multiplier.length - 1) {
    throwFault("fractional component exceeds decimals", "underflow", "parseFixed");
  }
  // If decimals is 0, we have an empty string for fraction
  if (fraction === "") {
    fraction = "0";
  }
  // Fully pad the string with zeros to get to wei
  while (fraction.length < multiplier.length - 1) {
    fraction += "0";
  }
  var wholeValue = BigNumber.from(whole);
  var fractionValue = BigNumber.from(fraction);
  var wei = wholeValue.mul(multiplier).add(fractionValue);
  if (negative) {
    wei = wei.mul(NegativeOne$2);
  }
  return wei;
}
var FixedFormat = /*#__PURE__*/function () {
  function FixedFormat(constructorGuard, signed, width, decimals) {
    _classCallCheck(this, FixedFormat);
    if (constructorGuard !== _constructorGuard) {
      logger$8.throwError("cannot use FixedFormat constructor; use FixedFormat.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new FixedFormat"
      });
    }
    this.signed = signed;
    this.width = width;
    this.decimals = decimals;
    this.name = (signed ? "" : "u") + "fixed" + String(width) + "x" + String(decimals);
    this._multiplier = getMultiplier(decimals);
    Object.freeze(this);
  }
  return _createClass(FixedFormat, null, [{
    key: "from",
    value: function from(value) {
      if (value instanceof FixedFormat) {
        return value;
      }
      if (typeof value === "number") {
        value = "fixed128x".concat(value);
      }
      var signed = true;
      var width = 128;
      var decimals = 18;
      if (typeof value === "string") {
        if (value === "fixed") {
          // defaults...
        } else if (value === "ufixed") {
          signed = false;
        } else {
          var match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
          if (!match) {
            logger$8.throwArgumentError("invalid fixed format", "format", value);
          }
          signed = match[1] !== "u";
          width = parseInt(match[2]);
          decimals = parseInt(match[3]);
        }
      } else if (value) {
        var check = function check(key, type, defaultValue) {
          if (value[key] == null) {
            return defaultValue;
          }
          if (_typeof(value[key]) !== type) {
            logger$8.throwArgumentError("invalid fixed format (" + key + " not " + type + ")", "format." + key, value[key]);
          }
          return value[key];
        };
        signed = check("signed", "boolean", signed);
        width = check("width", "number", width);
        decimals = check("decimals", "number", decimals);
      }
      if (width % 8) {
        logger$8.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width);
      }
      if (decimals > 80) {
        logger$8.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals);
      }
      return new FixedFormat(_constructorGuard, signed, width, decimals);
    }
  }]);
}();
var FixedNumber = /*#__PURE__*/function () {
  function FixedNumber(constructorGuard, hex, value, format) {
    _classCallCheck(this, FixedNumber);
    if (constructorGuard !== _constructorGuard) {
      logger$8.throwError("cannot use FixedNumber constructor; use FixedNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "new FixedFormat"
      });
    }
    this.format = format;
    this._hex = hex;
    this._value = value;
    this._isFixedNumber = true;
    Object.freeze(this);
  }
  return _createClass(FixedNumber, [{
    key: "_checkFormat",
    value: function _checkFormat(other) {
      if (this.format.name !== other.format.name) {
        logger$8.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
      }
    }
  }, {
    key: "addUnsafe",
    value: function addUnsafe(other) {
      this._checkFormat(other);
      var a = parseFixed(this._value, this.format.decimals);
      var b = parseFixed(other._value, other.format.decimals);
      return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);
    }
  }, {
    key: "subUnsafe",
    value: function subUnsafe(other) {
      this._checkFormat(other);
      var a = parseFixed(this._value, this.format.decimals);
      var b = parseFixed(other._value, other.format.decimals);
      return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);
    }
  }, {
    key: "mulUnsafe",
    value: function mulUnsafe(other) {
      this._checkFormat(other);
      var a = parseFixed(this._value, this.format.decimals);
      var b = parseFixed(other._value, other.format.decimals);
      return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);
    }
  }, {
    key: "divUnsafe",
    value: function divUnsafe(other) {
      this._checkFormat(other);
      var a = parseFixed(this._value, this.format.decimals);
      var b = parseFixed(other._value, other.format.decimals);
      return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);
    }
  }, {
    key: "floor",
    value: function floor() {
      var comps = this.toString().split(".");
      if (comps.length === 1) {
        comps.push("0");
      }
      var result = FixedNumber.from(comps[0], this.format);
      var hasFraction = !comps[1].match(/^(0*)$/);
      if (this.isNegative() && hasFraction) {
        result = result.subUnsafe(ONE.toFormat(result.format));
      }
      return result;
    }
  }, {
    key: "ceiling",
    value: function ceiling() {
      var comps = this.toString().split(".");
      if (comps.length === 1) {
        comps.push("0");
      }
      var result = FixedNumber.from(comps[0], this.format);
      var hasFraction = !comps[1].match(/^(0*)$/);
      if (!this.isNegative() && hasFraction) {
        result = result.addUnsafe(ONE.toFormat(result.format));
      }
      return result;
    }
    // @TODO: Support other rounding algorithms
  }, {
    key: "round",
    value: function round(decimals) {
      if (decimals == null) {
        decimals = 0;
      }
      // If we are already in range, we're done
      var comps = this.toString().split(".");
      if (comps.length === 1) {
        comps.push("0");
      }
      if (decimals < 0 || decimals > 80 || decimals % 1) {
        logger$8.throwArgumentError("invalid decimal count", "decimals", decimals);
      }
      if (comps[1].length <= decimals) {
        return this;
      }
      var factor = FixedNumber.from("1" + zeros.substring(0, decimals), this.format);
      var bump = BUMP.toFormat(this.format);
      return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);
    }
  }, {
    key: "isZero",
    value: function isZero() {
      return this._value === "0.0" || this._value === "0";
    }
  }, {
    key: "isNegative",
    value: function isNegative() {
      return this._value[0] === "-";
    }
  }, {
    key: "toString",
    value: function toString() {
      return this._value;
    }
  }, {
    key: "toHexString",
    value: function toHexString(width) {
      if (width == null) {
        return this._hex;
      }
      if (width % 8) {
        logger$8.throwArgumentError("invalid byte width", "width", width);
      }
      var hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();
      return hexZeroPad(hex, width / 8);
    }
  }, {
    key: "toUnsafeFloat",
    value: function toUnsafeFloat() {
      return parseFloat(this.toString());
    }
  }, {
    key: "toFormat",
    value: function toFormat(format) {
      return FixedNumber.fromString(this._value, format);
    }
  }], [{
    key: "fromValue",
    value: function fromValue(value, decimals, format) {
      // If decimals looks more like a format, and there is no format, shift the parameters
      if (format == null && decimals != null && !isBigNumberish(decimals)) {
        format = decimals;
        decimals = null;
      }
      if (decimals == null) {
        decimals = 0;
      }
      if (format == null) {
        format = "fixed";
      }
      return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));
    }
  }, {
    key: "fromString",
    value: function fromString(value, format) {
      if (format == null) {
        format = "fixed";
      }
      var fixedFormat = FixedFormat.from(format);
      var numeric = parseFixed(value, fixedFormat.decimals);
      if (!fixedFormat.signed && numeric.lt(Zero$2)) {
        throwFault("unsigned value cannot be negative", "overflow", "value", value);
      }
      var hex = null;
      if (fixedFormat.signed) {
        hex = numeric.toTwos(fixedFormat.width).toHexString();
      } else {
        hex = numeric.toHexString();
        hex = hexZeroPad(hex, fixedFormat.width / 8);
      }
      var decimal = formatFixed(numeric, fixedFormat.decimals);
      return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);
    }
  }, {
    key: "fromBytes",
    value: function fromBytes(value, format) {
      if (format == null) {
        format = "fixed";
      }
      var fixedFormat = FixedFormat.from(format);
      if (arrayify(value).length > fixedFormat.width / 8) {
        throw new Error("overflow");
      }
      var numeric = BigNumber.from(value);
      if (fixedFormat.signed) {
        numeric = numeric.fromTwos(fixedFormat.width);
      }
      var hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();
      var decimal = formatFixed(numeric, fixedFormat.decimals);
      return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);
    }
  }, {
    key: "from",
    value: function from(value, format) {
      if (typeof value === "string") {
        return FixedNumber.fromString(value, format);
      }
      if (isBytes(value)) {
        return FixedNumber.fromBytes(value, format);
      }
      try {
        return FixedNumber.fromValue(value, 0, format);
      } catch (error) {
        // Allow NUMERIC_FAULT to bubble up
        if (error.code !== Logger.errors.INVALID_ARGUMENT) {
          throw error;
        }
      }
      return logger$8.throwArgumentError("invalid FixedNumber value", "value", value);
    }
  }, {
    key: "isFixedNumber",
    value: function isFixedNumber(value) {
      return !!(value && value._isFixedNumber);
    }
  }]);
}();
var ONE = FixedNumber.from(1);
var BUMP = FixedNumber.from("0.5");

var NegativeOne$1 = /*#__PURE__*/BigNumber.from(-1);
var Zero$1 = /*#__PURE__*/BigNumber.from(0);
var One$1 = /*#__PURE__*/BigNumber.from(1);
var Two = /*#__PURE__*/BigNumber.from(2);
var WeiPerEther = /*#__PURE__*/BigNumber.from("1000000000000000000");
var MaxUint256$1 = /*#__PURE__*/BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
var MinInt256 = /*#__PURE__*/BigNumber.from("-0x8000000000000000000000000000000000000000000000000000000000000000");
var MaxInt256 = /*#__PURE__*/BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

var HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000";

// NFKC (composed)             // (decomposed)
var EtherSymbol = "\u039E"; // "\uD835\uDF63";

"use strict";

var version$8 = "strings/5.7.0";

"use strict";
var logger$7 = new Logger(version$8);
///////////////////////////////
var UnicodeNormalizationForm;
(function (UnicodeNormalizationForm) {
  UnicodeNormalizationForm["current"] = "";
  UnicodeNormalizationForm["NFC"] = "NFC";
  UnicodeNormalizationForm["NFD"] = "NFD";
  UnicodeNormalizationForm["NFKC"] = "NFKC";
  UnicodeNormalizationForm["NFKD"] = "NFKD";
})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));
;
var Utf8ErrorReason;
(function (Utf8ErrorReason) {
  // A continuation byte was present where there was nothing to continue
  // - offset = the index the codepoint began in
  Utf8ErrorReason["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
  // An invalid (non-continuation) byte to start a UTF-8 codepoint was found
  // - offset = the index the codepoint began in
  Utf8ErrorReason["BAD_PREFIX"] = "bad codepoint prefix";
  // The string is too short to process the expected codepoint
  // - offset = the index the codepoint began in
  Utf8ErrorReason["OVERRUN"] = "string overrun";
  // A missing continuation byte was expected but not found
  // - offset = the index the continuation byte was expected at
  Utf8ErrorReason["MISSING_CONTINUE"] = "missing continuation byte";
  // The computed code point is outside the range for UTF-8
  // - offset       = start of this codepoint
  // - badCodepoint = the computed codepoint; outside the UTF-8 range
  Utf8ErrorReason["OUT_OF_RANGE"] = "out of UTF-8 range";
  // UTF-8 strings may not contain UTF-16 surrogate pairs
  // - offset       = start of this codepoint
  // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range
  Utf8ErrorReason["UTF16_SURROGATE"] = "UTF-16 surrogate";
  // The string is an overlong representation
  // - offset       = start of this codepoint
  // - badCodepoint = the computed codepoint; already bounds checked
  Utf8ErrorReason["OVERLONG"] = "overlong representation";
})(Utf8ErrorReason || (Utf8ErrorReason = {}));
;
function errorFunc(reason, offset, bytes, output, badCodepoint) {
  return logger$7.throwArgumentError("invalid codepoint at offset ".concat(offset, "; ").concat(reason), "bytes", bytes);
}
function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
  // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes
  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
    var i = 0;
    for (var o = offset + 1; o < bytes.length; o++) {
      if (bytes[o] >> 6 !== 0x02) {
        break;
      }
      i++;
    }
    return i;
  }
  // This byte runs us past the end of the string, so just jump to the end
  // (but the first byte was read already read and therefore skipped)
  if (reason === Utf8ErrorReason.OVERRUN) {
    return bytes.length - offset - 1;
  }
  // Nothing to skip
  return 0;
}
function replaceFunc(reason, offset, bytes, output, badCodepoint) {
  // Overlong representations are otherwise "valid" code points; just non-deistingtished
  if (reason === Utf8ErrorReason.OVERLONG) {
    output.push(badCodepoint);
    return 0;
  }
  // Put the replacement character into the output
  output.push(0xfffd);
  // Otherwise, process as if ignoring errors
  return ignoreFunc(reason, offset, bytes, output, badCodepoint);
}
// Common error handing strategies
var Utf8ErrorFuncs = Object.freeze({
  error: errorFunc,
  ignore: ignoreFunc,
  replace: replaceFunc
});
// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499
function getUtf8CodePoints(bytes, onError) {
  if (onError == null) {
    onError = Utf8ErrorFuncs.error;
  }
  bytes = arrayify(bytes);
  var result = [];
  var i = 0;
  // Invalid bytes are ignored
  while (i < bytes.length) {
    var c = bytes[i++];
    // 0xxx xxxx
    if (c >> 7 === 0) {
      result.push(c);
      continue;
    }
    // Multibyte; how many bytes left for this character?
    var extraLength = null;
    var overlongMask = null;
    // 110x xxxx 10xx xxxx
    if ((c & 0xe0) === 0xc0) {
      extraLength = 1;
      overlongMask = 0x7f;
      // 1110 xxxx 10xx xxxx 10xx xxxx
    } else if ((c & 0xf0) === 0xe0) {
      extraLength = 2;
      overlongMask = 0x7ff;
      // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx
    } else if ((c & 0xf8) === 0xf0) {
      extraLength = 3;
      overlongMask = 0xffff;
    } else {
      if ((c & 0xc0) === 0x80) {
        i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);
      } else {
        i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);
      }
      continue;
    }
    // Do we have enough bytes in our data?
    if (i - 1 + extraLength >= bytes.length) {
      i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);
      continue;
    }
    // Remove the length prefix from the char
    var res = c & (1 << 8 - extraLength - 1) - 1;
    for (var j = 0; j < extraLength; j++) {
      var nextChar = bytes[i];
      // Invalid continuation byte
      if ((nextChar & 0xc0) != 0x80) {
        i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);
        res = null;
        break;
      }
      ;
      res = res << 6 | nextChar & 0x3f;
      i++;
    }
    // See above loop for invalid continuation byte
    if (res === null) {
      continue;
    }
    // Maximum code point
    if (res > 0x10ffff) {
      i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
      continue;
    }
    // Reserved for UTF-16 surrogate halves
    if (res >= 0xd800 && res <= 0xdfff) {
      i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
      continue;
    }
    // Check for overlong sequences (more bytes than needed)
    if (res <= overlongMask) {
      i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);
      continue;
    }
    result.push(res);
  }
  return result;
}
// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array
function toUtf8Bytes(str) {
  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UnicodeNormalizationForm.current;
  if (form != UnicodeNormalizationForm.current) {
    logger$7.checkNormalize();
    str = str.normalize(form);
  }
  var result = [];
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    if (c < 0x80) {
      result.push(c);
    } else if (c < 0x800) {
      result.push(c >> 6 | 0xc0);
      result.push(c & 0x3f | 0x80);
    } else if ((c & 0xfc00) == 0xd800) {
      i++;
      var c2 = str.charCodeAt(i);
      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {
        throw new Error("invalid utf-8 string");
      }
      // Surrogate Pair
      var pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);
      result.push(pair >> 18 | 0xf0);
      result.push(pair >> 12 & 0x3f | 0x80);
      result.push(pair >> 6 & 0x3f | 0x80);
      result.push(pair & 0x3f | 0x80);
    } else {
      result.push(c >> 12 | 0xe0);
      result.push(c >> 6 & 0x3f | 0x80);
      result.push(c & 0x3f | 0x80);
    }
  }
  return arrayify(result);
}
;
function escapeChar(value) {
  var hex = "0000" + value.toString(16);
  return "\\u" + hex.substring(hex.length - 4);
}
function _toEscapedUtf8String(bytes, onError) {
  return '"' + getUtf8CodePoints(bytes, onError).map(function (codePoint) {
    if (codePoint < 256) {
      switch (codePoint) {
        case 8:
          return "\\b";
        case 9:
          return "\\t";
        case 10:
          return "\\n";
        case 13:
          return "\\r";
        case 34:
          return "\\\"";
        case 92:
          return "\\\\";
      }
      if (codePoint >= 32 && codePoint < 127) {
        return String.fromCharCode(codePoint);
      }
    }
    if (codePoint <= 0xffff) {
      return escapeChar(codePoint);
    }
    codePoint -= 0x10000;
    return escapeChar((codePoint >> 10 & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);
  }).join("") + '"';
}
function _toUtf8String(codePoints) {
  return codePoints.map(function (codePoint) {
    if (codePoint <= 0xffff) {
      return String.fromCharCode(codePoint);
    }
    codePoint -= 0x10000;
    return String.fromCharCode((codePoint >> 10 & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);
  }).join("");
}
function toUtf8String(bytes, onError) {
  return _toUtf8String(getUtf8CodePoints(bytes, onError));
}
function toUtf8CodePoints(str) {
  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UnicodeNormalizationForm.current;
  return getUtf8CodePoints(toUtf8Bytes(str, form));
}

"use strict";
function formatBytes32String(text) {
  // Get the bytes
  var bytes = toUtf8Bytes(text);
  // Check we have room for null-termination
  if (bytes.length > 31) {
    throw new Error("bytes32 string must be less than 32 bytes");
  }
  // Zero-pad (implicitly null-terminates)
  return hexlify(concat$1([bytes, HashZero]).slice(0, 32));
}
function parseBytes32String(bytes) {
  var data = arrayify(bytes);
  // Must be 32 bytes with a null-termination
  if (data.length !== 32) {
    throw new Error("invalid bytes32 - not 32 bytes long");
  }
  if (data[31] !== 0) {
    throw new Error("invalid bytes32 string - no null terminator");
  }
  // Find the null termination
  var length = 31;
  while (data[length - 1] === 0) {
    length--;
  }
  // Determine the string value
  return toUtf8String(data.slice(0, length));
}

"use strict";
function bytes2(data) {
  if (data.length % 4 !== 0) {
    throw new Error("bad data");
  }
  var result = [];
  for (var i = 0; i < data.length; i += 4) {
    result.push(parseInt(data.substring(i, i + 4), 16));
  }
  return result;
}
function createTable(data, func) {
  if (!func) {
    func = function func(value) {
      return [parseInt(value, 16)];
    };
  }
  var lo = 0;
  var result = {};
  data.split(",").forEach(function (pair) {
    var comps = pair.split(":");
    lo += parseInt(comps[0], 16);
    result[lo] = func(comps[1]);
  });
  return result;
}
function createRangeTable(data) {
  var hi = 0;
  return data.split(",").map(function (v) {
    var comps = v.split("-");
    if (comps.length === 1) {
      comps[1] = "0";
    } else if (comps[1] === "") {
      comps[1] = "1";
    }
    var lo = hi + parseInt(comps[0], 16);
    hi = parseInt(comps[1], 16);
    return {
      l: lo,
      h: hi
    };
  });
}
function matchMap(value, ranges) {
  var lo = 0;
  for (var i = 0; i < ranges.length; i++) {
    var range = ranges[i];
    lo += range.l;
    if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {
      if (range.e && range.e.indexOf(value - lo) !== -1) {
        continue;
      }
      return range;
    }
  }
  return null;
}
var Table_A_1_ranges = createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d");
// @TODO: Make this relative...
var Table_B_1_flags = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(function (v) {
  return parseInt(v, 16);
});
var Table_B_2_ranges = [{
  h: 25,
  s: 32,
  l: 65
}, {
  h: 30,
  s: 32,
  e: [23],
  l: 127
}, {
  h: 54,
  s: 1,
  e: [48],
  l: 64,
  d: 2
}, {
  h: 14,
  s: 1,
  l: 57,
  d: 2
}, {
  h: 44,
  s: 1,
  l: 17,
  d: 2
}, {
  h: 10,
  s: 1,
  e: [2, 6, 8],
  l: 61,
  d: 2
}, {
  h: 16,
  s: 1,
  l: 68,
  d: 2
}, {
  h: 84,
  s: 1,
  e: [18, 24, 66],
  l: 19,
  d: 2
}, {
  h: 26,
  s: 32,
  e: [17],
  l: 435
}, {
  h: 22,
  s: 1,
  l: 71,
  d: 2
}, {
  h: 15,
  s: 80,
  l: 40
}, {
  h: 31,
  s: 32,
  l: 16
}, {
  h: 32,
  s: 1,
  l: 80,
  d: 2
}, {
  h: 52,
  s: 1,
  l: 42,
  d: 2
}, {
  h: 12,
  s: 1,
  l: 55,
  d: 2
}, {
  h: 40,
  s: 1,
  e: [38],
  l: 15,
  d: 2
}, {
  h: 14,
  s: 1,
  l: 48,
  d: 2
}, {
  h: 37,
  s: 48,
  l: 49
}, {
  h: 148,
  s: 1,
  l: 6351,
  d: 2
}, {
  h: 88,
  s: 1,
  l: 160,
  d: 2
}, {
  h: 15,
  s: 16,
  l: 704
}, {
  h: 25,
  s: 26,
  l: 854
}, {
  h: 25,
  s: 32,
  l: 55915
}, {
  h: 37,
  s: 40,
  l: 1247
}, {
  h: 25,
  s: -119711,
  l: 53248
}, {
  h: 25,
  s: -119763,
  l: 52
}, {
  h: 25,
  s: -119815,
  l: 52
}, {
  h: 25,
  s: -119867,
  e: [1, 4, 5, 7, 8, 11, 12, 17],
  l: 52
}, {
  h: 25,
  s: -119919,
  l: 52
}, {
  h: 24,
  s: -119971,
  e: [2, 7, 8, 17],
  l: 52
}, {
  h: 24,
  s: -120023,
  e: [2, 7, 13, 15, 16, 17],
  l: 52
}, {
  h: 25,
  s: -120075,
  l: 52
}, {
  h: 25,
  s: -120127,
  l: 52
}, {
  h: 25,
  s: -120179,
  l: 52
}, {
  h: 25,
  s: -120231,
  l: 52
}, {
  h: 25,
  s: -120283,
  l: 52
}, {
  h: 25,
  s: -120335,
  l: 52
}, {
  h: 24,
  s: -119543,
  e: [17],
  l: 56
}, {
  h: 24,
  s: -119601,
  e: [17],
  l: 58
}, {
  h: 24,
  s: -119659,
  e: [17],
  l: 58
}, {
  h: 24,
  s: -119717,
  e: [17],
  l: 58
}, {
  h: 24,
  s: -119775,
  e: [17],
  l: 58
}];
var Table_B_2_lut_abs = createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3");
var Table_B_2_lut_rel = createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7");
var Table_B_2_complex = createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", bytes2);
var Table_C_ranges = createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
function flatten(values) {
  return values.reduce(function (accum, value) {
    value.forEach(function (value) {
      accum.push(value);
    });
    return accum;
  }, []);
}
function _nameprepTableA1(codepoint) {
  return !!matchMap(codepoint, Table_A_1_ranges);
}
function _nameprepTableB2(codepoint) {
  var range = matchMap(codepoint, Table_B_2_ranges);
  if (range) {
    return [codepoint + range.s];
  }
  var codes = Table_B_2_lut_abs[codepoint];
  if (codes) {
    return codes;
  }
  var shift = Table_B_2_lut_rel[codepoint];
  if (shift) {
    return [codepoint + shift[0]];
  }
  var complex = Table_B_2_complex[codepoint];
  if (complex) {
    return complex;
  }
  return null;
}
function _nameprepTableC(codepoint) {
  return !!matchMap(codepoint, Table_C_ranges);
}
function nameprep(value) {
  // This allows platforms with incomplete normalize to bypass
  // it for very basic names which the built-in toLowerCase
  // will certainly handle correctly
  if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {
    return value.toLowerCase();
  }
  // Get the code points (keeping the current normalization)
  var codes = toUtf8CodePoints(value);
  codes = flatten(codes.map(function (code) {
    // Substitute Table B.1 (Maps to Nothing)
    if (Table_B_1_flags.indexOf(code) >= 0) {
      return [];
    }
    if (code >= 0xfe00 && code <= 0xfe0f) {
      return [];
    }
    // Substitute Table B.2 (Case Folding)
    var codesTableB2 = _nameprepTableB2(code);
    if (codesTableB2) {
      return codesTableB2;
    }
    // No Substitution
    return [code];
  }));
  // Normalize using form KC
  codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);
  // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9
  codes.forEach(function (code) {
    if (_nameprepTableC(code)) {
      throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
    }
  });
  // Prohibit Unassigned Code Points (Table A.1)
  codes.forEach(function (code) {
    if (_nameprepTableA1(code)) {
      throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
    }
  });
  // IDNA extras
  var name = _toUtf8String(codes);
  // IDNA: 4.2.3.1
  if (name.substring(0, 1) === "-" || name.substring(2, 4) === "--" || name.substring(name.length - 1) === "-") {
    throw new Error("invalid hyphen");
  }
  return name;
}

"use strict";

function id(text) {
  return keccak256(toUtf8Bytes(text));
}

var version$7 = "hash/5.7.0";

"use strict";
function decode$1(textData) {
  textData = atob(textData);
  var data = [];
  for (var i = 0; i < textData.length; i++) {
    data.push(textData.charCodeAt(i));
  }
  return arrayify(data);
}
function encode$1(data) {
  data = arrayify(data);
  var textData = "";
  for (var i = 0; i < data.length; i++) {
    textData += String.fromCharCode(data[i]);
  }
  return btoa(textData);
}

"use strict";

/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */
// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js
function flat(array, depth) {
  if (depth == null) {
    depth = 1;
  }
  var result = [];
  var forEach = result.forEach;
  var _flatDeep = function flatDeep(arr, depth) {
    forEach.call(arr, function (val) {
      if (depth > 0 && Array.isArray(val)) {
        _flatDeep(val, depth - 1);
      } else {
        result.push(val);
      }
    });
  };
  _flatDeep(array, depth);
  return result;
}
function fromEntries(array) {
  var result = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    result[value[0]] = value[1];
  }
  return result;
}
function decode_arithmetic(bytes) {
  var pos = 0;
  function u16() {
    return bytes[pos++] << 8 | bytes[pos++];
  }
  // decode the frequency table
  var symbol_count = u16();
  var total = 1;
  var acc = [0, 1]; // first symbol has frequency 1
  for (var i = 1; i < symbol_count; i++) {
    acc.push(total += u16());
  }
  // skip the sized-payload that the last 3 symbols index into
  var skip = u16();
  var pos_payload = pos;
  pos += skip;
  var read_width = 0;
  var read_buffer = 0;
  function read_bit() {
    if (read_width == 0) {
      // this will read beyond end of buffer
      // but (undefined|0) => zero pad
      read_buffer = read_buffer << 8 | bytes[pos++];
      read_width = 8;
    }
    return read_buffer >> --read_width & 1;
  }
  var N = 31;
  var FULL = Math.pow(2, N);
  var HALF = FULL >>> 1;
  var QRTR = HALF >> 1;
  var MASK = FULL - 1;
  // fill register
  var register = 0;
  for (var _i = 0; _i < N; _i++) register = register << 1 | read_bit();
  var symbols = [];
  var low = 0;
  var range = FULL; // treat like a float
  while (true) {
    var value = Math.floor(((register - low + 1) * total - 1) / range);
    var start = 0;
    var end = symbol_count;
    while (end - start > 1) {
      // binary search
      var mid = start + end >>> 1;
      if (value < acc[mid]) {
        end = mid;
      } else {
        start = mid;
      }
    }
    if (start == 0) break; // first symbol is end mark
    symbols.push(start);
    var a = low + Math.floor(range * acc[start] / total);
    var b = low + Math.floor(range * acc[start + 1] / total) - 1;
    while (((a ^ b) & HALF) == 0) {
      register = register << 1 & MASK | read_bit();
      a = a << 1 & MASK;
      b = b << 1 & MASK | 1;
    }
    while (a & ~b & QRTR) {
      register = register & HALF | register << 1 & MASK >>> 1 | read_bit();
      a = a << 1 ^ HALF;
      b = (b ^ HALF) << 1 | HALF | 1;
    }
    low = a;
    range = 1 + b - a;
  }
  var offset = symbol_count - 4;
  return symbols.map(function (x) {
    switch (x - offset) {
      case 3:
        return offset + 0x10100 + (bytes[pos_payload++] << 16 | bytes[pos_payload++] << 8 | bytes[pos_payload++]);
      case 2:
        return offset + 0x100 + (bytes[pos_payload++] << 8 | bytes[pos_payload++]);
      case 1:
        return offset + bytes[pos_payload++];
      default:
        return x - 1;
    }
  });
}
// returns an iterator which returns the next symbol
function read_payload(v) {
  var pos = 0;
  return function () {
    return v[pos++];
  };
}
function read_compressed_payload(bytes) {
  return read_payload(decode_arithmetic(bytes));
}
// eg. [0,1,2,3...] => [0,-1,1,-2,...]
function signed(i) {
  return i & 1 ? ~i >> 1 : i >> 1;
}
function read_counts(n, next) {
  var v = Array(n);
  for (var i = 0; i < n; i++) v[i] = 1 + next();
  return v;
}
function read_ascending(n, next) {
  var v = Array(n);
  for (var i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();
  return v;
}
function read_deltas(n, next) {
  var v = Array(n);
  for (var i = 0, x = 0; i < n; i++) v[i] = x += signed(next());
  return v;
}
function read_member_array(next, lookup) {
  var v = read_ascending(next(), next);
  var n = next();
  var vX = read_ascending(n, next);
  var vN = read_counts(n, next);
  for (var i = 0; i < n; i++) {
    for (var j = 0; j < vN[i]; j++) {
      v.push(vX[i] + j);
    }
  }
  return lookup ? v.map(function (x) {
    return lookup[x];
  }) : v;
}
// returns array of 
// [x, ys] => single replacement rule
// [x, ys, n, dx, dx] => linear map
function read_mapped_map(next) {
  var ret = [];
  while (true) {
    var w = next();
    if (w == 0) break;
    ret.push(read_linear_table(w, next));
  }
  while (true) {
    var _w = next() - 1;
    if (_w < 0) break;
    ret.push(read_replacement_table(_w, next));
  }
  return fromEntries(flat(ret));
}
function read_zero_terminated_array(next) {
  var v = [];
  while (true) {
    var i = next();
    if (i == 0) break;
    v.push(i);
  }
  return v;
}
function read_transposed(n, w, next) {
  var m = Array(n).fill(undefined).map(function () {
    return [];
  });
  for (var i = 0; i < w; i++) {
    read_deltas(n, next).forEach(function (x, j) {
      return m[j].push(x);
    });
  }
  return m;
}
function read_linear_table(w, next) {
  var dx = 1 + next();
  var dy = next();
  var vN = read_zero_terminated_array(next);
  var m = read_transposed(vN.length, 1 + w, next);
  return flat(m.map(function (v, i) {
    var x = v[0],
      ys = v.slice(1);
    //let [x, ...ys] = v;
    //return Array(vN[i]).fill().map((_, j) => {
    return Array(vN[i]).fill(undefined).map(function (_, j) {
      var j_dy = j * dy;
      return [x + j * dx, ys.map(function (y) {
        return y + j_dy;
      })];
    });
  }));
}
function read_replacement_table(w, next) {
  var n = 1 + next();
  var m = read_transposed(n, 1 + w, next);
  return m.map(function (v) {
    return [v[0], v.slice(1)];
  });
}
function read_emoji_trie(next) {
  var sorted = read_member_array(next).sort(function (a, b) {
    return a - b;
  });
  return read();
  function read() {
    var branches = [];
    while (true) {
      var keys = read_member_array(next, sorted);
      if (keys.length == 0) break;
      branches.push({
        set: new Set(keys),
        node: read()
      });
    }
    branches.sort(function (a, b) {
      return b.set.size - a.set.size;
    }); // sort by likelihood
    var temp = next();
    var valid = temp % 3;
    temp = temp / 3 | 0;
    var fe0f = !!(temp & 1);
    temp >>= 1;
    var save = temp == 1;
    var check = temp == 2;
    return {
      branches: branches,
      valid: valid,
      fe0f: fe0f,
      save: save,
      check: check
    };
  }
}

/**
 * MIT License
 *
 * Copyright (c) 2021 Andrew Raffensperger
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This is a near carbon-copy of the original source (link below) with the
 * TypeScript typings added and a few tweaks to make it ES3-compatible.
 *
 * See: https://github.com/adraffy/ens-normalize.js
 */
function getData() {
  return read_compressed_payload(decode$1('AEQF2AO2DEsA2wIrAGsBRABxAN8AZwCcAEwAqgA0AGwAUgByADcATAAVAFYAIQAyACEAKAAYAFgAGwAjABQAMAAmADIAFAAfABQAKwATACoADgAbAA8AHQAYABoAGQAxADgALAAoADwAEwA9ABMAGgARAA4ADwAWABMAFgAIAA8AHgQXBYMA5BHJAS8JtAYoAe4AExozi0UAH21tAaMnBT8CrnIyhrMDhRgDygIBUAEHcoFHUPe8AXBjAewCjgDQR8IICIcEcQLwATXCDgzvHwBmBoHNAqsBdBcUAykgDhAMShskMgo8AY8jqAQfAUAfHw8BDw87MioGlCIPBwZCa4ELatMAAMspJVgsDl8AIhckSg8XAHdvTwBcIQEiDT4OPhUqbyECAEoAS34Aej8Ybx83JgT/Xw8gHxZ/7w8RICxPHA9vBw+Pfw8PHwAPFv+fAsAvCc8vEr8ivwD/EQ8Bol8OEBa/A78hrwAPCU8vESNvvwWfHwNfAVoDHr+ZAAED34YaAdJPAK7PLwSEgDLHAGo1Pz8Pvx9fUwMrpb8O/58VTzAPIBoXIyQJNF8hpwIVAT8YGAUADDNBaX3RAMomJCg9EhUeA29MABsZBTMNJipjOhc19gcIDR8bBwQHEggCWi6DIgLuAQYA+BAFCha3A5XiAEsqM7UFFgFLhAMjFTMYE1Klnw74nRVBG/ASCm0BYRN/BrsU3VoWy+S0vV8LQx+vN8gF2AC2AK5EAWwApgYDKmAAroQ0NDQ0AT+OCg7wAAIHRAbpNgVcBV0APTA5BfbPFgMLzcYL/QqqA82eBALKCjQCjqYCht0/k2+OAsXQAoP3ASTKDgDw6ACKAUYCMpIKJpRaAE4A5womABzZvs0REEKiACIQAd5QdAECAj4Ywg/wGqY2AVgAYADYvAoCGAEubA0gvAY2ALAAbpbvqpyEAGAEpgQAJgAG7gAgAEACmghUFwCqAMpAINQIwC4DthRAAPcycKgApoIdABwBfCisABoATwBqASIAvhnSBP8aH/ECeAKXAq40NjgDBTwFYQU6AXs3oABgAD4XNgmcCY1eCl5tIFZeUqGgyoNHABgAEQAaABNwWQAmABMATPMa3T34ADldyprmM1M2XociUQgLzvwAXT3xABgAEQAaABNwIGFAnADD8AAgAD4BBJWzaCcIAIEBFMAWwKoAAdq9BWAF5wLQpALEtQAKUSGkahR4GnJM+gsAwCgeFAiUAECQ0BQuL8AAIAAAADKeIheclvFqQAAETr4iAMxIARMgAMIoHhQIAn0E0pDQFC4HhznoAAAAIAI2C0/4lvFqQAAETgBJJwYCAy4ABgYAFAA8MBKYEH4eRhTkAjYeFcgACAYAeABsOqyQ5gRwDayqugEgaIIAtgoACgDmEABmBAWGme5OBJJA2m4cDeoAmITWAXwrMgOgAGwBCh6CBXYF1Tzg1wKAAFdiuABRAFwAXQBsAG8AdgBrAHYAbwCEAHEwfxQBVE5TEQADVFhTBwBDANILAqcCzgLTApQCrQL6vAAMAL8APLhNBKkE6glGKTAU4Dr4N2EYEwBCkABKk8rHAbYBmwIoAiU4Ajf/Aq4CowCAANIChzgaNBsCsTgeODcFXrgClQKdAqQBiQGYAqsCsjTsNHsfNPA0ixsAWTWiOAMFPDQSNCk2BDZHNow2TTZUNhk28Jk9VzI3QkEoAoICoQKwAqcAQAAxBV4FXbS9BW47YkIXP1ciUqs05DS/FwABUwJW11e6nHuYZmSh/RAYA8oMKvZ8KASoUAJYWAJ6ILAsAZSoqjpgA0ocBIhmDgDWAAawRDQoAAcuAj5iAHABZiR2AIgiHgCaAU68ACxuHAG0ygM8MiZIAlgBdF4GagJqAPZOHAMuBgoATkYAsABiAHgAMLoGDPj0HpKEBAAOJgAuALggTAHWAeAMEDbd20Uege0ADwAWADkAQgA9OHd+2MUQZBBhBgNNDkxxPxUQArEPqwvqERoM1irQ090ANK4H8ANYB/ADWANYB/AH8ANYB/ADWANYA1gDWBwP8B/YxRBkD00EcgWTBZAE2wiIJk4RhgctCNdUEnQjHEwDSgEBIypJITuYMxAlR0wRTQgIATZHbKx9PQNMMbBU+pCnA9AyVDlxBgMedhKlAC8PeCE1uk6DekxxpQpQT7NX9wBFBgASqwAS5gBJDSgAUCwGPQBI4zTYABNGAE2bAE3KAExdGABKaAbgAFBXAFCOAFBJABI2SWdObALDOq0//QomCZhvwHdTBkIQHCemEPgMNAG2ATwN7kvZBPIGPATKH34ZGg/OlZ0Ipi3eDO4m5C6igFsj9iqEBe5L9TzeC05RaQ9aC2YJ5DpkgU8DIgEOIowK3g06CG4Q9ArKbA3mEUYHOgPWSZsApgcCCxIdNhW2JhFirQsKOXgG/Br3C5AmsBMqev0F1BoiBk4BKhsAANAu6IWxWjJcHU9gBgQLJiPIFKlQIQ0mQLh4SRocBxYlqgKSQ3FKiFE3HpQh9zw+DWcuFFF9B/Y8BhlQC4I8n0asRQ8R0z6OPUkiSkwtBDaALDAnjAnQD4YMunxzAVoJIgmyDHITMhEYN8YIOgcaLpclJxYIIkaWYJsE+KAD9BPSAwwFQAlCBxQDthwuEy8VKgUOgSXYAvQ21i60ApBWgQEYBcwPJh/gEFFH4Q7qCJwCZgOEJewALhUiABginAhEZABgj9lTBi7MCMhqbSN1A2gU6GIRdAeSDlgHqBw0FcAc4nDJXgyGCSiksAlcAXYJmgFgBOQICjVcjKEgQmdUi1kYnCBiQUBd/QIyDGYVoES+h3kCjA9sEhwBNgF0BzoNAgJ4Ee4RbBCWCOyGBTW2M/k6JgRQIYQgEgooA1BszwsoJvoM+WoBpBJjAw00PnfvZ6xgtyUX/gcaMsZBYSHyC5NPzgydGsIYQ1QvGeUHwAP0GvQn60FYBgADpAQUOk4z7wS+C2oIjAlAAEoOpBgH2BhrCnKM0QEyjAG4mgNYkoQCcJAGOAcMAGgMiAV65gAeAqgIpAAGANADWAA6Aq4HngAaAIZCAT4DKDABIuYCkAOUCDLMAZYwAfQqBBzEDBYA+DhuSwLDsgKAa2ajBd5ZAo8CSjYBTiYEBk9IUgOwcuIA3ABMBhTgSAEWrEvMG+REAeBwLADIAPwABjYHBkIBzgH0bgC4AWALMgmjtLYBTuoqAIQAFmwB2AKKAN4ANgCA8gFUAE4FWvoF1AJQSgESMhksWGIBvAMgATQBDgB6BsyOpsoIIARuB9QCEBwV4gLvLwe2AgMi4BPOQsYCvd9WADIXUu5eZwqoCqdeaAC0YTQHMnM9UQAPH6k+yAdy/BZIiQImSwBQ5gBQQzSaNTFWSTYBpwGqKQK38AFtqwBI/wK37gK3rQK3sAK6280C0gK33AK3zxAAUEIAUD9SklKDArekArw5AEQAzAHCO147WTteO1k7XjtZO147WTteO1kDmChYI03AVU0oJqkKbV9GYewMpw3VRMk6ShPcYFJgMxPJLbgUwhXPJVcZPhq9JwYl5VUKDwUt1GYxCC00dhe9AEApaYNCY4ceMQpMHOhTklT5LRwAskujM7ANrRsWREEFSHXuYisWDwojAmSCAmJDXE6wXDchAqH4AmiZAmYKAp+FOBwMAmY8AmYnBG8EgAN/FAN+kzkHOXgYOYM6JCQCbB4CMjc4CwJtyAJtr/CLADRoRiwBaADfAOIASwYHmQyOAP8MwwAOtgJ3MAJ2o0ACeUxEAni7Hl3cRa9G9AJ8QAJ6yQJ9CgJ88UgBSH5kJQAsFklZSlwWGErNAtECAtDNSygDiFADh+dExpEzAvKiXQQDA69Lz0wuJgTQTU1NsAKLQAKK2cIcCB5EaAa4Ao44Ao5dQZiCAo7aAo5deVG1UzYLUtVUhgKT/AKTDQDqAB1VH1WwVdEHLBwplocy4nhnRTw6ApegAu+zWCKpAFomApaQApZ9nQCqWa1aCoJOADwClrYClk9cRVzSApnMApllXMtdCBoCnJw5wzqeApwXAp+cAp65iwAeEDIrEAKd8gKekwC2PmE1YfACntQCoG8BqgKeoCACnk+mY8lkKCYsAiewAiZ/AqD8AqBN2AKmMAKlzwKoAAB+AqfzaH1osgAESmodatICrOQCrK8CrWgCrQMCVx4CVd0CseLYAx9PbJgCsr4OArLpGGzhbWRtSWADJc4Ctl08QG6RAylGArhfArlIFgK5K3hwN3DiAr0aAy2zAzISAr6JcgMDM3ICvhtzI3NQAsPMAsMFc4N0TDZGdOEDPKgDPJsDPcACxX0CxkgCxhGKAshqUgLIRQLJUALJLwJkngLd03h6YniveSZL0QMYpGcDAmH1GfSVJXsMXpNevBICz2wCz20wTFTT9BSgAMeuAs90ASrrA04TfkwGAtwoAtuLAtJQA1JdA1NgAQIDVY2AikABzBfuYUZ2AILPg44C2sgC2d+EEYRKpz0DhqYAMANkD4ZyWvoAVgLfZgLeuXR4AuIw7RUB8zEoAfScAfLTiALr9ALpcXoAAur6AurlAPpIAboC7ooC652Wq5cEAu5AA4XhmHpw4XGiAvMEAGoDjheZlAL3FAORbwOSiAL3mQL52gL4Z5odmqy8OJsfA52EAv77ARwAOp8dn7QDBY4DpmsDptoA0sYDBmuhiaIGCgMMSgFgASACtgNGAJwEgLpoBgC8BGzAEowcggCEDC6kdjoAJAM0C5IKRoABZCgiAIzw3AYBLACkfng9ogigkgNmWAN6AEQCvrkEVqTGAwCsBRbAA+4iQkMCHR072jI2PTbUNsk2RjY5NvA23TZKNiU3EDcZN5I+RTxDRTBCJkK5VBYKFhZfwQCWygU3AJBRHpu+OytgNxa61A40GMsYjsn7BVwFXQVcBV0FaAVdBVwFXQVcBV0FXAVdBVwFXUsaCNyKAK4AAQUHBwKU7oICoW1e7jAEzgPxA+YDwgCkBFDAwADABKzAAOxFLhitA1UFTDeyPkM+bj51QkRCuwTQWWQ8X+0AWBYzsACNA8xwzAGm7EZ/QisoCTAbLDs6fnLfb8H2GccsbgFw13M1HAVkBW/Jxsm9CNRO8E8FDD0FBQw9FkcClOYCoMFegpDfADgcMiA2AJQACB8AsigKAIzIEAJKeBIApY5yPZQIAKQiHb4fvj5BKSRPQrZCOz0oXyxgOywfKAnGbgMClQaCAkILXgdeCD9IIGUgQj5fPoY+dT52Ao5CM0dAX9BTVG9SDzFwWTQAbxBzJF/lOEIQQglCCkKJIAls5AcClQICoKPMODEFxhi6KSAbiyfIRrMjtCgdWCAkPlFBIitCsEJRzAbMAV/OEyQzDg0OAQQEJ36i328/Mk9AybDJsQlq3tDRApUKAkFzXf1d/j9uALYP6hCoFgCTGD8kPsFKQiobrm0+zj0KSD8kPnVCRBwMDyJRTHFgMTJa5rwXQiQ2YfI/JD7BMEJEHGINTw4TOFlIRzwJO0icMQpyPyQ+wzJCRBv6DVgnKB01NgUKj2bwYzMqCoBkznBgEF+zYDIocwRIX+NgHj4HICNfh2C4CwdwFWpTG/lgUhYGAwRfv2Ts8mAaXzVgml/XYIJfuWC4HI1gUF9pYJZgMR6ilQHMAOwLAlDRefC0in4AXAEJA6PjCwc0IamOANMMCAECRQDFNRTZBgd+CwQlRA+r6+gLBDEFBnwUBXgKATIArwAGRAAHA3cDdAN2A3kDdwN9A3oDdQN7A30DfAN4A3oDfQAYEAAlAtYASwMAUAFsAHcKAHcAmgB3AHUAdQB2AHVu8UgAygDAAHcAdQB1AHYAdQALCgB3AAsAmgB3AAsCOwB3AAtu8UgAygDAAHgKAJoAdwB3AHUAdQB2AHUAeAB1AHUAdgB1bvFIAMoAwAALCgCaAHcACwB3AAsCOwB3AAtu8UgAygDAAH4ACwGgALcBpwC6AahdAu0COwLtbvFIAMoAwAALCgCaAu0ACwLtAAsCOwLtAAtu8UgAygDAA24ACwNvAAu0VsQAAzsAABCkjUIpAAsAUIusOggWcgMeBxVsGwL67U/2HlzmWOEeOgALASvuAAseAfpKUpnpGgYJDCIZM6YyARUE9ThqAD5iXQgnAJYJPnOzw0ZAEZxEKsIAkA4DhAHnTAIDxxUDK0lxCQlPYgIvIQVYJQBVqE1GakUAKGYiDToSBA1EtAYAXQJYAIF8GgMHRyAAIAjOe9YncekRAA0KACUrjwE7Ayc6AAYWAqaiKG4McEcqANoN3+Mg9TwCBhIkuCny+JwUQ29L008JluRxu3K+oAdqiHOqFH0AG5SUIfUJ5SxCGfxdipRzqTmT4V5Zb+r1Uo4Vm+NqSSEl2mNvR2JhIa8SpYO6ntdwFXHCWTCK8f2+Hxo7uiG3drDycAuKIMP5bhi06ACnqArH1rz4Rqg//lm6SgJGEVbF9xJHISaR6HxqxSnkw6shDnelHKNEfGUXSJRJ1GcsmtJw25xrZMDK9gXSm1/YMkdX4/6NKYOdtk/NQ3/NnDASjTc3fPjIjW/5sVfVObX2oTDWkr1dF9f3kxBsD3/3aQO8hPfRz+e0uEiJqt1161griu7gz8hDDwtpy+F+BWtefnKHZPAxcZoWbnznhJpy0e842j36bcNzGnIEusgGX0a8ZxsnjcSsPDZ09yZ36fCQbriHeQ72JRMILNl6ePPf2HWoVwgWAm1fb3V2sAY0+B6rAXqSwPBgseVmoqsBTSrm91+XasMYYySI8eeRxH3ZvHkMz3BQ5aJ3iUVbYPNM3/7emRtjlsMgv/9VyTsyt/mK+8fgWeT6SoFaclXqn42dAIsvAarF5vNNWHzKSkKQ/8Hfk5ZWK7r9yliOsooyBjRhfkHP4Q2DkWXQi6FG/9r/IwbmkV5T7JSopHKn1pJwm9tb5Ot0oyN1Z2mPpKXHTxx2nlK08fKk1hEYA8WgVVWL5lgx0iTv+KdojJeU23ZDjmiubXOxVXJKKi2Wjuh2HLZOFLiSC7Tls5SMh4f+Pj6xUSrNjFqLGehRNB8lC0QSLNmkJJx/wSG3MnjE9T1CkPwJI0wH2lfzwETIiVqUxg0dfu5q39Gt+hwdcxkhhNvQ4TyrBceof3Mhs/IxFci1HmHr4FMZgXEEczPiGCx0HRwzAqDq2j9AVm1kwN0mRVLWLylgtoPNapF5cY4Y1wJh/e0BBwZj44YgZrDNqvD/9Hv7GFYdUQeDJuQ3EWI4HaKqavU1XjC/n41kT4L79kqGq0kLhdTZvgP3TA3fS0ozVz+5piZsoOtIvBUFoMKbNcmBL6YxxaUAusHB38XrS8dQMnQwJfUUkpRoGr5AUeWicvBTzyK9g77+yCkf5PAysL7r/JjcZgrbvRpMW9iyaxZvKO6ceZN2EwIxKwVFPuvFuiEPGCoagbMo+SpydLrXqBzNCDGFCrO/rkcwa2xhokQZ5CdZ0AsU3JfSqJ6n5I14YA+P/uAgfhPU84Tlw7cEFfp7AEE8ey4sP12PTt4Cods1GRgDOB5xvyiR5m+Bx8O5nBCNctU8BevfV5A08x6RHd5jcwPTMDSZJOedIZ1cGQ704lxbAzqZOP05ZxaOghzSdvFBHYqomATARyAADK4elP8Ly3IrUZKfWh23Xy20uBUmLS4Pfagu9+oyVa2iPgqRP3F2CTUsvJ7+RYnN8fFZbU/HVvxvcFFDKkiTqV5UBZ3Gz54JAKByi9hkKMZJvuGgcSYXFmw08UyoQyVdfTD1/dMkCHXcTGAKeROgArsvmRrQTLUOXioOHGK2QkjHuoYFgXciZoTJd6Fs5q1QX1G+p/e26hYsEf7QZD1nnIyl/SFkNtYYmmBhpBrxl9WbY0YpHWRuw2Ll/tj9mD8P4snVzJl4F9J+1arVeTb9E5r2ILH04qStjxQNwn3m4YNqxmaNbLAqW2TN6LidwuJRqS+NXbtqxoeDXpxeGWmxzSkWxjkyCkX4NQRme6q5SAcC+M7+9ETfA/EwrzQajKakCwYyeunP6ZFlxU2oMEn1Pz31zeStW74G406ZJFCl1wAXIoUKkWotYEpOuXB1uVNxJ63dpJEqfxBeptwIHNrPz8BllZoIcBoXwgfJ+8VAUnVPvRvexnw0Ma/WiGYuJO5y8QTvEYBigFmhUxY5RqzE8OcywN/8m4UYrlaniJO75XQ6KSo9+tWHlu+hMi0UVdiKQp7NelnoZUzNaIyBPVeOwK6GNp+FfHuPOoyhaWuNvTYFkvxscMQWDh+zeFCFkgwbXftiV23ywJ4+uwRqmg9k3KzwIQpzppt8DBBOMbrqwQM5Gb05sEwdKzMiAqOloaA/lr0KA+1pr0/+HiWoiIjHA/wir2nIuS3PeU/ji3O6ZwoxcR1SZ9FhtLC5S0FIzFhbBWcGVP/KpxOPSiUoAdWUpqKH++6Scz507iCcxYI6rdMBICPJZea7OcmeFw5mObJSiqpjg2UoWNIs+cFhyDSt6geV5qgi3FunmwwDoGSMgerFOZGX1m0dMCYo5XOruxO063dwENK9DbnVM9wYFREzh4vyU1WYYJ/LRRp6oxgjqP/X5a8/4Af6p6NWkQferzBmXme0zY/4nwMJm/wd1tIqSwGz+E3xPEAOoZlJit3XddD7/BT1pllzOx+8bmQtANQ/S6fZexc6qi3W+Q2xcmXTUhuS5mpHQRvcxZUN0S5+PL9lXWUAaRZhEH8hTdAcuNMMCuVNKTEGtSUKNi3O6KhSaTzck8csZ2vWRZ+d7mW8c4IKwXIYd25S/zIftPkwPzufjEvOHWVD1m+FjpDVUTV0DGDuHj6QnaEwLu/dEgdLQOg9E1Sro9XHJ8ykLAwtPu+pxqKDuFexqON1sKQm7rwbE1E68UCfA/erovrTCG+DBSNg0l4goDQvZN6uNlbyLpcZAwj2UclycvLpIZMgv4yRlpb3YuMftozorbcGVHt/VeDV3+Fdf1TP0iuaCsPi2G4XeGhsyF1ubVDxkoJhmniQ0/jSg/eYML9KLfnCFgISWkp91eauR3IQvED0nAPXK+6hPCYs+n3+hCZbiskmVMG2da+0EsZPonUeIY8EbfusQXjsK/eFDaosbPjEfQS0RKG7yj5GG69M7MeO1HmiUYocgygJHL6M1qzUDDwUSmr99V7Sdr2F3JjQAJY+F0yH33Iv3+C9M38eML7gTgmNu/r2bUMiPvpYbZ6v1/IaESirBHNa7mPKn4dEmYg7v/+HQgPN1G79jBQ1+soydfDC2r+h2Bl/KIc5KjMK7OH6nb1jLsNf0EHVe2KBiE51ox636uyG6Lho0t3J34L5QY/ilE3mikaF4HKXG1mG1rCevT1Vv6GavltxoQe/bMrpZvRggnBxSEPEeEzkEdOxTnPXHVjUYdw8JYvjB/o7Eegc3Ma+NUxLLnsK0kJlinPmUHzHGtrk5+CAbVzFOBqpyy3QVUnzTDfC/0XD94/okH+OB+i7g9lolhWIjSnfIb+Eq43ZXOWmwvjyV/qqD+t0e+7mTEM74qP/Ozt8nmC7mRpyu63OB4KnUzFc074SqoyPUAgM+/TJGFo6T44EHnQU4X4z6qannVqgw/U7zCpwcmXV1AubIrvOmkKHazJAR55ePjp5tLBsN8vAqs3NAHdcEHOR2xQ0lsNAFzSUuxFQCFYvXLZJdOj9p4fNq6p0HBGUik2YzaI4xySy91KzhQ0+q1hjxvImRwPRf76tChlRkhRCi74NXZ9qUNeIwP+s5p+3m5nwPdNOHgSLD79n7O9m1n1uDHiMntq4nkYwV5OZ1ENbXxFd4PgrlvavZsyUO4MqYlqqn1O8W/I1dEZq5dXhrbETLaZIbC2Kj/Aa/QM+fqUOHdf0tXAQ1huZ3cmWECWSXy/43j35+Mvq9xws7JKseriZ1pEWKc8qlzNrGPUGcVgOa9cPJYIJsGnJTAUsEcDOEVULO5x0rXBijc1lgXEzQQKhROf8zIV82w8eswc78YX11KYLWQRcgHNJElBxfXr72lS2RBSl07qTKorO2uUDZr3sFhYsvnhLZn0A94KRzJ/7DEGIAhW5ZWFpL8gEwu1aLA9MuWZzNwl8Oze9Y+bX+v9gywRVnoB5I/8kXTXU3141yRLYrIOOz6SOnyHNy4SieqzkBXharjfjqq1q6tklaEbA8Qfm2DaIPs7OTq/nvJBjKfO2H9bH2cCMh1+5gspfycu8f/cuuRmtDjyqZ7uCIMyjdV3a+p3fqmXsRx4C8lujezIFHnQiVTXLXuI1XrwN3+siYYj2HHTvESUx8DlOTXpak9qFRK+L3mgJ1WsD7F4cu1aJoFoYQnu+wGDMOjJM3kiBQWHCcvhJ/HRdxodOQp45YZaOTA22Nb4XKCVxqkbwMYFhzYQYIAnCW8FW14uf98jhUG2zrKhQQ0q0CEq0t5nXyvUyvR8DvD69LU+g3i+HFWQMQ8PqZuHD+sNKAV0+M6EJC0szq7rEr7B5bQ8BcNHzvDMc9eqB5ZCQdTf80Obn4uzjwpYU7SISdtV0QGa9D3Wrh2BDQtpBKxaNFV+/Cy2P/Sv+8s7Ud0Fd74X4+o/TNztWgETUapy+majNQ68Lq3ee0ZO48VEbTZYiH1Co4OlfWef82RWeyUXo7woM03PyapGfikTnQinoNq5z5veLpeMV3HCAMTaZmA1oGLAn7XS3XYsz+XK7VMQsc4XKrmDXOLU/pSXVNUq8dIqTba///3x6LiLS6xs1xuCAYSfcQ3+rQgmu7uvf3THKt5Ooo97TqcbRqxx7EASizaQCBQllG/rYxVapMLgtLbZS64w1MDBMXX+PQpBKNwqUKOf2DDRDUXQf9EhOS0Qj4nTmlA8dzSLz/G1d+Ud8MTy/6ghhdiLpeerGY/UlDOfiuqFsMUU5/UYlP+BAmgRLuNpvrUaLlVkrqDievNVEAwF+4CoM1MZTmjxjJMsKJq+u8Zd7tNCUFy6LiyYXRJQ4VyvEQFFaCGKsxIwQkk7EzZ6LTJq2hUuPhvAW+gQnSG6J+MszC+7QCRHcnqDdyNRJ6T9xyS87A6MDutbzKGvGktpbXqtzWtXb9HsfK2cBMomjN9a4y+TaJLnXxAeX/HWzmf4cR4vALt/P4w4qgKY04ml4ZdLOinFYS6cup3G/1ie4+t1eOnpBNlqGqs75ilzkT4+DsZQxNvaSKJ//6zIbbk/M7LOhFmRc/1R+kBtz7JFGdZm/COotIdvQoXpTqP/1uqEUmCb/QWoGLMwO5ANcHzxdY48IGP5+J+zKOTBFZ4Pid+GTM+Wq12MV/H86xEJptBa6T+p3kgpwLedManBHC2GgNrFpoN2xnrMz9WFWX/8/ygSBkavq2Uv7FdCsLEYLu9LLIvAU0bNRDtzYl+/vXmjpIvuJFYjmI0im6QEYqnIeMsNjXG4vIutIGHijeAG/9EDBozKV5cldkHbLxHh25vT+ZEzbhXlqvpzKJwcEgfNwLAKFeo0/pvEE10XDB+EXRTXtSzJozQKFFAJhMxYkVaCW+E9AL7tMeU8acxidHqzb6lX4691UsDpy/LLRmT+epgW56+5Cw8tB4kMUv6s9lh3eRKbyGs+H/4mQMaYzPTf2OOdokEn+zzgvoD3FqNKk8QqGAXVsqcGdXrT62fSPkR2vROFi68A6se86UxRUk4cajfPyCC4G5wDhD+zNq4jodQ4u4n/m37Lr36n4LIAAsVr02dFi9AiwA81MYs2rm4eDlDNmdMRvEKRHfBwW5DdMNp0jPFZMeARqF/wL4XBfd+EMLBfMzpH5GH6NaW+1vrvMdg+VxDzatk3MXgO3ro3P/DpcC6+Mo4MySJhKJhSR01SGGGp5hPWmrrUgrv3lDnP+HhcI3nt3YqBoVAVTBAQT5iuhTg8nvPtd8ZeYj6w1x6RqGUBrSku7+N1+BaasZvjTk64RoIDlL8brpEcJx3OmY7jLoZsswdtmhfC/G21llXhITOwmvRDDeTTPbyASOa16cF5/A1fZAidJpqju3wYAy9avPR1ya6eNp9K8XYrrtuxlqi+bDKwlfrYdR0RRiKRVTLOH85+ZY7XSmzRpfZBJjaTa81VDcJHpZnZnSQLASGYW9l51ZV/h7eVzTi3Hv6hUsgc/51AqJRTkpbFVLXXszoBL8nBX0u/0jBLT8nH+fJePbrwURT58OY+UieRjd1vs04w0VG5VN2U6MoGZkQzKN/ptz0Q366dxoTGmj7i1NQGHi9GgnquXFYdrCfZBmeb7s0T6yrdlZH5cZuwHFyIJ/kAtGsTg0xH5taAAq44BAk1CPk9KVVbqQzrCUiFdF/6gtlPQ8bHHc1G1W92MXGZ5HEHftyLYs8mbD/9xYRUWkHmlM0zC2ilJlnNgV4bfALpQghxOUoZL7VTqtCHIaQSXm+YUMnpkXybnV+A6xlm2CVy8fn0Xlm2XRa0+zzOa21JWWmixfiPMSCZ7qA4rS93VN3pkpF1s5TonQjisHf7iU9ZGvUPOAKZcR1pbeVf/Ul7OhepGCaId9wOtqo7pJ7yLcBZ0pFkOF28y4zEI/kcUNmutBHaQpBdNM8vjCS6HZRokkeo88TBAjGyG7SR+6vUgTcyK9Imalj0kuxz0wmK+byQU11AiJFk/ya5dNduRClcnU64yGu/ieWSeOos1t3ep+RPIWQ2pyTYVbZltTbsb7NiwSi3AV+8KLWk7LxCnfZUetEM8ThnsSoGH38/nyAwFguJp8FjvlHtcWZuU4hPva0rHfr0UhOOJ/F6vS62FW7KzkmRll2HEc7oUq4fyi5T70Vl7YVIfsPHUCdHesf9Lk7WNVWO75JDkYbMI8TOW8JKVtLY9d6UJRITO8oKo0xS+o99Yy04iniGHAaGj88kEWgwv0OrHdY/nr76DOGNS59hXCGXzTKUvDl9iKpLSWYN1lxIeyywdNpTkhay74w2jFT6NS8qkjo5CxA1yfSYwp6AJIZNKIeEK5PJAW7ORgWgwp0VgzYpqovMrWxbu+DGZ6Lhie1RAqpzm8VUzKJOH3mCzWuTOLsN3VT/dv2eeYe9UjbR8YTBsLz7q60VN1sU51k+um1f8JxD5pPhbhSC8rRaB454tmh6YUWrJI3+GWY0qeWioj/tbkYITOkJaeuGt4JrJvHA+l0Gu7kY7XOaa05alMnRWVCXqFgLIwSY4uF59Ue5SU4QKuc/HamDxbr0x6csCetXGoP7Qn1Bk/J9DsynO/UD6iZ1Hyrz+jit0hDCwi/E9OjgKTbB3ZQKQ/0ZOvevfNHG0NK4Aj3Cp7NpRk07RT1i/S0EL93Ag8GRgKI9CfpajKyK6+Jj/PI1KO5/85VAwz2AwzP8FTBb075IxCXv6T9RVvWT2tUaqxDS92zrGUbWzUYk9mSs82pECH+fkqsDt93VW++4YsR/dHCYcQSYTO/KaBMDj9LSD/J/+z20Kq8XvZUAIHtm9hRPP3ItbuAu2Hm5lkPs92pd7kCxgRs0xOVBnZ13ccdA0aunrwv9SdqElJRC3g+oCu+nXyCgmXUs9yMjTMAIHfxZV+aPKcZeUBWt057Xo85Ks1Ir5gzEHCWqZEhrLZMuF11ziGtFQUds/EESajhagzcKsxamcSZxGth4UII+adPhQkUnx2WyN+4YWR+r3f8MnkyGFuR4zjzxJS8WsQYR5PTyRaD9ixa6Mh741nBHbzfjXHskGDq179xaRNrCIB1z1xRfWfjqw2pHc1zk9xlPpL8sQWAIuETZZhbnmL54rceXVNRvUiKrrqIkeogsl0XXb17ylNb0f4GA9Wd44vffEG8FSZGHEL2fbaTGRcSiCeA8PmA/f6Hz8HCS76fXUHwgwkzSwlI71ekZ7Fapmlk/KC+Hs8hUcw3N2LN5LhkVYyizYFl/uPeVP5lsoJHhhfWvvSWruCUW1ZcJOeuTbrDgywJ/qG07gZJplnTvLcYdNaH0KMYOYMGX+rB4NGPFmQsNaIwlWrfCezxre8zXBrsMT+edVLbLqN1BqB76JH4BvZTqUIMfGwPGEn+EnmTV86fPBaYbFL3DFEhjB45CewkXEAtJxk4/Ms2pPXnaRqdky0HOYdcUcE2zcXq4vaIvW2/v0nHFJH2XXe22ueDmq/18XGtELSq85j9X8q0tcNSSKJIX8FTuJF/Pf8j5PhqG2u+osvsLxYrvvfeVJL+4tkcXcr9JV7v0ERmj/X6fM3NC4j6dS1+9Umr2oPavqiAydTZPLMNRGY23LO9zAVDly7jD+70G5TPPLdhRIl4WxcYjLnM+SNcJ26FOrkrISUtPObIz5Zb3AG612krnpy15RMW+1cQjlnWFI6538qky9axd2oJmHIHP08KyP0ubGO+TQNOYuv2uh17yCIvR8VcStw7o1g0NM60sk+8Tq7YfIBJrtp53GkvzXH7OA0p8/n/u1satf/VJhtR1l8Wa6Gmaug7haSpaCaYQax6ta0mkutlb+eAOSG1aobM81D9A4iS1RRlzBBoVX6tU1S6WE2N9ORY6DfeLRC4l9Rvr5h95XDWB2mR1d4WFudpsgVYwiTwT31ljskD8ZyDOlm5DkGh9N/UB/0AI5Xvb8ZBmai2hQ4BWMqFwYnzxwB26YHSOv9WgY3JXnvoN+2R4rqGVh/LLDMtpFP+SpMGJNWvbIl5SOodbCczW2RKleksPoUeGEzrjtKHVdtZA+kfqO+rVx/iclCqwoopepvJpSTDjT+b9GWylGRF8EDbGlw6eUzmJM95Ovoz+kwLX3c2fTjFeYEsE7vUZm3mqdGJuKh2w9/QGSaqRHs99aScGOdDqkFcACoqdbBoQqqjamhH6Q9ng39JCg3lrGJwd50Qk9ovnqBTr8MME7Ps2wiVfygUmPoUBJJfJWX5Nda0nuncbFkA=='));
}

var r$3 = getData();
// @TODO: This should be lazily loaded
var VALID = new Set(read_member_array(r$3));
var IGNORED = new Set(read_member_array(r$3));
var MAPPED = read_mapped_map(r$3);
var EMOJI_ROOT = read_emoji_trie(r$3);
//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));
//const STOP = 0x2E;
var HYPHEN = 0x2D;
var UNDERSCORE = 0x5F;
function explode_cp(name) {
  return toUtf8CodePoints(name);
}
function filter_fe0f(cps) {
  return cps.filter(function (cp) {
    return cp != 0xFE0F;
  });
}
function ens_normalize_post_check(name) {
  var _iterator = _createForOfIteratorHelper(name.split('.')),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var label = _step.value;
      var cps = explode_cp(label);
      try {
        for (var i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {
          if (cps[i] !== UNDERSCORE) {
            throw new Error("underscore only allowed at start");
          }
        }
        if (cps.length >= 4 && cps.every(function (cp) {
          return cp < 0x80;
        }) && cps[2] === HYPHEN && cps[3] === HYPHEN) {
          throw new Error("invalid label extension");
        }
      } catch (err) {
        throw new Error("Invalid label \"".concat(label, "\": ").concat(err.message));
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return name;
}
function ens_normalize(name) {
  return ens_normalize_post_check(normalize(name, filter_fe0f));
}
function normalize(name, emoji_filter) {
  var input = explode_cp(name).reverse(); // flip for pop
  var output = [];
  while (input.length) {
    var emoji = consume_emoji_reversed(input);
    if (emoji) {
      output.push.apply(output, _toConsumableArray(emoji_filter(emoji)));
      continue;
    }
    var cp = input.pop();
    if (VALID.has(cp)) {
      output.push(cp);
      continue;
    }
    if (IGNORED.has(cp)) {
      continue;
    }
    var cps = MAPPED[cp];
    if (cps) {
      output.push.apply(output, _toConsumableArray(cps));
      continue;
    }
    throw new Error("Disallowed codepoint: 0x".concat(cp.toString(16).toUpperCase()));
  }
  return ens_normalize_post_check(nfc(String.fromCodePoint.apply(String, output)));
}
function nfc(s) {
  return s.normalize('NFC');
}
function consume_emoji_reversed(cps, eaten) {
  var _a;
  var node = EMOJI_ROOT;
  var emoji;
  var saved;
  var stack = [];
  var pos = cps.length;
  if (eaten) eaten.length = 0; // clear input buffer (if needed)
  var _loop = function _loop() {
      var cp = cps[--pos];
      node = (_a = node.branches.find(function (x) {
        return x.set.has(cp);
      })) === null || _a === void 0 ? void 0 : _a.node;
      if (!node) return 0; // break
      if (node.save) {
        // remember
        saved = cp;
      } else if (node.check) {
        // check exclusion
        if (cp === saved) return 0; // break
      }
      stack.push(cp);
      if (node.fe0f) {
        stack.push(0xFE0F);
        if (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F
      }
      if (node.valid) {
        // this is a valid emoji (so far)
        emoji = stack.slice(); // copy stack
        if (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)
        if (eaten) eaten.push.apply(eaten, _toConsumableArray(cps.slice(pos).reverse())); // copy input (if needed)
        cps.length = pos; // truncate
      }
    },
    _ret;
  while (pos) {
    _ret = _loop();
    if (_ret === 0) break;
  }
  return emoji;
}

var logger$6 = new Logger(version$7);
var Zeros = new Uint8Array(32);
Zeros.fill(0);
function checkComponent(comp) {
  if (comp.length === 0) {
    throw new Error("invalid ENS name; empty component");
  }
  return comp;
}
function ensNameSplit(name) {
  var bytes = toUtf8Bytes(ens_normalize(name));
  var comps = [];
  if (name.length === 0) {
    return comps;
  }
  var last = 0;
  for (var i = 0; i < bytes.length; i++) {
    var d = bytes[i];
    // A separator (i.e. "."); copy this component
    if (d === 0x2e) {
      comps.push(checkComponent(bytes.slice(last, i)));
      last = i + 1;
    }
  }
  // There was a stray separator at the end of the name
  if (last >= bytes.length) {
    throw new Error("invalid ENS name; empty component");
  }
  comps.push(checkComponent(bytes.slice(last)));
  return comps;
}
function ensNormalize(name) {
  return ensNameSplit(name).map(function (comp) {
    return toUtf8String(comp);
  }).join(".");
}
function isValidName(name) {
  try {
    return ensNameSplit(name).length !== 0;
  } catch (error) {}
  return false;
}
function namehash(name) {
  /* istanbul ignore if */
  if (typeof name !== "string") {
    logger$6.throwArgumentError("invalid ENS name; not a string", "name", name);
  }
  var result = Zeros;
  var comps = ensNameSplit(name);
  while (comps.length) {
    result = keccak256(concat$1([result, keccak256(comps.pop())]));
  }
  return hexlify(result);
}
function dnsEncode(name) {
  return hexlify(concat$1(ensNameSplit(name).map(function (comp) {
    // DNS does not allow components over 63 bytes in length
    if (comp.length > 63) {
      throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
    }
    var bytes = new Uint8Array(comp.length + 1);
    bytes.set(comp, 1);
    bytes[0] = bytes.length - 1;
    return bytes;
  }))) + "00";
}

var messagePrefix = "\x19Ethereum Signed Message:\n";
function hashMessage(message) {
  if (typeof message === "string") {
    message = toUtf8Bytes(message);
  }
  return keccak256(concat$1([toUtf8Bytes(messagePrefix), toUtf8Bytes(String(message.length)), message]));
}

var version$6 = "rlp/5.7.0";

"use strict";
var logger$5 = new Logger(version$6);
function arrayifyInteger(value) {
  var result = [];
  while (value) {
    result.unshift(value & 0xff);
    value >>= 8;
  }
  return result;
}
function unarrayifyInteger(data, offset, length) {
  var result = 0;
  for (var i = 0; i < length; i++) {
    result = result * 256 + data[offset + i];
  }
  return result;
}
function _encode(object) {
  if (Array.isArray(object)) {
    var payload = [];
    object.forEach(function (child) {
      payload = payload.concat(_encode(child));
    });
    if (payload.length <= 55) {
      payload.unshift(0xc0 + payload.length);
      return payload;
    }
    var _length = arrayifyInteger(payload.length);
    _length.unshift(0xf7 + _length.length);
    return _length.concat(payload);
  }
  if (!isBytesLike(object)) {
    logger$5.throwArgumentError("RLP object must be BytesLike", "object", object);
  }
  var data = Array.prototype.slice.call(arrayify(object));
  if (data.length === 1 && data[0] <= 0x7f) {
    return data;
  } else if (data.length <= 55) {
    data.unshift(0x80 + data.length);
    return data;
  }
  var length = arrayifyInteger(data.length);
  length.unshift(0xb7 + length.length);
  return length.concat(data);
}
function encode(object) {
  return hexlify(_encode(object));
}
function _decodeChildren(data, offset, childOffset, length) {
  var result = [];
  while (childOffset < offset + 1 + length) {
    var decoded = _decode(data, childOffset);
    result.push(decoded.result);
    childOffset += decoded.consumed;
    if (childOffset > offset + 1 + length) {
      logger$5.throwError("child data too short", Logger.errors.BUFFER_OVERRUN, {});
    }
  }
  return {
    consumed: 1 + length,
    result: result
  };
}
// returns { consumed: number, result: Object }
function _decode(data, offset) {
  if (data.length === 0) {
    logger$5.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {});
  }
  // Array with extra length prefix
  if (data[offset] >= 0xf8) {
    var lengthLength = data[offset] - 0xf7;
    if (offset + 1 + lengthLength > data.length) {
      logger$5.throwError("data short segment too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    var length = unarrayifyInteger(data, offset + 1, lengthLength);
    if (offset + 1 + lengthLength + length > data.length) {
      logger$5.throwError("data long segment too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);
  } else if (data[offset] >= 0xc0) {
    var _length2 = data[offset] - 0xc0;
    if (offset + 1 + _length2 > data.length) {
      logger$5.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    return _decodeChildren(data, offset, offset + 1, _length2);
  } else if (data[offset] >= 0xb8) {
    var _lengthLength = data[offset] - 0xb7;
    if (offset + 1 + _lengthLength > data.length) {
      logger$5.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    var _length3 = unarrayifyInteger(data, offset + 1, _lengthLength);
    if (offset + 1 + _lengthLength + _length3 > data.length) {
      logger$5.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    var result = hexlify(data.slice(offset + 1 + _lengthLength, offset + 1 + _lengthLength + _length3));
    return {
      consumed: 1 + _lengthLength + _length3,
      result: result
    };
  } else if (data[offset] >= 0x80) {
    var _length4 = data[offset] - 0x80;
    if (offset + 1 + _length4 > data.length) {
      logger$5.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    var _result = hexlify(data.slice(offset + 1, offset + 1 + _length4));
    return {
      consumed: 1 + _length4,
      result: _result
    };
  }
  return {
    consumed: 1,
    result: hexlify(data[offset])
  };
}
function decode(data) {
  var bytes = arrayify(data);
  var decoded = _decode(bytes, 0);
  if (decoded.consumed !== bytes.length) {
    logger$5.throwArgumentError("invalid rlp data", "data", data);
  }
  return decoded.result;
}

var version$5 = "address/5.7.0";

"use strict";
var logger$4 = new Logger(version$5);
function getChecksumAddress(address) {
  if (!isHexString(address, 20)) {
    logger$4.throwArgumentError("invalid address", "address", address);
  }
  address = address.toLowerCase();
  var chars = address.substring(2).split("");
  var expanded = new Uint8Array(40);
  for (var i = 0; i < 40; i++) {
    expanded[i] = chars[i].charCodeAt(0);
  }
  var hashed = arrayify(keccak256(expanded));
  for (var _i = 0; _i < 40; _i += 2) {
    if (hashed[_i >> 1] >> 4 >= 8) {
      chars[_i] = chars[_i].toUpperCase();
    }
    if ((hashed[_i >> 1] & 0x0f) >= 8) {
      chars[_i + 1] = chars[_i + 1].toUpperCase();
    }
  }
  return "0x" + chars.join("");
}
// Shims for environments that are missing some required constants and functions
var MAX_SAFE_INTEGER = 0x1fffffffffffff;
function log10(x) {
  if (Math.log10) {
    return Math.log10(x);
  }
  return Math.log(x) / Math.LN10;
}
// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number
// Create lookup table
var ibanLookup = {};
for (var i = 0; i < 10; i++) {
  ibanLookup[String(i)] = String(i);
}
for (var _i2 = 0; _i2 < 26; _i2++) {
  ibanLookup[String.fromCharCode(65 + _i2)] = String(10 + _i2);
}
// How many decimal digits can we process? (for 64-bit float, this is 15)
var safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));
function ibanChecksum(address) {
  address = address.toUpperCase();
  address = address.substring(4) + address.substring(0, 2) + "00";
  var expanded = address.split("").map(function (c) {
    return ibanLookup[c];
  }).join("");
  // Javascript can handle integers safely up to 15 (decimal) digits
  while (expanded.length >= safeDigits) {
    var block = expanded.substring(0, safeDigits);
    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
  }
  var checksum = String(98 - parseInt(expanded, 10) % 97);
  while (checksum.length < 2) {
    checksum = "0" + checksum;
  }
  return checksum;
}
;
function getAddress(address) {
  var result = null;
  if (typeof address !== "string") {
    logger$4.throwArgumentError("invalid address", "address", address);
  }
  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
    // Missing the 0x prefix
    if (address.substring(0, 2) !== "0x") {
      address = "0x" + address;
    }
    result = getChecksumAddress(address);
    // It is a checksummed address with a bad checksum
    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
      logger$4.throwArgumentError("bad address checksum", "address", address);
    }
    // Maybe ICAP? (we only support direct mode)
  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    // It is an ICAP address with a bad checksum
    if (address.substring(2, 4) !== ibanChecksum(address)) {
      logger$4.throwArgumentError("bad icap checksum", "address", address);
    }
    result = _base36To16(address.substring(4));
    while (result.length < 40) {
      result = "0" + result;
    }
    result = getChecksumAddress("0x" + result);
  } else {
    logger$4.throwArgumentError("invalid address", "address", address);
  }
  return result;
}
function isAddress(address) {
  try {
    getAddress(address);
    return true;
  } catch (error) {}
  return false;
}
function getIcapAddress(address) {
  var base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();
  while (base36.length < 30) {
    base36 = "0" + base36;
  }
  return "XE" + ibanChecksum("XE00" + base36) + base36;
}
// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed
function getContractAddress(transaction) {
  var from = null;
  try {
    from = getAddress(transaction.from);
  } catch (error) {
    logger$4.throwArgumentError("missing from address", "transaction", transaction);
  }
  var nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));
  return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));
}
function getCreate2Address(from, salt, initCodeHash) {
  if (hexDataLength(salt) !== 32) {
    logger$4.throwArgumentError("salt must be 32 bytes", "salt", salt);
  }
  if (hexDataLength(initCodeHash) !== 32) {
    logger$4.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", initCodeHash);
  }
  return getAddress(hexDataSlice(keccak256(concat$1(["0xff", getAddress(from), salt, initCodeHash])), 12));
}

var version$4 = "properties/5.7.0";

"use strict";
var __awaiter$1 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var logger$3 = new Logger(version$4);
function defineReadOnly(object, name, value) {
  Object.defineProperty(object, name, {
    enumerable: true,
    value: value,
    writable: false
  });
}
// Crawl up the constructor chain to find a static method
function getStatic(ctor, key) {
  for (var i = 0; i < 32; i++) {
    if (ctor[key]) {
      return ctor[key];
    }
    if (!ctor.prototype || _typeof(ctor.prototype) !== "object") {
      break;
    }
    ctor = Object.getPrototypeOf(ctor.prototype).constructor;
  }
  return null;
}
function resolveProperties(object) {
  return __awaiter$1(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var promises, results;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          promises = Object.keys(object).map(function (key) {
            var value = object[key];
            return Promise.resolve(value).then(function (v) {
              return {
                key: key,
                value: v
              };
            });
          });
          _context.next = 3;
          return Promise.all(promises);
        case 3:
          results = _context.sent;
          return _context.abrupt("return", results.reduce(function (accum, result) {
            accum[result.key] = result.value;
            return accum;
          }, {}));
        case 5:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
}
function checkProperties(object, properties) {
  if (!object || _typeof(object) !== "object") {
    logger$3.throwArgumentError("invalid object", "object", object);
  }
  Object.keys(object).forEach(function (key) {
    if (!properties[key]) {
      logger$3.throwArgumentError("invalid object key - " + key, "transaction:" + key, object);
    }
  });
}
function shallowCopy(object) {
  var result = {};
  for (var key in object) {
    result[key] = object[key];
  }
  return result;
}
var opaque = {
  bigint: true,
  "boolean": true,
  "function": true,
  number: true,
  string: true
};
function _isFrozen(object) {
  // Opaque objects are not mutable, so safe to copy by assignment
  if (object === undefined || object === null || opaque[_typeof(object)]) {
    return true;
  }
  if (Array.isArray(object) || _typeof(object) === "object") {
    if (!Object.isFrozen(object)) {
      return false;
    }
    var keys = Object.keys(object);
    for (var i = 0; i < keys.length; i++) {
      var value = null;
      try {
        value = object[keys[i]];
      } catch (error) {
        // If accessing a value triggers an error, it is a getter
        // designed to do so (e.g. Result) and is therefore "frozen"
        continue;
      }
      if (!_isFrozen(value)) {
        return false;
      }
    }
    return true;
  }
  return logger$3.throwArgumentError("Cannot deepCopy ".concat(_typeof(object)), "object", object);
}
// Returns a new copy of object, such that no properties may be replaced.
// New properties may be added only to objects.
function _deepCopy(object) {
  if (_isFrozen(object)) {
    return object;
  }
  // Arrays are mutable, so we need to create a copy
  if (Array.isArray(object)) {
    return Object.freeze(object.map(function (item) {
      return deepCopy(item);
    }));
  }
  if (_typeof(object) === "object") {
    var result = {};
    for (var key in object) {
      var value = object[key];
      if (value === undefined) {
        continue;
      }
      defineReadOnly(result, key, deepCopy(value));
    }
    return result;
  }
  return logger$3.throwArgumentError("Cannot deepCopy ".concat(_typeof(object)), "object", object);
}
function deepCopy(object) {
  return _deepCopy(object);
}
var Description = /*#__PURE__*/_createClass(function Description(info) {
  _classCallCheck(this, Description);
  for (var key in info) {
    this[key] = deepCopy(info[key]);
  }
});

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var logger$2 = new Logger(version$7);
var padding = new Uint8Array(32);
padding.fill(0);
var NegativeOne = BigNumber.from(-1);
var Zero = BigNumber.from(0);
var One = BigNumber.from(1);
var MaxUint256 = BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function hexPadRight(value) {
  var bytes = arrayify(value);
  var padOffset = bytes.length % 32;
  if (padOffset) {
    return hexConcat([bytes, padding.slice(padOffset)]);
  }
  return hexlify(bytes);
}
var hexTrue = hexZeroPad(One.toHexString(), 32);
var hexFalse = hexZeroPad(Zero.toHexString(), 32);
var domainFieldTypes = {
  name: "string",
  version: "string",
  chainId: "uint256",
  verifyingContract: "address",
  salt: "bytes32"
};
var domainFieldNames = ["name", "version", "chainId", "verifyingContract", "salt"];
function checkString(key) {
  return function (value) {
    if (typeof value !== "string") {
      logger$2.throwArgumentError("invalid domain value for ".concat(JSON.stringify(key)), "domain.".concat(key), value);
    }
    return value;
  };
}
var domainChecks = {
  name: checkString("name"),
  version: checkString("version"),
  chainId: function chainId(value) {
    try {
      return BigNumber.from(value).toString();
    } catch (error) {}
    return logger$2.throwArgumentError("invalid domain value for \"chainId\"", "domain.chainId", value);
  },
  verifyingContract: function verifyingContract(value) {
    try {
      return getAddress(value).toLowerCase();
    } catch (error) {}
    return logger$2.throwArgumentError("invalid domain value \"verifyingContract\"", "domain.verifyingContract", value);
  },
  salt: function salt(value) {
    try {
      var bytes = arrayify(value);
      if (bytes.length !== 32) {
        throw new Error("bad length");
      }
      return hexlify(bytes);
    } catch (error) {}
    return logger$2.throwArgumentError("invalid domain value \"salt\"", "domain.salt", value);
  }
};
function getBaseEncoder(type) {
  // intXX and uintXX
  {
    var match = type.match(/^(u?)int(\d*)$/);
    if (match) {
      var signed = match[1] === "";
      var width = parseInt(match[2] || "256");
      if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {
        logger$2.throwArgumentError("invalid numeric width", "type", type);
      }
      var boundsUpper = MaxUint256.mask(signed ? width - 1 : width);
      var boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;
      return function (value) {
        var v = BigNumber.from(value);
        if (v.lt(boundsLower) || v.gt(boundsUpper)) {
          logger$2.throwArgumentError("value out-of-bounds for ".concat(type), "value", value);
        }
        return hexZeroPad(v.toTwos(256).toHexString(), 32);
      };
    }
  }
  // bytesXX
  {
    var _match = type.match(/^bytes(\d+)$/);
    if (_match) {
      var _width = parseInt(_match[1]);
      if (_width === 0 || _width > 32 || _match[1] !== String(_width)) {
        logger$2.throwArgumentError("invalid bytes width", "type", type);
      }
      return function (value) {
        var bytes = arrayify(value);
        if (bytes.length !== _width) {
          logger$2.throwArgumentError("invalid length for ".concat(type), "value", value);
        }
        return hexPadRight(value);
      };
    }
  }
  switch (type) {
    case "address":
      return function (value) {
        return hexZeroPad(getAddress(value), 32);
      };
    case "bool":
      return function (value) {
        return !value ? hexFalse : hexTrue;
      };
    case "bytes":
      return function (value) {
        return keccak256(value);
      };
    case "string":
      return function (value) {
        return id(value);
      };
  }
  return null;
}
function encodeType(name, fields) {
  return "".concat(name, "(").concat(fields.map(function (_ref) {
    var name = _ref.name,
      type = _ref.type;
    return type + " " + name;
  }).join(","), ")");
}
var TypedDataEncoder = /*#__PURE__*/function () {
  function TypedDataEncoder(types) {
    _classCallCheck(this, TypedDataEncoder);
    defineReadOnly(this, "types", Object.freeze(deepCopy(types)));
    defineReadOnly(this, "_encoderCache", {});
    defineReadOnly(this, "_types", {});
    // Link struct types to their direct child structs
    var links = {};
    // Link structs to structs which contain them as a child
    var parents = {};
    // Link all subtypes within a given struct
    var subtypes = {};
    Object.keys(types).forEach(function (type) {
      links[type] = {};
      parents[type] = [];
      subtypes[type] = {};
    });
    var _loop = function _loop(name) {
      var uniqueNames = {};
      types[name].forEach(function (field) {
        // Check each field has a unique name
        if (uniqueNames[field.name]) {
          logger$2.throwArgumentError("duplicate variable name ".concat(JSON.stringify(field.name), " in ").concat(JSON.stringify(name)), "types", types);
        }
        uniqueNames[field.name] = true;
        // Get the base type (drop any array specifiers)
        var baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
        if (baseType === name) {
          logger$2.throwArgumentError("circular type reference to ".concat(JSON.stringify(baseType)), "types", types);
        }
        // Is this a base encoding type?
        var encoder = getBaseEncoder(baseType);
        if (encoder) {
          return;
        }
        if (!parents[baseType]) {
          logger$2.throwArgumentError("unknown type ".concat(JSON.stringify(baseType)), "types", types);
        }
        // Add linkage
        parents[baseType].push(name);
        links[name][baseType] = true;
      });
    };
    for (var name in types) {
      _loop(name);
    }
    // Deduce the primary type
    var primaryTypes = Object.keys(parents).filter(function (n) {
      return parents[n].length === 0;
    });
    if (primaryTypes.length === 0) {
      logger$2.throwArgumentError("missing primary type", "types", types);
    } else if (primaryTypes.length > 1) {
      logger$2.throwArgumentError("ambiguous primary types or unused types: ".concat(primaryTypes.map(function (t) {
        return JSON.stringify(t);
      }).join(", ")), "types", types);
    }
    defineReadOnly(this, "primaryType", primaryTypes[0]);
    // Check for circular type references
    function checkCircular(type, found) {
      if (found[type]) {
        logger$2.throwArgumentError("circular type reference to ".concat(JSON.stringify(type)), "types", types);
      }
      found[type] = true;
      Object.keys(links[type]).forEach(function (child) {
        if (!parents[child]) {
          return;
        }
        // Recursively check children
        checkCircular(child, found);
        // Mark all ancestors as having this decendant
        Object.keys(found).forEach(function (subtype) {
          subtypes[subtype][child] = true;
        });
      });
      delete found[type];
    }
    checkCircular(this.primaryType, {});
    // Compute each fully describe type
    for (var _name in subtypes) {
      var st = Object.keys(subtypes[_name]);
      st.sort();
      this._types[_name] = encodeType(_name, types[_name]) + st.map(function (t) {
        return encodeType(t, types[t]);
      }).join("");
    }
  }
  return _createClass(TypedDataEncoder, [{
    key: "getEncoder",
    value: function getEncoder(type) {
      var encoder = this._encoderCache[type];
      if (!encoder) {
        encoder = this._encoderCache[type] = this._getEncoder(type);
      }
      return encoder;
    }
  }, {
    key: "_getEncoder",
    value: function _getEncoder(type) {
      var _this = this;
      // Basic encoder type (address, bool, uint256, etc)
      {
        var encoder = getBaseEncoder(type);
        if (encoder) {
          return encoder;
        }
      }
      // Array
      var match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
      if (match) {
        var subtype = match[1];
        var subEncoder = this.getEncoder(subtype);
        var length = parseInt(match[3]);
        return function (value) {
          if (length >= 0 && value.length !== length) {
            logger$2.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
          }
          var result = value.map(subEncoder);
          if (_this._types[subtype]) {
            result = result.map(keccak256);
          }
          return keccak256(hexConcat(result));
        };
      }
      // Struct
      var fields = this.types[type];
      if (fields) {
        var encodedType = id(this._types[type]);
        return function (value) {
          var values = fields.map(function (_ref2) {
            var name = _ref2.name,
              type = _ref2.type;
            var result = _this.getEncoder(type)(value[name]);
            if (_this._types[type]) {
              return keccak256(result);
            }
            return result;
          });
          values.unshift(encodedType);
          return hexConcat(values);
        };
      }
      return logger$2.throwArgumentError("unknown type: ".concat(type), "type", type);
    }
  }, {
    key: "encodeType",
    value: function encodeType(name) {
      var result = this._types[name];
      if (!result) {
        logger$2.throwArgumentError("unknown type: ".concat(JSON.stringify(name)), "name", name);
      }
      return result;
    }
  }, {
    key: "encodeData",
    value: function encodeData(type, value) {
      return this.getEncoder(type)(value);
    }
  }, {
    key: "hashStruct",
    value: function hashStruct(name, value) {
      return keccak256(this.encodeData(name, value));
    }
  }, {
    key: "encode",
    value: function encode(value) {
      return this.encodeData(this.primaryType, value);
    }
  }, {
    key: "hash",
    value: function hash(value) {
      return this.hashStruct(this.primaryType, value);
    }
  }, {
    key: "_visit",
    value: function _visit(type, value, callback) {
      var _this2 = this;
      // Basic encoder type (address, bool, uint256, etc)
      {
        var encoder = getBaseEncoder(type);
        if (encoder) {
          return callback(type, value);
        }
      }
      // Array
      var match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
      if (match) {
        var subtype = match[1];
        var length = parseInt(match[3]);
        if (length >= 0 && value.length !== length) {
          logger$2.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
        }
        return value.map(function (v) {
          return _this2._visit(subtype, v, callback);
        });
      }
      // Struct
      var fields = this.types[type];
      if (fields) {
        return fields.reduce(function (accum, _ref3) {
          var name = _ref3.name,
            type = _ref3.type;
          accum[name] = _this2._visit(type, value[name], callback);
          return accum;
        }, {});
      }
      return logger$2.throwArgumentError("unknown type: ".concat(type), "type", type);
    }
  }, {
    key: "visit",
    value: function visit(value, callback) {
      return this._visit(this.primaryType, value, callback);
    }
  }], [{
    key: "from",
    value: function from(types) {
      return new TypedDataEncoder(types);
    }
  }, {
    key: "getPrimaryType",
    value: function getPrimaryType(types) {
      return TypedDataEncoder.from(types).primaryType;
    }
  }, {
    key: "hashStruct",
    value: function hashStruct(name, types, value) {
      return TypedDataEncoder.from(types).hashStruct(name, value);
    }
  }, {
    key: "hashDomain",
    value: function hashDomain(domain) {
      var domainFields = [];
      for (var name in domain) {
        var type = domainFieldTypes[name];
        if (!type) {
          logger$2.throwArgumentError("invalid typed-data domain key: ".concat(JSON.stringify(name)), "domain", domain);
        }
        domainFields.push({
          name: name,
          type: type
        });
      }
      domainFields.sort(function (a, b) {
        return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
      });
      return TypedDataEncoder.hashStruct("EIP712Domain", {
        EIP712Domain: domainFields
      }, domain);
    }
  }, {
    key: "encode",
    value: function encode(domain, types, value) {
      return hexConcat(["0x1901", TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);
    }
  }, {
    key: "hash",
    value: function hash(domain, types, value) {
      return keccak256(TypedDataEncoder.encode(domain, types, value));
    }
    // Replaces all address types with ENS names with their looked up address
  }, {
    key: "resolveNames",
    value: function resolveNames(domain, types, value, resolveName) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var ensCache, encoder, name;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              // Make a copy to isolate it from the object passed in
              domain = shallowCopy(domain);
              // Look up all ENS names
              ensCache = {}; // Do we need to look up the domain's verifyingContract?
              if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {
                ensCache[domain.verifyingContract] = "0x";
              }
              // We are going to use the encoder to visit all the base values
              encoder = TypedDataEncoder.from(types); // Get a list of all the addresses
              encoder.visit(value, function (type, value) {
                if (type === "address" && !isHexString(value, 20)) {
                  ensCache[value] = "0x";
                }
                return value;
              });
              // Lookup each name
              _context.t0 = _regeneratorRuntime().keys(ensCache);
            case 6:
              if ((_context.t1 = _context.t0()).done) {
                _context.next = 13;
                break;
              }
              name = _context.t1.value;
              _context.next = 10;
              return resolveName(name);
            case 10:
              ensCache[name] = _context.sent;
              _context.next = 6;
              break;
            case 13:
              // Replace the domain verifyingContract if needed
              if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
                domain.verifyingContract = ensCache[domain.verifyingContract];
              }
              // Replace all ENS names with their address
              value = encoder.visit(value, function (type, value) {
                if (type === "address" && ensCache[value]) {
                  return ensCache[value];
                }
                return value;
              });
              return _context.abrupt("return", {
                domain: domain,
                value: value
              });
            case 16:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
    }
  }, {
    key: "getPayload",
    value: function getPayload(domain, types, value) {
      // Validate the domain fields
      TypedDataEncoder.hashDomain(domain);
      // Derive the EIP712Domain Struct reference type
      var domainValues = {};
      var domainTypes = [];
      domainFieldNames.forEach(function (name) {
        var value = domain[name];
        if (value == null) {
          return;
        }
        domainValues[name] = domainChecks[name](value);
        domainTypes.push({
          name: name,
          type: domainFieldTypes[name]
        });
      });
      var encoder = TypedDataEncoder.from(types);
      var typesWithDomain = shallowCopy(types);
      if (typesWithDomain.EIP712Domain) {
        logger$2.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
      } else {
        typesWithDomain.EIP712Domain = domainTypes;
      }
      // Validate the data structures and types
      encoder.encode(value);
      return {
        types: typesWithDomain,
        domain: domainValues,
        primaryType: encoder.primaryType,
        message: encoder.visit(value, function (type, value) {
          // bytes
          if (type.match(/^bytes(\d*)/)) {
            return hexlify(arrayify(value));
          }
          // uint or int
          if (type.match(/^u?int/)) {
            return BigNumber.from(value).toString();
          }
          switch (type) {
            case "address":
              return value.toLowerCase();
            case "bool":
              return !!value;
            case "string":
              if (typeof value !== "string") {
                logger$2.throwArgumentError("invalid string", "value", value);
              }
              return value;
          }
          return logger$2.throwArgumentError("unsupported type", "type", type);
        })
      };
    }
  }]);
}();

"use strict";

var bn$8 = {exports: {}};

var bn$7 = bn$8.exports;
(function (module) {
  (function (module, exports) {
    'use strict';

    // Utils
    function assert(val, msg) {
      if (!val) throw new Error(msg || 'Assertion failed');
    }

    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function TempCtor() {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }

    // BN

    function BN(number, base, endian) {
      if (BN.isBN(number)) {
        return number;
      }
      this.negative = 0;
      this.words = null;
      this.length = 0;

      // Reduction context
      this.red = null;
      if (number !== null) {
        if (base === 'le' || base === 'be') {
          endian = base;
          base = 10;
        }
        this._init(number || 0, base || 10, endian || 'be');
      }
    }
    if (_typeof(module) === 'object') {
      module.exports = BN;
    } else {
      exports.BN = BN;
    }
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
      if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
        Buffer = window.Buffer;
      } else {
        Buffer = require$$0$3.Buffer;
      }
    } catch (e) {}
    BN.isBN = function isBN(num) {
      if (num instanceof BN) {
        return true;
      }
      return num !== null && _typeof(num) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
      if (left.cmp(right) > 0) return left;
      return right;
    };
    BN.min = function min(left, right) {
      if (left.cmp(right) < 0) return left;
      return right;
    };
    BN.prototype._init = function init(number, base, endian) {
      if (typeof number === 'number') {
        return this._initNumber(number, base, endian);
      }
      if (_typeof(number) === 'object') {
        return this._initArray(number, base, endian);
      }
      if (base === 'hex') {
        base = 16;
      }
      assert(base === (base | 0) && base >= 2 && base <= 36);
      number = number.toString().replace(/\s+/g, '');
      var start = 0;
      if (number[0] === '-') {
        start++;
        this.negative = 1;
      }
      if (start < number.length) {
        if (base === 16) {
          this._parseHex(number, start, endian);
        } else {
          this._parseBase(number, base, start);
          if (endian === 'le') {
            this._initArray(this.toArray(), base, endian);
          }
        }
      }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
      if (number < 0) {
        this.negative = 1;
        number = -number;
      }
      if (number < 0x4000000) {
        this.words = [number & 0x3ffffff];
        this.length = 1;
      } else if (number < 0x10000000000000) {
        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];
        this.length = 2;
      } else {
        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];
        this.length = 3;
      }
      if (endian !== 'le') return;

      // Reverse the bytes
      this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
      // Perhaps a Uint8Array
      assert(typeof number.length === 'number');
      if (number.length <= 0) {
        this.words = [0];
        this.length = 1;
        return this;
      }
      this.length = Math.ceil(number.length / 3);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }
      var j, w;
      var off = 0;
      if (endian === 'be') {
        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
          this.words[j] |= w << off & 0x3ffffff;
          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      } else if (endian === 'le') {
        for (i = 0, j = 0; i < number.length; i += 3) {
          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
          this.words[j] |= w << off & 0x3ffffff;
          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      }
      return this._strip();
    };
    function parseHex4Bits(string, index) {
      var c = string.charCodeAt(index);
      // '0' - '9'
      if (c >= 48 && c <= 57) {
        return c - 48;
        // 'A' - 'F'
      } else if (c >= 65 && c <= 70) {
        return c - 55;
        // 'a' - 'f'
      } else if (c >= 97 && c <= 102) {
        return c - 87;
      } else {
        assert(false, 'Invalid character in ' + string);
      }
    }
    function parseHexByte(string, lowerBound, index) {
      var r = parseHex4Bits(string, index);
      if (index - 1 >= lowerBound) {
        r |= parseHex4Bits(string, index - 1) << 4;
      }
      return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
      // Create possibly bigger array to ensure that it fits the number
      this.length = Math.ceil((number.length - start) / 6);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }

      // 24-bits chunks
      var off = 0;
      var j = 0;
      var w;
      if (endian === 'be') {
        for (i = number.length - 1; i >= start; i -= 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 0x3ffffff;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      } else {
        var parseLength = number.length - start;
        for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 0x3ffffff;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      }
      this._strip();
    };
    function parseBase(str, start, end, mul) {
      var r = 0;
      var b = 0;
      var len = Math.min(str.length, end);
      for (var i = start; i < len; i++) {
        var c = str.charCodeAt(i) - 48;
        r *= mul;

        // 'a'
        if (c >= 49) {
          b = c - 49 + 0xa;

          // 'A'
        } else if (c >= 17) {
          b = c - 17 + 0xa;

          // '0' - '9'
        } else {
          b = c;
        }
        assert(c >= 0 && b < mul, 'Invalid character');
        r += b;
      }
      return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
      // Initialize as zero
      this.words = [0];
      this.length = 1;

      // Find length of limb in base
      for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
        limbLen++;
      }
      limbLen--;
      limbPow = limbPow / base | 0;
      var total = number.length - start;
      var mod = total % limbLen;
      var end = Math.min(total, total - mod) + start;
      var word = 0;
      for (var i = start; i < end; i += limbLen) {
        word = parseBase(number, i, i + limbLen, base);
        this.imuln(limbPow);
        if (this.words[0] + word < 0x4000000) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      if (mod !== 0) {
        var pow = 1;
        word = parseBase(number, i, number.length, base);
        for (i = 0; i < mod; i++) {
          pow *= base;
        }
        this.imuln(pow);
        if (this.words[0] + word < 0x4000000) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      this._strip();
    };
    BN.prototype.copy = function copy(dest) {
      dest.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        dest.words[i] = this.words[i];
      }
      dest.length = this.length;
      dest.negative = this.negative;
      dest.red = this.red;
    };
    function move(dest, src) {
      dest.words = src.words;
      dest.length = src.length;
      dest.negative = src.negative;
      dest.red = src.red;
    }
    BN.prototype._move = function _move(dest) {
      move(dest, this);
    };
    BN.prototype.clone = function clone() {
      var r = new BN(null);
      this.copy(r);
      return r;
    };
    BN.prototype._expand = function _expand(size) {
      while (this.length < size) {
        this.words[this.length++] = 0;
      }
      return this;
    };

    // Remove leading `0` from `this`
    BN.prototype._strip = function strip() {
      while (this.length > 1 && this.words[this.length - 1] === 0) {
        this.length--;
      }
      return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
      // -0 = 0
      if (this.length === 1 && this.words[0] === 0) {
        this.negative = 0;
      }
      return this;
    };

    // Check Symbol.for because not everywhere where Symbol defined
    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
    if (typeof Symbol !== 'undefined' && typeof Symbol["for"] === 'function') {
      try {
        BN.prototype[Symbol["for"]('nodejs.util.inspect.custom')] = inspect;
      } catch (e) {
        BN.prototype.inspect = inspect;
      }
    } else {
      BN.prototype.inspect = inspect;
    }
    function inspect() {
      return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    }

    /*
     var zeros = [];
    var groupSizes = [];
    var groupBases = [];
     var s = '';
    var i = -1;
    while (++i < BN.wordSize) {
      zeros[i] = s;
      s += '0';
    }
    groupSizes[0] = 0;
    groupSizes[1] = 0;
    groupBases[0] = 0;
    groupBases[1] = 0;
    var base = 2 - 1;
    while (++base < 36 + 1) {
      var groupSize = 0;
      var groupBase = 1;
      while (groupBase < (1 << BN.wordSize) / base) {
        groupBase *= base;
        groupSize += 1;
      }
      groupSizes[base] = groupSize;
      groupBases[base] = groupBase;
    }
     */

    var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];
    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];
    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    BN.prototype.toString = function toString(base, padding) {
      base = base || 10;
      padding = padding | 0 || 1;
      var out;
      if (base === 16 || base === 'hex') {
        out = '';
        var off = 0;
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = this.words[i];
          var word = ((w << off | carry) & 0xffffff).toString(16);
          carry = w >>> 24 - off & 0xffffff;
          off += 2;
          if (off >= 26) {
            off -= 26;
            i--;
          }
          if (carry !== 0 || i !== this.length - 1) {
            out = zeros[6 - word.length] + word + out;
          } else {
            out = word + out;
          }
        }
        if (carry !== 0) {
          out = carry.toString(16) + out;
        }
        while (out.length % padding !== 0) {
          out = '0' + out;
        }
        if (this.negative !== 0) {
          out = '-' + out;
        }
        return out;
      }
      if (base === (base | 0) && base >= 2 && base <= 36) {
        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
        var groupSize = groupSizes[base];
        // var groupBase = Math.pow(base, groupSize);
        var groupBase = groupBases[base];
        out = '';
        var c = this.clone();
        c.negative = 0;
        while (!c.isZero()) {
          var r = c.modrn(groupBase).toString(base);
          c = c.idivn(groupBase);
          if (!c.isZero()) {
            out = zeros[groupSize - r.length] + r + out;
          } else {
            out = r + out;
          }
        }
        if (this.isZero()) {
          out = '0' + out;
        }
        while (out.length % padding !== 0) {
          out = '0' + out;
        }
        if (this.negative !== 0) {
          out = '-' + out;
        }
        return out;
      }
      assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
      var ret = this.words[0];
      if (this.length === 2) {
        ret += this.words[1] * 0x4000000;
      } else if (this.length === 3 && this.words[2] === 0x01) {
        // NOTE: at this stage it is known that the top bit is set
        ret += 0x10000000000000 + this.words[1] * 0x4000000;
      } else if (this.length > 2) {
        assert(false, 'Number can only safely store up to 53 bits');
      }
      return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
      return this.toString(16, 2);
    };
    if (Buffer) {
      BN.prototype.toBuffer = function toBuffer(endian, length) {
        return this.toArrayLike(Buffer, endian, length);
      };
    }
    BN.prototype.toArray = function toArray(endian, length) {
      return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate(ArrayType, size) {
      if (ArrayType.allocUnsafe) {
        return ArrayType.allocUnsafe(size);
      }
      return new ArrayType(size);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
      this._strip();
      var byteLength = this.byteLength();
      var reqLength = length || Math.max(1, byteLength);
      assert(byteLength <= reqLength, 'byte array longer than desired length');
      assert(reqLength > 0, 'Requested array length <= 0');
      var res = allocate(ArrayType, reqLength);
      var postfix = endian === 'le' ? 'LE' : 'BE';
      this['_toArrayLike' + postfix](res, byteLength);
      return res;
    };
    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
      var position = 0;
      var carry = 0;
      for (var i = 0, shift = 0; i < this.length; i++) {
        var word = this.words[i] << shift | carry;
        res[position++] = word & 0xff;
        if (position < res.length) {
          res[position++] = word >> 8 & 0xff;
        }
        if (position < res.length) {
          res[position++] = word >> 16 & 0xff;
        }
        if (shift === 6) {
          if (position < res.length) {
            res[position++] = word >> 24 & 0xff;
          }
          carry = 0;
          shift = 0;
        } else {
          carry = word >>> 24;
          shift += 2;
        }
      }
      if (position < res.length) {
        res[position++] = carry;
        while (position < res.length) {
          res[position++] = 0;
        }
      }
    };
    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
      var position = res.length - 1;
      var carry = 0;
      for (var i = 0, shift = 0; i < this.length; i++) {
        var word = this.words[i] << shift | carry;
        res[position--] = word & 0xff;
        if (position >= 0) {
          res[position--] = word >> 8 & 0xff;
        }
        if (position >= 0) {
          res[position--] = word >> 16 & 0xff;
        }
        if (shift === 6) {
          if (position >= 0) {
            res[position--] = word >> 24 & 0xff;
          }
          carry = 0;
          shift = 0;
        } else {
          carry = word >>> 24;
          shift += 2;
        }
      }
      if (position >= 0) {
        res[position--] = carry;
        while (position >= 0) {
          res[position--] = 0;
        }
      }
    };
    if (Math.clz32) {
      BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
      };
    } else {
      BN.prototype._countBits = function _countBits(w) {
        var t = w;
        var r = 0;
        if (t >= 0x1000) {
          r += 13;
          t >>>= 13;
        }
        if (t >= 0x40) {
          r += 7;
          t >>>= 7;
        }
        if (t >= 0x8) {
          r += 4;
          t >>>= 4;
        }
        if (t >= 0x02) {
          r += 2;
          t >>>= 2;
        }
        return r + t;
      };
    }
    BN.prototype._zeroBits = function _zeroBits(w) {
      // Short-cut
      if (w === 0) return 26;
      var t = w;
      var r = 0;
      if ((t & 0x1fff) === 0) {
        r += 13;
        t >>>= 13;
      }
      if ((t & 0x7f) === 0) {
        r += 7;
        t >>>= 7;
      }
      if ((t & 0xf) === 0) {
        r += 4;
        t >>>= 4;
      }
      if ((t & 0x3) === 0) {
        r += 2;
        t >>>= 2;
      }
      if ((t & 0x1) === 0) {
        r++;
      }
      return r;
    };

    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
      var w = this.words[this.length - 1];
      var hi = this._countBits(w);
      return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
      var w = new Array(num.bitLength());
      for (var bit = 0; bit < w.length; bit++) {
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        w[bit] = num.words[off] >>> wbit & 0x01;
      }
      return w;
    }

    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
      if (this.isZero()) return 0;
      var r = 0;
      for (var i = 0; i < this.length; i++) {
        var b = this._zeroBits(this.words[i]);
        r += b;
        if (b !== 26) break;
      }
      return r;
    };
    BN.prototype.byteLength = function byteLength() {
      return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
      if (this.negative !== 0) {
        return this.abs().inotn(width).iaddn(1);
      }
      return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
      if (this.testn(width - 1)) {
        return this.notn(width).iaddn(1).ineg();
      }
      return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
      return this.negative !== 0;
    };

    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
      return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
      if (!this.isZero()) {
        this.negative ^= 1;
      }
      return this;
    };

    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
      while (this.length < num.length) {
        this.words[this.length++] = 0;
      }
      for (var i = 0; i < num.length; i++) {
        this.words[i] = this.words[i] | num.words[i];
      }
      return this._strip();
    };
    BN.prototype.ior = function ior(num) {
      assert((this.negative | num.negative) === 0);
      return this.iuor(num);
    };

    // Or `num` with `this`
    BN.prototype.or = function or(num) {
      if (this.length > num.length) return this.clone().ior(num);
      return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
      if (this.length > num.length) return this.clone().iuor(num);
      return num.clone().iuor(this);
    };

    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
      // b = min-length(num, this)
      var b;
      if (this.length > num.length) {
        b = num;
      } else {
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = this.words[i] & num.words[i];
      }
      this.length = b.length;
      return this._strip();
    };
    BN.prototype.iand = function iand(num) {
      assert((this.negative | num.negative) === 0);
      return this.iuand(num);
    };

    // And `num` with `this`
    BN.prototype.and = function and(num) {
      if (this.length > num.length) return this.clone().iand(num);
      return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
      if (this.length > num.length) return this.clone().iuand(num);
      return num.clone().iuand(this);
    };

    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
      // a.length > b.length
      var a;
      var b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = a.words[i] ^ b.words[i];
      }
      if (this !== a) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = a.length;
      return this._strip();
    };
    BN.prototype.ixor = function ixor(num) {
      assert((this.negative | num.negative) === 0);
      return this.iuxor(num);
    };

    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
      if (this.length > num.length) return this.clone().ixor(num);
      return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
      if (this.length > num.length) return this.clone().iuxor(num);
      return num.clone().iuxor(this);
    };

    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
      assert(typeof width === 'number' && width >= 0);
      var bytesNeeded = Math.ceil(width / 26) | 0;
      var bitsLeft = width % 26;

      // Extend the buffer with leading zeroes
      this._expand(bytesNeeded);
      if (bitsLeft > 0) {
        bytesNeeded--;
      }

      // Handle complete words
      for (var i = 0; i < bytesNeeded; i++) {
        this.words[i] = ~this.words[i] & 0x3ffffff;
      }

      // Handle the residue
      if (bitsLeft > 0) {
        this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;
      }

      // And remove leading zeroes
      return this._strip();
    };
    BN.prototype.notn = function notn(width) {
      return this.clone().inotn(width);
    };

    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
      assert(typeof bit === 'number' && bit >= 0);
      var off = bit / 26 | 0;
      var wbit = bit % 26;
      this._expand(off + 1);
      if (val) {
        this.words[off] = this.words[off] | 1 << wbit;
      } else {
        this.words[off] = this.words[off] & ~(1 << wbit);
      }
      return this._strip();
    };

    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
      var r;

      // negative + positive
      if (this.negative !== 0 && num.negative === 0) {
        this.negative = 0;
        r = this.isub(num);
        this.negative ^= 1;
        return this._normSign();

        // positive + negative
      } else if (this.negative === 0 && num.negative !== 0) {
        num.negative = 0;
        r = this.isub(num);
        num.negative = 1;
        return r._normSign();
      }

      // a.length > b.length
      var a, b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
        this.words[i] = r & 0x3ffffff;
        carry = r >>> 26;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r = (a.words[i] | 0) + carry;
        this.words[i] = r & 0x3ffffff;
        carry = r >>> 26;
      }
      this.length = a.length;
      if (carry !== 0) {
        this.words[this.length] = carry;
        this.length++;
        // Copy the rest of the words
      } else if (a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      return this;
    };

    // Add `num` to `this`
    BN.prototype.add = function add(num) {
      var res;
      if (num.negative !== 0 && this.negative === 0) {
        num.negative = 0;
        res = this.sub(num);
        num.negative ^= 1;
        return res;
      } else if (num.negative === 0 && this.negative !== 0) {
        this.negative = 0;
        res = num.sub(this);
        this.negative = 1;
        return res;
      }
      if (this.length > num.length) return this.clone().iadd(num);
      return num.clone().iadd(this);
    };

    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
      // this - (-num) = this + num
      if (num.negative !== 0) {
        num.negative = 0;
        var r = this.iadd(num);
        num.negative = 1;
        return r._normSign();

        // -this - num = -(this + num)
      } else if (this.negative !== 0) {
        this.negative = 0;
        this.iadd(num);
        this.negative = 1;
        return this._normSign();
      }

      // At this point both numbers are positive
      var cmp = this.cmp(num);

      // Optimization - zeroify
      if (cmp === 0) {
        this.negative = 0;
        this.length = 1;
        this.words[0] = 0;
        return this;
      }

      // a > b
      var a, b;
      if (cmp > 0) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
        carry = r >> 26;
        this.words[i] = r & 0x3ffffff;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r = (a.words[i] | 0) + carry;
        carry = r >> 26;
        this.words[i] = r & 0x3ffffff;
      }

      // Copy rest of the words
      if (carry === 0 && i < a.length && a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = Math.max(this.length, i);
      if (a !== this) {
        this.negative = 1;
      }
      return this._strip();
    };

    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
      return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
      out.negative = num.negative ^ self.negative;
      var len = self.length + num.length | 0;
      out.length = len;
      len = len - 1 | 0;

      // Peel one iteration (compiler can't do it, because of code complexity)
      var a = self.words[0] | 0;
      var b = num.words[0] | 0;
      var r = a * b;
      var lo = r & 0x3ffffff;
      var carry = r / 0x4000000 | 0;
      out.words[0] = lo;
      for (var k = 1; k < len; k++) {
        // Sum all words with the same `i + j = k` and accumulate `ncarry`,
        // note that ncarry could be >= 0x3ffffff
        var ncarry = carry >>> 26;
        var rword = carry & 0x3ffffff;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
          var i = k - j | 0;
          a = self.words[i] | 0;
          b = num.words[j] | 0;
          r = a * b + rword;
          ncarry += r / 0x4000000 | 0;
          rword = r & 0x3ffffff;
        }
        out.words[k] = rword | 0;
        carry = ncarry | 0;
      }
      if (carry !== 0) {
        out.words[k] = carry | 0;
      } else {
        out.length--;
      }
      return out._strip();
    }

    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo(self, num, out) {
      var a = self.words;
      var b = num.words;
      var o = out.words;
      var c = 0;
      var lo;
      var mid;
      var hi;
      var a0 = a[0] | 0;
      var al0 = a0 & 0x1fff;
      var ah0 = a0 >>> 13;
      var a1 = a[1] | 0;
      var al1 = a1 & 0x1fff;
      var ah1 = a1 >>> 13;
      var a2 = a[2] | 0;
      var al2 = a2 & 0x1fff;
      var ah2 = a2 >>> 13;
      var a3 = a[3] | 0;
      var al3 = a3 & 0x1fff;
      var ah3 = a3 >>> 13;
      var a4 = a[4] | 0;
      var al4 = a4 & 0x1fff;
      var ah4 = a4 >>> 13;
      var a5 = a[5] | 0;
      var al5 = a5 & 0x1fff;
      var ah5 = a5 >>> 13;
      var a6 = a[6] | 0;
      var al6 = a6 & 0x1fff;
      var ah6 = a6 >>> 13;
      var a7 = a[7] | 0;
      var al7 = a7 & 0x1fff;
      var ah7 = a7 >>> 13;
      var a8 = a[8] | 0;
      var al8 = a8 & 0x1fff;
      var ah8 = a8 >>> 13;
      var a9 = a[9] | 0;
      var al9 = a9 & 0x1fff;
      var ah9 = a9 >>> 13;
      var b0 = b[0] | 0;
      var bl0 = b0 & 0x1fff;
      var bh0 = b0 >>> 13;
      var b1 = b[1] | 0;
      var bl1 = b1 & 0x1fff;
      var bh1 = b1 >>> 13;
      var b2 = b[2] | 0;
      var bl2 = b2 & 0x1fff;
      var bh2 = b2 >>> 13;
      var b3 = b[3] | 0;
      var bl3 = b3 & 0x1fff;
      var bh3 = b3 >>> 13;
      var b4 = b[4] | 0;
      var bl4 = b4 & 0x1fff;
      var bh4 = b4 >>> 13;
      var b5 = b[5] | 0;
      var bl5 = b5 & 0x1fff;
      var bh5 = b5 >>> 13;
      var b6 = b[6] | 0;
      var bl6 = b6 & 0x1fff;
      var bh6 = b6 >>> 13;
      var b7 = b[7] | 0;
      var bl7 = b7 & 0x1fff;
      var bh7 = b7 >>> 13;
      var b8 = b[8] | 0;
      var bl8 = b8 & 0x1fff;
      var bh8 = b8 >>> 13;
      var b9 = b[9] | 0;
      var bl9 = b9 & 0x1fff;
      var bh9 = b9 >>> 13;
      out.negative = self.negative ^ num.negative;
      out.length = 19;
      /* k = 0 */
      lo = Math.imul(al0, bl0);
      mid = Math.imul(al0, bh0);
      mid = mid + Math.imul(ah0, bl0) | 0;
      hi = Math.imul(ah0, bh0);
      var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
      w0 &= 0x3ffffff;
      /* k = 1 */
      lo = Math.imul(al1, bl0);
      mid = Math.imul(al1, bh0);
      mid = mid + Math.imul(ah1, bl0) | 0;
      hi = Math.imul(ah1, bh0);
      lo = lo + Math.imul(al0, bl1) | 0;
      mid = mid + Math.imul(al0, bh1) | 0;
      mid = mid + Math.imul(ah0, bl1) | 0;
      hi = hi + Math.imul(ah0, bh1) | 0;
      var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
      w1 &= 0x3ffffff;
      /* k = 2 */
      lo = Math.imul(al2, bl0);
      mid = Math.imul(al2, bh0);
      mid = mid + Math.imul(ah2, bl0) | 0;
      hi = Math.imul(ah2, bh0);
      lo = lo + Math.imul(al1, bl1) | 0;
      mid = mid + Math.imul(al1, bh1) | 0;
      mid = mid + Math.imul(ah1, bl1) | 0;
      hi = hi + Math.imul(ah1, bh1) | 0;
      lo = lo + Math.imul(al0, bl2) | 0;
      mid = mid + Math.imul(al0, bh2) | 0;
      mid = mid + Math.imul(ah0, bl2) | 0;
      hi = hi + Math.imul(ah0, bh2) | 0;
      var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
      w2 &= 0x3ffffff;
      /* k = 3 */
      lo = Math.imul(al3, bl0);
      mid = Math.imul(al3, bh0);
      mid = mid + Math.imul(ah3, bl0) | 0;
      hi = Math.imul(ah3, bh0);
      lo = lo + Math.imul(al2, bl1) | 0;
      mid = mid + Math.imul(al2, bh1) | 0;
      mid = mid + Math.imul(ah2, bl1) | 0;
      hi = hi + Math.imul(ah2, bh1) | 0;
      lo = lo + Math.imul(al1, bl2) | 0;
      mid = mid + Math.imul(al1, bh2) | 0;
      mid = mid + Math.imul(ah1, bl2) | 0;
      hi = hi + Math.imul(ah1, bh2) | 0;
      lo = lo + Math.imul(al0, bl3) | 0;
      mid = mid + Math.imul(al0, bh3) | 0;
      mid = mid + Math.imul(ah0, bl3) | 0;
      hi = hi + Math.imul(ah0, bh3) | 0;
      var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
      w3 &= 0x3ffffff;
      /* k = 4 */
      lo = Math.imul(al4, bl0);
      mid = Math.imul(al4, bh0);
      mid = mid + Math.imul(ah4, bl0) | 0;
      hi = Math.imul(ah4, bh0);
      lo = lo + Math.imul(al3, bl1) | 0;
      mid = mid + Math.imul(al3, bh1) | 0;
      mid = mid + Math.imul(ah3, bl1) | 0;
      hi = hi + Math.imul(ah3, bh1) | 0;
      lo = lo + Math.imul(al2, bl2) | 0;
      mid = mid + Math.imul(al2, bh2) | 0;
      mid = mid + Math.imul(ah2, bl2) | 0;
      hi = hi + Math.imul(ah2, bh2) | 0;
      lo = lo + Math.imul(al1, bl3) | 0;
      mid = mid + Math.imul(al1, bh3) | 0;
      mid = mid + Math.imul(ah1, bl3) | 0;
      hi = hi + Math.imul(ah1, bh3) | 0;
      lo = lo + Math.imul(al0, bl4) | 0;
      mid = mid + Math.imul(al0, bh4) | 0;
      mid = mid + Math.imul(ah0, bl4) | 0;
      hi = hi + Math.imul(ah0, bh4) | 0;
      var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
      w4 &= 0x3ffffff;
      /* k = 5 */
      lo = Math.imul(al5, bl0);
      mid = Math.imul(al5, bh0);
      mid = mid + Math.imul(ah5, bl0) | 0;
      hi = Math.imul(ah5, bh0);
      lo = lo + Math.imul(al4, bl1) | 0;
      mid = mid + Math.imul(al4, bh1) | 0;
      mid = mid + Math.imul(ah4, bl1) | 0;
      hi = hi + Math.imul(ah4, bh1) | 0;
      lo = lo + Math.imul(al3, bl2) | 0;
      mid = mid + Math.imul(al3, bh2) | 0;
      mid = mid + Math.imul(ah3, bl2) | 0;
      hi = hi + Math.imul(ah3, bh2) | 0;
      lo = lo + Math.imul(al2, bl3) | 0;
      mid = mid + Math.imul(al2, bh3) | 0;
      mid = mid + Math.imul(ah2, bl3) | 0;
      hi = hi + Math.imul(ah2, bh3) | 0;
      lo = lo + Math.imul(al1, bl4) | 0;
      mid = mid + Math.imul(al1, bh4) | 0;
      mid = mid + Math.imul(ah1, bl4) | 0;
      hi = hi + Math.imul(ah1, bh4) | 0;
      lo = lo + Math.imul(al0, bl5) | 0;
      mid = mid + Math.imul(al0, bh5) | 0;
      mid = mid + Math.imul(ah0, bl5) | 0;
      hi = hi + Math.imul(ah0, bh5) | 0;
      var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
      w5 &= 0x3ffffff;
      /* k = 6 */
      lo = Math.imul(al6, bl0);
      mid = Math.imul(al6, bh0);
      mid = mid + Math.imul(ah6, bl0) | 0;
      hi = Math.imul(ah6, bh0);
      lo = lo + Math.imul(al5, bl1) | 0;
      mid = mid + Math.imul(al5, bh1) | 0;
      mid = mid + Math.imul(ah5, bl1) | 0;
      hi = hi + Math.imul(ah5, bh1) | 0;
      lo = lo + Math.imul(al4, bl2) | 0;
      mid = mid + Math.imul(al4, bh2) | 0;
      mid = mid + Math.imul(ah4, bl2) | 0;
      hi = hi + Math.imul(ah4, bh2) | 0;
      lo = lo + Math.imul(al3, bl3) | 0;
      mid = mid + Math.imul(al3, bh3) | 0;
      mid = mid + Math.imul(ah3, bl3) | 0;
      hi = hi + Math.imul(ah3, bh3) | 0;
      lo = lo + Math.imul(al2, bl4) | 0;
      mid = mid + Math.imul(al2, bh4) | 0;
      mid = mid + Math.imul(ah2, bl4) | 0;
      hi = hi + Math.imul(ah2, bh4) | 0;
      lo = lo + Math.imul(al1, bl5) | 0;
      mid = mid + Math.imul(al1, bh5) | 0;
      mid = mid + Math.imul(ah1, bl5) | 0;
      hi = hi + Math.imul(ah1, bh5) | 0;
      lo = lo + Math.imul(al0, bl6) | 0;
      mid = mid + Math.imul(al0, bh6) | 0;
      mid = mid + Math.imul(ah0, bl6) | 0;
      hi = hi + Math.imul(ah0, bh6) | 0;
      var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
      w6 &= 0x3ffffff;
      /* k = 7 */
      lo = Math.imul(al7, bl0);
      mid = Math.imul(al7, bh0);
      mid = mid + Math.imul(ah7, bl0) | 0;
      hi = Math.imul(ah7, bh0);
      lo = lo + Math.imul(al6, bl1) | 0;
      mid = mid + Math.imul(al6, bh1) | 0;
      mid = mid + Math.imul(ah6, bl1) | 0;
      hi = hi + Math.imul(ah6, bh1) | 0;
      lo = lo + Math.imul(al5, bl2) | 0;
      mid = mid + Math.imul(al5, bh2) | 0;
      mid = mid + Math.imul(ah5, bl2) | 0;
      hi = hi + Math.imul(ah5, bh2) | 0;
      lo = lo + Math.imul(al4, bl3) | 0;
      mid = mid + Math.imul(al4, bh3) | 0;
      mid = mid + Math.imul(ah4, bl3) | 0;
      hi = hi + Math.imul(ah4, bh3) | 0;
      lo = lo + Math.imul(al3, bl4) | 0;
      mid = mid + Math.imul(al3, bh4) | 0;
      mid = mid + Math.imul(ah3, bl4) | 0;
      hi = hi + Math.imul(ah3, bh4) | 0;
      lo = lo + Math.imul(al2, bl5) | 0;
      mid = mid + Math.imul(al2, bh5) | 0;
      mid = mid + Math.imul(ah2, bl5) | 0;
      hi = hi + Math.imul(ah2, bh5) | 0;
      lo = lo + Math.imul(al1, bl6) | 0;
      mid = mid + Math.imul(al1, bh6) | 0;
      mid = mid + Math.imul(ah1, bl6) | 0;
      hi = hi + Math.imul(ah1, bh6) | 0;
      lo = lo + Math.imul(al0, bl7) | 0;
      mid = mid + Math.imul(al0, bh7) | 0;
      mid = mid + Math.imul(ah0, bl7) | 0;
      hi = hi + Math.imul(ah0, bh7) | 0;
      var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
      w7 &= 0x3ffffff;
      /* k = 8 */
      lo = Math.imul(al8, bl0);
      mid = Math.imul(al8, bh0);
      mid = mid + Math.imul(ah8, bl0) | 0;
      hi = Math.imul(ah8, bh0);
      lo = lo + Math.imul(al7, bl1) | 0;
      mid = mid + Math.imul(al7, bh1) | 0;
      mid = mid + Math.imul(ah7, bl1) | 0;
      hi = hi + Math.imul(ah7, bh1) | 0;
      lo = lo + Math.imul(al6, bl2) | 0;
      mid = mid + Math.imul(al6, bh2) | 0;
      mid = mid + Math.imul(ah6, bl2) | 0;
      hi = hi + Math.imul(ah6, bh2) | 0;
      lo = lo + Math.imul(al5, bl3) | 0;
      mid = mid + Math.imul(al5, bh3) | 0;
      mid = mid + Math.imul(ah5, bl3) | 0;
      hi = hi + Math.imul(ah5, bh3) | 0;
      lo = lo + Math.imul(al4, bl4) | 0;
      mid = mid + Math.imul(al4, bh4) | 0;
      mid = mid + Math.imul(ah4, bl4) | 0;
      hi = hi + Math.imul(ah4, bh4) | 0;
      lo = lo + Math.imul(al3, bl5) | 0;
      mid = mid + Math.imul(al3, bh5) | 0;
      mid = mid + Math.imul(ah3, bl5) | 0;
      hi = hi + Math.imul(ah3, bh5) | 0;
      lo = lo + Math.imul(al2, bl6) | 0;
      mid = mid + Math.imul(al2, bh6) | 0;
      mid = mid + Math.imul(ah2, bl6) | 0;
      hi = hi + Math.imul(ah2, bh6) | 0;
      lo = lo + Math.imul(al1, bl7) | 0;
      mid = mid + Math.imul(al1, bh7) | 0;
      mid = mid + Math.imul(ah1, bl7) | 0;
      hi = hi + Math.imul(ah1, bh7) | 0;
      lo = lo + Math.imul(al0, bl8) | 0;
      mid = mid + Math.imul(al0, bh8) | 0;
      mid = mid + Math.imul(ah0, bl8) | 0;
      hi = hi + Math.imul(ah0, bh8) | 0;
      var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
      w8 &= 0x3ffffff;
      /* k = 9 */
      lo = Math.imul(al9, bl0);
      mid = Math.imul(al9, bh0);
      mid = mid + Math.imul(ah9, bl0) | 0;
      hi = Math.imul(ah9, bh0);
      lo = lo + Math.imul(al8, bl1) | 0;
      mid = mid + Math.imul(al8, bh1) | 0;
      mid = mid + Math.imul(ah8, bl1) | 0;
      hi = hi + Math.imul(ah8, bh1) | 0;
      lo = lo + Math.imul(al7, bl2) | 0;
      mid = mid + Math.imul(al7, bh2) | 0;
      mid = mid + Math.imul(ah7, bl2) | 0;
      hi = hi + Math.imul(ah7, bh2) | 0;
      lo = lo + Math.imul(al6, bl3) | 0;
      mid = mid + Math.imul(al6, bh3) | 0;
      mid = mid + Math.imul(ah6, bl3) | 0;
      hi = hi + Math.imul(ah6, bh3) | 0;
      lo = lo + Math.imul(al5, bl4) | 0;
      mid = mid + Math.imul(al5, bh4) | 0;
      mid = mid + Math.imul(ah5, bl4) | 0;
      hi = hi + Math.imul(ah5, bh4) | 0;
      lo = lo + Math.imul(al4, bl5) | 0;
      mid = mid + Math.imul(al4, bh5) | 0;
      mid = mid + Math.imul(ah4, bl5) | 0;
      hi = hi + Math.imul(ah4, bh5) | 0;
      lo = lo + Math.imul(al3, bl6) | 0;
      mid = mid + Math.imul(al3, bh6) | 0;
      mid = mid + Math.imul(ah3, bl6) | 0;
      hi = hi + Math.imul(ah3, bh6) | 0;
      lo = lo + Math.imul(al2, bl7) | 0;
      mid = mid + Math.imul(al2, bh7) | 0;
      mid = mid + Math.imul(ah2, bl7) | 0;
      hi = hi + Math.imul(ah2, bh7) | 0;
      lo = lo + Math.imul(al1, bl8) | 0;
      mid = mid + Math.imul(al1, bh8) | 0;
      mid = mid + Math.imul(ah1, bl8) | 0;
      hi = hi + Math.imul(ah1, bh8) | 0;
      lo = lo + Math.imul(al0, bl9) | 0;
      mid = mid + Math.imul(al0, bh9) | 0;
      mid = mid + Math.imul(ah0, bl9) | 0;
      hi = hi + Math.imul(ah0, bh9) | 0;
      var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
      w9 &= 0x3ffffff;
      /* k = 10 */
      lo = Math.imul(al9, bl1);
      mid = Math.imul(al9, bh1);
      mid = mid + Math.imul(ah9, bl1) | 0;
      hi = Math.imul(ah9, bh1);
      lo = lo + Math.imul(al8, bl2) | 0;
      mid = mid + Math.imul(al8, bh2) | 0;
      mid = mid + Math.imul(ah8, bl2) | 0;
      hi = hi + Math.imul(ah8, bh2) | 0;
      lo = lo + Math.imul(al7, bl3) | 0;
      mid = mid + Math.imul(al7, bh3) | 0;
      mid = mid + Math.imul(ah7, bl3) | 0;
      hi = hi + Math.imul(ah7, bh3) | 0;
      lo = lo + Math.imul(al6, bl4) | 0;
      mid = mid + Math.imul(al6, bh4) | 0;
      mid = mid + Math.imul(ah6, bl4) | 0;
      hi = hi + Math.imul(ah6, bh4) | 0;
      lo = lo + Math.imul(al5, bl5) | 0;
      mid = mid + Math.imul(al5, bh5) | 0;
      mid = mid + Math.imul(ah5, bl5) | 0;
      hi = hi + Math.imul(ah5, bh5) | 0;
      lo = lo + Math.imul(al4, bl6) | 0;
      mid = mid + Math.imul(al4, bh6) | 0;
      mid = mid + Math.imul(ah4, bl6) | 0;
      hi = hi + Math.imul(ah4, bh6) | 0;
      lo = lo + Math.imul(al3, bl7) | 0;
      mid = mid + Math.imul(al3, bh7) | 0;
      mid = mid + Math.imul(ah3, bl7) | 0;
      hi = hi + Math.imul(ah3, bh7) | 0;
      lo = lo + Math.imul(al2, bl8) | 0;
      mid = mid + Math.imul(al2, bh8) | 0;
      mid = mid + Math.imul(ah2, bl8) | 0;
      hi = hi + Math.imul(ah2, bh8) | 0;
      lo = lo + Math.imul(al1, bl9) | 0;
      mid = mid + Math.imul(al1, bh9) | 0;
      mid = mid + Math.imul(ah1, bl9) | 0;
      hi = hi + Math.imul(ah1, bh9) | 0;
      var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
      w10 &= 0x3ffffff;
      /* k = 11 */
      lo = Math.imul(al9, bl2);
      mid = Math.imul(al9, bh2);
      mid = mid + Math.imul(ah9, bl2) | 0;
      hi = Math.imul(ah9, bh2);
      lo = lo + Math.imul(al8, bl3) | 0;
      mid = mid + Math.imul(al8, bh3) | 0;
      mid = mid + Math.imul(ah8, bl3) | 0;
      hi = hi + Math.imul(ah8, bh3) | 0;
      lo = lo + Math.imul(al7, bl4) | 0;
      mid = mid + Math.imul(al7, bh4) | 0;
      mid = mid + Math.imul(ah7, bl4) | 0;
      hi = hi + Math.imul(ah7, bh4) | 0;
      lo = lo + Math.imul(al6, bl5) | 0;
      mid = mid + Math.imul(al6, bh5) | 0;
      mid = mid + Math.imul(ah6, bl5) | 0;
      hi = hi + Math.imul(ah6, bh5) | 0;
      lo = lo + Math.imul(al5, bl6) | 0;
      mid = mid + Math.imul(al5, bh6) | 0;
      mid = mid + Math.imul(ah5, bl6) | 0;
      hi = hi + Math.imul(ah5, bh6) | 0;
      lo = lo + Math.imul(al4, bl7) | 0;
      mid = mid + Math.imul(al4, bh7) | 0;
      mid = mid + Math.imul(ah4, bl7) | 0;
      hi = hi + Math.imul(ah4, bh7) | 0;
      lo = lo + Math.imul(al3, bl8) | 0;
      mid = mid + Math.imul(al3, bh8) | 0;
      mid = mid + Math.imul(ah3, bl8) | 0;
      hi = hi + Math.imul(ah3, bh8) | 0;
      lo = lo + Math.imul(al2, bl9) | 0;
      mid = mid + Math.imul(al2, bh9) | 0;
      mid = mid + Math.imul(ah2, bl9) | 0;
      hi = hi + Math.imul(ah2, bh9) | 0;
      var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
      w11 &= 0x3ffffff;
      /* k = 12 */
      lo = Math.imul(al9, bl3);
      mid = Math.imul(al9, bh3);
      mid = mid + Math.imul(ah9, bl3) | 0;
      hi = Math.imul(ah9, bh3);
      lo = lo + Math.imul(al8, bl4) | 0;
      mid = mid + Math.imul(al8, bh4) | 0;
      mid = mid + Math.imul(ah8, bl4) | 0;
      hi = hi + Math.imul(ah8, bh4) | 0;
      lo = lo + Math.imul(al7, bl5) | 0;
      mid = mid + Math.imul(al7, bh5) | 0;
      mid = mid + Math.imul(ah7, bl5) | 0;
      hi = hi + Math.imul(ah7, bh5) | 0;
      lo = lo + Math.imul(al6, bl6) | 0;
      mid = mid + Math.imul(al6, bh6) | 0;
      mid = mid + Math.imul(ah6, bl6) | 0;
      hi = hi + Math.imul(ah6, bh6) | 0;
      lo = lo + Math.imul(al5, bl7) | 0;
      mid = mid + Math.imul(al5, bh7) | 0;
      mid = mid + Math.imul(ah5, bl7) | 0;
      hi = hi + Math.imul(ah5, bh7) | 0;
      lo = lo + Math.imul(al4, bl8) | 0;
      mid = mid + Math.imul(al4, bh8) | 0;
      mid = mid + Math.imul(ah4, bl8) | 0;
      hi = hi + Math.imul(ah4, bh8) | 0;
      lo = lo + Math.imul(al3, bl9) | 0;
      mid = mid + Math.imul(al3, bh9) | 0;
      mid = mid + Math.imul(ah3, bl9) | 0;
      hi = hi + Math.imul(ah3, bh9) | 0;
      var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
      w12 &= 0x3ffffff;
      /* k = 13 */
      lo = Math.imul(al9, bl4);
      mid = Math.imul(al9, bh4);
      mid = mid + Math.imul(ah9, bl4) | 0;
      hi = Math.imul(ah9, bh4);
      lo = lo + Math.imul(al8, bl5) | 0;
      mid = mid + Math.imul(al8, bh5) | 0;
      mid = mid + Math.imul(ah8, bl5) | 0;
      hi = hi + Math.imul(ah8, bh5) | 0;
      lo = lo + Math.imul(al7, bl6) | 0;
      mid = mid + Math.imul(al7, bh6) | 0;
      mid = mid + Math.imul(ah7, bl6) | 0;
      hi = hi + Math.imul(ah7, bh6) | 0;
      lo = lo + Math.imul(al6, bl7) | 0;
      mid = mid + Math.imul(al6, bh7) | 0;
      mid = mid + Math.imul(ah6, bl7) | 0;
      hi = hi + Math.imul(ah6, bh7) | 0;
      lo = lo + Math.imul(al5, bl8) | 0;
      mid = mid + Math.imul(al5, bh8) | 0;
      mid = mid + Math.imul(ah5, bl8) | 0;
      hi = hi + Math.imul(ah5, bh8) | 0;
      lo = lo + Math.imul(al4, bl9) | 0;
      mid = mid + Math.imul(al4, bh9) | 0;
      mid = mid + Math.imul(ah4, bl9) | 0;
      hi = hi + Math.imul(ah4, bh9) | 0;
      var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
      w13 &= 0x3ffffff;
      /* k = 14 */
      lo = Math.imul(al9, bl5);
      mid = Math.imul(al9, bh5);
      mid = mid + Math.imul(ah9, bl5) | 0;
      hi = Math.imul(ah9, bh5);
      lo = lo + Math.imul(al8, bl6) | 0;
      mid = mid + Math.imul(al8, bh6) | 0;
      mid = mid + Math.imul(ah8, bl6) | 0;
      hi = hi + Math.imul(ah8, bh6) | 0;
      lo = lo + Math.imul(al7, bl7) | 0;
      mid = mid + Math.imul(al7, bh7) | 0;
      mid = mid + Math.imul(ah7, bl7) | 0;
      hi = hi + Math.imul(ah7, bh7) | 0;
      lo = lo + Math.imul(al6, bl8) | 0;
      mid = mid + Math.imul(al6, bh8) | 0;
      mid = mid + Math.imul(ah6, bl8) | 0;
      hi = hi + Math.imul(ah6, bh8) | 0;
      lo = lo + Math.imul(al5, bl9) | 0;
      mid = mid + Math.imul(al5, bh9) | 0;
      mid = mid + Math.imul(ah5, bl9) | 0;
      hi = hi + Math.imul(ah5, bh9) | 0;
      var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
      w14 &= 0x3ffffff;
      /* k = 15 */
      lo = Math.imul(al9, bl6);
      mid = Math.imul(al9, bh6);
      mid = mid + Math.imul(ah9, bl6) | 0;
      hi = Math.imul(ah9, bh6);
      lo = lo + Math.imul(al8, bl7) | 0;
      mid = mid + Math.imul(al8, bh7) | 0;
      mid = mid + Math.imul(ah8, bl7) | 0;
      hi = hi + Math.imul(ah8, bh7) | 0;
      lo = lo + Math.imul(al7, bl8) | 0;
      mid = mid + Math.imul(al7, bh8) | 0;
      mid = mid + Math.imul(ah7, bl8) | 0;
      hi = hi + Math.imul(ah7, bh8) | 0;
      lo = lo + Math.imul(al6, bl9) | 0;
      mid = mid + Math.imul(al6, bh9) | 0;
      mid = mid + Math.imul(ah6, bl9) | 0;
      hi = hi + Math.imul(ah6, bh9) | 0;
      var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
      w15 &= 0x3ffffff;
      /* k = 16 */
      lo = Math.imul(al9, bl7);
      mid = Math.imul(al9, bh7);
      mid = mid + Math.imul(ah9, bl7) | 0;
      hi = Math.imul(ah9, bh7);
      lo = lo + Math.imul(al8, bl8) | 0;
      mid = mid + Math.imul(al8, bh8) | 0;
      mid = mid + Math.imul(ah8, bl8) | 0;
      hi = hi + Math.imul(ah8, bh8) | 0;
      lo = lo + Math.imul(al7, bl9) | 0;
      mid = mid + Math.imul(al7, bh9) | 0;
      mid = mid + Math.imul(ah7, bl9) | 0;
      hi = hi + Math.imul(ah7, bh9) | 0;
      var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
      w16 &= 0x3ffffff;
      /* k = 17 */
      lo = Math.imul(al9, bl8);
      mid = Math.imul(al9, bh8);
      mid = mid + Math.imul(ah9, bl8) | 0;
      hi = Math.imul(ah9, bh8);
      lo = lo + Math.imul(al8, bl9) | 0;
      mid = mid + Math.imul(al8, bh9) | 0;
      mid = mid + Math.imul(ah8, bl9) | 0;
      hi = hi + Math.imul(ah8, bh9) | 0;
      var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
      w17 &= 0x3ffffff;
      /* k = 18 */
      lo = Math.imul(al9, bl9);
      mid = Math.imul(al9, bh9);
      mid = mid + Math.imul(ah9, bl9) | 0;
      hi = Math.imul(ah9, bh9);
      var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
      w18 &= 0x3ffffff;
      o[0] = w0;
      o[1] = w1;
      o[2] = w2;
      o[3] = w3;
      o[4] = w4;
      o[5] = w5;
      o[6] = w6;
      o[7] = w7;
      o[8] = w8;
      o[9] = w9;
      o[10] = w10;
      o[11] = w11;
      o[12] = w12;
      o[13] = w13;
      o[14] = w14;
      o[15] = w15;
      o[16] = w16;
      o[17] = w17;
      o[18] = w18;
      if (c !== 0) {
        o[19] = c;
        out.length++;
      }
      return out;
    };

    // Polyfill comb
    if (!Math.imul) {
      comb10MulTo = smallMulTo;
    }
    function bigMulTo(self, num, out) {
      out.negative = num.negative ^ self.negative;
      out.length = self.length + num.length;
      var carry = 0;
      var hncarry = 0;
      for (var k = 0; k < out.length - 1; k++) {
        // Sum all words with the same `i + j = k` and accumulate `ncarry`,
        // note that ncarry could be >= 0x3ffffff
        var ncarry = hncarry;
        hncarry = 0;
        var rword = carry & 0x3ffffff;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
          var i = k - j;
          var a = self.words[i] | 0;
          var b = num.words[j] | 0;
          var r = a * b;
          var lo = r & 0x3ffffff;
          ncarry = ncarry + (r / 0x4000000 | 0) | 0;
          lo = lo + rword | 0;
          rword = lo & 0x3ffffff;
          ncarry = ncarry + (lo >>> 26) | 0;
          hncarry += ncarry >>> 26;
          ncarry &= 0x3ffffff;
        }
        out.words[k] = rword;
        carry = ncarry;
        ncarry = hncarry;
      }
      if (carry !== 0) {
        out.words[k] = carry;
      } else {
        out.length--;
      }
      return out._strip();
    }
    function jumboMulTo(self, num, out) {
      // Temporary disable, see https://github.com/indutny/bn.js/issues/211
      // var fftm = new FFTM();
      // return fftm.mulp(self, num, out);
      return bigMulTo(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
      var res;
      var len = this.length + num.length;
      if (this.length === 10 && num.length === 10) {
        res = comb10MulTo(this, num, out);
      } else if (len < 63) {
        res = smallMulTo(this, num, out);
      } else if (len < 1024) {
        res = bigMulTo(this, num, out);
      } else {
        res = jumboMulTo(this, num, out);
      }
      return res;
    };

    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion

    function FFTM(x, y) {
      this.x = x;
      this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
      var t = new Array(N);
      var l = BN.prototype._countBits(N) - 1;
      for (var i = 0; i < N; i++) {
        t[i] = this.revBin(i, l, N);
      }
      return t;
    };

    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
      if (x === 0 || x === N - 1) return x;
      var rb = 0;
      for (var i = 0; i < l; i++) {
        rb |= (x & 1) << l - i - 1;
        x >>= 1;
      }
      return rb;
    };

    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
      for (var i = 0; i < N; i++) {
        rtws[i] = rws[rbt[i]];
        itws[i] = iws[rbt[i]];
      }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
      this.permute(rbt, rws, iws, rtws, itws, N);
      for (var s = 1; s < N; s <<= 1) {
        var l = s << 1;
        var rtwdf = Math.cos(2 * Math.PI / l);
        var itwdf = Math.sin(2 * Math.PI / l);
        for (var p = 0; p < N; p += l) {
          var rtwdf_ = rtwdf;
          var itwdf_ = itwdf;
          for (var j = 0; j < s; j++) {
            var re = rtws[p + j];
            var ie = itws[p + j];
            var ro = rtws[p + j + s];
            var io = itws[p + j + s];
            var rx = rtwdf_ * ro - itwdf_ * io;
            io = rtwdf_ * io + itwdf_ * ro;
            ro = rx;
            rtws[p + j] = re + ro;
            itws[p + j] = ie + io;
            rtws[p + j + s] = re - ro;
            itws[p + j + s] = ie - io;

            /* jshint maxdepth : false */
            if (j !== l) {
              rx = rtwdf * rtwdf_ - itwdf * itwdf_;
              itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
              rtwdf_ = rx;
            }
          }
        }
      }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
      var N = Math.max(m, n) | 1;
      var odd = N & 1;
      var i = 0;
      for (N = N / 2 | 0; N; N = N >>> 1) {
        i++;
      }
      return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
      if (N <= 1) return;
      for (var i = 0; i < N / 2; i++) {
        var t = rws[i];
        rws[i] = rws[N - i - 1];
        rws[N - i - 1] = t;
        t = iws[i];
        iws[i] = -iws[N - i - 1];
        iws[N - i - 1] = -t;
      }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
      var carry = 0;
      for (var i = 0; i < N / 2; i++) {
        var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;
        ws[i] = w & 0x3ffffff;
        if (w < 0x4000000) {
          carry = 0;
        } else {
          carry = w / 0x4000000 | 0;
        }
      }
      return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
      var carry = 0;
      for (var i = 0; i < len; i++) {
        carry = carry + (ws[i] | 0);
        rws[2 * i] = carry & 0x1fff;
        carry = carry >>> 13;
        rws[2 * i + 1] = carry & 0x1fff;
        carry = carry >>> 13;
      }

      // Pad with zeroes
      for (i = 2 * len; i < N; ++i) {
        rws[i] = 0;
      }
      assert(carry === 0);
      assert((carry & ~0x1fff) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
      var ph = new Array(N);
      for (var i = 0; i < N; i++) {
        ph[i] = 0;
      }
      return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
      var N = 2 * this.guessLen13b(x.length, y.length);
      var rbt = this.makeRBT(N);
      var _ = this.stub(N);
      var rws = new Array(N);
      var rwst = new Array(N);
      var iwst = new Array(N);
      var nrws = new Array(N);
      var nrwst = new Array(N);
      var niwst = new Array(N);
      var rmws = out.words;
      rmws.length = N;
      this.convert13b(x.words, x.length, rws, N);
      this.convert13b(y.words, y.length, nrws, N);
      this.transform(rws, _, rwst, iwst, N, rbt);
      this.transform(nrws, _, nrwst, niwst, N, rbt);
      for (var i = 0; i < N; i++) {
        var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
        iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
        rwst[i] = rx;
      }
      this.conjugate(rwst, iwst, N);
      this.transform(rwst, iwst, rmws, _, N, rbt);
      this.conjugate(rmws, _, N);
      this.normalize13b(rmws, N);
      out.negative = x.negative ^ y.negative;
      out.length = x.length + y.length;
      return out._strip();
    };

    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
      var out = new BN(null);
      out.words = new Array(this.length + num.length);
      return this.mulTo(num, out);
    };

    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
      var out = new BN(null);
      out.words = new Array(this.length + num.length);
      return jumboMulTo(this, num, out);
    };

    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
      return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
      var isNegNum = num < 0;
      if (isNegNum) num = -num;
      assert(typeof num === 'number');
      assert(num < 0x4000000);

      // Carry
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = (this.words[i] | 0) * num;
        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
        carry >>= 26;
        carry += w / 0x4000000 | 0;
        // NOTE: lo is 27bit maximum
        carry += lo >>> 26;
        this.words[i] = lo & 0x3ffffff;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return isNegNum ? this.ineg() : this;
    };
    BN.prototype.muln = function muln(num) {
      return this.clone().imuln(num);
    };

    // `this` * `this`
    BN.prototype.sqr = function sqr() {
      return this.mul(this);
    };

    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
      return this.imul(this.clone());
    };

    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
      var w = toBitArray(num);
      if (w.length === 0) return new BN(1);

      // Skip leading zeroes
      var res = this;
      for (var i = 0; i < w.length; i++, res = res.sqr()) {
        if (w[i] !== 0) break;
      }
      if (++i < w.length) {
        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
          if (w[i] === 0) continue;
          res = res.mul(q);
        }
      }
      return res;
    };

    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
      assert(typeof bits === 'number' && bits >= 0);
      var r = bits % 26;
      var s = (bits - r) / 26;
      var carryMask = 0x3ffffff >>> 26 - r << 26 - r;
      var i;
      if (r !== 0) {
        var carry = 0;
        for (i = 0; i < this.length; i++) {
          var newCarry = this.words[i] & carryMask;
          var c = (this.words[i] | 0) - newCarry << r;
          this.words[i] = c | carry;
          carry = newCarry >>> 26 - r;
        }
        if (carry) {
          this.words[i] = carry;
          this.length++;
        }
      }
      if (s !== 0) {
        for (i = this.length - 1; i >= 0; i--) {
          this.words[i + s] = this.words[i];
        }
        for (i = 0; i < s; i++) {
          this.words[i] = 0;
        }
        this.length += s;
      }
      return this._strip();
    };
    BN.prototype.ishln = function ishln(bits) {
      // TODO(indutny): implement me
      assert(this.negative === 0);
      return this.iushln(bits);
    };

    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
      assert(typeof bits === 'number' && bits >= 0);
      var h;
      if (hint) {
        h = (hint - hint % 26) / 26;
      } else {
        h = 0;
      }
      var r = bits % 26;
      var s = Math.min((bits - r) / 26, this.length);
      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
      var maskedWords = extended;
      h -= s;
      h = Math.max(0, h);

      // Extended mode, copy masked part
      if (maskedWords) {
        for (var i = 0; i < s; i++) {
          maskedWords.words[i] = this.words[i];
        }
        maskedWords.length = s;
      }
      if (s === 0) {
        // No-op, we should not move anything at all
      } else if (this.length > s) {
        this.length -= s;
        for (i = 0; i < this.length; i++) {
          this.words[i] = this.words[i + s];
        }
      } else {
        this.words[0] = 0;
        this.length = 1;
      }
      var carry = 0;
      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
        var word = this.words[i] | 0;
        this.words[i] = carry << 26 - r | word >>> r;
        carry = word & mask;
      }

      // Push carried bits as a mask
      if (maskedWords && carry !== 0) {
        maskedWords.words[maskedWords.length++] = carry;
      }
      if (this.length === 0) {
        this.words[0] = 0;
        this.length = 1;
      }
      return this._strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
      // TODO(indutny): implement me
      assert(this.negative === 0);
      return this.iushrn(bits, hint, extended);
    };

    // Shift-left
    BN.prototype.shln = function shln(bits) {
      return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
      return this.clone().iushln(bits);
    };

    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
      return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
      return this.clone().iushrn(bits);
    };

    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
      assert(typeof bit === 'number' && bit >= 0);
      var r = bit % 26;
      var s = (bit - r) / 26;
      var q = 1 << r;

      // Fast case: bit is much higher than all existing words
      if (this.length <= s) return false;

      // Check bit and return
      var w = this.words[s];
      return !!(w & q);
    };

    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
      assert(typeof bits === 'number' && bits >= 0);
      var r = bits % 26;
      var s = (bits - r) / 26;
      assert(this.negative === 0, 'imaskn works only with positive numbers');
      if (this.length <= s) {
        return this;
      }
      if (r !== 0) {
        s++;
      }
      this.length = Math.min(s, this.length);
      if (r !== 0) {
        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
        this.words[this.length - 1] &= mask;
      }
      return this._strip();
    };

    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
      return this.clone().imaskn(bits);
    };

    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
      assert(typeof num === 'number');
      assert(num < 0x4000000);
      if (num < 0) return this.isubn(-num);

      // Possible sign change
      if (this.negative !== 0) {
        if (this.length === 1 && (this.words[0] | 0) <= num) {
          this.words[0] = num - (this.words[0] | 0);
          this.negative = 0;
          return this;
        }
        this.negative = 0;
        this.isubn(num);
        this.negative = 1;
        return this;
      }

      // Add without checks
      return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
      this.words[0] += num;

      // Carry
      for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
        this.words[i] -= 0x4000000;
        if (i === this.length - 1) {
          this.words[i + 1] = 1;
        } else {
          this.words[i + 1]++;
        }
      }
      this.length = Math.max(this.length, i + 1);
      return this;
    };

    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
      assert(typeof num === 'number');
      assert(num < 0x4000000);
      if (num < 0) return this.iaddn(-num);
      if (this.negative !== 0) {
        this.negative = 0;
        this.iaddn(num);
        this.negative = 1;
        return this;
      }
      this.words[0] -= num;
      if (this.length === 1 && this.words[0] < 0) {
        this.words[0] = -this.words[0];
        this.negative = 1;
      } else {
        // Carry
        for (var i = 0; i < this.length && this.words[i] < 0; i++) {
          this.words[i] += 0x4000000;
          this.words[i + 1] -= 1;
        }
      }
      return this._strip();
    };
    BN.prototype.addn = function addn(num) {
      return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
      return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
      this.negative = 0;
      return this;
    };
    BN.prototype.abs = function abs() {
      return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
      var len = num.length + shift;
      var i;
      this._expand(len);
      var w;
      var carry = 0;
      for (i = 0; i < num.length; i++) {
        w = (this.words[i + shift] | 0) + carry;
        var right = (num.words[i] | 0) * mul;
        w -= right & 0x3ffffff;
        carry = (w >> 26) - (right / 0x4000000 | 0);
        this.words[i + shift] = w & 0x3ffffff;
      }
      for (; i < this.length - shift; i++) {
        w = (this.words[i + shift] | 0) + carry;
        carry = w >> 26;
        this.words[i + shift] = w & 0x3ffffff;
      }
      if (carry === 0) return this._strip();

      // Subtraction overflow
      assert(carry === -1);
      carry = 0;
      for (i = 0; i < this.length; i++) {
        w = -(this.words[i] | 0) + carry;
        carry = w >> 26;
        this.words[i] = w & 0x3ffffff;
      }
      this.negative = 1;
      return this._strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
      var shift = this.length - num.length;
      var a = this.clone();
      var b = num;

      // Normalize
      var bhi = b.words[b.length - 1] | 0;
      var bhiBits = this._countBits(bhi);
      shift = 26 - bhiBits;
      if (shift !== 0) {
        b = b.ushln(shift);
        a.iushln(shift);
        bhi = b.words[b.length - 1] | 0;
      }

      // Initialize quotient
      var m = a.length - b.length;
      var q;
      if (mode !== 'mod') {
        q = new BN(null);
        q.length = m + 1;
        q.words = new Array(q.length);
        for (var i = 0; i < q.length; i++) {
          q.words[i] = 0;
        }
      }
      var diff = a.clone()._ishlnsubmul(b, 1, m);
      if (diff.negative === 0) {
        a = diff;
        if (q) {
          q.words[m] = 1;
        }
      }
      for (var j = m - 1; j >= 0; j--) {
        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);

        // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
        // (0x7ffffff)
        qj = Math.min(qj / bhi | 0, 0x3ffffff);
        a._ishlnsubmul(b, qj, j);
        while (a.negative !== 0) {
          qj--;
          a.negative = 0;
          a._ishlnsubmul(b, 1, j);
          if (!a.isZero()) {
            a.negative ^= 1;
          }
        }
        if (q) {
          q.words[j] = qj;
        }
      }
      if (q) {
        q._strip();
      }
      a._strip();

      // Denormalize
      if (mode !== 'div' && shift !== 0) {
        a.iushrn(shift);
      }
      return {
        div: q || null,
        mod: a
      };
    };

    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
      assert(!num.isZero());
      if (this.isZero()) {
        return {
          div: new BN(0),
          mod: new BN(0)
        };
      }
      var div, mod, res;
      if (this.negative !== 0 && num.negative === 0) {
        res = this.neg().divmod(num, mode);
        if (mode !== 'mod') {
          div = res.div.neg();
        }
        if (mode !== 'div') {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.iadd(num);
          }
        }
        return {
          div: div,
          mod: mod
        };
      }
      if (this.negative === 0 && num.negative !== 0) {
        res = this.divmod(num.neg(), mode);
        if (mode !== 'mod') {
          div = res.div.neg();
        }
        return {
          div: div,
          mod: res.mod
        };
      }
      if ((this.negative & num.negative) !== 0) {
        res = this.neg().divmod(num.neg(), mode);
        if (mode !== 'div') {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.isub(num);
          }
        }
        return {
          div: res.div,
          mod: mod
        };
      }

      // Both numbers are positive at this point

      // Strip both numbers to approximate shift value
      if (num.length > this.length || this.cmp(num) < 0) {
        return {
          div: new BN(0),
          mod: this
        };
      }

      // Very short reduction
      if (num.length === 1) {
        if (mode === 'div') {
          return {
            div: this.divn(num.words[0]),
            mod: null
          };
        }
        if (mode === 'mod') {
          return {
            div: null,
            mod: new BN(this.modrn(num.words[0]))
          };
        }
        return {
          div: this.divn(num.words[0]),
          mod: new BN(this.modrn(num.words[0]))
        };
      }
      return this._wordDiv(num, mode);
    };

    // Find `this` / `num`
    BN.prototype.div = function div(num) {
      return this.divmod(num, 'div', false).div;
    };

    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
      return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
      return this.divmod(num, 'mod', true).mod;
    };

    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
      var dm = this.divmod(num);

      // Fast case - exact division
      if (dm.mod.isZero()) return dm.div;
      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
      var half = num.ushrn(1);
      var r2 = num.andln(1);
      var cmp = mod.cmp(half);

      // Round down
      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

      // Round up
      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modrn = function modrn(num) {
      var isNegNum = num < 0;
      if (isNegNum) num = -num;
      assert(num <= 0x3ffffff);
      var p = (1 << 26) % num;
      var acc = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        acc = (p * acc + (this.words[i] | 0)) % num;
      }
      return isNegNum ? -acc : acc;
    };

    // WARNING: DEPRECATED
    BN.prototype.modn = function modn(num) {
      return this.modrn(num);
    };

    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
      var isNegNum = num < 0;
      if (isNegNum) num = -num;
      assert(num <= 0x3ffffff);
      var carry = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var w = (this.words[i] | 0) + carry * 0x4000000;
        this.words[i] = w / num | 0;
        carry = w % num;
      }
      this._strip();
      return isNegNum ? this.ineg() : this;
    };
    BN.prototype.divn = function divn(num) {
      return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
      assert(p.negative === 0);
      assert(!p.isZero());
      var x = this;
      var y = p.clone();
      if (x.negative !== 0) {
        x = x.umod(p);
      } else {
        x = x.clone();
      }

      // A * x + B * y = x
      var A = new BN(1);
      var B = new BN(0);

      // C * x + D * y = y
      var C = new BN(0);
      var D = new BN(1);
      var g = 0;
      while (x.isEven() && y.isEven()) {
        x.iushrn(1);
        y.iushrn(1);
        ++g;
      }
      var yp = y.clone();
      var xp = x.clone();
      while (!x.isZero()) {
        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
        if (i > 0) {
          x.iushrn(i);
          while (i-- > 0) {
            if (A.isOdd() || B.isOdd()) {
              A.iadd(yp);
              B.isub(xp);
            }
            A.iushrn(1);
            B.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
        if (j > 0) {
          y.iushrn(j);
          while (j-- > 0) {
            if (C.isOdd() || D.isOdd()) {
              C.iadd(yp);
              D.isub(xp);
            }
            C.iushrn(1);
            D.iushrn(1);
          }
        }
        if (x.cmp(y) >= 0) {
          x.isub(y);
          A.isub(C);
          B.isub(D);
        } else {
          y.isub(x);
          C.isub(A);
          D.isub(B);
        }
      }
      return {
        a: C,
        b: D,
        gcd: y.iushln(g)
      };
    };

    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
      assert(p.negative === 0);
      assert(!p.isZero());
      var a = this;
      var b = p.clone();
      if (a.negative !== 0) {
        a = a.umod(p);
      } else {
        a = a.clone();
      }
      var x1 = new BN(1);
      var x2 = new BN(0);
      var delta = b.clone();
      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
        if (i > 0) {
          a.iushrn(i);
          while (i-- > 0) {
            if (x1.isOdd()) {
              x1.iadd(delta);
            }
            x1.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
        if (j > 0) {
          b.iushrn(j);
          while (j-- > 0) {
            if (x2.isOdd()) {
              x2.iadd(delta);
            }
            x2.iushrn(1);
          }
        }
        if (a.cmp(b) >= 0) {
          a.isub(b);
          x1.isub(x2);
        } else {
          b.isub(a);
          x2.isub(x1);
        }
      }
      var res;
      if (a.cmpn(1) === 0) {
        res = x1;
      } else {
        res = x2;
      }
      if (res.cmpn(0) < 0) {
        res.iadd(p);
      }
      return res;
    };
    BN.prototype.gcd = function gcd(num) {
      if (this.isZero()) return num.abs();
      if (num.isZero()) return this.abs();
      var a = this.clone();
      var b = num.clone();
      a.negative = 0;
      b.negative = 0;

      // Remove common factor of two
      for (var shift = 0; a.isEven() && b.isEven(); shift++) {
        a.iushrn(1);
        b.iushrn(1);
      }
      do {
        while (a.isEven()) {
          a.iushrn(1);
        }
        while (b.isEven()) {
          b.iushrn(1);
        }
        var r = a.cmp(b);
        if (r < 0) {
          // Swap `a` and `b` to make `a` always bigger than `b`
          var t = a;
          a = b;
          b = t;
        } else if (r === 0 || b.cmpn(1) === 0) {
          break;
        }
        a.isub(b);
      } while (true);
      return b.iushln(shift);
    };

    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
      return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
      return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
      return (this.words[0] & 1) === 1;
    };

    // And first word and num
    BN.prototype.andln = function andln(num) {
      return this.words[0] & num;
    };

    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
      assert(typeof bit === 'number');
      var r = bit % 26;
      var s = (bit - r) / 26;
      var q = 1 << r;

      // Fast case: bit is much higher than all existing words
      if (this.length <= s) {
        this._expand(s + 1);
        this.words[s] |= q;
        return this;
      }

      // Add bit and propagate, if needed
      var carry = q;
      for (var i = s; carry !== 0 && i < this.length; i++) {
        var w = this.words[i] | 0;
        w += carry;
        carry = w >>> 26;
        w &= 0x3ffffff;
        this.words[i] = w;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return this;
    };
    BN.prototype.isZero = function isZero() {
      return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
      var negative = num < 0;
      if (this.negative !== 0 && !negative) return -1;
      if (this.negative === 0 && negative) return 1;
      this._strip();
      var res;
      if (this.length > 1) {
        res = 1;
      } else {
        if (negative) {
          num = -num;
        }
        assert(num <= 0x3ffffff, 'Number is too big');
        var w = this.words[0] | 0;
        res = w === num ? 0 : w < num ? -1 : 1;
      }
      if (this.negative !== 0) return -res | 0;
      return res;
    };

    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
      if (this.negative !== 0 && num.negative === 0) return -1;
      if (this.negative === 0 && num.negative !== 0) return 1;
      var res = this.ucmp(num);
      if (this.negative !== 0) return -res | 0;
      return res;
    };

    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
      // At this point both numbers have the same sign
      if (this.length > num.length) return 1;
      if (this.length < num.length) return -1;
      var res = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var a = this.words[i] | 0;
        var b = num.words[i] | 0;
        if (a === b) continue;
        if (a < b) {
          res = -1;
        } else if (a > b) {
          res = 1;
        }
        break;
      }
      return res;
    };
    BN.prototype.gtn = function gtn(num) {
      return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
      return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
      return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
      return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
      return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
      return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
      return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
      return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
      return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
      return this.cmp(num) === 0;
    };

    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
      return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
      assert(!this.red, 'Already a number in reduction context');
      assert(this.negative === 0, 'red works only with positives');
      return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
      assert(this.red, 'fromRed works only with numbers in reduction context');
      return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
      this.red = ctx;
      return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
      assert(!this.red, 'Already a number in reduction context');
      return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
      assert(this.red, 'redAdd works only with red numbers');
      return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
      assert(this.red, 'redIAdd works only with red numbers');
      return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
      assert(this.red, 'redSub works only with red numbers');
      return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
      assert(this.red, 'redISub works only with red numbers');
      return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
      assert(this.red, 'redShl works only with red numbers');
      return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
      assert(this.red, 'redMul works only with red numbers');
      this.red._verify2(this, num);
      return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
      assert(this.red, 'redMul works only with red numbers');
      this.red._verify2(this, num);
      return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
      assert(this.red, 'redSqr works only with red numbers');
      this.red._verify1(this);
      return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
      assert(this.red, 'redISqr works only with red numbers');
      this.red._verify1(this);
      return this.red.isqr(this);
    };

    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
      assert(this.red, 'redSqrt works only with red numbers');
      this.red._verify1(this);
      return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
      assert(this.red, 'redInvm works only with red numbers');
      this.red._verify1(this);
      return this.red.invm(this);
    };

    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
      assert(this.red, 'redNeg works only with red numbers');
      this.red._verify1(this);
      return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
      assert(this.red && !num.red, 'redPow(normalNum)');
      this.red._verify1(this);
      return this.red.pow(this, num);
    };

    // Prime numbers with efficient reduction
    var primes = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };

    // Pseudo-Mersenne prime
    function MPrime(name, p) {
      // P = 2 ^ N - K
      this.name = name;
      this.p = new BN(p, 16);
      this.n = this.p.bitLength();
      this.k = new BN(1).iushln(this.n).isub(this.p);
      this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
      var tmp = new BN(null);
      tmp.words = new Array(Math.ceil(this.n / 13));
      return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
      // Assumes that `num` is less than `P^2`
      // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
      var r = num;
      var rlen;
      do {
        this.split(r, this.tmp);
        r = this.imulK(r);
        r = r.iadd(this.tmp);
        rlen = r.bitLength();
      } while (rlen > this.n);
      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
      if (cmp === 0) {
        r.words[0] = 0;
        r.length = 1;
      } else if (cmp > 0) {
        r.isub(this.p);
      } else {
        if (r.strip !== undefined) {
          // r is a BN v4 instance
          r.strip();
        } else {
          // r is a BN v5 instance
          r._strip();
        }
      }
      return r;
    };
    MPrime.prototype.split = function split(input, out) {
      input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
      return num.imul(this.k);
    };
    function K256() {
      MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split(input, output) {
      // 256 = 9 * 26 + 22
      var mask = 0x3fffff;
      var outLen = Math.min(input.length, 9);
      for (var i = 0; i < outLen; i++) {
        output.words[i] = input.words[i];
      }
      output.length = outLen;
      if (input.length <= 9) {
        input.words[0] = 0;
        input.length = 1;
        return;
      }

      // Shift by 9 limbs
      var prev = input.words[9];
      output.words[output.length++] = prev & mask;
      for (i = 10; i < input.length; i++) {
        var next = input.words[i] | 0;
        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
        prev = next;
      }
      prev >>>= 22;
      input.words[i - 10] = prev;
      if (prev === 0 && input.length > 10) {
        input.length -= 10;
      } else {
        input.length -= 9;
      }
    };
    K256.prototype.imulK = function imulK(num) {
      // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
      num.words[num.length] = 0;
      num.words[num.length + 1] = 0;
      num.length += 2;

      // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
      var lo = 0;
      for (var i = 0; i < num.length; i++) {
        var w = num.words[i] | 0;
        lo += w * 0x3d1;
        num.words[i] = lo & 0x3ffffff;
        lo = w * 0x40 + (lo / 0x4000000 | 0);
      }

      // Fast length reduction
      if (num.words[num.length - 1] === 0) {
        num.length--;
        if (num.words[num.length - 1] === 0) {
          num.length--;
        }
      }
      return num;
    };
    function P224() {
      MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
      MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
      // 2 ^ 255 - 19
      MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK(num) {
      // K = 0x13
      var carry = 0;
      for (var i = 0; i < num.length; i++) {
        var hi = (num.words[i] | 0) * 0x13 + carry;
        var lo = hi & 0x3ffffff;
        hi >>>= 26;
        num.words[i] = lo;
        carry = hi;
      }
      if (carry !== 0) {
        num.words[num.length++] = carry;
      }
      return num;
    };

    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
      // Cached version of prime
      if (primes[name]) return primes[name];
      var prime;
      if (name === 'k256') {
        prime = new K256();
      } else if (name === 'p224') {
        prime = new P224();
      } else if (name === 'p192') {
        prime = new P192();
      } else if (name === 'p25519') {
        prime = new P25519();
      } else {
        throw new Error('Unknown prime ' + name);
      }
      primes[name] = prime;
      return prime;
    };

    //
    // Base reduction engine
    //
    function Red(m) {
      if (typeof m === 'string') {
        var prime = BN._prime(m);
        this.m = prime.p;
        this.prime = prime;
      } else {
        assert(m.gtn(1), 'modulus must be greater than 1');
        this.m = m;
        this.prime = null;
      }
    }
    Red.prototype._verify1 = function _verify1(a) {
      assert(a.negative === 0, 'red works only with positives');
      assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
      assert((a.negative | b.negative) === 0, 'red works only with positives');
      assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
      if (this.prime) return this.prime.ireduce(a)._forceRed(this);
      move(a, a.umod(this.m)._forceRed(this));
      return a;
    };
    Red.prototype.neg = function neg(a) {
      if (a.isZero()) {
        return a.clone();
      }
      return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add(a, b) {
      this._verify2(a, b);
      var res = a.add(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd(a, b) {
      this._verify2(a, b);
      var res = a.iadd(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res;
    };
    Red.prototype.sub = function sub(a, b) {
      this._verify2(a, b);
      var res = a.sub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.isub = function isub(a, b) {
      this._verify2(a, b);
      var res = a.isub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res;
    };
    Red.prototype.shl = function shl(a, num) {
      this._verify1(a);
      return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul(a, b) {
      this._verify2(a, b);
      return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul(a, b) {
      this._verify2(a, b);
      return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr(a) {
      return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr(a) {
      return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
      if (a.isZero()) return a.clone();
      var mod3 = this.m.andln(3);
      assert(mod3 % 2 === 1);

      // Fast case
      if (mod3 === 3) {
        var pow = this.m.add(new BN(1)).iushrn(2);
        return this.pow(a, pow);
      }

      // Tonelli-Shanks algorithm (Totally unoptimized and slow)
      //
      // Find Q and S, that Q * 2 ^ S = (P - 1)
      var q = this.m.subn(1);
      var s = 0;
      while (!q.isZero() && q.andln(1) === 0) {
        s++;
        q.iushrn(1);
      }
      assert(!q.isZero());
      var one = new BN(1).toRed(this);
      var nOne = one.redNeg();

      // Find quadratic non-residue
      // NOTE: Max is such because of generalized Riemann hypothesis.
      var lpow = this.m.subn(1).iushrn(1);
      var z = this.m.bitLength();
      z = new BN(2 * z * z).toRed(this);
      while (this.pow(z, lpow).cmp(nOne) !== 0) {
        z.redIAdd(nOne);
      }
      var c = this.pow(z, q);
      var r = this.pow(a, q.addn(1).iushrn(1));
      var t = this.pow(a, q);
      var m = s;
      while (t.cmp(one) !== 0) {
        var tmp = t;
        for (var i = 0; tmp.cmp(one) !== 0; i++) {
          tmp = tmp.redSqr();
        }
        assert(i < m);
        var b = this.pow(c, new BN(1).iushln(m - i - 1));
        r = r.redMul(b);
        c = b.redSqr();
        t = t.redMul(c);
        m = i;
      }
      return r;
    };
    Red.prototype.invm = function invm(a) {
      var inv = a._invmp(this.m);
      if (inv.negative !== 0) {
        inv.negative = 0;
        return this.imod(inv).redNeg();
      } else {
        return this.imod(inv);
      }
    };
    Red.prototype.pow = function pow(a, num) {
      if (num.isZero()) return new BN(1).toRed(this);
      if (num.cmpn(1) === 0) return a.clone();
      var windowSize = 4;
      var wnd = new Array(1 << windowSize);
      wnd[0] = new BN(1).toRed(this);
      wnd[1] = a;
      for (var i = 2; i < wnd.length; i++) {
        wnd[i] = this.mul(wnd[i - 1], a);
      }
      var res = wnd[0];
      var current = 0;
      var currentLen = 0;
      var start = num.bitLength() % 26;
      if (start === 0) {
        start = 26;
      }
      for (i = num.length - 1; i >= 0; i--) {
        var word = num.words[i];
        for (var j = start - 1; j >= 0; j--) {
          var bit = word >> j & 1;
          if (res !== wnd[0]) {
            res = this.sqr(res);
          }
          if (bit === 0 && current === 0) {
            currentLen = 0;
            continue;
          }
          current <<= 1;
          current |= bit;
          currentLen++;
          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
          res = this.mul(res, wnd[current]);
          currentLen = 0;
          current = 0;
        }
        start = 26;
      }
      return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
      var r = num.umod(this.m);
      return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
      var res = num.clone();
      res.red = null;
      return res;
    };

    //
    // Montgomery method engine
    //

    BN.mont = function mont(num) {
      return new Mont(num);
    };
    function Mont(m) {
      Red.call(this, m);
      this.shift = this.m.bitLength();
      if (this.shift % 26 !== 0) {
        this.shift += 26 - this.shift % 26;
      }
      this.r = new BN(1).iushln(this.shift);
      this.r2 = this.imod(this.r.sqr());
      this.rinv = this.r._invmp(this.m);
      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
      this.minv = this.minv.umod(this.r);
      this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo(num) {
      return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom(num) {
      var r = this.imod(num.mul(this.rinv));
      r.red = null;
      return r;
    };
    Mont.prototype.imul = function imul(a, b) {
      if (a.isZero() || b.isZero()) {
        a.words[0] = 0;
        a.length = 1;
        return a;
      }
      var t = a.imul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.mul = function mul(a, b) {
      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
      var t = a.mul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.invm = function invm(a) {
      // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
      var res = this.imod(a._invmp(this.m).mul(this.r2));
      return res._forceRed(this);
    };
  })('object' === 'undefined' || module, commonjsGlobal$1);
})(bn$8);
var bnExports$1 = bn$8.exports;
var BN$g = /*@__PURE__*/getDefaultExportFromCjs$1(bnExports$1);

var hash$5 = {};

var utils$A = {};

var minimalisticAssert$1 = assert$p;
function assert$p(val, msg) {
  if (!val) throw new Error(msg || 'Assertion failed');
}
assert$p.equal = function assertEqual(l, r, msg) {
  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);
};
var index$8 = /*@__PURE__*/getDefaultExportFromCjs$1(minimalisticAssert$1);

var inherits_browser$3 = {exports: {}};

var inherits_browser$1 = inherits_browser$3.exports;
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  inherits_browser$3.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    }
  };
} else {
  // old school shim for old browsers
  inherits_browser$3.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function TempCtor() {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
  };
}
var inherits_browserExports = inherits_browser$3.exports;
var inherits_browser$2 = /*@__PURE__*/getDefaultExportFromCjs$1(inherits_browserExports);

'use strict';
var assert$o = minimalisticAssert$1;
var inherits$6 = inherits_browserExports;
var inherits_1 = utils$A.inherits = inherits$6;
function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}
function toArray(msg, enc) {
  if (Array.isArray(msg)) return msg.slice();
  if (!msg) return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = c >> 6 | 192;
          res[p++] = c & 63 | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = c >> 18 | 240;
          res[p++] = c >> 12 & 63 | 128;
          res[p++] = c >> 6 & 63 | 128;
          res[p++] = c & 63 | 128;
        } else {
          res[p++] = c >> 12 | 224;
          res[p++] = c >> 6 & 63 | 128;
          res[p++] = c & 63 | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0) msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++) res[i] = msg[i] | 0;
  }
  return res;
}
var toArray_1 = utils$A.toArray = toArray;
function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
  return res;
}
var toHex_1 = utils$A.toHex = toHex;
function htonl(w) {
  var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;
  return res >>> 0;
}
var htonl_1 = utils$A.htonl = htonl;
function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little') w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
var toHex32_1 = utils$A.toHex32 = toHex32;
function zero2(word) {
  if (word.length === 1) return '0' + word;else return word;
}
var zero2_1 = utils$A.zero2 = zero2;
function zero8(word) {
  if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;
}
var zero8_1 = utils$A.zero8 = zero8;
function join32(msg, start, end, endian) {
  var len = end - start;
  assert$o(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
var join32_1 = utils$A.join32 = join32;
function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = m >>> 16 & 0xff;
      res[k + 2] = m >>> 8 & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = m >>> 16 & 0xff;
      res[k + 1] = m >>> 8 & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
var split32_1 = utils$A.split32 = split32;
function rotr32$1(w, b) {
  return w >>> b | w << 32 - b;
}
var rotr32_1 = utils$A.rotr32 = rotr32$1;
function rotl32$2(w, b) {
  return w << b | w >>> 32 - b;
}
var rotl32_1 = utils$A.rotl32 = rotl32$2;
function sum32$3(a, b) {
  return a + b >>> 0;
}
var sum32_1 = utils$A.sum32 = sum32$3;
function sum32_3$1(a, b, c) {
  return a + b + c >>> 0;
}
var sum32_3_1 = utils$A.sum32_3 = sum32_3$1;
function sum32_4$2(a, b, c, d) {
  return a + b + c + d >>> 0;
}
var sum32_4_1 = utils$A.sum32_4 = sum32_4$2;
function sum32_5$2(a, b, c, d, e) {
  return a + b + c + d + e >>> 0;
}
var sum32_5_1 = utils$A.sum32_5 = sum32_5$2;
function sum64$1(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];
  var lo = al + bl >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
var sum64_1 = utils$A.sum64 = sum64$1;
function sum64_hi$1(ah, al, bh, bl) {
  var lo = al + bl >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
var sum64_hi_1 = utils$A.sum64_hi = sum64_hi$1;
function sum64_lo$1(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
var sum64_lo_1 = utils$A.sum64_lo = sum64_lo$1;
function sum64_4_hi$1(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = lo + bl >>> 0;
  carry += lo < al ? 1 : 0;
  lo = lo + cl >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = lo + dl >>> 0;
  carry += lo < dl ? 1 : 0;
  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
var sum64_4_hi_1 = utils$A.sum64_4_hi = sum64_4_hi$1;
function sum64_4_lo$1(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
var sum64_4_lo_1 = utils$A.sum64_4_lo = sum64_4_lo$1;
function sum64_5_hi$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = lo + bl >>> 0;
  carry += lo < al ? 1 : 0;
  lo = lo + cl >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = lo + dl >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = lo + el >>> 0;
  carry += lo < el ? 1 : 0;
  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
var sum64_5_hi_1 = utils$A.sum64_5_hi = sum64_5_hi$1;
function sum64_5_lo$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;
  return lo >>> 0;
}
var sum64_5_lo_1 = utils$A.sum64_5_lo = sum64_5_lo$1;
function rotr64_hi$1(ah, al, num) {
  var r = al << 32 - num | ah >>> num;
  return r >>> 0;
}
var rotr64_hi_1 = utils$A.rotr64_hi = rotr64_hi$1;
function rotr64_lo$1(ah, al, num) {
  var r = ah << 32 - num | al >>> num;
  return r >>> 0;
}
var rotr64_lo_1 = utils$A.rotr64_lo = rotr64_lo$1;
function shr64_hi$1(ah, al, num) {
  return ah >>> num;
}
var shr64_hi_1 = utils$A.shr64_hi = shr64_hi$1;
function shr64_lo$1(ah, al, num) {
  var r = ah << 32 - num | al >>> num;
  return r >>> 0;
}
var shr64_lo_1 = utils$A.shr64_lo = shr64_lo$1;

var common$5 = {};

'use strict';
var utils$z = utils$A;
var assert$n = minimalisticAssert$1;
function BlockHash$4() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';
  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
var BlockHash_1 = common$5.BlockHash = BlockHash$4;
BlockHash$4.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils$z.toArray(msg, enc);
  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0) this.pending = null;
    msg = utils$z.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);
  }
  return this;
};
BlockHash$4.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert$n(this.pending === null);
  return this._digest(enc);
};
BlockHash$4.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - (len + this.padLength) % bytes;
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++) res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++) res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = len >>> 24 & 0xff;
    res[i++] = len >>> 16 & 0xff;
    res[i++] = len >>> 8 & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = len >>> 8 & 0xff;
    res[i++] = len >>> 16 & 0xff;
    res[i++] = len >>> 24 & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    for (t = 8; t < this.padLength; t++) res[i++] = 0;
  }
  return res;
};

var sha = {};

var common$4 = {};

'use strict';
var utils$y = utils$A;
var rotr32 = utils$y.rotr32;
function ft_1$1(s, x, y, z) {
  if (s === 0) return ch32$1(x, y, z);
  if (s === 1 || s === 3) return p32(x, y, z);
  if (s === 2) return maj32$1(x, y, z);
}
var ft_1_1 = common$4.ft_1 = ft_1$1;
function ch32$1(x, y, z) {
  return x & y ^ ~x & z;
}
var ch32_1 = common$4.ch32 = ch32$1;
function maj32$1(x, y, z) {
  return x & y ^ x & z ^ y & z;
}
var maj32_1 = common$4.maj32 = maj32$1;
function p32(x, y, z) {
  return x ^ y ^ z;
}
var p32_1 = common$4.p32 = p32;
function s0_256$1(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
var s0_256_1 = common$4.s0_256 = s0_256$1;
function s1_256$1(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
var s1_256_1 = common$4.s1_256 = s1_256$1;
function g0_256$1(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
}
var g0_256_1 = common$4.g0_256 = g0_256$1;
function g1_256$1(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
}
var g1_256_1 = common$4.g1_256 = g1_256$1;

'use strict';
var utils$x = utils$A;
var common$3 = common$5;
var shaCommon$1 = common$4;
var rotl32$1 = utils$x.rotl32;
var sum32$2 = utils$x.sum32;
var sum32_5$1 = utils$x.sum32_5;
var ft_1 = shaCommon$1.ft_1;
var BlockHash$3 = common$3.BlockHash;
var sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];
function SHA1() {
  if (!(this instanceof SHA1)) return new SHA1();
  BlockHash$3.call(this);
  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
  this.W = new Array(80);
}
utils$x.inherits(SHA1, BlockHash$3);
var _1 = SHA1;
SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;
SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;
  for (var i = 0; i < 16; i++) W[i] = msg[start + i];
  for (; i < W.length; i++) W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5$1(rotl32$1(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32$1(b, 30);
    b = a;
    a = t;
  }
  this.h[0] = sum32$2(this.h[0], a);
  this.h[1] = sum32$2(this.h[1], b);
  this.h[2] = sum32$2(this.h[2], c);
  this.h[3] = sum32$2(this.h[3], d);
  this.h[4] = sum32$2(this.h[4], e);
};
SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils$x.toHex32(this.h, 'big');else return utils$x.split32(this.h, 'big');
};
var _1$1 = /*@__PURE__*/getDefaultExportFromCjs$1(_1);

'use strict';
var utils$w = utils$A;
var common$2 = common$5;
var shaCommon = common$4;
var assert$m = minimalisticAssert$1;
var sum32$1 = utils$w.sum32;
var sum32_4$1 = utils$w.sum32_4;
var sum32_5 = utils$w.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;
var BlockHash$2 = common$2.BlockHash;
var sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];
function SHA256$1() {
  if (!(this instanceof SHA256$1)) return new SHA256$1();
  BlockHash$2.call(this);
  this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils$w.inherits(SHA256$1, BlockHash$2);
var _256 = SHA256$1;
SHA256$1.blockSize = 512;
SHA256$1.outSize = 256;
SHA256$1.hmacStrength = 192;
SHA256$1.padLength = 64;
SHA256$1.prototype._update = function _update(msg, start) {
  var W = this.W;
  for (var i = 0; i < 16; i++) W[i] = msg[start + i];
  for (; i < W.length; i++) W[i] = sum32_4$1(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];
  assert$m(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32$1(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32$1(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32$1(T1, T2);
  }
  this.h[0] = sum32$1(this.h[0], a);
  this.h[1] = sum32$1(this.h[1], b);
  this.h[2] = sum32$1(this.h[2], c);
  this.h[3] = sum32$1(this.h[3], d);
  this.h[4] = sum32$1(this.h[4], e);
  this.h[5] = sum32$1(this.h[5], f);
  this.h[6] = sum32$1(this.h[6], g);
  this.h[7] = sum32$1(this.h[7], h);
};
SHA256$1.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils$w.toHex32(this.h, 'big');else return utils$w.split32(this.h, 'big');
};
var _256$1 = /*@__PURE__*/getDefaultExportFromCjs$1(_256);

'use strict';
var utils$v = utils$A;
var SHA256 = _256;
function SHA224() {
  if (!(this instanceof SHA224)) return new SHA224();
  SHA256.call(this);
  this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];
}
utils$v.inherits(SHA224, SHA256);
var _224 = SHA224;
SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;
SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex') return utils$v.toHex32(this.h.slice(0, 7), 'big');else return utils$v.split32(this.h.slice(0, 7), 'big');
};
var _224$1 = /*@__PURE__*/getDefaultExportFromCjs$1(_224);

'use strict';
var utils$u = utils$A;
var common$1 = common$5;
var assert$l = minimalisticAssert$1;
var rotr64_hi = utils$u.rotr64_hi;
var rotr64_lo = utils$u.rotr64_lo;
var shr64_hi = utils$u.shr64_hi;
var shr64_lo = utils$u.shr64_lo;
var sum64 = utils$u.sum64;
var sum64_hi = utils$u.sum64_hi;
var sum64_lo = utils$u.sum64_lo;
var sum64_4_hi = utils$u.sum64_4_hi;
var sum64_4_lo = utils$u.sum64_4_lo;
var sum64_5_hi = utils$u.sum64_5_hi;
var sum64_5_lo = utils$u.sum64_5_lo;
var BlockHash$1 = common$1.BlockHash;
var sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];
function SHA512$1() {
  if (!(this instanceof SHA512$1)) return new SHA512$1();
  BlockHash$1.call(this);
  this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils$u.inherits(SHA512$1, BlockHash$1);
var _512 = SHA512$1;
SHA512$1.blockSize = 1024;
SHA512$1.outSize = 512;
SHA512$1.hmacStrength = 192;
SHA512$1.padLength = 128;
SHA512$1.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++) W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14]; // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32]; // i - 16
    var c3_lo = W[i - 31];
    W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
  }
};
SHA512$1.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);
  var W = this.W;
  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];
  assert$l(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];
    var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
    hh = gh;
    hl = gl;
    gh = fh;
    gl = fl;
    fh = eh;
    fl = el;
    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);
    dh = ch;
    dl = cl;
    ch = bh;
    cl = bl;
    bh = ah;
    bl = al;
    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }
  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};
SHA512$1.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils$u.toHex32(this.h, 'big');else return utils$u.split32(this.h, 'big');
};
function ch64_hi(xh, xl, yh, yl, zh) {
  var r = xh & yh ^ ~xh & zh;
  if (r < 0) r += 0x100000000;
  return r;
}
function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = xl & yl ^ ~xl & zl;
  if (r < 0) r += 0x100000000;
  return r;
}
function maj64_hi(xh, xl, yh, yl, zh) {
  var r = xh & yh ^ xh & zh ^ yh & zh;
  if (r < 0) r += 0x100000000;
  return r;
}
function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = xl & yl ^ xl & zl ^ yl & zl;
  if (r < 0) r += 0x100000000;
  return r;
}
function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2); // 34
  var c2_hi = rotr64_hi(xl, xh, 7); // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0) r += 0x100000000;
  return r;
}
function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2); // 34
  var c2_lo = rotr64_lo(xl, xh, 7); // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0) r += 0x100000000;
  return r;
}
function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9); // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0) r += 0x100000000;
  return r;
}
function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9); // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0) r += 0x100000000;
  return r;
}
function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);
  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0) r += 0x100000000;
  return r;
}
function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);
  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0) r += 0x100000000;
  return r;
}
function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29); // 61
  var c2_hi = shr64_hi(xh, xl, 6);
  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0) r += 0x100000000;
  return r;
}
function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29); // 61
  var c2_lo = shr64_lo(xh, xl, 6);
  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0) r += 0x100000000;
  return r;
}
var _512$1 = /*@__PURE__*/getDefaultExportFromCjs$1(_512);

'use strict';
var utils$t = utils$A;
var SHA512 = _512;
function SHA384() {
  if (!(this instanceof SHA384)) return new SHA384();
  SHA512.call(this);
  this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];
}
utils$t.inherits(SHA384, SHA512);
var _384 = SHA384;
SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;
SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils$t.toHex32(this.h.slice(0, 12), 'big');else return utils$t.split32(this.h.slice(0, 12), 'big');
};
var _384$1 = /*@__PURE__*/getDefaultExportFromCjs$1(_384);

'use strict';
var sha1 = sha.sha1 = _1;
var sha224 = sha.sha224 = _224;
var sha256$2 = sha.sha256 = _256;
var sha384 = sha.sha384 = _384;
var sha512 = sha.sha512 = _512;

var ripemd = {};

'use strict';
var utils$s = utils$A;
var common = common$5;
var rotl32 = utils$s.rotl32;
var sum32 = utils$s.sum32;
var sum32_3 = utils$s.sum32_3;
var sum32_4 = utils$s.sum32_4;
var BlockHash = common.BlockHash;
function RIPEMD160() {
  if (!(this instanceof RIPEMD160)) return new RIPEMD160();
  BlockHash.call(this);
  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
  this.endian = 'little';
}
utils$s.inherits(RIPEMD160, BlockHash);
var ripemd160 = ripemd.ripemd160 = RIPEMD160;
RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;
RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(rotl32(sum32_4(A, f$5(j, B, C, D), msg[r$2[j] + start], K$4(j)), s[j]), E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(rotl32(sum32_4(Ah, f$5(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};
RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils$s.toHex32(this.h, 'little');else return utils$s.split32(this.h, 'little');
};
function f$5(j, x, y, z) {
  if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);
}
function K$4(j) {
  if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;
}
function Kh(j) {
  if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;
}
var r$2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];
var rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];
var s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];
var sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];

'use strict';
var utils$r = utils$A;
var assert$k = minimalisticAssert$1;
function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;
  this._init(utils$r.toArray(key, enc));
}
var hmac$2 = Hmac;
Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize) key = new this.Hash().update(key).digest();
  assert$k(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++) key.push(0);
  for (i = 0; i < key.length; i++) key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++) key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};
Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};
Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};
var hmac$3 = /*@__PURE__*/getDefaultExportFromCjs$1(hmac$2);

(function (exports) {
  var hash = exports;
  hash.utils = utils$A;
  hash.common = common$5;
  hash.sha = sha;
  hash.ripemd = ripemd;
  hash.hmac = hmac$2;

  // Proxy hash functions to the main object
  hash.sha1 = hash.sha.sha1;
  hash.sha256 = hash.sha.sha256;
  hash.sha224 = hash.sha.sha224;
  hash.sha384 = hash.sha.sha384;
  hash.sha512 = hash.sha.sha512;
  hash.ripemd160 = hash.ripemd.ripemd160;
})(hash$5);
var hash$4 = /*@__PURE__*/getDefaultExportFromCjs$1(hash$5);

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}
function createCommonjsModule(fn, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function require(path, base) {
      return commonjsRequire(path, base === undefined || base === null ? module.path : base);
    }
  }, fn(module, module.exports), module.exports;
}
function getDefaultExportFromNamespaceIfPresent(n) {
  return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;
}
function getDefaultExportFromNamespaceIfNotNamed(n) {
  return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;
}
function getAugmentedNamespace(n) {
  if (n.__esModule) return n;
  var a = Object.defineProperty({}, '__esModule', {
    value: true
  });
  Object.keys(n).forEach(function (k) {
    var d = Object.getOwnPropertyDescriptor(n, k);
    Object.defineProperty(a, k, d.get ? d : {
      enumerable: true,
      get: function get() {
        return n[k];
      }
    });
  });
  return a;
}
function commonjsRequire() {
  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}
var minimalisticAssert = assert$j;
function assert$j(val, msg) {
  if (!val) throw new Error(msg || 'Assertion failed');
}
assert$j.equal = function assertEqual(l, r, msg) {
  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);
};
var utils_1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var utils = exports;
  function toArray(msg, enc) {
    if (Array.isArray(msg)) return msg.slice();
    if (!msg) return [];
    var res = [];
    if (typeof msg !== 'string') {
      for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;
      return res;
    }
    if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0) msg = '0' + msg;
      for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
    } else {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi) res.push(hi, lo);else res.push(lo);
      }
    }
    return res;
  }
  utils.toArray = toArray;
  function zero2(word) {
    if (word.length === 1) return '0' + word;else return word;
  }
  utils.zero2 = zero2;
  function toHex(msg) {
    var res = '';
    for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
    return res;
  }
  utils.toHex = toHex;
  utils.encode = function encode(arr, enc) {
    if (enc === 'hex') return toHex(arr);else return arr;
  };
});
var utils_1$1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var utils = exports;
  utils.assert = minimalisticAssert;
  utils.toArray = utils_1.toArray;
  utils.zero2 = utils_1.zero2;
  utils.toHex = utils_1.toHex;
  utils.encode = utils_1.encode;

  // Represent num in a w-NAF form
  function getNAF(num, w, bits) {
    var naf = new Array(Math.max(num.bitLength(), bits) + 1);
    naf.fill(0);
    var ws = 1 << w + 1;
    var k = num.clone();
    for (var i = 0; i < naf.length; i++) {
      var z;
      var mod = k.andln(ws - 1);
      if (k.isOdd()) {
        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;
        k.isubn(z);
      } else {
        z = 0;
      }
      naf[i] = z;
      k.iushrn(1);
    }
    return naf;
  }
  utils.getNAF = getNAF;

  // Represent k1, k2 in a Joint Sparse Form
  function getJSF(k1, k2) {
    var jsf = [[], []];
    k1 = k1.clone();
    k2 = k2.clone();
    var d1 = 0;
    var d2 = 0;
    var m8;
    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
      // First phase
      var m14 = k1.andln(3) + d1 & 3;
      var m24 = k2.andln(3) + d2 & 3;
      if (m14 === 3) m14 = -1;
      if (m24 === 3) m24 = -1;
      var u1;
      if ((m14 & 1) === 0) {
        u1 = 0;
      } else {
        m8 = k1.andln(7) + d1 & 7;
        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;
      }
      jsf[0].push(u1);
      var u2;
      if ((m24 & 1) === 0) {
        u2 = 0;
      } else {
        m8 = k2.andln(7) + d2 & 7;
        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;
      }
      jsf[1].push(u2);

      // Second phase
      if (2 * d1 === u1 + 1) d1 = 1 - d1;
      if (2 * d2 === u2 + 1) d2 = 1 - d2;
      k1.iushrn(1);
      k2.iushrn(1);
    }
    return jsf;
  }
  utils.getJSF = getJSF;
  function cachedProperty(obj, name, computer) {
    var key = '_' + name;
    obj.prototype[name] = function cachedProperty() {
      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);
    };
  }
  utils.cachedProperty = cachedProperty;
  function parseBytes(bytes) {
    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;
  }
  utils.parseBytes = parseBytes;
  function intFromLE(bytes) {
    return new BN$g(bytes, 'hex', 'le');
  }
  utils.intFromLE = intFromLE;
});
'use strict';
var getNAF$2 = utils_1$1.getNAF;
var getJSF$2 = utils_1$1.getJSF;
var assert$1$1 = utils_1$1.assert;
function BaseCurve$2(type, conf) {
  this.type = type;
  this.p = new BN$g(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN$g.red(conf.prime) : BN$g.mont(this.p);

  // Useful for many curves
  this.zero = new BN$g(0).toRed(this.red);
  this.one = new BN$g(1).toRed(this.red);
  this.two = new BN$g(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN$g(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
var base$4 = BaseCurve$2;
BaseCurve$2.prototype.point = function point() {
  throw new Error('Not implemented');
};
BaseCurve$2.prototype.validate = function validate() {
  throw new Error('Not implemented');
};
BaseCurve$2.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert$1$1(p.precomputed);
  var doubles = p._getDoubles();
  var naf = getNAF$2(k, 1, this._bitLength);
  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }
  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};
BaseCurve$2.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF$2(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;
    if (i >= 0) l++;
    acc = acc.dblp(l);
    if (i < 0) break;
    var z = naf[i];
    assert$1$1(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
    } else {
      // J +- J
      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};
BaseCurve$2.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF$2(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF$2(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }
    var comb = [points[a], /* 1 */
    null, /* 3 */
    null, /* 5 */
    points[b] /* 7 */];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }
    var index = [-3, /* -1 -1 */
    -1, /* -1 0 */
    -5, /* -1 1 */
    -7, /* 0 -1 */
    0, /* 0 0 */
    7, /* 0 1 */
    5, /* 1 -1 */
    1, /* 1 0 */
    3 /* 1 1 */];
    var jsf = getJSF$2(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;
      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }
  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;
    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0) zero = false;
      }
      if (!zero) break;
      k++;
      i--;
    }
    if (i >= 0) k++;
    acc = acc.dblp(k);
    if (i < 0) break;
    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();
      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++) wnd[i] = null;
  if (jacobianResult) return acc;else return acc.toP();
};
function BasePoint$2(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve$2.BasePoint = BasePoint$2;
BasePoint$2.prototype.eq = function eq(/*other*/
) {
  throw new Error('Not implemented');
};
BasePoint$2.prototype.validate = function validate() {
  return this.curve.validate(this);
};
BaseCurve$2.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils_1$1.toArray(bytes, enc);
  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06) assert$1$1(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$1$1(bytes[bytes.length - 1] % 2 === 1);
    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};
BasePoint$2.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};
BasePoint$2.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);
  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);
  return [0x04].concat(x, this.getY().toArray('be', len));
};
BasePoint$2.prototype.encode = function encode(enc, compact) {
  return utils_1$1.encode(this._encode(compact), enc);
};
BasePoint$2.prototype.precompute = function precompute(power) {
  if (this.precomputed) return this;
  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;
  return this;
};
BasePoint$2.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed) return false;
  var doubles = this.precomputed.doubles;
  if (!doubles) return false;
  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};
BasePoint$2.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
  var doubles = [this];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++) acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};
BasePoint$2.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
  var res = [this];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};
BasePoint$2.prototype._getBeta = function _getBeta() {
  return null;
};
BasePoint$2.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++) r = r.dbl();
  return r;
};
var inherits_browser = createCommonjsModule(function (module) {
  if (typeof Object.create === 'function') {
    // implementation from standard node.js 'util' module
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
      }
    };
  } else {
    // old school shim for old browsers
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function TempCtor() {};
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
    };
  }
});
'use strict';
var assert$2$1 = utils_1$1.assert;
function ShortCurve$2(conf) {
  base$4.call(this, 'short', conf);
  this.a = new BN$g(conf.a, 16).toRed(this.red);
  this.b = new BN$g(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();
  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits_browser(ShortCurve$2, base$4);
var short_1 = ShortCurve$2;
ShortCurve$2.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN$g(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN$g(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert$2$1(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function (vec) {
      return {
        a: new BN$g(vec.a, 16),
        b: new BN$g(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }
  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};
ShortCurve$2.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN$g.mont(num);
  var tinv = new BN$g(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();
  var s = new BN$g(3).toRed(red).redNeg().redSqrt().redMul(tinv);
  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [l1, l2];
};
ShortCurve$2.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN$g(1);
  var y1 = new BN$g(0);
  var x2 = new BN$g(0);
  var y2 = new BN$g(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;
  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));
    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;
    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;
  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }
  return [{
    a: a1,
    b: b1
  }, {
    a: a2,
    b: b2
  }];
};
ShortCurve$2.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];
  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);
  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return {
    k1: k1,
    k2: k2
  };
};
ShortCurve$2.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN$g(x, 16);
  if (!x.red) x = x.toRed(this.red);
  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
  return this.point(x, y);
};
ShortCurve$2.prototype.validate = function validate(point) {
  if (point.inf) return true;
  var x = point.x;
  var y = point.y;
  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};
ShortCurve$2.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();
    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }
    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};
function Point$6(curve, x, y, isRed) {
  base$4.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN$g(x, 16);
    this.y = new BN$g(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.y.red) this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits_browser(Point$6, base$4.BasePoint);
ShortCurve$2.prototype.point = function point(x, y, isRed) {
  return new Point$6(this, x, y, isRed);
};
ShortCurve$2.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point$6.fromJSON(this, obj, red);
};
Point$6.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo) return;
  var pre = this.precomputed;
  if (pre && pre.beta) return pre.beta;
  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function endoMul(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};
Point$6.prototype.toJSON = function toJSON() {
  if (!this.precomputed) return [this.x, this.y];
  return [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }];
};
Point$6.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string') obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2]) return res;
  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }
  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [res].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [res].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};
Point$6.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};
Point$6.prototype.isInfinity = function isInfinity() {
  return this.inf;
};
Point$6.prototype.add = function add(p) {
  // O + P = P
  if (this.inf) return p;

  // P + O = P
  if (p.inf) return this;

  // P + P = 2P
  if (this.eq(p)) return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p)) return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);
  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point$6.prototype.dbl = function dbl() {
  if (this.inf) return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);
  var a = this.curve.a;
  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point$6.prototype.getX = function getX() {
  return this.x.fromRed();
};
Point$6.prototype.getY = function getY() {
  return this.y.fromRed();
};
Point$6.prototype.mul = function mul(k) {
  k = new BN$g(k, 16);
  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);
};
Point$6.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);
};
Point$6.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};
Point$6.prototype.eq = function eq(p) {
  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};
Point$6.prototype.neg = function neg(_precompute) {
  if (this.inf) return this;
  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function negate(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};
Point$6.prototype.toJ = function toJ() {
  if (this.inf) return this.curve.jpoint(null, null, null);
  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};
function JPoint$2(curve, x, y, z) {
  base$4.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN$g(0);
  } else {
    this.x = new BN$g(x, 16);
    this.y = new BN$g(y, 16);
    this.z = new BN$g(z, 16);
  }
  if (!this.x.red) this.x = this.x.toRed(this.curve.red);
  if (!this.y.red) this.y = this.y.toRed(this.curve.red);
  if (!this.z.red) this.z = this.z.toRed(this.curve.red);
  this.zOne = this.z === this.curve.one;
}
inherits_browser(JPoint$2, base$4.BasePoint);
ShortCurve$2.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint$2(this, x, y, z);
};
JPoint$2.prototype.toP = function toP() {
  if (this.isInfinity()) return this.curve.point(null, null);
  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);
  return this.curve.point(ax, ay);
};
JPoint$2.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
JPoint$2.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity()) return p;

  // P + O = P
  if (p.isInfinity()) return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$2.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity()) return p.toJ();

  // P + O = P
  if (p.isInfinity()) return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$2.prototype.dblp = function dblp(pow) {
  if (pow === 0) return this;
  if (this.isInfinity()) return this;
  if (!pow) return this.dbl();
  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++) r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);
    jx = nx;
    jz = nz;
    jyd = dny;
  }
  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};
JPoint$2.prototype.dbl = function dbl() {
  if (this.isInfinity()) return this;
  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();
};
JPoint$2.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$2.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$2.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();
  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);
  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$2.prototype.trpl = function trpl() {
  if (!this.curve.zeroA) return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$2.prototype.mul = function mul(k, kbase) {
  k = new BN$g(k, kbase);
  return this.curve._wnafMul(this, k);
};
JPoint$2.prototype.eq = function eq(p) {
  if (p.type === 'affine') return this.eq(p.toJ());
  if (this === p) return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};
JPoint$2.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0) return true;
  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0) return false;
    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0) return true;
  }
};
JPoint$2.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';
};
JPoint$2.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};
var curve_1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var curve = exports;
  curve.base = base$4;
  curve["short"] = short_1;
  curve.mont = /*RicMoo:ethers:require(./mont)*/null;
  curve.edwards = /*RicMoo:ethers:require(./edwards)*/null;
});
var curves_1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var curves = exports;
  var assert = utils_1$1.assert;
  function PresetCurve(options) {
    if (options.type === 'short') this.curve = new curve_1["short"](options);else if (options.type === 'edwards') this.curve = new curve_1.edwards(options);else this.curve = new curve_1.mont(options);
    this.g = this.curve.g;
    this.n = this.curve.n;
    this.hash = options.hash;
    assert(this.g.validate(), 'Invalid curve');
    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
  }
  curves.PresetCurve = PresetCurve;
  function defineCurve(name, options) {
    Object.defineProperty(curves, name, {
      configurable: true,
      enumerable: true,
      get: function get() {
        var curve = new PresetCurve(options);
        Object.defineProperty(curves, name, {
          configurable: true,
          enumerable: true,
          value: curve
        });
        return curve;
      }
    });
  }
  defineCurve('p192', {
    type: 'short',
    prime: 'p192',
    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
    hash: hash$4.sha256,
    gRed: false,
    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']
  });
  defineCurve('p224', {
    type: 'short',
    prime: 'p224',
    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
    hash: hash$4.sha256,
    gRed: false,
    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']
  });
  defineCurve('p256', {
    type: 'short',
    prime: null,
    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
    hash: hash$4.sha256,
    gRed: false,
    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']
  });
  defineCurve('p384', {
    type: 'short',
    prime: null,
    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',
    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',
    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
    hash: hash$4.sha384,
    gRed: false,
    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']
  });
  defineCurve('p521', {
    type: 'short',
    prime: null,
    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',
    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',
    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
    hash: hash$4.sha512,
    gRed: false,
    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']
  });
  defineCurve('curve25519', {
    type: 'mont',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '76d06',
    b: '1',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash$4.sha256,
    gRed: false,
    g: ['9']
  });
  defineCurve('ed25519', {
    type: 'edwards',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '-1',
    c: '1',
    // -121665 * (121666^(-1)) (mod P)
    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash$4.sha256,
    gRed: false,
    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',
    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658']
  });
  var pre;
  try {
    pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/null.crash();
  } catch (e) {
    pre = undefined;
  }
  defineCurve('secp256k1', {
    type: 'short',
    prime: 'k256',
    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
    a: '0',
    b: '7',
    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
    h: '1',
    hash: hash$4.sha256,
    // Precomputed endomorphism
    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
    basis: [{
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    }, {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }],
    gRed: false,
    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]
  });
});
'use strict';
function HmacDRBG$3(options) {
  if (!(this instanceof HmacDRBG$3)) return new HmacDRBG$3(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;
  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;
  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;
  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');
  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
var hmacDrbg$2 = HmacDRBG$3;
HmacDRBG$3.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);
  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }
  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000; // 2^48
};
HmacDRBG$3.prototype._hmac = function hmac() {
  return new hash$4.hmac(this.hash, this.K);
};
HmacDRBG$3.prototype._update = function update(seed) {
  var kmac = this._hmac().update(this.V).update([0x00]);
  if (seed) kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed) return;
  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();
  this.V = this._hmac().update(this.V).digest();
};
HmacDRBG$3.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }
  entropy = utils_1.toArray(entropy, entropyEnc);
  add = utils_1.toArray(add, addEnc);
  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._update(entropy.concat(add || []));
  this._reseed = 1;
};
HmacDRBG$3.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils_1.toArray(add, addEnc || 'hex');
    this._update(add);
  }
  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }
  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils_1.encode(res, enc);
};
'use strict';
var assert$3$1 = utils_1$1.assert;
function KeyPair$8(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv) this._importPrivate(options.priv, options.privEnc);
  if (options.pub) this._importPublic(options.pub, options.pubEnc);
}
var key$8 = KeyPair$8;
KeyPair$8.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair$8) return pub;
  return new KeyPair$8(ec, {
    pub: pub,
    pubEnc: enc
  });
};
KeyPair$8.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair$8) return priv;
  return new KeyPair$8(ec, {
    priv: priv,
    privEnc: enc
  });
};
KeyPair$8.prototype.validate = function validate() {
  var pub = this.getPublic();
  if (pub.isInfinity()) return {
    result: false,
    reason: 'Invalid public key'
  };
  if (!pub.validate()) return {
    result: false,
    reason: 'Public key is not a point'
  };
  if (!pub.mul(this.ec.curve.n).isInfinity()) return {
    result: false,
    reason: 'Public key * N != O'
  };
  return {
    result: true,
    reason: null
  };
};
KeyPair$8.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }
  if (!this.pub) this.pub = this.ec.g.mul(this.priv);
  if (!enc) return this.pub;
  return this.pub.encode(enc, compact);
};
KeyPair$8.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;
};
KeyPair$8.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN$g(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};
KeyPair$8.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert$3$1(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {
      assert$3$1(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair$8.prototype.derive = function derive(pub) {
  if (!pub.validate()) {
    assert$3$1(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair$8.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};
KeyPair$8.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};
KeyPair$8.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};
'use strict';
var assert$4$1 = utils_1$1.assert;
function Signature$8(options, enc) {
  if (options instanceof Signature$8) return options;
  if (this._importDER(options, enc)) return;
  assert$4$1(options.r && options.s, 'Signature without r or s');
  this.r = new BN$g(options.r, 16);
  this.s = new BN$g(options.s, 16);
  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;
}
var signature$8 = Signature$8;
function Position$2() {
  this.place = 0;
}
function getLength$2(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }
  p.place = off;
  return val;
}
function rmPadding$2(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}
Signature$8.prototype._importDER = function _importDER(data, enc) {
  data = utils_1$1.toArray(data, enc);
  var p = new Position$2();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength$2(data, p);
  if (len === false) {
    return false;
  }
  if (len + p.place !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength$2(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength$2(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  this.r = new BN$g(r);
  this.s = new BN$g(s);
  this.recoveryParam = null;
  return true;
};
function constructLength$2(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push(len >>> (octets << 3) & 0xff);
  }
  arr.push(len);
}
Signature$8.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80) r = [0].concat(r);
  // Pad values
  if (s[0] & 0x80) s = [0].concat(s);
  r = rmPadding$2(r);
  s = rmPadding$2(s);
  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [0x02];
  constructLength$2(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength$2(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [0x30];
  constructLength$2(res, backHalf.length);
  res = res.concat(backHalf);
  return utils_1$1.encode(res, enc);
};
'use strict';
var rand$2 = /*RicMoo:ethers:require(brorand)*/function rand() {
  throw new Error('unsupported');
};
var assert$5$1 = utils_1$1.assert;
function EC$2(options) {
  if (!(this instanceof EC$2)) return new EC$2(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert$5$1(Object.prototype.hasOwnProperty.call(curves_1, options), 'Unknown curve ' + options);
    options = curves_1[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves_1.PresetCurve) options = {
    curve: options
  };
  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
var ec$2 = EC$2;
EC$2.prototype.keyPair = function keyPair(options) {
  return new key$8(this, options);
};
EC$2.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return key$8.fromPrivate(this, priv, enc);
};
EC$2.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return key$8.fromPublic(this, pub, enc);
};
EC$2.prototype.genKeyPair = function genKeyPair(options) {
  if (!options) options = {};

  // Instantiate Hmac_DRBG
  var drbg = new hmacDrbg$2({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand$2(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });
  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN$g(2));
  for (;;) {
    var priv = new BN$g(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0) continue;
    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};
EC$2.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0) msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;
};
EC$2.prototype.sign = function sign(msg, key, enc, options) {
  if (_typeof(enc) === 'object') {
    options = enc;
    enc = null;
  }
  if (!options) options = {};
  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN$g(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new hmacDrbg$2({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN$g(1));
  for (var iter = 0;; iter++) {
    var k = options.k ? options.k(iter) : new BN$g(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;
    var kp = this.g.mul(k);
    if (kp.isInfinity()) continue;
    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0) continue;
    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0) continue;
    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }
    return new signature$8({
      r: r,
      s: s,
      recoveryParam: recoveryParam
    });
  }
};
EC$2.prototype.verify = function verify(msg, signature$1, key, enc) {
  msg = this._truncateToN(new BN$g(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature$1 = new signature$8(signature$1, 'hex');

  // Perform primitive values validation
  var r = signature$1.r;
  var s = signature$1.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;
  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity()) return false;
    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity()) return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};
EC$2.prototype.recoverPubKey = function (msg, signature$1, j, enc) {
  assert$5$1((3 & j) === j, 'The recovery param is more than two bits');
  signature$1 = new signature$8(signature$1, enc);
  var n = this.n;
  var e = new BN$g(msg);
  var r = signature$1.r;
  var s = signature$1.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);
  var rInv = signature$1.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};
EC$2.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {
  signature$1 = new signature$8(signature$1, enc);
  if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;
  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature$1, i);
    } catch (e) {
      continue;
    }
    if (Qprime.eq(Q)) return i;
  }
  throw new Error('Unable to find valid recovery factor');
};
var elliptic_1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var elliptic = exports;
  elliptic.version = /*RicMoo:ethers*/{
    version: "6.5.4"
  }.version;
  elliptic.utils = utils_1$1;
  elliptic.rand = /*RicMoo:ethers:require(brorand)*/function () {
    throw new Error('unsupported');
  };
  elliptic.curve = curve_1;
  elliptic.curves = curves_1;

  // Protocols
  elliptic.ec = ec$2;
  elliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/null;
});
var EC$1$1 = elliptic_1.ec;

var version$3 = "signing-key/5.7.0";

"use strict";
var logger$1 = new Logger(version$3);
var _curve = null;
function getCurve() {
  if (!_curve) {
    _curve = new EC$1$1("secp256k1");
  }
  return _curve;
}
var SigningKey = /*#__PURE__*/function () {
  function SigningKey(privateKey) {
    _classCallCheck(this, SigningKey);
    defineReadOnly(this, "curve", "secp256k1");
    defineReadOnly(this, "privateKey", hexlify(privateKey));
    if (hexDataLength(this.privateKey) !== 32) {
      logger$1.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
    }
    var keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
    defineReadOnly(this, "publicKey", "0x" + keyPair.getPublic(false, "hex"));
    defineReadOnly(this, "compressedPublicKey", "0x" + keyPair.getPublic(true, "hex"));
    defineReadOnly(this, "_isSigningKey", true);
  }
  return _createClass(SigningKey, [{
    key: "_addPoint",
    value: function _addPoint(other) {
      var p0 = getCurve().keyFromPublic(arrayify(this.publicKey));
      var p1 = getCurve().keyFromPublic(arrayify(other));
      return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
    }
  }, {
    key: "signDigest",
    value: function signDigest(digest) {
      var keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
      var digestBytes = arrayify(digest);
      if (digestBytes.length !== 32) {
        logger$1.throwArgumentError("bad digest length", "digest", digest);
      }
      var signature = keyPair.sign(digestBytes, {
        canonical: true
      });
      return splitSignature({
        recoveryParam: signature.recoveryParam,
        r: hexZeroPad("0x" + signature.r.toString(16), 32),
        s: hexZeroPad("0x" + signature.s.toString(16), 32)
      });
    }
  }, {
    key: "computeSharedSecret",
    value: function computeSharedSecret(otherKey) {
      var keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
      var otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));
      return hexZeroPad("0x" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);
    }
  }], [{
    key: "isSigningKey",
    value: function isSigningKey(value) {
      return !!(value && value._isSigningKey);
    }
  }]);
}();
function recoverPublicKey(digest, signature) {
  var sig = splitSignature(signature);
  var rs = {
    r: arrayify(sig.r),
    s: arrayify(sig.s)
  };
  return "0x" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode("hex", false);
}
function computePublicKey(key, compressed) {
  var bytes = arrayify(key);
  if (bytes.length === 32) {
    var signingKey = new SigningKey(bytes);
    if (compressed) {
      return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
    }
    return signingKey.publicKey;
  } else if (bytes.length === 33) {
    if (compressed) {
      return hexlify(bytes);
    }
    return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
  } else if (bytes.length === 65) {
    if (!compressed) {
      return hexlify(bytes);
    }
    return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
  }
  return logger$1.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}

var version$2 = "transactions/5.7.0";

"use strict";
var logger = new Logger(version$2);
var TransactionTypes;
(function (TransactionTypes) {
  TransactionTypes[TransactionTypes["legacy"] = 0] = "legacy";
  TransactionTypes[TransactionTypes["eip2930"] = 1] = "eip2930";
  TransactionTypes[TransactionTypes["eip1559"] = 2] = "eip1559";
})(TransactionTypes || (TransactionTypes = {}));
;
///////////////////////////////
function handleAddress(value) {
  if (value === "0x") {
    return null;
  }
  return getAddress(value);
}
function handleNumber(value) {
  if (value === "0x") {
    return Zero$1;
  }
  return BigNumber.from(value);
}
// Legacy Transaction Fields
var transactionFields = [{
  name: "nonce",
  maxLength: 32,
  numeric: true
}, {
  name: "gasPrice",
  maxLength: 32,
  numeric: true
}, {
  name: "gasLimit",
  maxLength: 32,
  numeric: true
}, {
  name: "to",
  length: 20
}, {
  name: "value",
  maxLength: 32,
  numeric: true
}, {
  name: "data"
}];
var allowedTransactionKeys = {
  chainId: true,
  data: true,
  gasLimit: true,
  gasPrice: true,
  nonce: true,
  to: true,
  type: true,
  value: true
};
function computeAddress(key) {
  var publicKey = computePublicKey(key);
  return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));
}
function recoverAddress(digest, signature) {
  return computeAddress(recoverPublicKey(arrayify(digest), signature));
}
function formatNumber(value, name) {
  var result = stripZeros(BigNumber.from(value).toHexString());
  if (result.length > 32) {
    logger.throwArgumentError("invalid length for " + name, "transaction:" + name, value);
  }
  return result;
}
function accessSetify(addr, storageKeys) {
  return {
    address: getAddress(addr),
    storageKeys: (storageKeys || []).map(function (storageKey, index) {
      if (hexDataLength(storageKey) !== 32) {
        logger.throwArgumentError("invalid access list storageKey", "accessList[".concat(addr, ":").concat(index, "]"), storageKey);
      }
      return storageKey.toLowerCase();
    })
  };
}
function accessListify(value) {
  if (Array.isArray(value)) {
    return value.map(function (set, index) {
      if (Array.isArray(set)) {
        if (set.length > 2) {
          logger.throwArgumentError("access list expected to be [ address, storageKeys[] ]", "value[".concat(index, "]"), set);
        }
        return accessSetify(set[0], set[1]);
      }
      return accessSetify(set.address, set.storageKeys);
    });
  }
  var result = Object.keys(value).map(function (addr) {
    var storageKeys = value[addr].reduce(function (accum, storageKey) {
      accum[storageKey] = true;
      return accum;
    }, {});
    return accessSetify(addr, Object.keys(storageKeys).sort());
  });
  result.sort(function (a, b) {
    return a.address.localeCompare(b.address);
  });
  return result;
}
function formatAccessList(value) {
  return accessListify(value).map(function (set) {
    return [set.address, set.storageKeys];
  });
}
function _serializeEip1559(transaction, signature) {
  // If there is an explicit gasPrice, make sure it matches the
  // EIP-1559 fees; otherwise they may not understand what they
  // think they are setting in terms of fee.
  if (transaction.gasPrice != null) {
    var gasPrice = BigNumber.from(transaction.gasPrice);
    var maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);
    if (!gasPrice.eq(maxFeePerGas)) {
      logger.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
        gasPrice: gasPrice,
        maxFeePerGas: maxFeePerGas
      });
    }
  }
  var fields = [formatNumber(transaction.chainId || 0, "chainId"), formatNumber(transaction.nonce || 0, "nonce"), formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"), formatNumber(transaction.gasLimit || 0, "gasLimit"), transaction.to != null ? getAddress(transaction.to) : "0x", formatNumber(transaction.value || 0, "value"), transaction.data || "0x", formatAccessList(transaction.accessList || [])];
  if (signature) {
    var sig = splitSignature(signature);
    fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
    fields.push(stripZeros(sig.r));
    fields.push(stripZeros(sig.s));
  }
  return hexConcat(["0x02", encode(fields)]);
}
function _serializeEip2930(transaction, signature) {
  var fields = [formatNumber(transaction.chainId || 0, "chainId"), formatNumber(transaction.nonce || 0, "nonce"), formatNumber(transaction.gasPrice || 0, "gasPrice"), formatNumber(transaction.gasLimit || 0, "gasLimit"), transaction.to != null ? getAddress(transaction.to) : "0x", formatNumber(transaction.value || 0, "value"), transaction.data || "0x", formatAccessList(transaction.accessList || [])];
  if (signature) {
    var sig = splitSignature(signature);
    fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
    fields.push(stripZeros(sig.r));
    fields.push(stripZeros(sig.s));
  }
  return hexConcat(["0x01", encode(fields)]);
}
// Legacy Transactions and EIP-155
function _serialize(transaction, signature) {
  checkProperties(transaction, allowedTransactionKeys);
  var raw = [];
  transactionFields.forEach(function (fieldInfo) {
    var value = transaction[fieldInfo.name] || [];
    var options = {};
    if (fieldInfo.numeric) {
      options.hexPad = "left";
    }
    value = arrayify(hexlify(value, options));
    // Fixed-width field
    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {
      logger.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
    }
    // Variable-width (with a maximum)
    if (fieldInfo.maxLength) {
      value = stripZeros(value);
      if (value.length > fieldInfo.maxLength) {
        logger.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
      }
    }
    raw.push(hexlify(value));
  });
  var chainId = 0;
  if (transaction.chainId != null) {
    // A chainId was provided; if non-zero we'll use EIP-155
    chainId = transaction.chainId;
    if (typeof chainId !== "number") {
      logger.throwArgumentError("invalid transaction.chainId", "transaction", transaction);
    }
  } else if (signature && !isBytesLike(signature) && signature.v > 28) {
    // No chainId provided, but the signature is signing with EIP-155; derive chainId
    chainId = Math.floor((signature.v - 35) / 2);
  }
  // We have an EIP-155 transaction (chainId was specified and non-zero)
  if (chainId !== 0) {
    raw.push(hexlify(chainId)); // @TODO: hexValue?
    raw.push("0x");
    raw.push("0x");
  }
  // Requesting an unsigned transaction
  if (!signature) {
    return encode(raw);
  }
  // The splitSignature will ensure the transaction has a recoveryParam in the
  // case that the signTransaction function only adds a v.
  var sig = splitSignature(signature);
  // We pushed a chainId and null r, s on for hashing only; remove those
  var v = 27 + sig.recoveryParam;
  if (chainId !== 0) {
    raw.pop();
    raw.pop();
    raw.pop();
    v += chainId * 2 + 8;
    // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!
    if (sig.v > 28 && sig.v !== v) {
      logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
    }
  } else if (sig.v !== v) {
    logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
  }
  raw.push(hexlify(v));
  raw.push(stripZeros(arrayify(sig.r)));
  raw.push(stripZeros(arrayify(sig.s)));
  return encode(raw);
}
function serialize(transaction, signature) {
  // Legacy and EIP-155 Transactions
  if (transaction.type == null || transaction.type === 0) {
    if (transaction.accessList != null) {
      logger.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", transaction);
    }
    return _serialize(transaction, signature);
  }
  // Typed Transactions (EIP-2718)
  switch (transaction.type) {
    case 1:
      return _serializeEip2930(transaction, signature);
    case 2:
      return _serializeEip1559(transaction, signature);
    default:
      break;
  }
  return logger.throwError("unsupported transaction type: ".concat(transaction.type), Logger.errors.UNSUPPORTED_OPERATION, {
    operation: "serializeTransaction",
    transactionType: transaction.type
  });
}
function _parseEipSignature(tx, fields, serialize) {
  try {
    var recid = handleNumber(fields[0]).toNumber();
    if (recid !== 0 && recid !== 1) {
      throw new Error("bad recid");
    }
    tx.v = recid;
  } catch (error) {
    logger.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
  }
  tx.r = hexZeroPad(fields[1], 32);
  tx.s = hexZeroPad(fields[2], 32);
  try {
    var digest = keccak256(serialize(tx));
    tx.from = recoverAddress(digest, {
      r: tx.r,
      s: tx.s,
      recoveryParam: tx.v
    });
  } catch (error) {}
}
function _parseEip1559(payload) {
  var transaction = decode(payload.slice(1));
  if (transaction.length !== 9 && transaction.length !== 12) {
    logger.throwArgumentError("invalid component count for transaction type: 2", "payload", hexlify(payload));
  }
  var maxPriorityFeePerGas = handleNumber(transaction[2]);
  var maxFeePerGas = handleNumber(transaction[3]);
  var tx = {
    type: 2,
    chainId: handleNumber(transaction[0]).toNumber(),
    nonce: handleNumber(transaction[1]).toNumber(),
    maxPriorityFeePerGas: maxPriorityFeePerGas,
    maxFeePerGas: maxFeePerGas,
    gasPrice: null,
    gasLimit: handleNumber(transaction[4]),
    to: handleAddress(transaction[5]),
    value: handleNumber(transaction[6]),
    data: transaction[7],
    accessList: accessListify(transaction[8])
  };
  // Unsigned EIP-1559 Transaction
  if (transaction.length === 9) {
    return tx;
  }
  tx.hash = keccak256(payload);
  _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);
  return tx;
}
function _parseEip2930(payload) {
  var transaction = decode(payload.slice(1));
  if (transaction.length !== 8 && transaction.length !== 11) {
    logger.throwArgumentError("invalid component count for transaction type: 1", "payload", hexlify(payload));
  }
  var tx = {
    type: 1,
    chainId: handleNumber(transaction[0]).toNumber(),
    nonce: handleNumber(transaction[1]).toNumber(),
    gasPrice: handleNumber(transaction[2]),
    gasLimit: handleNumber(transaction[3]),
    to: handleAddress(transaction[4]),
    value: handleNumber(transaction[5]),
    data: transaction[6],
    accessList: accessListify(transaction[7])
  };
  // Unsigned EIP-2930 Transaction
  if (transaction.length === 8) {
    return tx;
  }
  tx.hash = keccak256(payload);
  _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);
  return tx;
}
// Legacy Transactions and EIP-155
function _parse(rawTransaction) {
  var transaction = decode(rawTransaction);
  if (transaction.length !== 9 && transaction.length !== 6) {
    logger.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
  }
  var tx = {
    nonce: handleNumber(transaction[0]).toNumber(),
    gasPrice: handleNumber(transaction[1]),
    gasLimit: handleNumber(transaction[2]),
    to: handleAddress(transaction[3]),
    value: handleNumber(transaction[4]),
    data: transaction[5],
    chainId: 0
  };
  // Legacy unsigned transaction
  if (transaction.length === 6) {
    return tx;
  }
  try {
    tx.v = BigNumber.from(transaction[6]).toNumber();
  } catch (error) {
    // @TODO: What makes snese to do? The v is too big
    return tx;
  }
  tx.r = hexZeroPad(transaction[7], 32);
  tx.s = hexZeroPad(transaction[8], 32);
  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {
    // EIP-155 unsigned transaction
    tx.chainId = tx.v;
    tx.v = 0;
  } else {
    // Signed Transaction
    tx.chainId = Math.floor((tx.v - 35) / 2);
    if (tx.chainId < 0) {
      tx.chainId = 0;
    }
    var recoveryParam = tx.v - 27;
    var raw = transaction.slice(0, 6);
    if (tx.chainId !== 0) {
      raw.push(hexlify(tx.chainId));
      raw.push("0x");
      raw.push("0x");
      recoveryParam -= tx.chainId * 2 + 8;
    }
    var digest = keccak256(encode(raw));
    try {
      tx.from = recoverAddress(digest, {
        r: hexlify(tx.r),
        s: hexlify(tx.s),
        recoveryParam: recoveryParam
      });
    } catch (error) {}
    tx.hash = keccak256(rawTransaction);
  }
  tx.type = null;
  return tx;
}
function parse(rawTransaction) {
  var payload = arrayify(rawTransaction);
  // Legacy and EIP-155 Transactions
  if (payload[0] > 0x7f) {
    return _parse(payload);
  }
  // Typed Transaction (EIP-2718)
  switch (payload[0]) {
    case 1:
      return _parseEip2930(payload);
    case 2:
      return _parseEip1559(payload);
    default:
      break;
  }
  return logger.throwError("unsupported transaction type: ".concat(payload[0]), Logger.errors.UNSUPPORTED_OPERATION, {
    operation: "parseTransaction",
    transactionType: payload[0]
  });
}

var chacha20poly1305$1 = {};

var chacha = {};

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(chacha, "__esModule", {
  value: true
});
/**
 * Package chacha implements ChaCha stream cipher.
 */
var binary_1 = binary;
var wipe_1$2 = wipe$1;
// Number of ChaCha rounds (ChaCha20).
var ROUNDS = 20;
// Applies the ChaCha core function to 16-byte input,
// 32-byte key key, and puts the result into 64-byte array out.
function core(out, input, key) {
  var j0 = 0x61707865; // "expa"  -- ChaCha's "sigma" constant
  var j1 = 0x3320646E; // "nd 3"     for 32-byte keys
  var j2 = 0x79622D32; // "2-by"
  var j3 = 0x6B206574; // "te k"
  var j4 = key[3] << 24 | key[2] << 16 | key[1] << 8 | key[0];
  var j5 = key[7] << 24 | key[6] << 16 | key[5] << 8 | key[4];
  var j6 = key[11] << 24 | key[10] << 16 | key[9] << 8 | key[8];
  var j7 = key[15] << 24 | key[14] << 16 | key[13] << 8 | key[12];
  var j8 = key[19] << 24 | key[18] << 16 | key[17] << 8 | key[16];
  var j9 = key[23] << 24 | key[22] << 16 | key[21] << 8 | key[20];
  var j10 = key[27] << 24 | key[26] << 16 | key[25] << 8 | key[24];
  var j11 = key[31] << 24 | key[30] << 16 | key[29] << 8 | key[28];
  var j12 = input[3] << 24 | input[2] << 16 | input[1] << 8 | input[0];
  var j13 = input[7] << 24 | input[6] << 16 | input[5] << 8 | input[4];
  var j14 = input[11] << 24 | input[10] << 16 | input[9] << 8 | input[8];
  var j15 = input[15] << 24 | input[14] << 16 | input[13] << 8 | input[12];
  var x0 = j0;
  var x1 = j1;
  var x2 = j2;
  var x3 = j3;
  var x4 = j4;
  var x5 = j5;
  var x6 = j6;
  var x7 = j7;
  var x8 = j8;
  var x9 = j9;
  var x10 = j10;
  var x11 = j11;
  var x12 = j12;
  var x13 = j13;
  var x14 = j14;
  var x15 = j15;
  for (var i = 0; i < ROUNDS; i += 2) {
    x0 = x0 + x4 | 0;
    x12 ^= x0;
    x12 = x12 >>> 32 - 16 | x12 << 16;
    x8 = x8 + x12 | 0;
    x4 ^= x8;
    x4 = x4 >>> 32 - 12 | x4 << 12;
    x1 = x1 + x5 | 0;
    x13 ^= x1;
    x13 = x13 >>> 32 - 16 | x13 << 16;
    x9 = x9 + x13 | 0;
    x5 ^= x9;
    x5 = x5 >>> 32 - 12 | x5 << 12;
    x2 = x2 + x6 | 0;
    x14 ^= x2;
    x14 = x14 >>> 32 - 16 | x14 << 16;
    x10 = x10 + x14 | 0;
    x6 ^= x10;
    x6 = x6 >>> 32 - 12 | x6 << 12;
    x3 = x3 + x7 | 0;
    x15 ^= x3;
    x15 = x15 >>> 32 - 16 | x15 << 16;
    x11 = x11 + x15 | 0;
    x7 ^= x11;
    x7 = x7 >>> 32 - 12 | x7 << 12;
    x2 = x2 + x6 | 0;
    x14 ^= x2;
    x14 = x14 >>> 32 - 8 | x14 << 8;
    x10 = x10 + x14 | 0;
    x6 ^= x10;
    x6 = x6 >>> 32 - 7 | x6 << 7;
    x3 = x3 + x7 | 0;
    x15 ^= x3;
    x15 = x15 >>> 32 - 8 | x15 << 8;
    x11 = x11 + x15 | 0;
    x7 ^= x11;
    x7 = x7 >>> 32 - 7 | x7 << 7;
    x1 = x1 + x5 | 0;
    x13 ^= x1;
    x13 = x13 >>> 32 - 8 | x13 << 8;
    x9 = x9 + x13 | 0;
    x5 ^= x9;
    x5 = x5 >>> 32 - 7 | x5 << 7;
    x0 = x0 + x4 | 0;
    x12 ^= x0;
    x12 = x12 >>> 32 - 8 | x12 << 8;
    x8 = x8 + x12 | 0;
    x4 ^= x8;
    x4 = x4 >>> 32 - 7 | x4 << 7;
    x0 = x0 + x5 | 0;
    x15 ^= x0;
    x15 = x15 >>> 32 - 16 | x15 << 16;
    x10 = x10 + x15 | 0;
    x5 ^= x10;
    x5 = x5 >>> 32 - 12 | x5 << 12;
    x1 = x1 + x6 | 0;
    x12 ^= x1;
    x12 = x12 >>> 32 - 16 | x12 << 16;
    x11 = x11 + x12 | 0;
    x6 ^= x11;
    x6 = x6 >>> 32 - 12 | x6 << 12;
    x2 = x2 + x7 | 0;
    x13 ^= x2;
    x13 = x13 >>> 32 - 16 | x13 << 16;
    x8 = x8 + x13 | 0;
    x7 ^= x8;
    x7 = x7 >>> 32 - 12 | x7 << 12;
    x3 = x3 + x4 | 0;
    x14 ^= x3;
    x14 = x14 >>> 32 - 16 | x14 << 16;
    x9 = x9 + x14 | 0;
    x4 ^= x9;
    x4 = x4 >>> 32 - 12 | x4 << 12;
    x2 = x2 + x7 | 0;
    x13 ^= x2;
    x13 = x13 >>> 32 - 8 | x13 << 8;
    x8 = x8 + x13 | 0;
    x7 ^= x8;
    x7 = x7 >>> 32 - 7 | x7 << 7;
    x3 = x3 + x4 | 0;
    x14 ^= x3;
    x14 = x14 >>> 32 - 8 | x14 << 8;
    x9 = x9 + x14 | 0;
    x4 ^= x9;
    x4 = x4 >>> 32 - 7 | x4 << 7;
    x1 = x1 + x6 | 0;
    x12 ^= x1;
    x12 = x12 >>> 32 - 8 | x12 << 8;
    x11 = x11 + x12 | 0;
    x6 ^= x11;
    x6 = x6 >>> 32 - 7 | x6 << 7;
    x0 = x0 + x5 | 0;
    x15 ^= x0;
    x15 = x15 >>> 32 - 8 | x15 << 8;
    x10 = x10 + x15 | 0;
    x5 ^= x10;
    x5 = x5 >>> 32 - 7 | x5 << 7;
  }
  binary_1.writeUint32LE(x0 + j0 | 0, out, 0);
  binary_1.writeUint32LE(x1 + j1 | 0, out, 4);
  binary_1.writeUint32LE(x2 + j2 | 0, out, 8);
  binary_1.writeUint32LE(x3 + j3 | 0, out, 12);
  binary_1.writeUint32LE(x4 + j4 | 0, out, 16);
  binary_1.writeUint32LE(x5 + j5 | 0, out, 20);
  binary_1.writeUint32LE(x6 + j6 | 0, out, 24);
  binary_1.writeUint32LE(x7 + j7 | 0, out, 28);
  binary_1.writeUint32LE(x8 + j8 | 0, out, 32);
  binary_1.writeUint32LE(x9 + j9 | 0, out, 36);
  binary_1.writeUint32LE(x10 + j10 | 0, out, 40);
  binary_1.writeUint32LE(x11 + j11 | 0, out, 44);
  binary_1.writeUint32LE(x12 + j12 | 0, out, 48);
  binary_1.writeUint32LE(x13 + j13 | 0, out, 52);
  binary_1.writeUint32LE(x14 + j14 | 0, out, 56);
  binary_1.writeUint32LE(x15 + j15 | 0, out, 60);
}
/**
 * Encrypt src with ChaCha20 stream generated for the given 32-byte key and
 * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and
 * write the result into dst and return it.
 *
 * dst and src may be the same, but otherwise must not overlap.
 *
 * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the
 * same key and nonce, otherwise the stream will repeat. The function will
 * throw error if counter overflows to prevent this.
 *
 * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which
 * is more than a million petabytes). However, it is not recommended to
 * generate 8-byte nonces randomly, as the chance of collision is high.
 *
 * Never use the same key and nonce to encrypt more than one message.
 *
 * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte
 * array with stream counter in first nonceInplaceCounterLength bytes and nonce
 * in the last remaining bytes. The counter will be incremented inplace for
 * each ChaCha block. This is useful if you need to encrypt one stream of data
 * in chunks.
 */
function streamXOR(key, nonce, src, dst, nonceInplaceCounterLength) {
  if (nonceInplaceCounterLength === void 0) {
    nonceInplaceCounterLength = 0;
  }
  // We only support 256-bit keys.
  if (key.length !== 32) {
    throw new Error("ChaCha: key size must be 32 bytes");
  }
  if (dst.length < src.length) {
    throw new Error("ChaCha: destination is shorter than source");
  }
  var nc;
  var counterLength;
  if (nonceInplaceCounterLength === 0) {
    if (nonce.length !== 8 && nonce.length !== 12) {
      throw new Error("ChaCha nonce must be 8 or 12 bytes");
    }
    nc = new Uint8Array(16);
    // First counterLength bytes of nc are counter, starting with zero.
    counterLength = nc.length - nonce.length;
    // Last bytes of nc after counterLength are nonce, set them.
    nc.set(nonce, counterLength);
  } else {
    if (nonce.length !== 16) {
      throw new Error("ChaCha nonce with counter must be 16 bytes");
    }
    // This will update passed nonce with counter inplace.
    nc = nonce;
    counterLength = nonceInplaceCounterLength;
  }
  // Allocate temporary space for ChaCha block.
  var block = new Uint8Array(64);
  for (var i = 0; i < src.length; i += 64) {
    // Generate a block.
    core(block, nc, key);
    // XOR block bytes with src into dst.
    for (var j = i; j < i + 64 && j < src.length; j++) {
      dst[j] = src[j] ^ block[j - i];
    }
    // Increment counter.
    incrementCounter(nc, 0, counterLength);
  }
  // Cleanup temporary space.
  wipe_1$2.wipe(block);
  if (nonceInplaceCounterLength === 0) {
    // Cleanup counter.
    wipe_1$2.wipe(nc);
  }
  return dst;
}
var streamXOR_1 = chacha.streamXOR = streamXOR;
/**
 * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte
 * nonce and write it into dst and return it.
 *
 * Never use the same key and nonce to generate more than one stream.
 *
 * If nonceInplaceCounterLength is not 0, it behaves the same with respect to
 * the nonce as described in the streamXOR documentation.
 *
 * stream is like streamXOR with all-zero src.
 */
function stream(key, nonce, dst, nonceInplaceCounterLength) {
  if (nonceInplaceCounterLength === void 0) {
    nonceInplaceCounterLength = 0;
  }
  wipe_1$2.wipe(dst);
  return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);
}
var stream_1 = chacha.stream = stream;
function incrementCounter(counter, pos, len) {
  var carry = 1;
  while (len--) {
    carry = carry + (counter[pos] & 0xff) | 0;
    counter[pos] = carry & 0xff;
    carry >>>= 8;
    pos++;
  }
  if (carry > 0) {
    throw new Error("ChaCha: counter overflow");
  }
}

var poly1305$1 = {};

var constantTime = {};

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(constantTime, "__esModule", {
  value: true
});
/**
 * Package constant-time provides functions for performing algorithmically constant-time operations.
 */
/**
 * NOTE! Due to the inability to guarantee real constant time evaluation of
 * anything in JavaScript VM, this is module is the best effort.
 */
/**
 * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.
 *
 * Supports only 32-bit integers, so resultIfOne or resultIfZero are not
 * integers, they'll be converted to them with bitwise operations.
 */
function select(subject, resultIfOne, resultIfZero) {
  return ~(subject - 1) & resultIfOne | subject - 1 & resultIfZero;
}
var select_1 = constantTime.select = select;
/**
 * Returns 1 if a <= b, or 0 if not.
 * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.
 */
function lessOrEqual(a, b) {
  return (a | 0) - (b | 0) - 1 >>> 31 & 1;
}
var lessOrEqual_1 = constantTime.lessOrEqual = lessOrEqual;
/**
 * Returns 1 if a and b are of equal length and their contents
 * are equal, or 0 otherwise.
 *
 * Note that unlike in equal(), zero-length inputs are considered
 * the same, so this function will return 1.
 */
function compare$1(a, b) {
  if (a.length !== b.length) {
    return 0;
  }
  var result = 0;
  for (var i = 0; i < a.length; i++) {
    result |= a[i] ^ b[i];
  }
  return 1 & result - 1 >>> 8;
}
var compare_1 = constantTime.compare = compare$1;
/**
 * Returns true if a and b are of equal non-zero length,
 * and their contents are equal, or false otherwise.
 *
 * Note that unlike in compare() zero-length inputs are considered
 * _not_ equal, so this function will return false.
 */
function equal$1(a, b) {
  if (a.length === 0 || b.length === 0) {
    return false;
  }
  return compare$1(a, b) !== 0;
}
var equal_1 = constantTime.equal = equal$1;

(function (exports) {
  "use strict";

  // Copyright (C) 2016 Dmitry Chestnykh
  // MIT License. See LICENSE file for details.
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
   * Package poly1305 implements Poly1305 one-time message authentication algorithm.
   */
  var constant_time_1 = constantTime;
  var wipe_1 = wipe$1;
  exports.DIGEST_LENGTH = 16;
  // Port of Andrew Moon's Poly1305-donna-16. Public domain.
  // https://github.com/floodyberry/poly1305-donna
  /**
   * Poly1305 computes 16-byte authenticator of message using
   * a one-time 32-byte key.
   *
   * Important: key should be used for only one message,
   * it should never repeat.
   */
  var Poly1305 = /** @class */function () {
    function Poly1305(key) {
      this.digestLength = exports.DIGEST_LENGTH;
      this._buffer = new Uint8Array(16);
      this._r = new Uint16Array(10);
      this._h = new Uint16Array(10);
      this._pad = new Uint16Array(8);
      this._leftover = 0;
      this._fin = 0;
      this._finished = false;
      var t0 = key[0] | key[1] << 8;
      this._r[0] = t0 & 0x1fff;
      var t1 = key[2] | key[3] << 8;
      this._r[1] = (t0 >>> 13 | t1 << 3) & 0x1fff;
      var t2 = key[4] | key[5] << 8;
      this._r[2] = (t1 >>> 10 | t2 << 6) & 0x1f03;
      var t3 = key[6] | key[7] << 8;
      this._r[3] = (t2 >>> 7 | t3 << 9) & 0x1fff;
      var t4 = key[8] | key[9] << 8;
      this._r[4] = (t3 >>> 4 | t4 << 12) & 0x00ff;
      this._r[5] = t4 >>> 1 & 0x1ffe;
      var t5 = key[10] | key[11] << 8;
      this._r[6] = (t4 >>> 14 | t5 << 2) & 0x1fff;
      var t6 = key[12] | key[13] << 8;
      this._r[7] = (t5 >>> 11 | t6 << 5) & 0x1f81;
      var t7 = key[14] | key[15] << 8;
      this._r[8] = (t6 >>> 8 | t7 << 8) & 0x1fff;
      this._r[9] = t7 >>> 5 & 0x007f;
      this._pad[0] = key[16] | key[17] << 8;
      this._pad[1] = key[18] | key[19] << 8;
      this._pad[2] = key[20] | key[21] << 8;
      this._pad[3] = key[22] | key[23] << 8;
      this._pad[4] = key[24] | key[25] << 8;
      this._pad[5] = key[26] | key[27] << 8;
      this._pad[6] = key[28] | key[29] << 8;
      this._pad[7] = key[30] | key[31] << 8;
    }
    Poly1305.prototype._blocks = function (m, mpos, bytes) {
      var hibit = this._fin ? 0 : 1 << 11;
      var h0 = this._h[0],
        h1 = this._h[1],
        h2 = this._h[2],
        h3 = this._h[3],
        h4 = this._h[4],
        h5 = this._h[5],
        h6 = this._h[6],
        h7 = this._h[7],
        h8 = this._h[8],
        h9 = this._h[9];
      var r0 = this._r[0],
        r1 = this._r[1],
        r2 = this._r[2],
        r3 = this._r[3],
        r4 = this._r[4],
        r5 = this._r[5],
        r6 = this._r[6],
        r7 = this._r[7],
        r8 = this._r[8],
        r9 = this._r[9];
      while (bytes >= 16) {
        var t0 = m[mpos + 0] | m[mpos + 1] << 8;
        h0 += t0 & 0x1fff;
        var t1 = m[mpos + 2] | m[mpos + 3] << 8;
        h1 += (t0 >>> 13 | t1 << 3) & 0x1fff;
        var t2 = m[mpos + 4] | m[mpos + 5] << 8;
        h2 += (t1 >>> 10 | t2 << 6) & 0x1fff;
        var t3 = m[mpos + 6] | m[mpos + 7] << 8;
        h3 += (t2 >>> 7 | t3 << 9) & 0x1fff;
        var t4 = m[mpos + 8] | m[mpos + 9] << 8;
        h4 += (t3 >>> 4 | t4 << 12) & 0x1fff;
        h5 += t4 >>> 1 & 0x1fff;
        var t5 = m[mpos + 10] | m[mpos + 11] << 8;
        h6 += (t4 >>> 14 | t5 << 2) & 0x1fff;
        var t6 = m[mpos + 12] | m[mpos + 13] << 8;
        h7 += (t5 >>> 11 | t6 << 5) & 0x1fff;
        var t7 = m[mpos + 14] | m[mpos + 15] << 8;
        h8 += (t6 >>> 8 | t7 << 8) & 0x1fff;
        h9 += t7 >>> 5 | hibit;
        var c = 0;
        var d0 = c;
        d0 += h0 * r0;
        d0 += h1 * (5 * r9);
        d0 += h2 * (5 * r8);
        d0 += h3 * (5 * r7);
        d0 += h4 * (5 * r6);
        c = d0 >>> 13;
        d0 &= 0x1fff;
        d0 += h5 * (5 * r5);
        d0 += h6 * (5 * r4);
        d0 += h7 * (5 * r3);
        d0 += h8 * (5 * r2);
        d0 += h9 * (5 * r1);
        c += d0 >>> 13;
        d0 &= 0x1fff;
        var d1 = c;
        d1 += h0 * r1;
        d1 += h1 * r0;
        d1 += h2 * (5 * r9);
        d1 += h3 * (5 * r8);
        d1 += h4 * (5 * r7);
        c = d1 >>> 13;
        d1 &= 0x1fff;
        d1 += h5 * (5 * r6);
        d1 += h6 * (5 * r5);
        d1 += h7 * (5 * r4);
        d1 += h8 * (5 * r3);
        d1 += h9 * (5 * r2);
        c += d1 >>> 13;
        d1 &= 0x1fff;
        var d2 = c;
        d2 += h0 * r2;
        d2 += h1 * r1;
        d2 += h2 * r0;
        d2 += h3 * (5 * r9);
        d2 += h4 * (5 * r8);
        c = d2 >>> 13;
        d2 &= 0x1fff;
        d2 += h5 * (5 * r7);
        d2 += h6 * (5 * r6);
        d2 += h7 * (5 * r5);
        d2 += h8 * (5 * r4);
        d2 += h9 * (5 * r3);
        c += d2 >>> 13;
        d2 &= 0x1fff;
        var d3 = c;
        d3 += h0 * r3;
        d3 += h1 * r2;
        d3 += h2 * r1;
        d3 += h3 * r0;
        d3 += h4 * (5 * r9);
        c = d3 >>> 13;
        d3 &= 0x1fff;
        d3 += h5 * (5 * r8);
        d3 += h6 * (5 * r7);
        d3 += h7 * (5 * r6);
        d3 += h8 * (5 * r5);
        d3 += h9 * (5 * r4);
        c += d3 >>> 13;
        d3 &= 0x1fff;
        var d4 = c;
        d4 += h0 * r4;
        d4 += h1 * r3;
        d4 += h2 * r2;
        d4 += h3 * r1;
        d4 += h4 * r0;
        c = d4 >>> 13;
        d4 &= 0x1fff;
        d4 += h5 * (5 * r9);
        d4 += h6 * (5 * r8);
        d4 += h7 * (5 * r7);
        d4 += h8 * (5 * r6);
        d4 += h9 * (5 * r5);
        c += d4 >>> 13;
        d4 &= 0x1fff;
        var d5 = c;
        d5 += h0 * r5;
        d5 += h1 * r4;
        d5 += h2 * r3;
        d5 += h3 * r2;
        d5 += h4 * r1;
        c = d5 >>> 13;
        d5 &= 0x1fff;
        d5 += h5 * r0;
        d5 += h6 * (5 * r9);
        d5 += h7 * (5 * r8);
        d5 += h8 * (5 * r7);
        d5 += h9 * (5 * r6);
        c += d5 >>> 13;
        d5 &= 0x1fff;
        var d6 = c;
        d6 += h0 * r6;
        d6 += h1 * r5;
        d6 += h2 * r4;
        d6 += h3 * r3;
        d6 += h4 * r2;
        c = d6 >>> 13;
        d6 &= 0x1fff;
        d6 += h5 * r1;
        d6 += h6 * r0;
        d6 += h7 * (5 * r9);
        d6 += h8 * (5 * r8);
        d6 += h9 * (5 * r7);
        c += d6 >>> 13;
        d6 &= 0x1fff;
        var d7 = c;
        d7 += h0 * r7;
        d7 += h1 * r6;
        d7 += h2 * r5;
        d7 += h3 * r4;
        d7 += h4 * r3;
        c = d7 >>> 13;
        d7 &= 0x1fff;
        d7 += h5 * r2;
        d7 += h6 * r1;
        d7 += h7 * r0;
        d7 += h8 * (5 * r9);
        d7 += h9 * (5 * r8);
        c += d7 >>> 13;
        d7 &= 0x1fff;
        var d8 = c;
        d8 += h0 * r8;
        d8 += h1 * r7;
        d8 += h2 * r6;
        d8 += h3 * r5;
        d8 += h4 * r4;
        c = d8 >>> 13;
        d8 &= 0x1fff;
        d8 += h5 * r3;
        d8 += h6 * r2;
        d8 += h7 * r1;
        d8 += h8 * r0;
        d8 += h9 * (5 * r9);
        c += d8 >>> 13;
        d8 &= 0x1fff;
        var d9 = c;
        d9 += h0 * r9;
        d9 += h1 * r8;
        d9 += h2 * r7;
        d9 += h3 * r6;
        d9 += h4 * r5;
        c = d9 >>> 13;
        d9 &= 0x1fff;
        d9 += h5 * r4;
        d9 += h6 * r3;
        d9 += h7 * r2;
        d9 += h8 * r1;
        d9 += h9 * r0;
        c += d9 >>> 13;
        d9 &= 0x1fff;
        c = (c << 2) + c | 0;
        c = c + d0 | 0;
        d0 = c & 0x1fff;
        c = c >>> 13;
        d1 += c;
        h0 = d0;
        h1 = d1;
        h2 = d2;
        h3 = d3;
        h4 = d4;
        h5 = d5;
        h6 = d6;
        h7 = d7;
        h8 = d8;
        h9 = d9;
        mpos += 16;
        bytes -= 16;
      }
      this._h[0] = h0;
      this._h[1] = h1;
      this._h[2] = h2;
      this._h[3] = h3;
      this._h[4] = h4;
      this._h[5] = h5;
      this._h[6] = h6;
      this._h[7] = h7;
      this._h[8] = h8;
      this._h[9] = h9;
    };
    Poly1305.prototype.finish = function (mac, macpos) {
      if (macpos === void 0) {
        macpos = 0;
      }
      var g = new Uint16Array(10);
      var c;
      var mask;
      var f;
      var i;
      if (this._leftover) {
        i = this._leftover;
        this._buffer[i++] = 1;
        for (; i < 16; i++) {
          this._buffer[i] = 0;
        }
        this._fin = 1;
        this._blocks(this._buffer, 0, 16);
      }
      c = this._h[1] >>> 13;
      this._h[1] &= 0x1fff;
      for (i = 2; i < 10; i++) {
        this._h[i] += c;
        c = this._h[i] >>> 13;
        this._h[i] &= 0x1fff;
      }
      this._h[0] += c * 5;
      c = this._h[0] >>> 13;
      this._h[0] &= 0x1fff;
      this._h[1] += c;
      c = this._h[1] >>> 13;
      this._h[1] &= 0x1fff;
      this._h[2] += c;
      g[0] = this._h[0] + 5;
      c = g[0] >>> 13;
      g[0] &= 0x1fff;
      for (i = 1; i < 10; i++) {
        g[i] = this._h[i] + c;
        c = g[i] >>> 13;
        g[i] &= 0x1fff;
      }
      g[9] -= 1 << 13;
      mask = (c ^ 1) - 1;
      for (i = 0; i < 10; i++) {
        g[i] &= mask;
      }
      mask = ~mask;
      for (i = 0; i < 10; i++) {
        this._h[i] = this._h[i] & mask | g[i];
      }
      this._h[0] = (this._h[0] | this._h[1] << 13) & 0xffff;
      this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 0xffff;
      this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 0xffff;
      this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 0xffff;
      this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 0xffff;
      this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 0xffff;
      this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 0xffff;
      this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 0xffff;
      f = this._h[0] + this._pad[0];
      this._h[0] = f & 0xffff;
      for (i = 1; i < 8; i++) {
        f = (this._h[i] + this._pad[i] | 0) + (f >>> 16) | 0;
        this._h[i] = f & 0xffff;
      }
      mac[macpos + 0] = this._h[0] >>> 0;
      mac[macpos + 1] = this._h[0] >>> 8;
      mac[macpos + 2] = this._h[1] >>> 0;
      mac[macpos + 3] = this._h[1] >>> 8;
      mac[macpos + 4] = this._h[2] >>> 0;
      mac[macpos + 5] = this._h[2] >>> 8;
      mac[macpos + 6] = this._h[3] >>> 0;
      mac[macpos + 7] = this._h[3] >>> 8;
      mac[macpos + 8] = this._h[4] >>> 0;
      mac[macpos + 9] = this._h[4] >>> 8;
      mac[macpos + 10] = this._h[5] >>> 0;
      mac[macpos + 11] = this._h[5] >>> 8;
      mac[macpos + 12] = this._h[6] >>> 0;
      mac[macpos + 13] = this._h[6] >>> 8;
      mac[macpos + 14] = this._h[7] >>> 0;
      mac[macpos + 15] = this._h[7] >>> 8;
      this._finished = true;
      return this;
    };
    Poly1305.prototype.update = function (m) {
      var mpos = 0;
      var bytes = m.length;
      var want;
      if (this._leftover) {
        want = 16 - this._leftover;
        if (want > bytes) {
          want = bytes;
        }
        for (var i = 0; i < want; i++) {
          this._buffer[this._leftover + i] = m[mpos + i];
        }
        bytes -= want;
        mpos += want;
        this._leftover += want;
        if (this._leftover < 16) {
          return this;
        }
        this._blocks(this._buffer, 0, 16);
        this._leftover = 0;
      }
      if (bytes >= 16) {
        want = bytes - bytes % 16;
        this._blocks(m, mpos, want);
        mpos += want;
        bytes -= want;
      }
      if (bytes) {
        for (var i = 0; i < bytes; i++) {
          this._buffer[this._leftover + i] = m[mpos + i];
        }
        this._leftover += bytes;
      }
      return this;
    };
    Poly1305.prototype.digest = function () {
      // TODO(dchest): it behaves differently than other hashes/HMAC,
      // because it throws when finished — others just return saved result.
      if (this._finished) {
        throw new Error("Poly1305 was finished");
      }
      var mac = new Uint8Array(16);
      this.finish(mac);
      return mac;
    };
    Poly1305.prototype.clean = function () {
      wipe_1.wipe(this._buffer);
      wipe_1.wipe(this._r);
      wipe_1.wipe(this._h);
      wipe_1.wipe(this._pad);
      this._leftover = 0;
      this._fin = 0;
      this._finished = true; // mark as finished even if not
      return this;
    };
    return Poly1305;
  }();
  exports.Poly1305 = Poly1305;
  /**
   * Returns 16-byte authenticator of data using a one-time 32-byte key.
   *
   * Important: key should be used for only one message, it should never repeat.
   */
  function oneTimeAuth(key, data) {
    var h = new Poly1305(key);
    h.update(data);
    var digest = h.digest();
    h.clean();
    return digest;
  }
  exports.oneTimeAuth = oneTimeAuth;
  /**
   * Returns true if two authenticators are 16-byte long and equal.
   * Uses contant-time comparison to avoid leaking timing information.
   */
  function equal(a, b) {
    if (a.length !== exports.DIGEST_LENGTH || b.length !== exports.DIGEST_LENGTH) {
      return false;
    }
    return constant_time_1.equal(a, b);
  }
  exports.equal = equal;
})(poly1305$1);
var poly1305 = /*@__PURE__*/getDefaultExportFromCjs$1(poly1305$1);

(function (exports) {
  "use strict";

  // Copyright (C) 2016 Dmitry Chestnykh
  // MIT License. See LICENSE file for details.
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var chacha_1 = chacha;
  var poly1305_1 = poly1305$1;
  var wipe_1 = wipe$1;
  var binary_1 = binary;
  var constant_time_1 = constantTime;
  exports.KEY_LENGTH = 32;
  exports.NONCE_LENGTH = 12;
  exports.TAG_LENGTH = 16;
  var ZEROS = new Uint8Array(16);
  /**
   * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.
   *
   * Defined in RFC7539.
   */
  var ChaCha20Poly1305 = /** @class */function () {
    /**
     * Creates a new instance with the given 32-byte key.
     */
    function ChaCha20Poly1305(key) {
      this.nonceLength = exports.NONCE_LENGTH;
      this.tagLength = exports.TAG_LENGTH;
      if (key.length !== exports.KEY_LENGTH) {
        throw new Error("ChaCha20Poly1305 needs 32-byte key");
      }
      // Copy key.
      this._key = new Uint8Array(key);
    }
    /**
     * Encrypts and authenticates plaintext, authenticates associated data,
     * and returns sealed ciphertext, which includes authentication tag.
     *
     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce
     * ("IV"), or full 16-byte counter (called "32-bit fixed-common part")
     * and nonce.
     *
     * If dst is given (it must be the size of plaintext + the size of tag
     * length) the result will be put into it. Dst and plaintext must not
     * overlap.
     */
    ChaCha20Poly1305.prototype.seal = function (nonce, plaintext, associatedData, dst) {
      if (nonce.length > 16) {
        throw new Error("ChaCha20Poly1305: incorrect nonce length");
      }
      // Allocate space for counter, and set nonce as last bytes of it.
      var counter = new Uint8Array(16);
      counter.set(nonce, counter.length - nonce.length);
      // Generate authentication key by taking first 32-bytes of stream.
      // We pass full counter, which has 12-byte nonce and 4-byte block counter,
      // and it will get incremented after generating the block, which is
      // exactly what we need: we only use the first 32 bytes of 64-byte
      // ChaCha block and discard the next 32 bytes.
      var authKey = new Uint8Array(32);
      chacha_1.stream(this._key, counter, authKey, 4);
      // Allocate space for sealed ciphertext.
      var resultLength = plaintext.length + this.tagLength;
      var result;
      if (dst) {
        if (dst.length !== resultLength) {
          throw new Error("ChaCha20Poly1305: incorrect destination length");
        }
        result = dst;
      } else {
        result = new Uint8Array(resultLength);
      }
      // Encrypt plaintext.
      chacha_1.streamXOR(this._key, counter, plaintext, result, 4);
      // Authenticate.
      // XXX: can "simplify" here: pass full result (which is already padded
      // due to zeroes prepared for tag), and ciphertext length instead of
      // subarray of result.
      this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);
      // Cleanup.
      wipe_1.wipe(counter);
      return result;
    };
    /**
     * Authenticates sealed ciphertext (which includes authentication tag) and
     * associated data, decrypts ciphertext and returns decrypted plaintext.
     *
     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce
     * ("IV"), or full 16-byte counter (called "32-bit fixed-common part")
     * and nonce.
     *
     * If authentication fails, it returns null.
     *
     * If dst is given (it must be of ciphertext length minus tag length),
     * the result will be put into it. Dst and plaintext must not overlap.
     */
    ChaCha20Poly1305.prototype.open = function (nonce, sealed, associatedData, dst) {
      if (nonce.length > 16) {
        throw new Error("ChaCha20Poly1305: incorrect nonce length");
      }
      // Sealed ciphertext should at least contain tag.
      if (sealed.length < this.tagLength) {
        // TODO(dchest): should we throw here instead?
        return null;
      }
      // Allocate space for counter, and set nonce as last bytes of it.
      var counter = new Uint8Array(16);
      counter.set(nonce, counter.length - nonce.length);
      // Generate authentication key by taking first 32-bytes of stream.
      var authKey = new Uint8Array(32);
      chacha_1.stream(this._key, counter, authKey, 4);
      // Authenticate.
      // XXX: can simplify and avoid allocation: since authenticate()
      // already allocates tag (from Poly1305.digest(), it can return)
      // it instead of copying to calculatedTag. But then in seal()
      // we'll need to copy it.
      var calculatedTag = new Uint8Array(this.tagLength);
      this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);
      // Constant-time compare tags and return null if they differ.
      if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {
        return null;
      }
      // Allocate space for decrypted plaintext.
      var resultLength = sealed.length - this.tagLength;
      var result;
      if (dst) {
        if (dst.length !== resultLength) {
          throw new Error("ChaCha20Poly1305: incorrect destination length");
        }
        result = dst;
      } else {
        result = new Uint8Array(resultLength);
      }
      // Decrypt.
      chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);
      // Cleanup.
      wipe_1.wipe(counter);
      return result;
    };
    ChaCha20Poly1305.prototype.clean = function () {
      wipe_1.wipe(this._key);
      return this;
    };
    ChaCha20Poly1305.prototype._authenticate = function (tagOut, authKey, ciphertext, associatedData) {
      // Initialize Poly1305 with authKey.
      var h = new poly1305_1.Poly1305(authKey);
      // Authenticate padded associated data.
      if (associatedData) {
        h.update(associatedData);
        if (associatedData.length % 16 > 0) {
          h.update(ZEROS.subarray(associatedData.length % 16));
        }
      }
      // Authenticate padded ciphertext.
      h.update(ciphertext);
      if (ciphertext.length % 16 > 0) {
        h.update(ZEROS.subarray(ciphertext.length % 16));
      }
      // Authenticate length of associated data.
      // XXX: can avoid allocation here?
      var length = new Uint8Array(8);
      if (associatedData) {
        binary_1.writeUint64LE(associatedData.length, length);
      }
      h.update(length);
      // Authenticate length of ciphertext.
      binary_1.writeUint64LE(ciphertext.length, length);
      h.update(length);
      // Get tag and copy it into tagOut.
      var tag = h.digest();
      for (var i = 0; i < tag.length; i++) {
        tagOut[i] = tag[i];
      }
      // Cleanup.
      h.clean();
      wipe_1.wipe(tag);
      wipe_1.wipe(length);
    };
    return ChaCha20Poly1305;
  }();
  exports.ChaCha20Poly1305 = ChaCha20Poly1305;
})(chacha20poly1305$1);
var chacha20poly1305 = /*@__PURE__*/getDefaultExportFromCjs$1(chacha20poly1305$1);

var hkdf = {};

var hmac$1 = {};

var hash$3 = {};

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(hash$3, "__esModule", {
  value: true
});
function isSerializableHash(h) {
  return typeof h.saveState !== "undefined" && typeof h.restoreState !== "undefined" && typeof h.cleanSavedState !== "undefined";
}
var isSerializableHash_1 = hash$3.isSerializableHash = isSerializableHash;

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(hmac$1, "__esModule", {
  value: true
});
/**
 * Package hmac implements HMAC algorithm.
 */
var hash_1 = hash$3;
var constant_time_1 = constantTime;
var wipe_1$1 = wipe$1;
/**
 *  HMAC implements hash-based message authentication algorithm.
 */
var HMAC = /** @class */function () {
  /**
   * Constructs a new HMAC with the given Hash and secret key.
   */
  function HMAC(hash, key) {
    this._finished = false; // true if HMAC was finalized
    // Initialize inner and outer hashes.
    this._inner = new hash();
    this._outer = new hash();
    // Set block and digest sizes for this HMAC
    // instance to values from the hash.
    this.blockSize = this._outer.blockSize;
    this.digestLength = this._outer.digestLength;
    // Pad temporary stores a key (or its hash) padded with zeroes.
    var pad = new Uint8Array(this.blockSize);
    if (key.length > this.blockSize) {
      // If key is bigger than hash block size, it must be
      // hashed and this hash is used as a key instead.
      this._inner.update(key).finish(pad).clean();
    } else {
      // Otherwise, copy the key into pad.
      pad.set(key);
    }
    // Now two different keys are derived from padded key
    // by xoring a different byte value to each.
    // To make inner hash key, xor byte 0x36 into pad.
    for (var i = 0; i < pad.length; i++) {
      pad[i] ^= 0x36;
    }
    // Update inner hash with the result.
    this._inner.update(pad);
    // To make outer hash key, xor byte 0x5c into pad.
    // But since we already xored 0x36 there, we must
    // first undo this by xoring it again.
    for (var i = 0; i < pad.length; i++) {
      pad[i] ^= 0x36 ^ 0x5c;
    }
    // Update outer hash with the result.
    this._outer.update(pad);
    // Save states of both hashes, so that we can quickly restore
    // them later in reset() without the need to remember the actual
    // key and perform this initialization again.
    if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {
      this._innerKeyedState = this._inner.saveState();
      this._outerKeyedState = this._outer.saveState();
    }
    // Clean pad.
    wipe_1$1.wipe(pad);
  }
  /**
   * Returns HMAC state to the state initialized with key
   * to make it possible to run HMAC over the other data with the same
   * key without creating a new instance.
   */
  HMAC.prototype.reset = function () {
    if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
      throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
    }
    // Restore keyed states of inner and outer hashes.
    this._inner.restoreState(this._innerKeyedState);
    this._outer.restoreState(this._outerKeyedState);
    this._finished = false;
    return this;
  };
  /**
   * Cleans HMAC state.
   */
  HMAC.prototype.clean = function () {
    if (hash_1.isSerializableHash(this._inner)) {
      this._inner.cleanSavedState(this._innerKeyedState);
    }
    if (hash_1.isSerializableHash(this._outer)) {
      this._outer.cleanSavedState(this._outerKeyedState);
    }
    this._inner.clean();
    this._outer.clean();
  };
  /**
   * Updates state with provided data.
   */
  HMAC.prototype.update = function (data) {
    this._inner.update(data);
    return this;
  };
  /**
   * Finalizes HMAC and puts the result in out.
   */
  HMAC.prototype.finish = function (out) {
    if (this._finished) {
      // If HMAC was finalized, outer hash is also finalized,
      // so it produces the same digest it produced when it
      // was finalized.
      this._outer.finish(out);
      return this;
    }
    // Finalize inner hash and store the result temporarily.
    this._inner.finish(out);
    // Update outer hash with digest of inner hash and and finalize it.
    this._outer.update(out.subarray(0, this.digestLength)).finish(out);
    this._finished = true;
    return this;
  };
  /**
   * Returns the computed message authentication code.
   */
  HMAC.prototype.digest = function () {
    var out = new Uint8Array(this.digestLength);
    this.finish(out);
    return out;
  };
  /**
   * Saves HMAC state.
   * This function is needed for PBKDF2 optimization.
   */
  HMAC.prototype.saveState = function () {
    if (!hash_1.isSerializableHash(this._inner)) {
      throw new Error("hmac: can't saveState() because hash doesn't implement it");
    }
    return this._inner.saveState();
  };
  HMAC.prototype.restoreState = function (savedState) {
    if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
      throw new Error("hmac: can't restoreState() because hash doesn't implement it");
    }
    this._inner.restoreState(savedState);
    this._outer.restoreState(this._outerKeyedState);
    this._finished = false;
    return this;
  };
  HMAC.prototype.cleanSavedState = function (savedState) {
    if (!hash_1.isSerializableHash(this._inner)) {
      throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
    }
    this._inner.cleanSavedState(savedState);
  };
  return HMAC;
}();
var HMAC_1 = hmac$1.HMAC = HMAC;
/**
 * Returns HMAC using the given hash constructor for the key over data.
 */
function hmac(hash, key, data) {
  var h = new HMAC(hash, key);
  h.update(data);
  var digest = h.digest();
  h.clean();
  return digest;
}
var hmac_2 = hmac$1.hmac = hmac;
/**
 * Returns true if two HMAC digests are equal.
 * Uses constant-time comparison to avoid leaking timing information.
 *
 * Example:
 *
 *    const receivedDigest = ...
 *    const realDigest = hmac(SHA256, key, data);
 *    if (!equal(receivedDigest, realDigest)) {
 *        throw new Error("Authentication error");
 *    }
 */
var equal = hmac$1.equal = constant_time_1.equal;

"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(hkdf, "__esModule", {
  value: true
});
var hmac_1 = hmac$1;
var wipe_1 = wipe$1;
/**
 * HMAC-based Extract-and-Expand Key Derivation Function.
 *
 * Implements HKDF from RFC5869.
 *
 * Expands the given master key with salt and info into
 * a limited stream of key material.
 */
var HKDF = /** @class */function () {
  /**
   * Create a new HKDF instance for the given hash function
   * with the master key, optional salt, and info.
   *
   * - Master key is a high-entropy secret key (not a password).
   * - Salt is a non-secret random value.
   * - Info is application- and/or context-specific information.
   */
  function HKDF(hash, key, salt, info) {
    if (salt === void 0) {
      salt = new Uint8Array(0);
    }
    this._counter = new Uint8Array(1); // starts with zero
    this._hash = hash;
    this._info = info;
    // HKDF-Extract uses salt as HMAC key, and key as data.
    var okm = hmac_1.hmac(this._hash, salt, key);
    // Initialize HMAC for expanding with extracted key.
    this._hmac = new hmac_1.HMAC(hash, okm);
    // Allocate buffer.
    this._buffer = new Uint8Array(this._hmac.digestLength);
    this._bufpos = this._buffer.length;
  }
  // Fill buffer with new block of HKDF-Extract output.
  HKDF.prototype._fillBuffer = function () {
    // Increment counter.
    this._counter[0]++;
    var ctr = this._counter[0];
    // Check if counter overflowed.
    if (ctr === 0) {
      throw new Error("hkdf: cannot expand more");
    }
    // Prepare HMAC instance for new data with old key.
    this._hmac.reset();
    // Hash in previous output if it was generated
    // (i.e. counter is greater than 1).
    if (ctr > 1) {
      this._hmac.update(this._buffer);
    }
    // Hash in info if it exists.
    if (this._info) {
      this._hmac.update(this._info);
    }
    // Hash in the counter.
    this._hmac.update(this._counter);
    // Output result to buffer and clean HMAC instance.
    this._hmac.finish(this._buffer);
    // Reset buffer position.
    this._bufpos = 0;
  };
  /**
   * Expand returns next key material of the given length.
   *
   * It throws if expansion limit is reached (which is
   * 254 digests of the underlying HMAC function).
   */
  HKDF.prototype.expand = function (length) {
    var out = new Uint8Array(length);
    for (var i = 0; i < out.length; i++) {
      if (this._bufpos === this._buffer.length) {
        this._fillBuffer();
      }
      out[i] = this._buffer[this._bufpos++];
    }
    return out;
  };
  HKDF.prototype.clean = function () {
    this._hmac.clean();
    wipe_1.wipe(this._buffer);
    wipe_1.wipe(this._counter);
    this._bufpos = 0;
  };
  return HKDF;
}();
var HKDF_1 = hkdf.HKDF = HKDF;

var sha256$1 = {};

(function (exports) {
  "use strict";

  // Copyright (C) 2016 Dmitry Chestnykh
  // MIT License. See LICENSE file for details.
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var binary_1 = binary;
  var wipe_1 = wipe$1;
  exports.DIGEST_LENGTH = 32;
  exports.BLOCK_SIZE = 64;
  /**
   * SHA2-256 cryptographic hash algorithm.
   */
  var SHA256 = /** @class */function () {
    function SHA256() {
      /** Length of hash output */
      this.digestLength = exports.DIGEST_LENGTH;
      /** Block size */
      this.blockSize = exports.BLOCK_SIZE;
      // Note: Int32Array is used instead of Uint32Array for performance reasons.
      this._state = new Int32Array(8); // hash state
      this._temp = new Int32Array(64); // temporary state
      this._buffer = new Uint8Array(128); // buffer for data to hash
      this._bufferLength = 0; // number of bytes in buffer
      this._bytesHashed = 0; // number of total bytes hashed
      this._finished = false; // indicates whether the hash was finalized
      this.reset();
    }
    SHA256.prototype._initState = function () {
      this._state[0] = 0x6a09e667;
      this._state[1] = 0xbb67ae85;
      this._state[2] = 0x3c6ef372;
      this._state[3] = 0xa54ff53a;
      this._state[4] = 0x510e527f;
      this._state[5] = 0x9b05688c;
      this._state[6] = 0x1f83d9ab;
      this._state[7] = 0x5be0cd19;
    };
    /**
     * Resets hash state making it possible
     * to re-use this instance to hash other data.
     */
    SHA256.prototype.reset = function () {
      this._initState();
      this._bufferLength = 0;
      this._bytesHashed = 0;
      this._finished = false;
      return this;
    };
    /**
     * Cleans internal buffers and resets hash state.
     */
    SHA256.prototype.clean = function () {
      wipe_1.wipe(this._buffer);
      wipe_1.wipe(this._temp);
      this.reset();
    };
    /**
     * Updates hash state with the given data.
     *
     * Throws error when trying to update already finalized hash:
     * instance must be reset to update it again.
     */
    SHA256.prototype.update = function (data, dataLength) {
      if (dataLength === void 0) {
        dataLength = data.length;
      }
      if (this._finished) {
        throw new Error("SHA256: can't update because hash was finished.");
      }
      var dataPos = 0;
      this._bytesHashed += dataLength;
      if (this._bufferLength > 0) {
        while (this._bufferLength < this.blockSize && dataLength > 0) {
          this._buffer[this._bufferLength++] = data[dataPos++];
          dataLength--;
        }
        if (this._bufferLength === this.blockSize) {
          hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);
          this._bufferLength = 0;
        }
      }
      if (dataLength >= this.blockSize) {
        dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);
        dataLength %= this.blockSize;
      }
      while (dataLength > 0) {
        this._buffer[this._bufferLength++] = data[dataPos++];
        dataLength--;
      }
      return this;
    };
    /**
     * Finalizes hash state and puts hash into out.
     * If hash was already finalized, puts the same value.
     */
    SHA256.prototype.finish = function (out) {
      if (!this._finished) {
        var bytesHashed = this._bytesHashed;
        var left = this._bufferLength;
        var bitLenHi = bytesHashed / 0x20000000 | 0;
        var bitLenLo = bytesHashed << 3;
        var padLength = bytesHashed % 64 < 56 ? 64 : 128;
        this._buffer[left] = 0x80;
        for (var i = left + 1; i < padLength - 8; i++) {
          this._buffer[i] = 0;
        }
        binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
        binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
        hashBlocks(this._temp, this._state, this._buffer, 0, padLength);
        this._finished = true;
      }
      for (var i = 0; i < this.digestLength / 4; i++) {
        binary_1.writeUint32BE(this._state[i], out, i * 4);
      }
      return this;
    };
    /**
     * Returns the final hash digest.
     */
    SHA256.prototype.digest = function () {
      var out = new Uint8Array(this.digestLength);
      this.finish(out);
      return out;
    };
    /**
     * Function useful for HMAC/PBKDF2 optimization.
     * Returns hash state to be used with restoreState().
     * Only chain value is saved, not buffers or other
     * state variables.
     */
    SHA256.prototype.saveState = function () {
      if (this._finished) {
        throw new Error("SHA256: cannot save finished state");
      }
      return {
        state: new Int32Array(this._state),
        buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,
        bufferLength: this._bufferLength,
        bytesHashed: this._bytesHashed
      };
    };
    /**
     * Function useful for HMAC/PBKDF2 optimization.
     * Restores state saved by saveState() and sets bytesHashed
     * to the given value.
     */
    SHA256.prototype.restoreState = function (savedState) {
      this._state.set(savedState.state);
      this._bufferLength = savedState.bufferLength;
      if (savedState.buffer) {
        this._buffer.set(savedState.buffer);
      }
      this._bytesHashed = savedState.bytesHashed;
      this._finished = false;
      return this;
    };
    /**
     * Cleans state returned by saveState().
     */
    SHA256.prototype.cleanSavedState = function (savedState) {
      wipe_1.wipe(savedState.state);
      if (savedState.buffer) {
        wipe_1.wipe(savedState.buffer);
      }
      savedState.bufferLength = 0;
      savedState.bytesHashed = 0;
    };
    return SHA256;
  }();
  exports.SHA256 = SHA256;
  // Constants
  var K = new Int32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);
  function hashBlocks(w, v, p, pos, len) {
    while (len >= 64) {
      var a = v[0];
      var b = v[1];
      var c = v[2];
      var d = v[3];
      var e = v[4];
      var f = v[5];
      var g = v[6];
      var h = v[7];
      for (var i = 0; i < 16; i++) {
        var j = pos + i * 4;
        w[i] = binary_1.readUint32BE(p, j);
      }
      for (var i = 16; i < 64; i++) {
        var u = w[i - 2];
        var t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;
        u = w[i - 15];
        var t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;
        w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);
      }
      for (var i = 0; i < 64; i++) {
        var t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;
        var t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;
        h = g;
        g = f;
        f = e;
        e = d + t1 | 0;
        d = c;
        c = b;
        b = a;
        a = t1 + t2 | 0;
      }
      v[0] += a;
      v[1] += b;
      v[2] += c;
      v[3] += d;
      v[4] += e;
      v[5] += f;
      v[6] += g;
      v[7] += h;
      pos += 64;
      len -= 64;
    }
    return pos;
  }
  function hash(data) {
    var h = new SHA256();
    h.update(data);
    var digest = h.digest();
    h.clean();
    return digest;
  }
  exports.hash = hash;
})(sha256$1);
var sha256 = /*@__PURE__*/getDefaultExportFromCjs$1(sha256$1);

var x25519$1 = {};

(function (exports) {
  "use strict";

  // Copyright (C) 2016 Dmitry Chestnykh
  // MIT License. See LICENSE file for details.
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;
  /**
   * Package x25519 implements X25519 key agreement.
   */
  var random_1 = random$1;
  var wipe_1 = wipe$1;
  exports.PUBLIC_KEY_LENGTH = 32;
  exports.SECRET_KEY_LENGTH = 32;
  exports.SHARED_KEY_LENGTH = 32;
  // Returns new zero-filled 16-element GF (Float64Array).
  // If passed an array of numbers, prefills the returned
  // array with them.
  //
  // We use Float64Array, because we need 48-bit numbers
  // for this implementation.
  function gf(init) {
    var r = new Float64Array(16);
    if (init) {
      for (var i = 0; i < init.length; i++) {
        r[i] = init[i];
      }
    }
    return r;
  }
  // Base point.
  var _9 = new Uint8Array(32);
  _9[0] = 9;
  var _121665 = gf([0xdb41, 1]);
  function car25519(o) {
    var c = 1;
    for (var i = 0; i < 16; i++) {
      var v = o[i] + c + 65535;
      c = Math.floor(v / 65536);
      o[i] = v - c * 65536;
    }
    o[0] += c - 1 + 37 * (c - 1);
  }
  function sel25519(p, q, b) {
    var c = ~(b - 1);
    for (var i = 0; i < 16; i++) {
      var t = c & (p[i] ^ q[i]);
      p[i] ^= t;
      q[i] ^= t;
    }
  }
  function pack25519(o, n) {
    var m = gf();
    var t = gf();
    for (var i = 0; i < 16; i++) {
      t[i] = n[i];
    }
    car25519(t);
    car25519(t);
    car25519(t);
    for (var j = 0; j < 2; j++) {
      m[0] = t[0] - 0xffed;
      for (var _i = 1; _i < 15; _i++) {
        m[_i] = t[_i] - 0xffff - (m[_i - 1] >> 16 & 1);
        m[_i - 1] &= 0xffff;
      }
      m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);
      var b = m[15] >> 16 & 1;
      m[14] &= 0xffff;
      sel25519(t, m, 1 - b);
    }
    for (var _i2 = 0; _i2 < 16; _i2++) {
      o[2 * _i2] = t[_i2] & 0xff;
      o[2 * _i2 + 1] = t[_i2] >> 8;
    }
  }
  function unpack25519(o, n) {
    for (var i = 0; i < 16; i++) {
      o[i] = n[2 * i] + (n[2 * i + 1] << 8);
    }
    o[15] &= 0x7fff;
  }
  function add(o, a, b) {
    for (var i = 0; i < 16; i++) {
      o[i] = a[i] + b[i];
    }
  }
  function sub(o, a, b) {
    for (var i = 0; i < 16; i++) {
      o[i] = a[i] - b[i];
    }
  }
  function mul(o, a, b) {
    var v,
      c,
      t0 = 0,
      t1 = 0,
      t2 = 0,
      t3 = 0,
      t4 = 0,
      t5 = 0,
      t6 = 0,
      t7 = 0,
      t8 = 0,
      t9 = 0,
      t10 = 0,
      t11 = 0,
      t12 = 0,
      t13 = 0,
      t14 = 0,
      t15 = 0,
      t16 = 0,
      t17 = 0,
      t18 = 0,
      t19 = 0,
      t20 = 0,
      t21 = 0,
      t22 = 0,
      t23 = 0,
      t24 = 0,
      t25 = 0,
      t26 = 0,
      t27 = 0,
      t28 = 0,
      t29 = 0,
      t30 = 0,
      b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7],
      b8 = b[8],
      b9 = b[9],
      b10 = b[10],
      b11 = b[11],
      b12 = b[12],
      b13 = b[13],
      b14 = b[14],
      b15 = b[15];
    v = a[0];
    t0 += v * b0;
    t1 += v * b1;
    t2 += v * b2;
    t3 += v * b3;
    t4 += v * b4;
    t5 += v * b5;
    t6 += v * b6;
    t7 += v * b7;
    t8 += v * b8;
    t9 += v * b9;
    t10 += v * b10;
    t11 += v * b11;
    t12 += v * b12;
    t13 += v * b13;
    t14 += v * b14;
    t15 += v * b15;
    v = a[1];
    t1 += v * b0;
    t2 += v * b1;
    t3 += v * b2;
    t4 += v * b3;
    t5 += v * b4;
    t6 += v * b5;
    t7 += v * b6;
    t8 += v * b7;
    t9 += v * b8;
    t10 += v * b9;
    t11 += v * b10;
    t12 += v * b11;
    t13 += v * b12;
    t14 += v * b13;
    t15 += v * b14;
    t16 += v * b15;
    v = a[2];
    t2 += v * b0;
    t3 += v * b1;
    t4 += v * b2;
    t5 += v * b3;
    t6 += v * b4;
    t7 += v * b5;
    t8 += v * b6;
    t9 += v * b7;
    t10 += v * b8;
    t11 += v * b9;
    t12 += v * b10;
    t13 += v * b11;
    t14 += v * b12;
    t15 += v * b13;
    t16 += v * b14;
    t17 += v * b15;
    v = a[3];
    t3 += v * b0;
    t4 += v * b1;
    t5 += v * b2;
    t6 += v * b3;
    t7 += v * b4;
    t8 += v * b5;
    t9 += v * b6;
    t10 += v * b7;
    t11 += v * b8;
    t12 += v * b9;
    t13 += v * b10;
    t14 += v * b11;
    t15 += v * b12;
    t16 += v * b13;
    t17 += v * b14;
    t18 += v * b15;
    v = a[4];
    t4 += v * b0;
    t5 += v * b1;
    t6 += v * b2;
    t7 += v * b3;
    t8 += v * b4;
    t9 += v * b5;
    t10 += v * b6;
    t11 += v * b7;
    t12 += v * b8;
    t13 += v * b9;
    t14 += v * b10;
    t15 += v * b11;
    t16 += v * b12;
    t17 += v * b13;
    t18 += v * b14;
    t19 += v * b15;
    v = a[5];
    t5 += v * b0;
    t6 += v * b1;
    t7 += v * b2;
    t8 += v * b3;
    t9 += v * b4;
    t10 += v * b5;
    t11 += v * b6;
    t12 += v * b7;
    t13 += v * b8;
    t14 += v * b9;
    t15 += v * b10;
    t16 += v * b11;
    t17 += v * b12;
    t18 += v * b13;
    t19 += v * b14;
    t20 += v * b15;
    v = a[6];
    t6 += v * b0;
    t7 += v * b1;
    t8 += v * b2;
    t9 += v * b3;
    t10 += v * b4;
    t11 += v * b5;
    t12 += v * b6;
    t13 += v * b7;
    t14 += v * b8;
    t15 += v * b9;
    t16 += v * b10;
    t17 += v * b11;
    t18 += v * b12;
    t19 += v * b13;
    t20 += v * b14;
    t21 += v * b15;
    v = a[7];
    t7 += v * b0;
    t8 += v * b1;
    t9 += v * b2;
    t10 += v * b3;
    t11 += v * b4;
    t12 += v * b5;
    t13 += v * b6;
    t14 += v * b7;
    t15 += v * b8;
    t16 += v * b9;
    t17 += v * b10;
    t18 += v * b11;
    t19 += v * b12;
    t20 += v * b13;
    t21 += v * b14;
    t22 += v * b15;
    v = a[8];
    t8 += v * b0;
    t9 += v * b1;
    t10 += v * b2;
    t11 += v * b3;
    t12 += v * b4;
    t13 += v * b5;
    t14 += v * b6;
    t15 += v * b7;
    t16 += v * b8;
    t17 += v * b9;
    t18 += v * b10;
    t19 += v * b11;
    t20 += v * b12;
    t21 += v * b13;
    t22 += v * b14;
    t23 += v * b15;
    v = a[9];
    t9 += v * b0;
    t10 += v * b1;
    t11 += v * b2;
    t12 += v * b3;
    t13 += v * b4;
    t14 += v * b5;
    t15 += v * b6;
    t16 += v * b7;
    t17 += v * b8;
    t18 += v * b9;
    t19 += v * b10;
    t20 += v * b11;
    t21 += v * b12;
    t22 += v * b13;
    t23 += v * b14;
    t24 += v * b15;
    v = a[10];
    t10 += v * b0;
    t11 += v * b1;
    t12 += v * b2;
    t13 += v * b3;
    t14 += v * b4;
    t15 += v * b5;
    t16 += v * b6;
    t17 += v * b7;
    t18 += v * b8;
    t19 += v * b9;
    t20 += v * b10;
    t21 += v * b11;
    t22 += v * b12;
    t23 += v * b13;
    t24 += v * b14;
    t25 += v * b15;
    v = a[11];
    t11 += v * b0;
    t12 += v * b1;
    t13 += v * b2;
    t14 += v * b3;
    t15 += v * b4;
    t16 += v * b5;
    t17 += v * b6;
    t18 += v * b7;
    t19 += v * b8;
    t20 += v * b9;
    t21 += v * b10;
    t22 += v * b11;
    t23 += v * b12;
    t24 += v * b13;
    t25 += v * b14;
    t26 += v * b15;
    v = a[12];
    t12 += v * b0;
    t13 += v * b1;
    t14 += v * b2;
    t15 += v * b3;
    t16 += v * b4;
    t17 += v * b5;
    t18 += v * b6;
    t19 += v * b7;
    t20 += v * b8;
    t21 += v * b9;
    t22 += v * b10;
    t23 += v * b11;
    t24 += v * b12;
    t25 += v * b13;
    t26 += v * b14;
    t27 += v * b15;
    v = a[13];
    t13 += v * b0;
    t14 += v * b1;
    t15 += v * b2;
    t16 += v * b3;
    t17 += v * b4;
    t18 += v * b5;
    t19 += v * b6;
    t20 += v * b7;
    t21 += v * b8;
    t22 += v * b9;
    t23 += v * b10;
    t24 += v * b11;
    t25 += v * b12;
    t26 += v * b13;
    t27 += v * b14;
    t28 += v * b15;
    v = a[14];
    t14 += v * b0;
    t15 += v * b1;
    t16 += v * b2;
    t17 += v * b3;
    t18 += v * b4;
    t19 += v * b5;
    t20 += v * b6;
    t21 += v * b7;
    t22 += v * b8;
    t23 += v * b9;
    t24 += v * b10;
    t25 += v * b11;
    t26 += v * b12;
    t27 += v * b13;
    t28 += v * b14;
    t29 += v * b15;
    v = a[15];
    t15 += v * b0;
    t16 += v * b1;
    t17 += v * b2;
    t18 += v * b3;
    t19 += v * b4;
    t20 += v * b5;
    t21 += v * b6;
    t22 += v * b7;
    t23 += v * b8;
    t24 += v * b9;
    t25 += v * b10;
    t26 += v * b11;
    t27 += v * b12;
    t28 += v * b13;
    t29 += v * b14;
    t30 += v * b15;
    t0 += 38 * t16;
    t1 += 38 * t17;
    t2 += 38 * t18;
    t3 += 38 * t19;
    t4 += 38 * t20;
    t5 += 38 * t21;
    t6 += 38 * t22;
    t7 += 38 * t23;
    t8 += 38 * t24;
    t9 += 38 * t25;
    t10 += 38 * t26;
    t11 += 38 * t27;
    t12 += 38 * t28;
    t13 += 38 * t29;
    t14 += 38 * t30;
    // t15 left as is
    // first car
    c = 1;
    v = t0 + c + 65535;
    c = Math.floor(v / 65536);
    t0 = v - c * 65536;
    v = t1 + c + 65535;
    c = Math.floor(v / 65536);
    t1 = v - c * 65536;
    v = t2 + c + 65535;
    c = Math.floor(v / 65536);
    t2 = v - c * 65536;
    v = t3 + c + 65535;
    c = Math.floor(v / 65536);
    t3 = v - c * 65536;
    v = t4 + c + 65535;
    c = Math.floor(v / 65536);
    t4 = v - c * 65536;
    v = t5 + c + 65535;
    c = Math.floor(v / 65536);
    t5 = v - c * 65536;
    v = t6 + c + 65535;
    c = Math.floor(v / 65536);
    t6 = v - c * 65536;
    v = t7 + c + 65535;
    c = Math.floor(v / 65536);
    t7 = v - c * 65536;
    v = t8 + c + 65535;
    c = Math.floor(v / 65536);
    t8 = v - c * 65536;
    v = t9 + c + 65535;
    c = Math.floor(v / 65536);
    t9 = v - c * 65536;
    v = t10 + c + 65535;
    c = Math.floor(v / 65536);
    t10 = v - c * 65536;
    v = t11 + c + 65535;
    c = Math.floor(v / 65536);
    t11 = v - c * 65536;
    v = t12 + c + 65535;
    c = Math.floor(v / 65536);
    t12 = v - c * 65536;
    v = t13 + c + 65535;
    c = Math.floor(v / 65536);
    t13 = v - c * 65536;
    v = t14 + c + 65535;
    c = Math.floor(v / 65536);
    t14 = v - c * 65536;
    v = t15 + c + 65535;
    c = Math.floor(v / 65536);
    t15 = v - c * 65536;
    t0 += c - 1 + 37 * (c - 1);
    // second car
    c = 1;
    v = t0 + c + 65535;
    c = Math.floor(v / 65536);
    t0 = v - c * 65536;
    v = t1 + c + 65535;
    c = Math.floor(v / 65536);
    t1 = v - c * 65536;
    v = t2 + c + 65535;
    c = Math.floor(v / 65536);
    t2 = v - c * 65536;
    v = t3 + c + 65535;
    c = Math.floor(v / 65536);
    t3 = v - c * 65536;
    v = t4 + c + 65535;
    c = Math.floor(v / 65536);
    t4 = v - c * 65536;
    v = t5 + c + 65535;
    c = Math.floor(v / 65536);
    t5 = v - c * 65536;
    v = t6 + c + 65535;
    c = Math.floor(v / 65536);
    t6 = v - c * 65536;
    v = t7 + c + 65535;
    c = Math.floor(v / 65536);
    t7 = v - c * 65536;
    v = t8 + c + 65535;
    c = Math.floor(v / 65536);
    t8 = v - c * 65536;
    v = t9 + c + 65535;
    c = Math.floor(v / 65536);
    t9 = v - c * 65536;
    v = t10 + c + 65535;
    c = Math.floor(v / 65536);
    t10 = v - c * 65536;
    v = t11 + c + 65535;
    c = Math.floor(v / 65536);
    t11 = v - c * 65536;
    v = t12 + c + 65535;
    c = Math.floor(v / 65536);
    t12 = v - c * 65536;
    v = t13 + c + 65535;
    c = Math.floor(v / 65536);
    t13 = v - c * 65536;
    v = t14 + c + 65535;
    c = Math.floor(v / 65536);
    t14 = v - c * 65536;
    v = t15 + c + 65535;
    c = Math.floor(v / 65536);
    t15 = v - c * 65536;
    t0 += c - 1 + 37 * (c - 1);
    o[0] = t0;
    o[1] = t1;
    o[2] = t2;
    o[3] = t3;
    o[4] = t4;
    o[5] = t5;
    o[6] = t6;
    o[7] = t7;
    o[8] = t8;
    o[9] = t9;
    o[10] = t10;
    o[11] = t11;
    o[12] = t12;
    o[13] = t13;
    o[14] = t14;
    o[15] = t15;
  }
  function square(o, a) {
    mul(o, a, a);
  }
  function inv25519(o, inp) {
    var c = gf();
    for (var i = 0; i < 16; i++) {
      c[i] = inp[i];
    }
    for (var _i3 = 253; _i3 >= 0; _i3--) {
      square(c, c);
      if (_i3 !== 2 && _i3 !== 4) {
        mul(c, c, inp);
      }
    }
    for (var _i4 = 0; _i4 < 16; _i4++) {
      o[_i4] = c[_i4];
    }
  }
  function scalarMult(n, p) {
    var z = new Uint8Array(32);
    var x = new Float64Array(80);
    var a = gf(),
      b = gf(),
      c = gf(),
      d = gf(),
      e = gf(),
      f = gf();
    for (var i = 0; i < 31; i++) {
      z[i] = n[i];
    }
    z[31] = n[31] & 127 | 64;
    z[0] &= 248;
    unpack25519(x, p);
    for (var _i5 = 0; _i5 < 16; _i5++) {
      b[_i5] = x[_i5];
    }
    a[0] = d[0] = 1;
    for (var _i6 = 254; _i6 >= 0; --_i6) {
      var r = z[_i6 >>> 3] >>> (_i6 & 7) & 1;
      sel25519(a, b, r);
      sel25519(c, d, r);
      add(e, a, c);
      sub(a, a, c);
      add(c, b, d);
      sub(b, b, d);
      square(d, e);
      square(f, a);
      mul(a, c, a);
      mul(c, b, e);
      add(e, a, c);
      sub(a, a, c);
      square(b, a);
      sub(c, d, f);
      mul(a, c, _121665);
      add(a, a, d);
      mul(c, c, a);
      mul(a, d, f);
      mul(d, b, x);
      square(b, e);
      sel25519(a, b, r);
      sel25519(c, d, r);
    }
    for (var _i7 = 0; _i7 < 16; _i7++) {
      x[_i7 + 16] = a[_i7];
      x[_i7 + 32] = c[_i7];
      x[_i7 + 48] = b[_i7];
      x[_i7 + 64] = d[_i7];
    }
    var x32 = x.subarray(32);
    var x16 = x.subarray(16);
    inv25519(x32, x32);
    mul(x16, x16, x32);
    var q = new Uint8Array(32);
    pack25519(q, x16);
    return q;
  }
  exports.scalarMult = scalarMult;
  function scalarMultBase(n) {
    return scalarMult(n, _9);
  }
  exports.scalarMultBase = scalarMultBase;
  function generateKeyPairFromSeed(seed) {
    if (seed.length !== exports.SECRET_KEY_LENGTH) {
      throw new Error("x25519: seed must be ".concat(exports.SECRET_KEY_LENGTH, " bytes"));
    }
    var secretKey = new Uint8Array(seed);
    var publicKey = scalarMultBase(secretKey);
    return {
      publicKey: publicKey,
      secretKey: secretKey
    };
  }
  exports.generateKeyPairFromSeed = generateKeyPairFromSeed;
  function generateKeyPair(prng) {
    var seed = (0, random_1.randomBytes)(32, prng);
    var result = generateKeyPairFromSeed(seed);
    (0, wipe_1.wipe)(seed);
    return result;
  }
  exports.generateKeyPair = generateKeyPair;
  /**
   * Returns a shared key between our secret key and a peer's public key.
   *
   * Throws an error if the given keys are of wrong length.
   *
   * If rejectZero is true throws if the calculated shared key is all-zero.
   * From RFC 7748:
   *
   * > Protocol designers using Diffie-Hellman over the curves defined in
   * > this document must not assume "contributory behavior".  Specially,
   * > contributory behavior means that both parties' private keys
   * > contribute to the resulting shared key.  Since curve25519 and
   * > curve448 have cofactors of 8 and 4 (respectively), an input point of
   * > small order will eliminate any contribution from the other party's
   * > private key.  This situation can be detected by checking for the all-
   * > zero output, which implementations MAY do, as specified in Section 6.
   * > However, a large number of existing implementations do not do this.
   *
   * IMPORTANT: the returned key is a raw result of scalar multiplication.
   * To use it as a key material, hash it with a cryptographic hash function.
   */
  function sharedKey(mySecretKey, theirPublicKey) {
    var rejectZero = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {
      throw new Error("X25519: incorrect secret key length");
    }
    if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {
      throw new Error("X25519: incorrect public key length");
    }
    var result = scalarMult(mySecretKey, theirPublicKey);
    if (rejectZero) {
      var zeros = 0;
      for (var i = 0; i < result.length; i++) {
        zeros |= result[i];
      }
      if (zeros === 0) {
        throw new Error("X25519: invalid shared key");
      }
    }
    return result;
  }
  exports.sharedKey = sharedKey;
})(x25519$1);
var x25519 = /*@__PURE__*/getDefaultExportFromCjs$1(x25519$1);

function compare(a, b) {
  for (var i = 0; i < a.byteLength; i++) {
    if (a[i] < b[i]) {
      return -1;
    }
    if (a[i] > b[i]) {
      return 1;
    }
  }
  if (a.byteLength > b.byteLength) {
    return 1;
  }
  if (a.byteLength < b.byteLength) {
    return -1;
  }
  return 0;
}

function alloc() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {
    return globalThis.Buffer.alloc(size);
  }
  return new Uint8Array(size);
}
function allocUnsafe() {
  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return globalThis.Buffer.allocUnsafe(size);
  }
  return new Uint8Array(size);
}

function concat(arrays, length) {
  if (!length) {
    length = arrays.reduce(function (acc, curr) {
      return acc + curr.length;
    }, 0);
  }
  var output = allocUnsafe(length);
  var offset = 0;
  var _iterator = _createForOfIteratorHelper(arrays),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var arr = _step.value;
      output.set(arr, offset);
      offset += arr.length;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return output;
}

function equals(a, b) {
  if (a === b) {
    return true;
  }
  if (a.byteLength !== b.byteLength) {
    return false;
  }
  for (var i = 0; i < a.byteLength; i++) {
    if (a[i] !== b[i]) {
      return false;
    }
  }
  return true;
}

function createCodec(name, prefix, encode, decode) {
  return {
    name: name,
    prefix: prefix,
    encoder: {
      name: name,
      prefix: prefix,
      encode: encode
    },
    decoder: {
      decode: decode
    }
  };
}
var string = createCodec('utf8', 'u', function (buf) {
  var decoder = new TextDecoder('utf8');
  return 'u' + decoder.decode(buf);
}, function (str) {
  var encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec('ascii', 'a', function (buf) {
  var string = 'a';
  for (var i = 0; i < buf.length; i++) {
    string += String.fromCharCode(buf[i]);
  }
  return string;
}, function (str) {
  str = str.substring(1);
  var buf = allocUnsafe(str.length);
  for (var i = 0; i < str.length; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
});
var BASES = _objectSpread2({
  utf8: string,
  'utf-8': string,
  hex: bases.base16,
  latin1: ascii,
  ascii: ascii,
  binary: ascii
}, bases);

function fromString(string) {
  var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';
  var base = BASES[encoding];
  if (!base) {
    throw new Error("Unsupported encoding \"".concat(encoding, "\""));
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(string, 'utf8');
  }
  return base.decoder.decode("".concat(base.prefix).concat(string));
}

function toString(array) {
  var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';
  var base = BASES[encoding];
  if (!base) {
    throw new Error("Unsupported encoding \"".concat(encoding, "\""));
  }
  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');
  }
  return base.encoder.encode(array).substring(1);
}

function xor(a, b) {
  if (a.length !== b.length) {
    throw new Error('Inputs should have the same length');
  }
  var result = allocUnsafe(a.length);
  for (var i = 0; i < a.length; i++) {
    result[i] = a[i] ^ b[i];
  }
  return result;
}

var elliptic$3 = {};

var name$1 = "elliptic";
var version$1 = "6.6.0";
var description$1 = "EC cryptography";
var main$1 = "lib/elliptic.js";
var files$1 = [
	"lib"
];
var scripts$1 = {
	lint: "eslint lib test",
	"lint:fix": "npm run lint -- --fix",
	unit: "istanbul test _mocha --reporter=spec test/index.js",
	test: "npm run lint && npm run unit",
	version: "grunt dist && git add dist/"
};
var repository$1 = {
	type: "git",
	url: "git@github.com:indutny/elliptic"
};
var keywords$1 = [
	"EC",
	"Elliptic",
	"curve",
	"Cryptography"
];
var author$1 = "Fedor Indutny <fedor@indutny.com>";
var license$1 = "MIT";
var bugs$1 = {
	url: "https://github.com/indutny/elliptic/issues"
};
var homepage$1 = "https://github.com/indutny/elliptic";
var devDependencies$1 = {
	brfs: "^2.0.2",
	coveralls: "^3.1.0",
	eslint: "^7.6.0",
	grunt: "^1.2.1",
	"grunt-browserify": "^5.3.0",
	"grunt-cli": "^1.3.2",
	"grunt-contrib-connect": "^3.0.0",
	"grunt-contrib-copy": "^1.0.0",
	"grunt-contrib-uglify": "^5.0.0",
	"grunt-mocha-istanbul": "^5.0.2",
	"grunt-saucelabs": "^9.0.1",
	istanbul: "^0.4.5",
	mocha: "^8.0.1"
};
var dependencies$1 = {
	"bn.js": "^4.11.9",
	brorand: "^1.1.0",
	"hash.js": "^1.0.0",
	"hmac-drbg": "^1.0.1",
	inherits: "^2.0.4",
	"minimalistic-assert": "^1.0.1",
	"minimalistic-crypto-utils": "^1.0.1"
};
var require$$0$2 = {
	name: name$1,
	version: version$1,
	description: description$1,
	main: main$1,
	files: files$1,
	scripts: scripts$1,
	repository: repository$1,
	keywords: keywords$1,
	author: author$1,
	license: license$1,
	bugs: bugs$1,
	homepage: homepage$1,
	devDependencies: devDependencies$1,
	dependencies: dependencies$1
};

var utils$q = {};

var bn$6 = {exports: {}};

var bn$4 = bn$6.exports;
(function (module) {
  (function (module, exports) {
    'use strict';

    // Utils
    function assert(val, msg) {
      if (!val) throw new Error(msg || 'Assertion failed');
    }

    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function TempCtor() {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }

    // BN

    function BN(number, base, endian) {
      if (BN.isBN(number)) {
        return number;
      }
      this.negative = 0;
      this.words = null;
      this.length = 0;

      // Reduction context
      this.red = null;
      if (number !== null) {
        if (base === 'le' || base === 'be') {
          endian = base;
          base = 10;
        }
        this._init(number || 0, base || 10, endian || 'be');
      }
    }
    if (_typeof(module) === 'object') {
      module.exports = BN;
    } else {
      exports.BN = BN;
    }
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
      if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
        Buffer = window.Buffer;
      } else {
        Buffer = require$$0$3.Buffer;
      }
    } catch (e) {}
    BN.isBN = function isBN(num) {
      if (num instanceof BN) {
        return true;
      }
      return num !== null && _typeof(num) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
      if (left.cmp(right) > 0) return left;
      return right;
    };
    BN.min = function min(left, right) {
      if (left.cmp(right) < 0) return left;
      return right;
    };
    BN.prototype._init = function init(number, base, endian) {
      if (typeof number === 'number') {
        return this._initNumber(number, base, endian);
      }
      if (_typeof(number) === 'object') {
        return this._initArray(number, base, endian);
      }
      if (base === 'hex') {
        base = 16;
      }
      assert(base === (base | 0) && base >= 2 && base <= 36);
      number = number.toString().replace(/\s+/g, '');
      var start = 0;
      if (number[0] === '-') {
        start++;
        this.negative = 1;
      }
      if (start < number.length) {
        if (base === 16) {
          this._parseHex(number, start, endian);
        } else {
          this._parseBase(number, base, start);
          if (endian === 'le') {
            this._initArray(this.toArray(), base, endian);
          }
        }
      }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
      if (number < 0) {
        this.negative = 1;
        number = -number;
      }
      if (number < 0x4000000) {
        this.words = [number & 0x3ffffff];
        this.length = 1;
      } else if (number < 0x10000000000000) {
        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];
        this.length = 2;
      } else {
        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];
        this.length = 3;
      }
      if (endian !== 'le') return;

      // Reverse the bytes
      this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
      // Perhaps a Uint8Array
      assert(typeof number.length === 'number');
      if (number.length <= 0) {
        this.words = [0];
        this.length = 1;
        return this;
      }
      this.length = Math.ceil(number.length / 3);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }
      var j, w;
      var off = 0;
      if (endian === 'be') {
        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
          this.words[j] |= w << off & 0x3ffffff;
          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      } else if (endian === 'le') {
        for (i = 0, j = 0; i < number.length; i += 3) {
          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
          this.words[j] |= w << off & 0x3ffffff;
          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
      }
      return this.strip();
    };
    function parseHex4Bits(string, index) {
      var c = string.charCodeAt(index);
      // 'A' - 'F'
      if (c >= 65 && c <= 70) {
        return c - 55;
        // 'a' - 'f'
      } else if (c >= 97 && c <= 102) {
        return c - 87;
        // '0' - '9'
      } else {
        return c - 48 & 0xf;
      }
    }
    function parseHexByte(string, lowerBound, index) {
      var r = parseHex4Bits(string, index);
      if (index - 1 >= lowerBound) {
        r |= parseHex4Bits(string, index - 1) << 4;
      }
      return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
      // Create possibly bigger array to ensure that it fits the number
      this.length = Math.ceil((number.length - start) / 6);
      this.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        this.words[i] = 0;
      }

      // 24-bits chunks
      var off = 0;
      var j = 0;
      var w;
      if (endian === 'be') {
        for (i = number.length - 1; i >= start; i -= 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 0x3ffffff;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      } else {
        var parseLength = number.length - start;
        for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
          w = parseHexByte(number, start, i) << off;
          this.words[j] |= w & 0x3ffffff;
          if (off >= 18) {
            off -= 18;
            j += 1;
            this.words[j] |= w >>> 26;
          } else {
            off += 8;
          }
        }
      }
      this.strip();
    };
    function parseBase(str, start, end, mul) {
      var r = 0;
      var len = Math.min(str.length, end);
      for (var i = start; i < len; i++) {
        var c = str.charCodeAt(i) - 48;
        r *= mul;

        // 'a'
        if (c >= 49) {
          r += c - 49 + 0xa;

          // 'A'
        } else if (c >= 17) {
          r += c - 17 + 0xa;

          // '0' - '9'
        } else {
          r += c;
        }
      }
      return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
      // Initialize as zero
      this.words = [0];
      this.length = 1;

      // Find length of limb in base
      for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
        limbLen++;
      }
      limbLen--;
      limbPow = limbPow / base | 0;
      var total = number.length - start;
      var mod = total % limbLen;
      var end = Math.min(total, total - mod) + start;
      var word = 0;
      for (var i = start; i < end; i += limbLen) {
        word = parseBase(number, i, i + limbLen, base);
        this.imuln(limbPow);
        if (this.words[0] + word < 0x4000000) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      if (mod !== 0) {
        var pow = 1;
        word = parseBase(number, i, number.length, base);
        for (i = 0; i < mod; i++) {
          pow *= base;
        }
        this.imuln(pow);
        if (this.words[0] + word < 0x4000000) {
          this.words[0] += word;
        } else {
          this._iaddn(word);
        }
      }
      this.strip();
    };
    BN.prototype.copy = function copy(dest) {
      dest.words = new Array(this.length);
      for (var i = 0; i < this.length; i++) {
        dest.words[i] = this.words[i];
      }
      dest.length = this.length;
      dest.negative = this.negative;
      dest.red = this.red;
    };
    BN.prototype.clone = function clone() {
      var r = new BN(null);
      this.copy(r);
      return r;
    };
    BN.prototype._expand = function _expand(size) {
      while (this.length < size) {
        this.words[this.length++] = 0;
      }
      return this;
    };

    // Remove leading `0` from `this`
    BN.prototype.strip = function strip() {
      while (this.length > 1 && this.words[this.length - 1] === 0) {
        this.length--;
      }
      return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
      // -0 = 0
      if (this.length === 1 && this.words[0] === 0) {
        this.negative = 0;
      }
      return this;
    };
    BN.prototype.inspect = function inspect() {
      return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    };

    /*
     var zeros = [];
    var groupSizes = [];
    var groupBases = [];
     var s = '';
    var i = -1;
    while (++i < BN.wordSize) {
      zeros[i] = s;
      s += '0';
    }
    groupSizes[0] = 0;
    groupSizes[1] = 0;
    groupBases[0] = 0;
    groupBases[1] = 0;
    var base = 2 - 1;
    while (++base < 36 + 1) {
      var groupSize = 0;
      var groupBase = 1;
      while (groupBase < (1 << BN.wordSize) / base) {
        groupBase *= base;
        groupSize += 1;
      }
      groupSizes[base] = groupSize;
      groupBases[base] = groupBase;
    }
     */

    var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];
    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];
    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    BN.prototype.toString = function toString(base, padding) {
      base = base || 10;
      padding = padding | 0 || 1;
      var out;
      if (base === 16 || base === 'hex') {
        out = '';
        var off = 0;
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = this.words[i];
          var word = ((w << off | carry) & 0xffffff).toString(16);
          carry = w >>> 24 - off & 0xffffff;
          off += 2;
          if (off >= 26) {
            off -= 26;
            i--;
          }
          if (carry !== 0 || i !== this.length - 1) {
            out = zeros[6 - word.length] + word + out;
          } else {
            out = word + out;
          }
        }
        if (carry !== 0) {
          out = carry.toString(16) + out;
        }
        while (out.length % padding !== 0) {
          out = '0' + out;
        }
        if (this.negative !== 0) {
          out = '-' + out;
        }
        return out;
      }
      if (base === (base | 0) && base >= 2 && base <= 36) {
        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
        var groupSize = groupSizes[base];
        // var groupBase = Math.pow(base, groupSize);
        var groupBase = groupBases[base];
        out = '';
        var c = this.clone();
        c.negative = 0;
        while (!c.isZero()) {
          var r = c.modn(groupBase).toString(base);
          c = c.idivn(groupBase);
          if (!c.isZero()) {
            out = zeros[groupSize - r.length] + r + out;
          } else {
            out = r + out;
          }
        }
        if (this.isZero()) {
          out = '0' + out;
        }
        while (out.length % padding !== 0) {
          out = '0' + out;
        }
        if (this.negative !== 0) {
          out = '-' + out;
        }
        return out;
      }
      assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
      var ret = this.words[0];
      if (this.length === 2) {
        ret += this.words[1] * 0x4000000;
      } else if (this.length === 3 && this.words[2] === 0x01) {
        // NOTE: at this stage it is known that the top bit is set
        ret += 0x10000000000000 + this.words[1] * 0x4000000;
      } else if (this.length > 2) {
        assert(false, 'Number can only safely store up to 53 bits');
      }
      return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
      return this.toString(16);
    };
    BN.prototype.toBuffer = function toBuffer(endian, length) {
      assert(typeof Buffer !== 'undefined');
      return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
      return this.toArrayLike(Array, endian, length);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
      var byteLength = this.byteLength();
      var reqLength = length || Math.max(1, byteLength);
      assert(byteLength <= reqLength, 'byte array longer than desired length');
      assert(reqLength > 0, 'Requested array length <= 0');
      this.strip();
      var littleEndian = endian === 'le';
      var res = new ArrayType(reqLength);
      var b, i;
      var q = this.clone();
      if (!littleEndian) {
        // Assume big-endian
        for (i = 0; i < reqLength - byteLength; i++) {
          res[i] = 0;
        }
        for (i = 0; !q.isZero(); i++) {
          b = q.andln(0xff);
          q.iushrn(8);
          res[reqLength - i - 1] = b;
        }
      } else {
        for (i = 0; !q.isZero(); i++) {
          b = q.andln(0xff);
          q.iushrn(8);
          res[i] = b;
        }
        for (; i < reqLength; i++) {
          res[i] = 0;
        }
      }
      return res;
    };
    if (Math.clz32) {
      BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
      };
    } else {
      BN.prototype._countBits = function _countBits(w) {
        var t = w;
        var r = 0;
        if (t >= 0x1000) {
          r += 13;
          t >>>= 13;
        }
        if (t >= 0x40) {
          r += 7;
          t >>>= 7;
        }
        if (t >= 0x8) {
          r += 4;
          t >>>= 4;
        }
        if (t >= 0x02) {
          r += 2;
          t >>>= 2;
        }
        return r + t;
      };
    }
    BN.prototype._zeroBits = function _zeroBits(w) {
      // Short-cut
      if (w === 0) return 26;
      var t = w;
      var r = 0;
      if ((t & 0x1fff) === 0) {
        r += 13;
        t >>>= 13;
      }
      if ((t & 0x7f) === 0) {
        r += 7;
        t >>>= 7;
      }
      if ((t & 0xf) === 0) {
        r += 4;
        t >>>= 4;
      }
      if ((t & 0x3) === 0) {
        r += 2;
        t >>>= 2;
      }
      if ((t & 0x1) === 0) {
        r++;
      }
      return r;
    };

    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
      var w = this.words[this.length - 1];
      var hi = this._countBits(w);
      return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
      var w = new Array(num.bitLength());
      for (var bit = 0; bit < w.length; bit++) {
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
      }
      return w;
    }

    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
      if (this.isZero()) return 0;
      var r = 0;
      for (var i = 0; i < this.length; i++) {
        var b = this._zeroBits(this.words[i]);
        r += b;
        if (b !== 26) break;
      }
      return r;
    };
    BN.prototype.byteLength = function byteLength() {
      return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
      if (this.negative !== 0) {
        return this.abs().inotn(width).iaddn(1);
      }
      return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
      if (this.testn(width - 1)) {
        return this.notn(width).iaddn(1).ineg();
      }
      return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
      return this.negative !== 0;
    };

    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
      return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
      if (!this.isZero()) {
        this.negative ^= 1;
      }
      return this;
    };

    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
      while (this.length < num.length) {
        this.words[this.length++] = 0;
      }
      for (var i = 0; i < num.length; i++) {
        this.words[i] = this.words[i] | num.words[i];
      }
      return this.strip();
    };
    BN.prototype.ior = function ior(num) {
      assert((this.negative | num.negative) === 0);
      return this.iuor(num);
    };

    // Or `num` with `this`
    BN.prototype.or = function or(num) {
      if (this.length > num.length) return this.clone().ior(num);
      return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
      if (this.length > num.length) return this.clone().iuor(num);
      return num.clone().iuor(this);
    };

    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
      // b = min-length(num, this)
      var b;
      if (this.length > num.length) {
        b = num;
      } else {
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = this.words[i] & num.words[i];
      }
      this.length = b.length;
      return this.strip();
    };
    BN.prototype.iand = function iand(num) {
      assert((this.negative | num.negative) === 0);
      return this.iuand(num);
    };

    // And `num` with `this`
    BN.prototype.and = function and(num) {
      if (this.length > num.length) return this.clone().iand(num);
      return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
      if (this.length > num.length) return this.clone().iuand(num);
      return num.clone().iuand(this);
    };

    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
      // a.length > b.length
      var a;
      var b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      for (var i = 0; i < b.length; i++) {
        this.words[i] = a.words[i] ^ b.words[i];
      }
      if (this !== a) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = a.length;
      return this.strip();
    };
    BN.prototype.ixor = function ixor(num) {
      assert((this.negative | num.negative) === 0);
      return this.iuxor(num);
    };

    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
      if (this.length > num.length) return this.clone().ixor(num);
      return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
      if (this.length > num.length) return this.clone().iuxor(num);
      return num.clone().iuxor(this);
    };

    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
      assert(typeof width === 'number' && width >= 0);
      var bytesNeeded = Math.ceil(width / 26) | 0;
      var bitsLeft = width % 26;

      // Extend the buffer with leading zeroes
      this._expand(bytesNeeded);
      if (bitsLeft > 0) {
        bytesNeeded--;
      }

      // Handle complete words
      for (var i = 0; i < bytesNeeded; i++) {
        this.words[i] = ~this.words[i] & 0x3ffffff;
      }

      // Handle the residue
      if (bitsLeft > 0) {
        this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;
      }

      // And remove leading zeroes
      return this.strip();
    };
    BN.prototype.notn = function notn(width) {
      return this.clone().inotn(width);
    };

    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
      assert(typeof bit === 'number' && bit >= 0);
      var off = bit / 26 | 0;
      var wbit = bit % 26;
      this._expand(off + 1);
      if (val) {
        this.words[off] = this.words[off] | 1 << wbit;
      } else {
        this.words[off] = this.words[off] & ~(1 << wbit);
      }
      return this.strip();
    };

    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
      var r;

      // negative + positive
      if (this.negative !== 0 && num.negative === 0) {
        this.negative = 0;
        r = this.isub(num);
        this.negative ^= 1;
        return this._normSign();

        // positive + negative
      } else if (this.negative === 0 && num.negative !== 0) {
        num.negative = 0;
        r = this.isub(num);
        num.negative = 1;
        return r._normSign();
      }

      // a.length > b.length
      var a, b;
      if (this.length > num.length) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
        this.words[i] = r & 0x3ffffff;
        carry = r >>> 26;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r = (a.words[i] | 0) + carry;
        this.words[i] = r & 0x3ffffff;
        carry = r >>> 26;
      }
      this.length = a.length;
      if (carry !== 0) {
        this.words[this.length] = carry;
        this.length++;
        // Copy the rest of the words
      } else if (a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      return this;
    };

    // Add `num` to `this`
    BN.prototype.add = function add(num) {
      var res;
      if (num.negative !== 0 && this.negative === 0) {
        num.negative = 0;
        res = this.sub(num);
        num.negative ^= 1;
        return res;
      } else if (num.negative === 0 && this.negative !== 0) {
        this.negative = 0;
        res = num.sub(this);
        this.negative = 1;
        return res;
      }
      if (this.length > num.length) return this.clone().iadd(num);
      return num.clone().iadd(this);
    };

    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
      // this - (-num) = this + num
      if (num.negative !== 0) {
        num.negative = 0;
        var r = this.iadd(num);
        num.negative = 1;
        return r._normSign();

        // -this - num = -(this + num)
      } else if (this.negative !== 0) {
        this.negative = 0;
        this.iadd(num);
        this.negative = 1;
        return this._normSign();
      }

      // At this point both numbers are positive
      var cmp = this.cmp(num);

      // Optimization - zeroify
      if (cmp === 0) {
        this.negative = 0;
        this.length = 1;
        this.words[0] = 0;
        return this;
      }

      // a > b
      var a, b;
      if (cmp > 0) {
        a = this;
        b = num;
      } else {
        a = num;
        b = this;
      }
      var carry = 0;
      for (var i = 0; i < b.length; i++) {
        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
        carry = r >> 26;
        this.words[i] = r & 0x3ffffff;
      }
      for (; carry !== 0 && i < a.length; i++) {
        r = (a.words[i] | 0) + carry;
        carry = r >> 26;
        this.words[i] = r & 0x3ffffff;
      }

      // Copy rest of the words
      if (carry === 0 && i < a.length && a !== this) {
        for (; i < a.length; i++) {
          this.words[i] = a.words[i];
        }
      }
      this.length = Math.max(this.length, i);
      if (a !== this) {
        this.negative = 1;
      }
      return this.strip();
    };

    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
      return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
      out.negative = num.negative ^ self.negative;
      var len = self.length + num.length | 0;
      out.length = len;
      len = len - 1 | 0;

      // Peel one iteration (compiler can't do it, because of code complexity)
      var a = self.words[0] | 0;
      var b = num.words[0] | 0;
      var r = a * b;
      var lo = r & 0x3ffffff;
      var carry = r / 0x4000000 | 0;
      out.words[0] = lo;
      for (var k = 1; k < len; k++) {
        // Sum all words with the same `i + j = k` and accumulate `ncarry`,
        // note that ncarry could be >= 0x3ffffff
        var ncarry = carry >>> 26;
        var rword = carry & 0x3ffffff;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
          var i = k - j | 0;
          a = self.words[i] | 0;
          b = num.words[j] | 0;
          r = a * b + rword;
          ncarry += r / 0x4000000 | 0;
          rword = r & 0x3ffffff;
        }
        out.words[k] = rword | 0;
        carry = ncarry | 0;
      }
      if (carry !== 0) {
        out.words[k] = carry | 0;
      } else {
        out.length--;
      }
      return out.strip();
    }

    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo(self, num, out) {
      var a = self.words;
      var b = num.words;
      var o = out.words;
      var c = 0;
      var lo;
      var mid;
      var hi;
      var a0 = a[0] | 0;
      var al0 = a0 & 0x1fff;
      var ah0 = a0 >>> 13;
      var a1 = a[1] | 0;
      var al1 = a1 & 0x1fff;
      var ah1 = a1 >>> 13;
      var a2 = a[2] | 0;
      var al2 = a2 & 0x1fff;
      var ah2 = a2 >>> 13;
      var a3 = a[3] | 0;
      var al3 = a3 & 0x1fff;
      var ah3 = a3 >>> 13;
      var a4 = a[4] | 0;
      var al4 = a4 & 0x1fff;
      var ah4 = a4 >>> 13;
      var a5 = a[5] | 0;
      var al5 = a5 & 0x1fff;
      var ah5 = a5 >>> 13;
      var a6 = a[6] | 0;
      var al6 = a6 & 0x1fff;
      var ah6 = a6 >>> 13;
      var a7 = a[7] | 0;
      var al7 = a7 & 0x1fff;
      var ah7 = a7 >>> 13;
      var a8 = a[8] | 0;
      var al8 = a8 & 0x1fff;
      var ah8 = a8 >>> 13;
      var a9 = a[9] | 0;
      var al9 = a9 & 0x1fff;
      var ah9 = a9 >>> 13;
      var b0 = b[0] | 0;
      var bl0 = b0 & 0x1fff;
      var bh0 = b0 >>> 13;
      var b1 = b[1] | 0;
      var bl1 = b1 & 0x1fff;
      var bh1 = b1 >>> 13;
      var b2 = b[2] | 0;
      var bl2 = b2 & 0x1fff;
      var bh2 = b2 >>> 13;
      var b3 = b[3] | 0;
      var bl3 = b3 & 0x1fff;
      var bh3 = b3 >>> 13;
      var b4 = b[4] | 0;
      var bl4 = b4 & 0x1fff;
      var bh4 = b4 >>> 13;
      var b5 = b[5] | 0;
      var bl5 = b5 & 0x1fff;
      var bh5 = b5 >>> 13;
      var b6 = b[6] | 0;
      var bl6 = b6 & 0x1fff;
      var bh6 = b6 >>> 13;
      var b7 = b[7] | 0;
      var bl7 = b7 & 0x1fff;
      var bh7 = b7 >>> 13;
      var b8 = b[8] | 0;
      var bl8 = b8 & 0x1fff;
      var bh8 = b8 >>> 13;
      var b9 = b[9] | 0;
      var bl9 = b9 & 0x1fff;
      var bh9 = b9 >>> 13;
      out.negative = self.negative ^ num.negative;
      out.length = 19;
      /* k = 0 */
      lo = Math.imul(al0, bl0);
      mid = Math.imul(al0, bh0);
      mid = mid + Math.imul(ah0, bl0) | 0;
      hi = Math.imul(ah0, bh0);
      var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
      w0 &= 0x3ffffff;
      /* k = 1 */
      lo = Math.imul(al1, bl0);
      mid = Math.imul(al1, bh0);
      mid = mid + Math.imul(ah1, bl0) | 0;
      hi = Math.imul(ah1, bh0);
      lo = lo + Math.imul(al0, bl1) | 0;
      mid = mid + Math.imul(al0, bh1) | 0;
      mid = mid + Math.imul(ah0, bl1) | 0;
      hi = hi + Math.imul(ah0, bh1) | 0;
      var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
      w1 &= 0x3ffffff;
      /* k = 2 */
      lo = Math.imul(al2, bl0);
      mid = Math.imul(al2, bh0);
      mid = mid + Math.imul(ah2, bl0) | 0;
      hi = Math.imul(ah2, bh0);
      lo = lo + Math.imul(al1, bl1) | 0;
      mid = mid + Math.imul(al1, bh1) | 0;
      mid = mid + Math.imul(ah1, bl1) | 0;
      hi = hi + Math.imul(ah1, bh1) | 0;
      lo = lo + Math.imul(al0, bl2) | 0;
      mid = mid + Math.imul(al0, bh2) | 0;
      mid = mid + Math.imul(ah0, bl2) | 0;
      hi = hi + Math.imul(ah0, bh2) | 0;
      var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
      w2 &= 0x3ffffff;
      /* k = 3 */
      lo = Math.imul(al3, bl0);
      mid = Math.imul(al3, bh0);
      mid = mid + Math.imul(ah3, bl0) | 0;
      hi = Math.imul(ah3, bh0);
      lo = lo + Math.imul(al2, bl1) | 0;
      mid = mid + Math.imul(al2, bh1) | 0;
      mid = mid + Math.imul(ah2, bl1) | 0;
      hi = hi + Math.imul(ah2, bh1) | 0;
      lo = lo + Math.imul(al1, bl2) | 0;
      mid = mid + Math.imul(al1, bh2) | 0;
      mid = mid + Math.imul(ah1, bl2) | 0;
      hi = hi + Math.imul(ah1, bh2) | 0;
      lo = lo + Math.imul(al0, bl3) | 0;
      mid = mid + Math.imul(al0, bh3) | 0;
      mid = mid + Math.imul(ah0, bl3) | 0;
      hi = hi + Math.imul(ah0, bh3) | 0;
      var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
      w3 &= 0x3ffffff;
      /* k = 4 */
      lo = Math.imul(al4, bl0);
      mid = Math.imul(al4, bh0);
      mid = mid + Math.imul(ah4, bl0) | 0;
      hi = Math.imul(ah4, bh0);
      lo = lo + Math.imul(al3, bl1) | 0;
      mid = mid + Math.imul(al3, bh1) | 0;
      mid = mid + Math.imul(ah3, bl1) | 0;
      hi = hi + Math.imul(ah3, bh1) | 0;
      lo = lo + Math.imul(al2, bl2) | 0;
      mid = mid + Math.imul(al2, bh2) | 0;
      mid = mid + Math.imul(ah2, bl2) | 0;
      hi = hi + Math.imul(ah2, bh2) | 0;
      lo = lo + Math.imul(al1, bl3) | 0;
      mid = mid + Math.imul(al1, bh3) | 0;
      mid = mid + Math.imul(ah1, bl3) | 0;
      hi = hi + Math.imul(ah1, bh3) | 0;
      lo = lo + Math.imul(al0, bl4) | 0;
      mid = mid + Math.imul(al0, bh4) | 0;
      mid = mid + Math.imul(ah0, bl4) | 0;
      hi = hi + Math.imul(ah0, bh4) | 0;
      var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
      w4 &= 0x3ffffff;
      /* k = 5 */
      lo = Math.imul(al5, bl0);
      mid = Math.imul(al5, bh0);
      mid = mid + Math.imul(ah5, bl0) | 0;
      hi = Math.imul(ah5, bh0);
      lo = lo + Math.imul(al4, bl1) | 0;
      mid = mid + Math.imul(al4, bh1) | 0;
      mid = mid + Math.imul(ah4, bl1) | 0;
      hi = hi + Math.imul(ah4, bh1) | 0;
      lo = lo + Math.imul(al3, bl2) | 0;
      mid = mid + Math.imul(al3, bh2) | 0;
      mid = mid + Math.imul(ah3, bl2) | 0;
      hi = hi + Math.imul(ah3, bh2) | 0;
      lo = lo + Math.imul(al2, bl3) | 0;
      mid = mid + Math.imul(al2, bh3) | 0;
      mid = mid + Math.imul(ah2, bl3) | 0;
      hi = hi + Math.imul(ah2, bh3) | 0;
      lo = lo + Math.imul(al1, bl4) | 0;
      mid = mid + Math.imul(al1, bh4) | 0;
      mid = mid + Math.imul(ah1, bl4) | 0;
      hi = hi + Math.imul(ah1, bh4) | 0;
      lo = lo + Math.imul(al0, bl5) | 0;
      mid = mid + Math.imul(al0, bh5) | 0;
      mid = mid + Math.imul(ah0, bl5) | 0;
      hi = hi + Math.imul(ah0, bh5) | 0;
      var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
      w5 &= 0x3ffffff;
      /* k = 6 */
      lo = Math.imul(al6, bl0);
      mid = Math.imul(al6, bh0);
      mid = mid + Math.imul(ah6, bl0) | 0;
      hi = Math.imul(ah6, bh0);
      lo = lo + Math.imul(al5, bl1) | 0;
      mid = mid + Math.imul(al5, bh1) | 0;
      mid = mid + Math.imul(ah5, bl1) | 0;
      hi = hi + Math.imul(ah5, bh1) | 0;
      lo = lo + Math.imul(al4, bl2) | 0;
      mid = mid + Math.imul(al4, bh2) | 0;
      mid = mid + Math.imul(ah4, bl2) | 0;
      hi = hi + Math.imul(ah4, bh2) | 0;
      lo = lo + Math.imul(al3, bl3) | 0;
      mid = mid + Math.imul(al3, bh3) | 0;
      mid = mid + Math.imul(ah3, bl3) | 0;
      hi = hi + Math.imul(ah3, bh3) | 0;
      lo = lo + Math.imul(al2, bl4) | 0;
      mid = mid + Math.imul(al2, bh4) | 0;
      mid = mid + Math.imul(ah2, bl4) | 0;
      hi = hi + Math.imul(ah2, bh4) | 0;
      lo = lo + Math.imul(al1, bl5) | 0;
      mid = mid + Math.imul(al1, bh5) | 0;
      mid = mid + Math.imul(ah1, bl5) | 0;
      hi = hi + Math.imul(ah1, bh5) | 0;
      lo = lo + Math.imul(al0, bl6) | 0;
      mid = mid + Math.imul(al0, bh6) | 0;
      mid = mid + Math.imul(ah0, bl6) | 0;
      hi = hi + Math.imul(ah0, bh6) | 0;
      var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
      w6 &= 0x3ffffff;
      /* k = 7 */
      lo = Math.imul(al7, bl0);
      mid = Math.imul(al7, bh0);
      mid = mid + Math.imul(ah7, bl0) | 0;
      hi = Math.imul(ah7, bh0);
      lo = lo + Math.imul(al6, bl1) | 0;
      mid = mid + Math.imul(al6, bh1) | 0;
      mid = mid + Math.imul(ah6, bl1) | 0;
      hi = hi + Math.imul(ah6, bh1) | 0;
      lo = lo + Math.imul(al5, bl2) | 0;
      mid = mid + Math.imul(al5, bh2) | 0;
      mid = mid + Math.imul(ah5, bl2) | 0;
      hi = hi + Math.imul(ah5, bh2) | 0;
      lo = lo + Math.imul(al4, bl3) | 0;
      mid = mid + Math.imul(al4, bh3) | 0;
      mid = mid + Math.imul(ah4, bl3) | 0;
      hi = hi + Math.imul(ah4, bh3) | 0;
      lo = lo + Math.imul(al3, bl4) | 0;
      mid = mid + Math.imul(al3, bh4) | 0;
      mid = mid + Math.imul(ah3, bl4) | 0;
      hi = hi + Math.imul(ah3, bh4) | 0;
      lo = lo + Math.imul(al2, bl5) | 0;
      mid = mid + Math.imul(al2, bh5) | 0;
      mid = mid + Math.imul(ah2, bl5) | 0;
      hi = hi + Math.imul(ah2, bh5) | 0;
      lo = lo + Math.imul(al1, bl6) | 0;
      mid = mid + Math.imul(al1, bh6) | 0;
      mid = mid + Math.imul(ah1, bl6) | 0;
      hi = hi + Math.imul(ah1, bh6) | 0;
      lo = lo + Math.imul(al0, bl7) | 0;
      mid = mid + Math.imul(al0, bh7) | 0;
      mid = mid + Math.imul(ah0, bl7) | 0;
      hi = hi + Math.imul(ah0, bh7) | 0;
      var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
      w7 &= 0x3ffffff;
      /* k = 8 */
      lo = Math.imul(al8, bl0);
      mid = Math.imul(al8, bh0);
      mid = mid + Math.imul(ah8, bl0) | 0;
      hi = Math.imul(ah8, bh0);
      lo = lo + Math.imul(al7, bl1) | 0;
      mid = mid + Math.imul(al7, bh1) | 0;
      mid = mid + Math.imul(ah7, bl1) | 0;
      hi = hi + Math.imul(ah7, bh1) | 0;
      lo = lo + Math.imul(al6, bl2) | 0;
      mid = mid + Math.imul(al6, bh2) | 0;
      mid = mid + Math.imul(ah6, bl2) | 0;
      hi = hi + Math.imul(ah6, bh2) | 0;
      lo = lo + Math.imul(al5, bl3) | 0;
      mid = mid + Math.imul(al5, bh3) | 0;
      mid = mid + Math.imul(ah5, bl3) | 0;
      hi = hi + Math.imul(ah5, bh3) | 0;
      lo = lo + Math.imul(al4, bl4) | 0;
      mid = mid + Math.imul(al4, bh4) | 0;
      mid = mid + Math.imul(ah4, bl4) | 0;
      hi = hi + Math.imul(ah4, bh4) | 0;
      lo = lo + Math.imul(al3, bl5) | 0;
      mid = mid + Math.imul(al3, bh5) | 0;
      mid = mid + Math.imul(ah3, bl5) | 0;
      hi = hi + Math.imul(ah3, bh5) | 0;
      lo = lo + Math.imul(al2, bl6) | 0;
      mid = mid + Math.imul(al2, bh6) | 0;
      mid = mid + Math.imul(ah2, bl6) | 0;
      hi = hi + Math.imul(ah2, bh6) | 0;
      lo = lo + Math.imul(al1, bl7) | 0;
      mid = mid + Math.imul(al1, bh7) | 0;
      mid = mid + Math.imul(ah1, bl7) | 0;
      hi = hi + Math.imul(ah1, bh7) | 0;
      lo = lo + Math.imul(al0, bl8) | 0;
      mid = mid + Math.imul(al0, bh8) | 0;
      mid = mid + Math.imul(ah0, bl8) | 0;
      hi = hi + Math.imul(ah0, bh8) | 0;
      var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
      w8 &= 0x3ffffff;
      /* k = 9 */
      lo = Math.imul(al9, bl0);
      mid = Math.imul(al9, bh0);
      mid = mid + Math.imul(ah9, bl0) | 0;
      hi = Math.imul(ah9, bh0);
      lo = lo + Math.imul(al8, bl1) | 0;
      mid = mid + Math.imul(al8, bh1) | 0;
      mid = mid + Math.imul(ah8, bl1) | 0;
      hi = hi + Math.imul(ah8, bh1) | 0;
      lo = lo + Math.imul(al7, bl2) | 0;
      mid = mid + Math.imul(al7, bh2) | 0;
      mid = mid + Math.imul(ah7, bl2) | 0;
      hi = hi + Math.imul(ah7, bh2) | 0;
      lo = lo + Math.imul(al6, bl3) | 0;
      mid = mid + Math.imul(al6, bh3) | 0;
      mid = mid + Math.imul(ah6, bl3) | 0;
      hi = hi + Math.imul(ah6, bh3) | 0;
      lo = lo + Math.imul(al5, bl4) | 0;
      mid = mid + Math.imul(al5, bh4) | 0;
      mid = mid + Math.imul(ah5, bl4) | 0;
      hi = hi + Math.imul(ah5, bh4) | 0;
      lo = lo + Math.imul(al4, bl5) | 0;
      mid = mid + Math.imul(al4, bh5) | 0;
      mid = mid + Math.imul(ah4, bl5) | 0;
      hi = hi + Math.imul(ah4, bh5) | 0;
      lo = lo + Math.imul(al3, bl6) | 0;
      mid = mid + Math.imul(al3, bh6) | 0;
      mid = mid + Math.imul(ah3, bl6) | 0;
      hi = hi + Math.imul(ah3, bh6) | 0;
      lo = lo + Math.imul(al2, bl7) | 0;
      mid = mid + Math.imul(al2, bh7) | 0;
      mid = mid + Math.imul(ah2, bl7) | 0;
      hi = hi + Math.imul(ah2, bh7) | 0;
      lo = lo + Math.imul(al1, bl8) | 0;
      mid = mid + Math.imul(al1, bh8) | 0;
      mid = mid + Math.imul(ah1, bl8) | 0;
      hi = hi + Math.imul(ah1, bh8) | 0;
      lo = lo + Math.imul(al0, bl9) | 0;
      mid = mid + Math.imul(al0, bh9) | 0;
      mid = mid + Math.imul(ah0, bl9) | 0;
      hi = hi + Math.imul(ah0, bh9) | 0;
      var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
      w9 &= 0x3ffffff;
      /* k = 10 */
      lo = Math.imul(al9, bl1);
      mid = Math.imul(al9, bh1);
      mid = mid + Math.imul(ah9, bl1) | 0;
      hi = Math.imul(ah9, bh1);
      lo = lo + Math.imul(al8, bl2) | 0;
      mid = mid + Math.imul(al8, bh2) | 0;
      mid = mid + Math.imul(ah8, bl2) | 0;
      hi = hi + Math.imul(ah8, bh2) | 0;
      lo = lo + Math.imul(al7, bl3) | 0;
      mid = mid + Math.imul(al7, bh3) | 0;
      mid = mid + Math.imul(ah7, bl3) | 0;
      hi = hi + Math.imul(ah7, bh3) | 0;
      lo = lo + Math.imul(al6, bl4) | 0;
      mid = mid + Math.imul(al6, bh4) | 0;
      mid = mid + Math.imul(ah6, bl4) | 0;
      hi = hi + Math.imul(ah6, bh4) | 0;
      lo = lo + Math.imul(al5, bl5) | 0;
      mid = mid + Math.imul(al5, bh5) | 0;
      mid = mid + Math.imul(ah5, bl5) | 0;
      hi = hi + Math.imul(ah5, bh5) | 0;
      lo = lo + Math.imul(al4, bl6) | 0;
      mid = mid + Math.imul(al4, bh6) | 0;
      mid = mid + Math.imul(ah4, bl6) | 0;
      hi = hi + Math.imul(ah4, bh6) | 0;
      lo = lo + Math.imul(al3, bl7) | 0;
      mid = mid + Math.imul(al3, bh7) | 0;
      mid = mid + Math.imul(ah3, bl7) | 0;
      hi = hi + Math.imul(ah3, bh7) | 0;
      lo = lo + Math.imul(al2, bl8) | 0;
      mid = mid + Math.imul(al2, bh8) | 0;
      mid = mid + Math.imul(ah2, bl8) | 0;
      hi = hi + Math.imul(ah2, bh8) | 0;
      lo = lo + Math.imul(al1, bl9) | 0;
      mid = mid + Math.imul(al1, bh9) | 0;
      mid = mid + Math.imul(ah1, bl9) | 0;
      hi = hi + Math.imul(ah1, bh9) | 0;
      var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
      w10 &= 0x3ffffff;
      /* k = 11 */
      lo = Math.imul(al9, bl2);
      mid = Math.imul(al9, bh2);
      mid = mid + Math.imul(ah9, bl2) | 0;
      hi = Math.imul(ah9, bh2);
      lo = lo + Math.imul(al8, bl3) | 0;
      mid = mid + Math.imul(al8, bh3) | 0;
      mid = mid + Math.imul(ah8, bl3) | 0;
      hi = hi + Math.imul(ah8, bh3) | 0;
      lo = lo + Math.imul(al7, bl4) | 0;
      mid = mid + Math.imul(al7, bh4) | 0;
      mid = mid + Math.imul(ah7, bl4) | 0;
      hi = hi + Math.imul(ah7, bh4) | 0;
      lo = lo + Math.imul(al6, bl5) | 0;
      mid = mid + Math.imul(al6, bh5) | 0;
      mid = mid + Math.imul(ah6, bl5) | 0;
      hi = hi + Math.imul(ah6, bh5) | 0;
      lo = lo + Math.imul(al5, bl6) | 0;
      mid = mid + Math.imul(al5, bh6) | 0;
      mid = mid + Math.imul(ah5, bl6) | 0;
      hi = hi + Math.imul(ah5, bh6) | 0;
      lo = lo + Math.imul(al4, bl7) | 0;
      mid = mid + Math.imul(al4, bh7) | 0;
      mid = mid + Math.imul(ah4, bl7) | 0;
      hi = hi + Math.imul(ah4, bh7) | 0;
      lo = lo + Math.imul(al3, bl8) | 0;
      mid = mid + Math.imul(al3, bh8) | 0;
      mid = mid + Math.imul(ah3, bl8) | 0;
      hi = hi + Math.imul(ah3, bh8) | 0;
      lo = lo + Math.imul(al2, bl9) | 0;
      mid = mid + Math.imul(al2, bh9) | 0;
      mid = mid + Math.imul(ah2, bl9) | 0;
      hi = hi + Math.imul(ah2, bh9) | 0;
      var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
      w11 &= 0x3ffffff;
      /* k = 12 */
      lo = Math.imul(al9, bl3);
      mid = Math.imul(al9, bh3);
      mid = mid + Math.imul(ah9, bl3) | 0;
      hi = Math.imul(ah9, bh3);
      lo = lo + Math.imul(al8, bl4) | 0;
      mid = mid + Math.imul(al8, bh4) | 0;
      mid = mid + Math.imul(ah8, bl4) | 0;
      hi = hi + Math.imul(ah8, bh4) | 0;
      lo = lo + Math.imul(al7, bl5) | 0;
      mid = mid + Math.imul(al7, bh5) | 0;
      mid = mid + Math.imul(ah7, bl5) | 0;
      hi = hi + Math.imul(ah7, bh5) | 0;
      lo = lo + Math.imul(al6, bl6) | 0;
      mid = mid + Math.imul(al6, bh6) | 0;
      mid = mid + Math.imul(ah6, bl6) | 0;
      hi = hi + Math.imul(ah6, bh6) | 0;
      lo = lo + Math.imul(al5, bl7) | 0;
      mid = mid + Math.imul(al5, bh7) | 0;
      mid = mid + Math.imul(ah5, bl7) | 0;
      hi = hi + Math.imul(ah5, bh7) | 0;
      lo = lo + Math.imul(al4, bl8) | 0;
      mid = mid + Math.imul(al4, bh8) | 0;
      mid = mid + Math.imul(ah4, bl8) | 0;
      hi = hi + Math.imul(ah4, bh8) | 0;
      lo = lo + Math.imul(al3, bl9) | 0;
      mid = mid + Math.imul(al3, bh9) | 0;
      mid = mid + Math.imul(ah3, bl9) | 0;
      hi = hi + Math.imul(ah3, bh9) | 0;
      var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
      w12 &= 0x3ffffff;
      /* k = 13 */
      lo = Math.imul(al9, bl4);
      mid = Math.imul(al9, bh4);
      mid = mid + Math.imul(ah9, bl4) | 0;
      hi = Math.imul(ah9, bh4);
      lo = lo + Math.imul(al8, bl5) | 0;
      mid = mid + Math.imul(al8, bh5) | 0;
      mid = mid + Math.imul(ah8, bl5) | 0;
      hi = hi + Math.imul(ah8, bh5) | 0;
      lo = lo + Math.imul(al7, bl6) | 0;
      mid = mid + Math.imul(al7, bh6) | 0;
      mid = mid + Math.imul(ah7, bl6) | 0;
      hi = hi + Math.imul(ah7, bh6) | 0;
      lo = lo + Math.imul(al6, bl7) | 0;
      mid = mid + Math.imul(al6, bh7) | 0;
      mid = mid + Math.imul(ah6, bl7) | 0;
      hi = hi + Math.imul(ah6, bh7) | 0;
      lo = lo + Math.imul(al5, bl8) | 0;
      mid = mid + Math.imul(al5, bh8) | 0;
      mid = mid + Math.imul(ah5, bl8) | 0;
      hi = hi + Math.imul(ah5, bh8) | 0;
      lo = lo + Math.imul(al4, bl9) | 0;
      mid = mid + Math.imul(al4, bh9) | 0;
      mid = mid + Math.imul(ah4, bl9) | 0;
      hi = hi + Math.imul(ah4, bh9) | 0;
      var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
      w13 &= 0x3ffffff;
      /* k = 14 */
      lo = Math.imul(al9, bl5);
      mid = Math.imul(al9, bh5);
      mid = mid + Math.imul(ah9, bl5) | 0;
      hi = Math.imul(ah9, bh5);
      lo = lo + Math.imul(al8, bl6) | 0;
      mid = mid + Math.imul(al8, bh6) | 0;
      mid = mid + Math.imul(ah8, bl6) | 0;
      hi = hi + Math.imul(ah8, bh6) | 0;
      lo = lo + Math.imul(al7, bl7) | 0;
      mid = mid + Math.imul(al7, bh7) | 0;
      mid = mid + Math.imul(ah7, bl7) | 0;
      hi = hi + Math.imul(ah7, bh7) | 0;
      lo = lo + Math.imul(al6, bl8) | 0;
      mid = mid + Math.imul(al6, bh8) | 0;
      mid = mid + Math.imul(ah6, bl8) | 0;
      hi = hi + Math.imul(ah6, bh8) | 0;
      lo = lo + Math.imul(al5, bl9) | 0;
      mid = mid + Math.imul(al5, bh9) | 0;
      mid = mid + Math.imul(ah5, bl9) | 0;
      hi = hi + Math.imul(ah5, bh9) | 0;
      var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
      w14 &= 0x3ffffff;
      /* k = 15 */
      lo = Math.imul(al9, bl6);
      mid = Math.imul(al9, bh6);
      mid = mid + Math.imul(ah9, bl6) | 0;
      hi = Math.imul(ah9, bh6);
      lo = lo + Math.imul(al8, bl7) | 0;
      mid = mid + Math.imul(al8, bh7) | 0;
      mid = mid + Math.imul(ah8, bl7) | 0;
      hi = hi + Math.imul(ah8, bh7) | 0;
      lo = lo + Math.imul(al7, bl8) | 0;
      mid = mid + Math.imul(al7, bh8) | 0;
      mid = mid + Math.imul(ah7, bl8) | 0;
      hi = hi + Math.imul(ah7, bh8) | 0;
      lo = lo + Math.imul(al6, bl9) | 0;
      mid = mid + Math.imul(al6, bh9) | 0;
      mid = mid + Math.imul(ah6, bl9) | 0;
      hi = hi + Math.imul(ah6, bh9) | 0;
      var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
      w15 &= 0x3ffffff;
      /* k = 16 */
      lo = Math.imul(al9, bl7);
      mid = Math.imul(al9, bh7);
      mid = mid + Math.imul(ah9, bl7) | 0;
      hi = Math.imul(ah9, bh7);
      lo = lo + Math.imul(al8, bl8) | 0;
      mid = mid + Math.imul(al8, bh8) | 0;
      mid = mid + Math.imul(ah8, bl8) | 0;
      hi = hi + Math.imul(ah8, bh8) | 0;
      lo = lo + Math.imul(al7, bl9) | 0;
      mid = mid + Math.imul(al7, bh9) | 0;
      mid = mid + Math.imul(ah7, bl9) | 0;
      hi = hi + Math.imul(ah7, bh9) | 0;
      var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
      w16 &= 0x3ffffff;
      /* k = 17 */
      lo = Math.imul(al9, bl8);
      mid = Math.imul(al9, bh8);
      mid = mid + Math.imul(ah9, bl8) | 0;
      hi = Math.imul(ah9, bh8);
      lo = lo + Math.imul(al8, bl9) | 0;
      mid = mid + Math.imul(al8, bh9) | 0;
      mid = mid + Math.imul(ah8, bl9) | 0;
      hi = hi + Math.imul(ah8, bh9) | 0;
      var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
      w17 &= 0x3ffffff;
      /* k = 18 */
      lo = Math.imul(al9, bl9);
      mid = Math.imul(al9, bh9);
      mid = mid + Math.imul(ah9, bl9) | 0;
      hi = Math.imul(ah9, bh9);
      var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
      w18 &= 0x3ffffff;
      o[0] = w0;
      o[1] = w1;
      o[2] = w2;
      o[3] = w3;
      o[4] = w4;
      o[5] = w5;
      o[6] = w6;
      o[7] = w7;
      o[8] = w8;
      o[9] = w9;
      o[10] = w10;
      o[11] = w11;
      o[12] = w12;
      o[13] = w13;
      o[14] = w14;
      o[15] = w15;
      o[16] = w16;
      o[17] = w17;
      o[18] = w18;
      if (c !== 0) {
        o[19] = c;
        out.length++;
      }
      return out;
    };

    // Polyfill comb
    if (!Math.imul) {
      comb10MulTo = smallMulTo;
    }
    function bigMulTo(self, num, out) {
      out.negative = num.negative ^ self.negative;
      out.length = self.length + num.length;
      var carry = 0;
      var hncarry = 0;
      for (var k = 0; k < out.length - 1; k++) {
        // Sum all words with the same `i + j = k` and accumulate `ncarry`,
        // note that ncarry could be >= 0x3ffffff
        var ncarry = hncarry;
        hncarry = 0;
        var rword = carry & 0x3ffffff;
        var maxJ = Math.min(k, num.length - 1);
        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
          var i = k - j;
          var a = self.words[i] | 0;
          var b = num.words[j] | 0;
          var r = a * b;
          var lo = r & 0x3ffffff;
          ncarry = ncarry + (r / 0x4000000 | 0) | 0;
          lo = lo + rword | 0;
          rword = lo & 0x3ffffff;
          ncarry = ncarry + (lo >>> 26) | 0;
          hncarry += ncarry >>> 26;
          ncarry &= 0x3ffffff;
        }
        out.words[k] = rword;
        carry = ncarry;
        ncarry = hncarry;
      }
      if (carry !== 0) {
        out.words[k] = carry;
      } else {
        out.length--;
      }
      return out.strip();
    }
    function jumboMulTo(self, num, out) {
      var fftm = new FFTM();
      return fftm.mulp(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
      var res;
      var len = this.length + num.length;
      if (this.length === 10 && num.length === 10) {
        res = comb10MulTo(this, num, out);
      } else if (len < 63) {
        res = smallMulTo(this, num, out);
      } else if (len < 1024) {
        res = bigMulTo(this, num, out);
      } else {
        res = jumboMulTo(this, num, out);
      }
      return res;
    };

    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion

    function FFTM(x, y) {
      this.x = x;
      this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
      var t = new Array(N);
      var l = BN.prototype._countBits(N) - 1;
      for (var i = 0; i < N; i++) {
        t[i] = this.revBin(i, l, N);
      }
      return t;
    };

    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
      if (x === 0 || x === N - 1) return x;
      var rb = 0;
      for (var i = 0; i < l; i++) {
        rb |= (x & 1) << l - i - 1;
        x >>= 1;
      }
      return rb;
    };

    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
      for (var i = 0; i < N; i++) {
        rtws[i] = rws[rbt[i]];
        itws[i] = iws[rbt[i]];
      }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
      this.permute(rbt, rws, iws, rtws, itws, N);
      for (var s = 1; s < N; s <<= 1) {
        var l = s << 1;
        var rtwdf = Math.cos(2 * Math.PI / l);
        var itwdf = Math.sin(2 * Math.PI / l);
        for (var p = 0; p < N; p += l) {
          var rtwdf_ = rtwdf;
          var itwdf_ = itwdf;
          for (var j = 0; j < s; j++) {
            var re = rtws[p + j];
            var ie = itws[p + j];
            var ro = rtws[p + j + s];
            var io = itws[p + j + s];
            var rx = rtwdf_ * ro - itwdf_ * io;
            io = rtwdf_ * io + itwdf_ * ro;
            ro = rx;
            rtws[p + j] = re + ro;
            itws[p + j] = ie + io;
            rtws[p + j + s] = re - ro;
            itws[p + j + s] = ie - io;

            /* jshint maxdepth : false */
            if (j !== l) {
              rx = rtwdf * rtwdf_ - itwdf * itwdf_;
              itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
              rtwdf_ = rx;
            }
          }
        }
      }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
      var N = Math.max(m, n) | 1;
      var odd = N & 1;
      var i = 0;
      for (N = N / 2 | 0; N; N = N >>> 1) {
        i++;
      }
      return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
      if (N <= 1) return;
      for (var i = 0; i < N / 2; i++) {
        var t = rws[i];
        rws[i] = rws[N - i - 1];
        rws[N - i - 1] = t;
        t = iws[i];
        iws[i] = -iws[N - i - 1];
        iws[N - i - 1] = -t;
      }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
      var carry = 0;
      for (var i = 0; i < N / 2; i++) {
        var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;
        ws[i] = w & 0x3ffffff;
        if (w < 0x4000000) {
          carry = 0;
        } else {
          carry = w / 0x4000000 | 0;
        }
      }
      return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
      var carry = 0;
      for (var i = 0; i < len; i++) {
        carry = carry + (ws[i] | 0);
        rws[2 * i] = carry & 0x1fff;
        carry = carry >>> 13;
        rws[2 * i + 1] = carry & 0x1fff;
        carry = carry >>> 13;
      }

      // Pad with zeroes
      for (i = 2 * len; i < N; ++i) {
        rws[i] = 0;
      }
      assert(carry === 0);
      assert((carry & ~0x1fff) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
      var ph = new Array(N);
      for (var i = 0; i < N; i++) {
        ph[i] = 0;
      }
      return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
      var N = 2 * this.guessLen13b(x.length, y.length);
      var rbt = this.makeRBT(N);
      var _ = this.stub(N);
      var rws = new Array(N);
      var rwst = new Array(N);
      var iwst = new Array(N);
      var nrws = new Array(N);
      var nrwst = new Array(N);
      var niwst = new Array(N);
      var rmws = out.words;
      rmws.length = N;
      this.convert13b(x.words, x.length, rws, N);
      this.convert13b(y.words, y.length, nrws, N);
      this.transform(rws, _, rwst, iwst, N, rbt);
      this.transform(nrws, _, nrwst, niwst, N, rbt);
      for (var i = 0; i < N; i++) {
        var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
        iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
        rwst[i] = rx;
      }
      this.conjugate(rwst, iwst, N);
      this.transform(rwst, iwst, rmws, _, N, rbt);
      this.conjugate(rmws, _, N);
      this.normalize13b(rmws, N);
      out.negative = x.negative ^ y.negative;
      out.length = x.length + y.length;
      return out.strip();
    };

    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
      var out = new BN(null);
      out.words = new Array(this.length + num.length);
      return this.mulTo(num, out);
    };

    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
      var out = new BN(null);
      out.words = new Array(this.length + num.length);
      return jumboMulTo(this, num, out);
    };

    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
      return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
      assert(typeof num === 'number');
      assert(num < 0x4000000);

      // Carry
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = (this.words[i] | 0) * num;
        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
        carry >>= 26;
        carry += w / 0x4000000 | 0;
        // NOTE: lo is 27bit maximum
        carry += lo >>> 26;
        this.words[i] = lo & 0x3ffffff;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return this;
    };
    BN.prototype.muln = function muln(num) {
      return this.clone().imuln(num);
    };

    // `this` * `this`
    BN.prototype.sqr = function sqr() {
      return this.mul(this);
    };

    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
      return this.imul(this.clone());
    };

    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
      var w = toBitArray(num);
      if (w.length === 0) return new BN(1);

      // Skip leading zeroes
      var res = this;
      for (var i = 0; i < w.length; i++, res = res.sqr()) {
        if (w[i] !== 0) break;
      }
      if (++i < w.length) {
        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
          if (w[i] === 0) continue;
          res = res.mul(q);
        }
      }
      return res;
    };

    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
      assert(typeof bits === 'number' && bits >= 0);
      var r = bits % 26;
      var s = (bits - r) / 26;
      var carryMask = 0x3ffffff >>> 26 - r << 26 - r;
      var i;
      if (r !== 0) {
        var carry = 0;
        for (i = 0; i < this.length; i++) {
          var newCarry = this.words[i] & carryMask;
          var c = (this.words[i] | 0) - newCarry << r;
          this.words[i] = c | carry;
          carry = newCarry >>> 26 - r;
        }
        if (carry) {
          this.words[i] = carry;
          this.length++;
        }
      }
      if (s !== 0) {
        for (i = this.length - 1; i >= 0; i--) {
          this.words[i + s] = this.words[i];
        }
        for (i = 0; i < s; i++) {
          this.words[i] = 0;
        }
        this.length += s;
      }
      return this.strip();
    };
    BN.prototype.ishln = function ishln(bits) {
      // TODO(indutny): implement me
      assert(this.negative === 0);
      return this.iushln(bits);
    };

    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
      assert(typeof bits === 'number' && bits >= 0);
      var h;
      if (hint) {
        h = (hint - hint % 26) / 26;
      } else {
        h = 0;
      }
      var r = bits % 26;
      var s = Math.min((bits - r) / 26, this.length);
      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
      var maskedWords = extended;
      h -= s;
      h = Math.max(0, h);

      // Extended mode, copy masked part
      if (maskedWords) {
        for (var i = 0; i < s; i++) {
          maskedWords.words[i] = this.words[i];
        }
        maskedWords.length = s;
      }
      if (s === 0) {
        // No-op, we should not move anything at all
      } else if (this.length > s) {
        this.length -= s;
        for (i = 0; i < this.length; i++) {
          this.words[i] = this.words[i + s];
        }
      } else {
        this.words[0] = 0;
        this.length = 1;
      }
      var carry = 0;
      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
        var word = this.words[i] | 0;
        this.words[i] = carry << 26 - r | word >>> r;
        carry = word & mask;
      }

      // Push carried bits as a mask
      if (maskedWords && carry !== 0) {
        maskedWords.words[maskedWords.length++] = carry;
      }
      if (this.length === 0) {
        this.words[0] = 0;
        this.length = 1;
      }
      return this.strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
      // TODO(indutny): implement me
      assert(this.negative === 0);
      return this.iushrn(bits, hint, extended);
    };

    // Shift-left
    BN.prototype.shln = function shln(bits) {
      return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
      return this.clone().iushln(bits);
    };

    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
      return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
      return this.clone().iushrn(bits);
    };

    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
      assert(typeof bit === 'number' && bit >= 0);
      var r = bit % 26;
      var s = (bit - r) / 26;
      var q = 1 << r;

      // Fast case: bit is much higher than all existing words
      if (this.length <= s) return false;

      // Check bit and return
      var w = this.words[s];
      return !!(w & q);
    };

    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
      assert(typeof bits === 'number' && bits >= 0);
      var r = bits % 26;
      var s = (bits - r) / 26;
      assert(this.negative === 0, 'imaskn works only with positive numbers');
      if (this.length <= s) {
        return this;
      }
      if (r !== 0) {
        s++;
      }
      this.length = Math.min(s, this.length);
      if (r !== 0) {
        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
        this.words[this.length - 1] &= mask;
      }
      return this.strip();
    };

    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
      return this.clone().imaskn(bits);
    };

    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
      assert(typeof num === 'number');
      assert(num < 0x4000000);
      if (num < 0) return this.isubn(-num);

      // Possible sign change
      if (this.negative !== 0) {
        if (this.length === 1 && (this.words[0] | 0) < num) {
          this.words[0] = num - (this.words[0] | 0);
          this.negative = 0;
          return this;
        }
        this.negative = 0;
        this.isubn(num);
        this.negative = 1;
        return this;
      }

      // Add without checks
      return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
      this.words[0] += num;

      // Carry
      for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
        this.words[i] -= 0x4000000;
        if (i === this.length - 1) {
          this.words[i + 1] = 1;
        } else {
          this.words[i + 1]++;
        }
      }
      this.length = Math.max(this.length, i + 1);
      return this;
    };

    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
      assert(typeof num === 'number');
      assert(num < 0x4000000);
      if (num < 0) return this.iaddn(-num);
      if (this.negative !== 0) {
        this.negative = 0;
        this.iaddn(num);
        this.negative = 1;
        return this;
      }
      this.words[0] -= num;
      if (this.length === 1 && this.words[0] < 0) {
        this.words[0] = -this.words[0];
        this.negative = 1;
      } else {
        // Carry
        for (var i = 0; i < this.length && this.words[i] < 0; i++) {
          this.words[i] += 0x4000000;
          this.words[i + 1] -= 1;
        }
      }
      return this.strip();
    };
    BN.prototype.addn = function addn(num) {
      return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
      return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
      this.negative = 0;
      return this;
    };
    BN.prototype.abs = function abs() {
      return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
      var len = num.length + shift;
      var i;
      this._expand(len);
      var w;
      var carry = 0;
      for (i = 0; i < num.length; i++) {
        w = (this.words[i + shift] | 0) + carry;
        var right = (num.words[i] | 0) * mul;
        w -= right & 0x3ffffff;
        carry = (w >> 26) - (right / 0x4000000 | 0);
        this.words[i + shift] = w & 0x3ffffff;
      }
      for (; i < this.length - shift; i++) {
        w = (this.words[i + shift] | 0) + carry;
        carry = w >> 26;
        this.words[i + shift] = w & 0x3ffffff;
      }
      if (carry === 0) return this.strip();

      // Subtraction overflow
      assert(carry === -1);
      carry = 0;
      for (i = 0; i < this.length; i++) {
        w = -(this.words[i] | 0) + carry;
        carry = w >> 26;
        this.words[i] = w & 0x3ffffff;
      }
      this.negative = 1;
      return this.strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
      var shift = this.length - num.length;
      var a = this.clone();
      var b = num;

      // Normalize
      var bhi = b.words[b.length - 1] | 0;
      var bhiBits = this._countBits(bhi);
      shift = 26 - bhiBits;
      if (shift !== 0) {
        b = b.ushln(shift);
        a.iushln(shift);
        bhi = b.words[b.length - 1] | 0;
      }

      // Initialize quotient
      var m = a.length - b.length;
      var q;
      if (mode !== 'mod') {
        q = new BN(null);
        q.length = m + 1;
        q.words = new Array(q.length);
        for (var i = 0; i < q.length; i++) {
          q.words[i] = 0;
        }
      }
      var diff = a.clone()._ishlnsubmul(b, 1, m);
      if (diff.negative === 0) {
        a = diff;
        if (q) {
          q.words[m] = 1;
        }
      }
      for (var j = m - 1; j >= 0; j--) {
        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);

        // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
        // (0x7ffffff)
        qj = Math.min(qj / bhi | 0, 0x3ffffff);
        a._ishlnsubmul(b, qj, j);
        while (a.negative !== 0) {
          qj--;
          a.negative = 0;
          a._ishlnsubmul(b, 1, j);
          if (!a.isZero()) {
            a.negative ^= 1;
          }
        }
        if (q) {
          q.words[j] = qj;
        }
      }
      if (q) {
        q.strip();
      }
      a.strip();

      // Denormalize
      if (mode !== 'div' && shift !== 0) {
        a.iushrn(shift);
      }
      return {
        div: q || null,
        mod: a
      };
    };

    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
      assert(!num.isZero());
      if (this.isZero()) {
        return {
          div: new BN(0),
          mod: new BN(0)
        };
      }
      var div, mod, res;
      if (this.negative !== 0 && num.negative === 0) {
        res = this.neg().divmod(num, mode);
        if (mode !== 'mod') {
          div = res.div.neg();
        }
        if (mode !== 'div') {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.iadd(num);
          }
        }
        return {
          div: div,
          mod: mod
        };
      }
      if (this.negative === 0 && num.negative !== 0) {
        res = this.divmod(num.neg(), mode);
        if (mode !== 'mod') {
          div = res.div.neg();
        }
        return {
          div: div,
          mod: res.mod
        };
      }
      if ((this.negative & num.negative) !== 0) {
        res = this.neg().divmod(num.neg(), mode);
        if (mode !== 'div') {
          mod = res.mod.neg();
          if (positive && mod.negative !== 0) {
            mod.isub(num);
          }
        }
        return {
          div: res.div,
          mod: mod
        };
      }

      // Both numbers are positive at this point

      // Strip both numbers to approximate shift value
      if (num.length > this.length || this.cmp(num) < 0) {
        return {
          div: new BN(0),
          mod: this
        };
      }

      // Very short reduction
      if (num.length === 1) {
        if (mode === 'div') {
          return {
            div: this.divn(num.words[0]),
            mod: null
          };
        }
        if (mode === 'mod') {
          return {
            div: null,
            mod: new BN(this.modn(num.words[0]))
          };
        }
        return {
          div: this.divn(num.words[0]),
          mod: new BN(this.modn(num.words[0]))
        };
      }
      return this._wordDiv(num, mode);
    };

    // Find `this` / `num`
    BN.prototype.div = function div(num) {
      return this.divmod(num, 'div', false).div;
    };

    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
      return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
      return this.divmod(num, 'mod', true).mod;
    };

    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
      var dm = this.divmod(num);

      // Fast case - exact division
      if (dm.mod.isZero()) return dm.div;
      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
      var half = num.ushrn(1);
      var r2 = num.andln(1);
      var cmp = mod.cmp(half);

      // Round down
      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

      // Round up
      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modn = function modn(num) {
      assert(num <= 0x3ffffff);
      var p = (1 << 26) % num;
      var acc = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        acc = (p * acc + (this.words[i] | 0)) % num;
      }
      return acc;
    };

    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
      assert(num <= 0x3ffffff);
      var carry = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var w = (this.words[i] | 0) + carry * 0x4000000;
        this.words[i] = w / num | 0;
        carry = w % num;
      }
      return this.strip();
    };
    BN.prototype.divn = function divn(num) {
      return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
      assert(p.negative === 0);
      assert(!p.isZero());
      var x = this;
      var y = p.clone();
      if (x.negative !== 0) {
        x = x.umod(p);
      } else {
        x = x.clone();
      }

      // A * x + B * y = x
      var A = new BN(1);
      var B = new BN(0);

      // C * x + D * y = y
      var C = new BN(0);
      var D = new BN(1);
      var g = 0;
      while (x.isEven() && y.isEven()) {
        x.iushrn(1);
        y.iushrn(1);
        ++g;
      }
      var yp = y.clone();
      var xp = x.clone();
      while (!x.isZero()) {
        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
        if (i > 0) {
          x.iushrn(i);
          while (i-- > 0) {
            if (A.isOdd() || B.isOdd()) {
              A.iadd(yp);
              B.isub(xp);
            }
            A.iushrn(1);
            B.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
        if (j > 0) {
          y.iushrn(j);
          while (j-- > 0) {
            if (C.isOdd() || D.isOdd()) {
              C.iadd(yp);
              D.isub(xp);
            }
            C.iushrn(1);
            D.iushrn(1);
          }
        }
        if (x.cmp(y) >= 0) {
          x.isub(y);
          A.isub(C);
          B.isub(D);
        } else {
          y.isub(x);
          C.isub(A);
          D.isub(B);
        }
      }
      return {
        a: C,
        b: D,
        gcd: y.iushln(g)
      };
    };

    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
      assert(p.negative === 0);
      assert(!p.isZero());
      var a = this;
      var b = p.clone();
      if (a.negative !== 0) {
        a = a.umod(p);
      } else {
        a = a.clone();
      }
      var x1 = new BN(1);
      var x2 = new BN(0);
      var delta = b.clone();
      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
        if (i > 0) {
          a.iushrn(i);
          while (i-- > 0) {
            if (x1.isOdd()) {
              x1.iadd(delta);
            }
            x1.iushrn(1);
          }
        }
        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
        if (j > 0) {
          b.iushrn(j);
          while (j-- > 0) {
            if (x2.isOdd()) {
              x2.iadd(delta);
            }
            x2.iushrn(1);
          }
        }
        if (a.cmp(b) >= 0) {
          a.isub(b);
          x1.isub(x2);
        } else {
          b.isub(a);
          x2.isub(x1);
        }
      }
      var res;
      if (a.cmpn(1) === 0) {
        res = x1;
      } else {
        res = x2;
      }
      if (res.cmpn(0) < 0) {
        res.iadd(p);
      }
      return res;
    };
    BN.prototype.gcd = function gcd(num) {
      if (this.isZero()) return num.abs();
      if (num.isZero()) return this.abs();
      var a = this.clone();
      var b = num.clone();
      a.negative = 0;
      b.negative = 0;

      // Remove common factor of two
      for (var shift = 0; a.isEven() && b.isEven(); shift++) {
        a.iushrn(1);
        b.iushrn(1);
      }
      do {
        while (a.isEven()) {
          a.iushrn(1);
        }
        while (b.isEven()) {
          b.iushrn(1);
        }
        var r = a.cmp(b);
        if (r < 0) {
          // Swap `a` and `b` to make `a` always bigger than `b`
          var t = a;
          a = b;
          b = t;
        } else if (r === 0 || b.cmpn(1) === 0) {
          break;
        }
        a.isub(b);
      } while (true);
      return b.iushln(shift);
    };

    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
      return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
      return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
      return (this.words[0] & 1) === 1;
    };

    // And first word and num
    BN.prototype.andln = function andln(num) {
      return this.words[0] & num;
    };

    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
      assert(typeof bit === 'number');
      var r = bit % 26;
      var s = (bit - r) / 26;
      var q = 1 << r;

      // Fast case: bit is much higher than all existing words
      if (this.length <= s) {
        this._expand(s + 1);
        this.words[s] |= q;
        return this;
      }

      // Add bit and propagate, if needed
      var carry = q;
      for (var i = s; carry !== 0 && i < this.length; i++) {
        var w = this.words[i] | 0;
        w += carry;
        carry = w >>> 26;
        w &= 0x3ffffff;
        this.words[i] = w;
      }
      if (carry !== 0) {
        this.words[i] = carry;
        this.length++;
      }
      return this;
    };
    BN.prototype.isZero = function isZero() {
      return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
      var negative = num < 0;
      if (this.negative !== 0 && !negative) return -1;
      if (this.negative === 0 && negative) return 1;
      this.strip();
      var res;
      if (this.length > 1) {
        res = 1;
      } else {
        if (negative) {
          num = -num;
        }
        assert(num <= 0x3ffffff, 'Number is too big');
        var w = this.words[0] | 0;
        res = w === num ? 0 : w < num ? -1 : 1;
      }
      if (this.negative !== 0) return -res | 0;
      return res;
    };

    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
      if (this.negative !== 0 && num.negative === 0) return -1;
      if (this.negative === 0 && num.negative !== 0) return 1;
      var res = this.ucmp(num);
      if (this.negative !== 0) return -res | 0;
      return res;
    };

    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
      // At this point both numbers have the same sign
      if (this.length > num.length) return 1;
      if (this.length < num.length) return -1;
      var res = 0;
      for (var i = this.length - 1; i >= 0; i--) {
        var a = this.words[i] | 0;
        var b = num.words[i] | 0;
        if (a === b) continue;
        if (a < b) {
          res = -1;
        } else if (a > b) {
          res = 1;
        }
        break;
      }
      return res;
    };
    BN.prototype.gtn = function gtn(num) {
      return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
      return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
      return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
      return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
      return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
      return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
      return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
      return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
      return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
      return this.cmp(num) === 0;
    };

    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
      return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
      assert(!this.red, 'Already a number in reduction context');
      assert(this.negative === 0, 'red works only with positives');
      return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
      assert(this.red, 'fromRed works only with numbers in reduction context');
      return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
      this.red = ctx;
      return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
      assert(!this.red, 'Already a number in reduction context');
      return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
      assert(this.red, 'redAdd works only with red numbers');
      return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
      assert(this.red, 'redIAdd works only with red numbers');
      return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
      assert(this.red, 'redSub works only with red numbers');
      return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
      assert(this.red, 'redISub works only with red numbers');
      return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
      assert(this.red, 'redShl works only with red numbers');
      return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
      assert(this.red, 'redMul works only with red numbers');
      this.red._verify2(this, num);
      return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
      assert(this.red, 'redMul works only with red numbers');
      this.red._verify2(this, num);
      return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
      assert(this.red, 'redSqr works only with red numbers');
      this.red._verify1(this);
      return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
      assert(this.red, 'redISqr works only with red numbers');
      this.red._verify1(this);
      return this.red.isqr(this);
    };

    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
      assert(this.red, 'redSqrt works only with red numbers');
      this.red._verify1(this);
      return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
      assert(this.red, 'redInvm works only with red numbers');
      this.red._verify1(this);
      return this.red.invm(this);
    };

    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
      assert(this.red, 'redNeg works only with red numbers');
      this.red._verify1(this);
      return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
      assert(this.red && !num.red, 'redPow(normalNum)');
      this.red._verify1(this);
      return this.red.pow(this, num);
    };

    // Prime numbers with efficient reduction
    var primes = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };

    // Pseudo-Mersenne prime
    function MPrime(name, p) {
      // P = 2 ^ N - K
      this.name = name;
      this.p = new BN(p, 16);
      this.n = this.p.bitLength();
      this.k = new BN(1).iushln(this.n).isub(this.p);
      this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
      var tmp = new BN(null);
      tmp.words = new Array(Math.ceil(this.n / 13));
      return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
      // Assumes that `num` is less than `P^2`
      // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
      var r = num;
      var rlen;
      do {
        this.split(r, this.tmp);
        r = this.imulK(r);
        r = r.iadd(this.tmp);
        rlen = r.bitLength();
      } while (rlen > this.n);
      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
      if (cmp === 0) {
        r.words[0] = 0;
        r.length = 1;
      } else if (cmp > 0) {
        r.isub(this.p);
      } else {
        if (r.strip !== undefined) {
          // r is BN v4 instance
          r.strip();
        } else {
          // r is BN v5 instance
          r._strip();
        }
      }
      return r;
    };
    MPrime.prototype.split = function split(input, out) {
      input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
      return num.imul(this.k);
    };
    function K256() {
      MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split(input, output) {
      // 256 = 9 * 26 + 22
      var mask = 0x3fffff;
      var outLen = Math.min(input.length, 9);
      for (var i = 0; i < outLen; i++) {
        output.words[i] = input.words[i];
      }
      output.length = outLen;
      if (input.length <= 9) {
        input.words[0] = 0;
        input.length = 1;
        return;
      }

      // Shift by 9 limbs
      var prev = input.words[9];
      output.words[output.length++] = prev & mask;
      for (i = 10; i < input.length; i++) {
        var next = input.words[i] | 0;
        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
        prev = next;
      }
      prev >>>= 22;
      input.words[i - 10] = prev;
      if (prev === 0 && input.length > 10) {
        input.length -= 10;
      } else {
        input.length -= 9;
      }
    };
    K256.prototype.imulK = function imulK(num) {
      // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
      num.words[num.length] = 0;
      num.words[num.length + 1] = 0;
      num.length += 2;

      // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
      var lo = 0;
      for (var i = 0; i < num.length; i++) {
        var w = num.words[i] | 0;
        lo += w * 0x3d1;
        num.words[i] = lo & 0x3ffffff;
        lo = w * 0x40 + (lo / 0x4000000 | 0);
      }

      // Fast length reduction
      if (num.words[num.length - 1] === 0) {
        num.length--;
        if (num.words[num.length - 1] === 0) {
          num.length--;
        }
      }
      return num;
    };
    function P224() {
      MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
      MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
      // 2 ^ 255 - 19
      MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK(num) {
      // K = 0x13
      var carry = 0;
      for (var i = 0; i < num.length; i++) {
        var hi = (num.words[i] | 0) * 0x13 + carry;
        var lo = hi & 0x3ffffff;
        hi >>>= 26;
        num.words[i] = lo;
        carry = hi;
      }
      if (carry !== 0) {
        num.words[num.length++] = carry;
      }
      return num;
    };

    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
      // Cached version of prime
      if (primes[name]) return primes[name];
      var prime;
      if (name === 'k256') {
        prime = new K256();
      } else if (name === 'p224') {
        prime = new P224();
      } else if (name === 'p192') {
        prime = new P192();
      } else if (name === 'p25519') {
        prime = new P25519();
      } else {
        throw new Error('Unknown prime ' + name);
      }
      primes[name] = prime;
      return prime;
    };

    //
    // Base reduction engine
    //
    function Red(m) {
      if (typeof m === 'string') {
        var prime = BN._prime(m);
        this.m = prime.p;
        this.prime = prime;
      } else {
        assert(m.gtn(1), 'modulus must be greater than 1');
        this.m = m;
        this.prime = null;
      }
    }
    Red.prototype._verify1 = function _verify1(a) {
      assert(a.negative === 0, 'red works only with positives');
      assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
      assert((a.negative | b.negative) === 0, 'red works only with positives');
      assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
      if (this.prime) return this.prime.ireduce(a)._forceRed(this);
      return a.umod(this.m)._forceRed(this);
    };
    Red.prototype.neg = function neg(a) {
      if (a.isZero()) {
        return a.clone();
      }
      return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add(a, b) {
      this._verify2(a, b);
      var res = a.add(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd(a, b) {
      this._verify2(a, b);
      var res = a.iadd(b);
      if (res.cmp(this.m) >= 0) {
        res.isub(this.m);
      }
      return res;
    };
    Red.prototype.sub = function sub(a, b) {
      this._verify2(a, b);
      var res = a.sub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Red.prototype.isub = function isub(a, b) {
      this._verify2(a, b);
      var res = a.isub(b);
      if (res.cmpn(0) < 0) {
        res.iadd(this.m);
      }
      return res;
    };
    Red.prototype.shl = function shl(a, num) {
      this._verify1(a);
      return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul(a, b) {
      this._verify2(a, b);
      return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul(a, b) {
      this._verify2(a, b);
      return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr(a) {
      return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr(a) {
      return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
      if (a.isZero()) return a.clone();
      var mod3 = this.m.andln(3);
      assert(mod3 % 2 === 1);

      // Fast case
      if (mod3 === 3) {
        var pow = this.m.add(new BN(1)).iushrn(2);
        return this.pow(a, pow);
      }

      // Tonelli-Shanks algorithm (Totally unoptimized and slow)
      //
      // Find Q and S, that Q * 2 ^ S = (P - 1)
      var q = this.m.subn(1);
      var s = 0;
      while (!q.isZero() && q.andln(1) === 0) {
        s++;
        q.iushrn(1);
      }
      assert(!q.isZero());
      var one = new BN(1).toRed(this);
      var nOne = one.redNeg();

      // Find quadratic non-residue
      // NOTE: Max is such because of generalized Riemann hypothesis.
      var lpow = this.m.subn(1).iushrn(1);
      var z = this.m.bitLength();
      z = new BN(2 * z * z).toRed(this);
      while (this.pow(z, lpow).cmp(nOne) !== 0) {
        z.redIAdd(nOne);
      }
      var c = this.pow(z, q);
      var r = this.pow(a, q.addn(1).iushrn(1));
      var t = this.pow(a, q);
      var m = s;
      while (t.cmp(one) !== 0) {
        var tmp = t;
        for (var i = 0; tmp.cmp(one) !== 0; i++) {
          tmp = tmp.redSqr();
        }
        assert(i < m);
        var b = this.pow(c, new BN(1).iushln(m - i - 1));
        r = r.redMul(b);
        c = b.redSqr();
        t = t.redMul(c);
        m = i;
      }
      return r;
    };
    Red.prototype.invm = function invm(a) {
      var inv = a._invmp(this.m);
      if (inv.negative !== 0) {
        inv.negative = 0;
        return this.imod(inv).redNeg();
      } else {
        return this.imod(inv);
      }
    };
    Red.prototype.pow = function pow(a, num) {
      if (num.isZero()) return new BN(1).toRed(this);
      if (num.cmpn(1) === 0) return a.clone();
      var windowSize = 4;
      var wnd = new Array(1 << windowSize);
      wnd[0] = new BN(1).toRed(this);
      wnd[1] = a;
      for (var i = 2; i < wnd.length; i++) {
        wnd[i] = this.mul(wnd[i - 1], a);
      }
      var res = wnd[0];
      var current = 0;
      var currentLen = 0;
      var start = num.bitLength() % 26;
      if (start === 0) {
        start = 26;
      }
      for (i = num.length - 1; i >= 0; i--) {
        var word = num.words[i];
        for (var j = start - 1; j >= 0; j--) {
          var bit = word >> j & 1;
          if (res !== wnd[0]) {
            res = this.sqr(res);
          }
          if (bit === 0 && current === 0) {
            currentLen = 0;
            continue;
          }
          current <<= 1;
          current |= bit;
          currentLen++;
          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
          res = this.mul(res, wnd[current]);
          currentLen = 0;
          current = 0;
        }
        start = 26;
      }
      return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
      var r = num.umod(this.m);
      return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
      var res = num.clone();
      res.red = null;
      return res;
    };

    //
    // Montgomery method engine
    //

    BN.mont = function mont(num) {
      return new Mont(num);
    };
    function Mont(m) {
      Red.call(this, m);
      this.shift = this.m.bitLength();
      if (this.shift % 26 !== 0) {
        this.shift += 26 - this.shift % 26;
      }
      this.r = new BN(1).iushln(this.shift);
      this.r2 = this.imod(this.r.sqr());
      this.rinv = this.r._invmp(this.m);
      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
      this.minv = this.minv.umod(this.r);
      this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo(num) {
      return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom(num) {
      var r = this.imod(num.mul(this.rinv));
      r.red = null;
      return r;
    };
    Mont.prototype.imul = function imul(a, b) {
      if (a.isZero() || b.isZero()) {
        a.words[0] = 0;
        a.length = 1;
        return a;
      }
      var t = a.imul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.mul = function mul(a, b) {
      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
      var t = a.mul(b);
      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
      var u = t.isub(c).iushrn(this.shift);
      var res = u;
      if (u.cmp(this.m) >= 0) {
        res = u.isub(this.m);
      } else if (u.cmpn(0) < 0) {
        res = u.iadd(this.m);
      }
      return res._forceRed(this);
    };
    Mont.prototype.invm = function invm(a) {
      // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
      var res = this.imod(a._invmp(this.m).mul(this.r2));
      return res._forceRed(this);
    };
  })('object' === 'undefined' || module, commonjsGlobal$1);
})(bn$6);
var bnExports = bn$6.exports;
var bn$5 = /*@__PURE__*/getDefaultExportFromCjs$1(bnExports);

var utils$p = {};

(function (exports) {
  'use strict';

  var utils = exports;
  function toArray(msg, enc) {
    if (Array.isArray(msg)) return msg.slice();
    if (!msg) return [];
    var res = [];
    if (typeof msg !== 'string') {
      for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;
      return res;
    }
    if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0) msg = '0' + msg;
      for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
    } else {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi) res.push(hi, lo);else res.push(lo);
      }
    }
    return res;
  }
  utils.toArray = toArray;
  function zero2(word) {
    if (word.length === 1) return '0' + word;else return word;
  }
  utils.zero2 = zero2;
  function toHex(msg) {
    var res = '';
    for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
    return res;
  }
  utils.toHex = toHex;
  utils.encode = function encode(arr, enc) {
    if (enc === 'hex') return toHex(arr);else return arr;
  };
})(utils$p);
var utils$o = /*@__PURE__*/getDefaultExportFromCjs$1(utils$p);

(function (exports) {
  'use strict';

  var utils = exports;
  var BN = bnExports;
  var minAssert = minimalisticAssert$1;
  var minUtils = utils$p;
  utils.assert = minAssert;
  utils.toArray = minUtils.toArray;
  utils.zero2 = minUtils.zero2;
  utils.toHex = minUtils.toHex;
  utils.encode = minUtils.encode;

  // Represent num in a w-NAF form
  function getNAF(num, w, bits) {
    var naf = new Array(Math.max(num.bitLength(), bits) + 1);
    var i;
    for (i = 0; i < naf.length; i += 1) {
      naf[i] = 0;
    }
    var ws = 1 << w + 1;
    var k = num.clone();
    for (i = 0; i < naf.length; i++) {
      var z;
      var mod = k.andln(ws - 1);
      if (k.isOdd()) {
        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;
        k.isubn(z);
      } else {
        z = 0;
      }
      naf[i] = z;
      k.iushrn(1);
    }
    return naf;
  }
  utils.getNAF = getNAF;

  // Represent k1, k2 in a Joint Sparse Form
  function getJSF(k1, k2) {
    var jsf = [[], []];
    k1 = k1.clone();
    k2 = k2.clone();
    var d1 = 0;
    var d2 = 0;
    var m8;
    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
      // First phase
      var m14 = k1.andln(3) + d1 & 3;
      var m24 = k2.andln(3) + d2 & 3;
      if (m14 === 3) m14 = -1;
      if (m24 === 3) m24 = -1;
      var u1;
      if ((m14 & 1) === 0) {
        u1 = 0;
      } else {
        m8 = k1.andln(7) + d1 & 7;
        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;
      }
      jsf[0].push(u1);
      var u2;
      if ((m24 & 1) === 0) {
        u2 = 0;
      } else {
        m8 = k2.andln(7) + d2 & 7;
        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;
      }
      jsf[1].push(u2);

      // Second phase
      if (2 * d1 === u1 + 1) d1 = 1 - d1;
      if (2 * d2 === u2 + 1) d2 = 1 - d2;
      k1.iushrn(1);
      k2.iushrn(1);
    }
    return jsf;
  }
  utils.getJSF = getJSF;
  function cachedProperty(obj, name, computer) {
    var key = '_' + name;
    obj.prototype[name] = function cachedProperty() {
      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);
    };
  }
  utils.cachedProperty = cachedProperty;
  function parseBytes(bytes) {
    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;
  }
  utils.parseBytes = parseBytes;
  function intFromLE(bytes) {
    return new BN(bytes, 'hex', 'le');
  }
  utils.intFromLE = intFromLE;
})(utils$q);
var utils$n = /*@__PURE__*/getDefaultExportFromCjs$1(utils$q);

var brorand$1 = {exports: {}};

var brorand = brorand$1.exports;
var r$1;
brorand$1.exports = function rand(len) {
  if (!r$1) r$1 = new Rand(null);
  return r$1.generate(len);
};
function Rand(rand) {
  this.rand = rand;
}
var Rand_1 = brorand$1.exports.Rand = Rand;
Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes) return this.rand.getBytes(n);
  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++) res[i] = this.rand.getByte();
  return res;
};
if ((typeof self === "undefined" ? "undefined" : _typeof(self)) === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

    // Safari's WebWorkers do not have `crypto`
  } else if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object') {
    // Old junk
    Rand.prototype._rand = function () {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto$2 = require$$0$3;
    if (typeof crypto$2.randomBytes !== 'function') throw new Error('Not supported');
    Rand.prototype._rand = function _rand(n) {
      return crypto$2.randomBytes(n);
    };
  } catch (e) {}
}
var brorandExports = brorand$1.exports;
var index$7 = /*@__PURE__*/getDefaultExportFromCjs$1(brorandExports);

var curve$1 = {};

'use strict';
var BN$f = bnExports;
var utils$m = utils$q;
var getNAF$1 = utils$m.getNAF;
var getJSF$1 = utils$m.getJSF;
var assert$i = utils$m.assert;
function BaseCurve$1(type, conf) {
  this.type = type;
  this.p = new BN$f(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN$f.red(conf.prime) : BN$f.mont(this.p);

  // Useful for many curves
  this.zero = new BN$f(0).toRed(this.red);
  this.one = new BN$f(1).toRed(this.red);
  this.two = new BN$f(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN$f(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
var base$2 = BaseCurve$1;
BaseCurve$1.prototype.point = function point() {
  throw new Error('Not implemented');
};
BaseCurve$1.prototype.validate = function validate() {
  throw new Error('Not implemented');
};
BaseCurve$1.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert$i(p.precomputed);
  var doubles = p._getDoubles();
  var naf = getNAF$1(k, 1, this._bitLength);
  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }
  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};
BaseCurve$1.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF$1(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;
    if (i >= 0) l++;
    acc = acc.dblp(l);
    if (i < 0) break;
    var z = naf[i];
    assert$i(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
    } else {
      // J +- J
      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};
BaseCurve$1.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF$1(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF$1(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }
    var comb = [points[a], /* 1 */
    null, /* 3 */
    null, /* 5 */
    points[b] /* 7 */];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }
    var index = [-3, /* -1 -1 */
    -1, /* -1 0 */
    -5, /* -1 1 */
    -7, /* 0 -1 */
    0, /* 0 0 */
    7, /* 0 1 */
    5, /* 1 -1 */
    1, /* 1 0 */
    3 /* 1 1 */];
    var jsf = getJSF$1(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;
      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }
  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;
    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0) zero = false;
      }
      if (!zero) break;
      k++;
      i--;
    }
    if (i >= 0) k++;
    acc = acc.dblp(k);
    if (i < 0) break;
    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();
      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++) wnd[i] = null;
  if (jacobianResult) return acc;else return acc.toP();
};
function BasePoint$1(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve$1.BasePoint = BasePoint$1;
BasePoint$1.prototype.eq = function eq(/*other*/
) {
  throw new Error('Not implemented');
};
BasePoint$1.prototype.validate = function validate() {
  return this.curve.validate(this);
};
BaseCurve$1.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils$m.toArray(bytes, enc);
  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06) assert$i(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$i(bytes[bytes.length - 1] % 2 === 1);
    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};
BasePoint$1.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};
BasePoint$1.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);
  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);
  return [0x04].concat(x, this.getY().toArray('be', len));
};
BasePoint$1.prototype.encode = function encode(enc, compact) {
  return utils$m.encode(this._encode(compact), enc);
};
BasePoint$1.prototype.precompute = function precompute(power) {
  if (this.precomputed) return this;
  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;
  return this;
};
BasePoint$1.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed) return false;
  var doubles = this.precomputed.doubles;
  if (!doubles) return false;
  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};
BasePoint$1.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
  var doubles = [this];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++) acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};
BasePoint$1.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
  var res = [this];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};
BasePoint$1.prototype._getBeta = function _getBeta() {
  return null;
};
BasePoint$1.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++) r = r.dbl();
  return r;
};
var base$3 = /*@__PURE__*/getDefaultExportFromCjs$1(base$2);

'use strict';
var utils$l = utils$q;
var BN$e = bnExports;
var inherits$5 = inherits_browserExports;
var Base$5 = base$2;
var assert$h = utils$l.assert;
function ShortCurve$1(conf) {
  Base$5.call(this, 'short', conf);
  this.a = new BN$e(conf.a, 16).toRed(this.red);
  this.b = new BN$e(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();
  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits$5(ShortCurve$1, Base$5);
var _short$1 = ShortCurve$1;
ShortCurve$1.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN$e(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN$e(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert$h(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function (vec) {
      return {
        a: new BN$e(vec.a, 16),
        b: new BN$e(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }
  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};
ShortCurve$1.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN$e.mont(num);
  var tinv = new BN$e(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();
  var s = new BN$e(3).toRed(red).redNeg().redSqrt().redMul(tinv);
  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [l1, l2];
};
ShortCurve$1.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN$e(1);
  var y1 = new BN$e(0);
  var x2 = new BN$e(0);
  var y2 = new BN$e(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;
  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));
    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;
    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;
  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }
  return [{
    a: a1,
    b: b1
  }, {
    a: a2,
    b: b2
  }];
};
ShortCurve$1.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];
  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);
  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return {
    k1: k1,
    k2: k2
  };
};
ShortCurve$1.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN$e(x, 16);
  if (!x.red) x = x.toRed(this.red);
  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
  return this.point(x, y);
};
ShortCurve$1.prototype.validate = function validate(point) {
  if (point.inf) return true;
  var x = point.x;
  var y = point.y;
  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};
ShortCurve$1.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();
    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }
    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};
function Point$5(curve, x, y, isRed) {
  Base$5.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN$e(x, 16);
    this.y = new BN$e(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.y.red) this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits$5(Point$5, Base$5.BasePoint);
ShortCurve$1.prototype.point = function point(x, y, isRed) {
  return new Point$5(this, x, y, isRed);
};
ShortCurve$1.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point$5.fromJSON(this, obj, red);
};
Point$5.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo) return;
  var pre = this.precomputed;
  if (pre && pre.beta) return pre.beta;
  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function endoMul(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};
Point$5.prototype.toJSON = function toJSON() {
  if (!this.precomputed) return [this.x, this.y];
  return [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }];
};
Point$5.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string') obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2]) return res;
  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }
  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [res].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [res].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};
Point$5.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};
Point$5.prototype.isInfinity = function isInfinity() {
  return this.inf;
};
Point$5.prototype.add = function add(p) {
  // O + P = P
  if (this.inf) return p;

  // P + O = P
  if (p.inf) return this;

  // P + P = 2P
  if (this.eq(p)) return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p)) return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);
  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point$5.prototype.dbl = function dbl() {
  if (this.inf) return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);
  var a = this.curve.a;
  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point$5.prototype.getX = function getX() {
  return this.x.fromRed();
};
Point$5.prototype.getY = function getY() {
  return this.y.fromRed();
};
Point$5.prototype.mul = function mul(k) {
  k = new BN$e(k, 16);
  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);
};
Point$5.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);
};
Point$5.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};
Point$5.prototype.eq = function eq(p) {
  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};
Point$5.prototype.neg = function neg(_precompute) {
  if (this.inf) return this;
  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function negate(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};
Point$5.prototype.toJ = function toJ() {
  if (this.inf) return this.curve.jpoint(null, null, null);
  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};
function JPoint$1(curve, x, y, z) {
  Base$5.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN$e(0);
  } else {
    this.x = new BN$e(x, 16);
    this.y = new BN$e(y, 16);
    this.z = new BN$e(z, 16);
  }
  if (!this.x.red) this.x = this.x.toRed(this.curve.red);
  if (!this.y.red) this.y = this.y.toRed(this.curve.red);
  if (!this.z.red) this.z = this.z.toRed(this.curve.red);
  this.zOne = this.z === this.curve.one;
}
inherits$5(JPoint$1, Base$5.BasePoint);
ShortCurve$1.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint$1(this, x, y, z);
};
JPoint$1.prototype.toP = function toP() {
  if (this.isInfinity()) return this.curve.point(null, null);
  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);
  return this.curve.point(ax, ay);
};
JPoint$1.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
JPoint$1.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity()) return p;

  // P + O = P
  if (p.isInfinity()) return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$1.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity()) return p.toJ();

  // P + O = P
  if (p.isInfinity()) return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$1.prototype.dblp = function dblp(pow) {
  if (pow === 0) return this;
  if (this.isInfinity()) return this;
  if (!pow) return this.dbl();
  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++) r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);
    jx = nx;
    jz = nz;
    jyd = dny;
  }
  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};
JPoint$1.prototype.dbl = function dbl() {
  if (this.isInfinity()) return this;
  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();
};
JPoint$1.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$1.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$1.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();
  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);
  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$1.prototype.trpl = function trpl() {
  if (!this.curve.zeroA) return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint$1.prototype.mul = function mul(k, kbase) {
  k = new BN$e(k, kbase);
  return this.curve._wnafMul(this, k);
};
JPoint$1.prototype.eq = function eq(p) {
  if (p.type === 'affine') return this.eq(p.toJ());
  if (this === p) return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};
JPoint$1.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0) return true;
  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0) return false;
    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0) return true;
  }
};
JPoint$1.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';
};
JPoint$1.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};
var short$1 = /*@__PURE__*/getDefaultExportFromCjs$1(_short$1);

'use strict';
var BN$d = bnExports;
var inherits$4 = inherits_browserExports;
var Base$4 = base$2;
var utils$k = utils$q;
function MontCurve$1(conf) {
  Base$4.call(this, 'mont', conf);
  this.a = new BN$d(conf.a, 16).toRed(this.red);
  this.b = new BN$d(conf.b, 16).toRed(this.red);
  this.i4 = new BN$d(4).toRed(this.red).redInvm();
  this.two = new BN$d(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits$4(MontCurve$1, Base$4);
var mont$2 = MontCurve$1;
MontCurve$1.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();
  return y.redSqr().cmp(rhs) === 0;
};
function Point$4(curve, x, z) {
  Base$4.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN$d(x, 16);
    this.z = new BN$d(z, 16);
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.z.red) this.z = this.z.toRed(this.curve.red);
  }
}
inherits$4(Point$4, Base$4.BasePoint);
MontCurve$1.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils$k.toArray(bytes, enc), 1);
};
MontCurve$1.prototype.point = function point(x, z) {
  return new Point$4(this, x, z);
};
MontCurve$1.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point$4.fromJSON(this, obj);
};
Point$4.prototype.precompute = function precompute() {
  // No-op
};
Point$4.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};
Point$4.fromJSON = function fromJSON(curve, obj) {
  return new Point$4(curve, obj[0], obj[1] || curve.one);
};
Point$4.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};
Point$4.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};
Point$4.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};
Point$4.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};
Point$4.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};
Point$4.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) bits.push(t.andln(1));
  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};
Point$4.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};
Point$4.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};
Point$4.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};
Point$4.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};
Point$4.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();
  return this.x.fromRed();
};
var mont$3 = /*@__PURE__*/getDefaultExportFromCjs$1(mont$2);

'use strict';
var utils$j = utils$q;
var BN$c = bnExports;
var inherits$3 = inherits_browserExports;
var Base$3 = base$2;
var assert$g = utils$j.assert;
function EdwardsCurve$1(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;
  Base$3.call(this, 'edwards', conf);
  this.a = new BN$c(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN$c(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN$c(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);
  assert$g(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits$3(EdwardsCurve$1, Base$3);
var edwards$2 = EdwardsCurve$1;
EdwardsCurve$1.prototype._mulA = function _mulA(num) {
  if (this.mOneA) return num.redNeg();else return this.a.redMul(num);
};
EdwardsCurve$1.prototype._mulC = function _mulC(num) {
  if (this.oneC) return num;else return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve$1.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};
EdwardsCurve$1.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN$c(x, 16);
  if (!x.red) x = x.toRed(this.red);
  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));
  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
  return this.point(x, y);
};
EdwardsCurve$1.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN$c(y, 16);
  if (!y.red) y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());
  if (x2.cmp(this.zero) === 0) {
    if (odd) throw new Error('invalid point');else return this.point(this.zero, y);
  }
  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0) throw new Error('invalid point');
  if (x.fromRed().isOdd() !== odd) x = x.redNeg();
  return this.point(x, y);
};
EdwardsCurve$1.prototype.validate = function validate(point) {
  if (point.isInfinity()) return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();
  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
  return lhs.cmp(rhs) === 0;
};
function Point$3(curve, x, y, z, t) {
  Base$3.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN$c(x, 16);
    this.y = new BN$c(y, 16);
    this.z = z ? new BN$c(z, 16) : this.curve.one;
    this.t = t && new BN$c(t, 16);
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.y.red) this.y = this.y.toRed(this.curve.red);
    if (!this.z.red) this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits$3(Point$3, Base$3.BasePoint);
EdwardsCurve$1.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point$3.fromJSON(this, obj);
};
EdwardsCurve$1.prototype.point = function point(x, y, z, t) {
  return new Point$3(this, x, y, z, t);
};
Point$3.fromJSON = function fromJSON(curve, obj) {
  return new Point$3(curve, obj[0], obj[1], obj[2]);
};
Point$3.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};
Point$3.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
};
Point$3.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};
Point$3.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();
  var nx;
  var ny;
  var nz;
  var e;
  var h;
  var j;
  if (this.curve.twisted) {
    // E = a * C
    e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      h = this.z.redSqr();
      // J = F - 2 * H
      j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    e = c.redAdd(d);
    // H = (c * Z1)^2
    h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};
Point$3.prototype.dbl = function dbl() {
  if (this.isInfinity()) return this;

  // Double in extended coordinates
  if (this.curve.extended) return this._extDbl();else return this._projDbl();
};
Point$3.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};
Point$3.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};
Point$3.prototype.add = function add(p) {
  if (this.isInfinity()) return p;
  if (p.isInfinity()) return this;
  if (this.curve.extended) return this._extAdd(p);else return this._projAdd(p);
};
Point$3.prototype.mul = function mul(k) {
  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else return this.curve._wnafMul(this, k);
};
Point$3.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);
};
Point$3.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);
};
Point$3.prototype.normalize = function normalize() {
  if (this.zOne) return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t) this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};
Point$3.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
};
Point$3.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};
Point$3.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};
Point$3.prototype.eq = function eq(other) {
  return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;
};
Point$3.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0) return true;
  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0) return false;
    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0) return true;
  }
};

// Compatibility with BaseCurve
Point$3.prototype.toP = Point$3.prototype.normalize;
Point$3.prototype.mixedAdd = Point$3.prototype.add;
var edwards$3 = /*@__PURE__*/getDefaultExportFromCjs$1(edwards$2);

(function (exports) {
  'use strict';

  var curve = exports;
  curve.base = base$2;
  curve["short"] = _short$1;
  curve.mont = mont$2;
  curve.edwards = edwards$2;
})(curve$1);
var index$6 = /*@__PURE__*/getDefaultExportFromCjs$1(curve$1);

var curves$7 = {};

var secp256k1$1;
var hasRequiredSecp256k1$1;
function requireSecp256k1$1() {
  if (hasRequiredSecp256k1$1) return secp256k1$1;
  hasRequiredSecp256k1$1 = 1;
  secp256k1$1 = {
    doubles: {
      step: 4,
      points: [['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a', 'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'], ['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508', '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'], ['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739', 'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'], ['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640', '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'], ['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c', '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'], ['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda', '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'], ['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa', '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'], ['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0', 'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'], ['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d', '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'], ['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d', 'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'], ['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1', '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'], ['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0', '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'], ['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047', '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'], ['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862', '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'], ['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7', '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'], ['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd', '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'], ['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83', '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'], ['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a', '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'], ['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8', 'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'], ['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d', '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'], ['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725', '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'], ['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754', '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'], ['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c', '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'], ['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6', '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'], ['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39', 'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'], ['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891', '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'], ['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b', 'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'], ['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03', '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'], ['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d', 'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'], ['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070', '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'], ['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4', 'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'], ['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da', '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'], ['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11', '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'], ['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e', 'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'], ['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41', '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'], ['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef', '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'], ['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8', 'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'], ['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d', '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'], ['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96', '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'], ['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd', 'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'], ['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5', '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'], ['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266', '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'], ['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71', '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'], ['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac', 'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'], ['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751', '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'], ['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e', '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'], ['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241', 'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'], ['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3', 'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'], ['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f', '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'], ['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19', 'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'], ['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be', 'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'], ['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9', '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'], ['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2', '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'], ['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13', '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'], ['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c', 'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'], ['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba', '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'], ['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151', 'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'], ['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073', 'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'], ['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458', '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'], ['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b', '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'], ['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366', 'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'], ['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa', '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'], ['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0', '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'], ['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787', '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'], ['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e', 'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]
    },
    naf: {
      wnd: 7,
      points: [['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9', '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'], ['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4', 'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'], ['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc', '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'], ['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe', 'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'], ['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb', 'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'], ['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8', 'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'], ['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e', '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'], ['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34', '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'], ['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c', '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'], ['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5', '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'], ['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f', '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'], ['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714', '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'], ['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729', 'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'], ['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db', '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'], ['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4', 'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'], ['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5', 'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'], ['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479', '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'], ['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d', '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'], ['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f', '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'], ['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb', 'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'], ['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9', 'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'], ['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963', '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'], ['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74', '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'], ['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530', 'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'], ['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b', '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'], ['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247', 'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'], ['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1', 'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'], ['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120', '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'], ['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435', '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'], ['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18', '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'], ['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8', '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'], ['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb', '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'], ['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f', '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'], ['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143', 'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'], ['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba', 'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'], ['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45', 'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'], ['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a', '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'], ['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e', 'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'], ['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8', 'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'], ['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c', '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'], ['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519', 'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'], ['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab', '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'], ['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca', 'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'], ['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf', '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'], ['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610', '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'], ['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4', 'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'], ['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c', 'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'], ['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940', 'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'], ['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980', 'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'], ['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3', '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'], ['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf', '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'], ['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63', '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'], ['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448', 'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'], ['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf', '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'], ['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5', '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'], ['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6', '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'], ['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5', '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'], ['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99', 'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'], ['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51', 'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'], ['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5', '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'], ['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5', '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'], ['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997', '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'], ['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881', '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'], ['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5', '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'], ['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66', 'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'], ['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726', 'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'], ['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede', '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'], ['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94', '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'], ['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31', '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'], ['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51', 'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'], ['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252', 'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'], ['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5', 'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'], ['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b', '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'], ['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4', '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'], ['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f', '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'], ['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889', '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'], ['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246', 'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'], ['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984', '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'], ['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a', 'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'], ['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030', 'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'], ['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197', '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'], ['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593', 'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'], ['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef', '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'], ['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38', '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'], ['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a', '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'], ['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111', '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'], ['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502', '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'], ['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea', 'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'], ['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26', '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'], ['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986', '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'], ['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e', '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'], ['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4', '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'], ['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda', 'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'], ['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859', 'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'], ['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f', 'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'], ['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c', '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'], ['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942', 'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'], ['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a', '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'], ['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80', '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'], ['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d', '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'], ['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1', 'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'], ['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63', 'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'], ['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352', '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'], ['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193', 'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'], ['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00', '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'], ['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58', 'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'], ['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7', 'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'], ['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8', 'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'], ['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e', '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'], ['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d', 'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'], ['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b', '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'], ['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f', 'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'], ['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6', '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'], ['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297', '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'], ['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a', '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'], ['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c', 'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'], ['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52', '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'], ['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb', 'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'], ['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065', 'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'], ['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917', '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'], ['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9', 'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'], ['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3', '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'], ['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57', '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'], ['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66', 'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'], ['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8', '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'], ['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721', '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'], ['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180', '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]
    }
  };
  return secp256k1$1;
}

(function (exports) {
  'use strict';

  var curves = exports;
  var hash = hash$5;
  var curve = curve$1;
  var utils = utils$q;
  var assert = utils.assert;
  function PresetCurve(options) {
    if (options.type === 'short') this.curve = new curve["short"](options);else if (options.type === 'edwards') this.curve = new curve.edwards(options);else this.curve = new curve.mont(options);
    this.g = this.curve.g;
    this.n = this.curve.n;
    this.hash = options.hash;
    assert(this.g.validate(), 'Invalid curve');
    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
  }
  curves.PresetCurve = PresetCurve;
  function defineCurve(name, options) {
    Object.defineProperty(curves, name, {
      configurable: true,
      enumerable: true,
      get: function get() {
        var curve = new PresetCurve(options);
        Object.defineProperty(curves, name, {
          configurable: true,
          enumerable: true,
          value: curve
        });
        return curve;
      }
    });
  }
  defineCurve('p192', {
    type: 'short',
    prime: 'p192',
    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
    hash: hash.sha256,
    gRed: false,
    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']
  });
  defineCurve('p224', {
    type: 'short',
    prime: 'p224',
    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
    hash: hash.sha256,
    gRed: false,
    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']
  });
  defineCurve('p256', {
    type: 'short',
    prime: null,
    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
    hash: hash.sha256,
    gRed: false,
    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']
  });
  defineCurve('p384', {
    type: 'short',
    prime: null,
    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',
    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',
    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
    hash: hash.sha384,
    gRed: false,
    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']
  });
  defineCurve('p521', {
    type: 'short',
    prime: null,
    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',
    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',
    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
    hash: hash.sha512,
    gRed: false,
    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']
  });
  defineCurve('curve25519', {
    type: 'mont',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '76d06',
    b: '1',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash.sha256,
    gRed: false,
    g: ['9']
  });
  defineCurve('ed25519', {
    type: 'edwards',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '-1',
    c: '1',
    // -121665 * (121666^(-1)) (mod P)
    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash.sha256,
    gRed: false,
    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',
    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658']
  });
  var pre;
  try {
    pre = requireSecp256k1$1();
  } catch (e) {
    pre = undefined;
  }
  defineCurve('secp256k1', {
    type: 'short',
    prime: 'k256',
    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
    a: '0',
    b: '7',
    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
    h: '1',
    hash: hash.sha256,
    // Precomputed endomorphism
    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
    basis: [{
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    }, {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }],
    gRed: false,
    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]
  });
})(curves$7);
var curves$6 = /*@__PURE__*/getDefaultExportFromCjs$1(curves$7);

'use strict';
var hash$2 = hash$5;
var utils$i = utils$p;
var assert$f = minimalisticAssert$1;
function HmacDRBG$2(options) {
  if (!(this instanceof HmacDRBG$2)) return new HmacDRBG$2(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;
  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;
  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;
  var entropy = utils$i.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils$i.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils$i.toArray(options.pers, options.persEnc || 'hex');
  assert$f(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
var hmacDrbg = HmacDRBG$2;
HmacDRBG$2.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);
  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }
  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000; // 2^48
};
HmacDRBG$2.prototype._hmac = function hmac() {
  return new hash$2.hmac(this.hash, this.K);
};
HmacDRBG$2.prototype._update = function update(seed) {
  var kmac = this._hmac().update(this.V).update([0x00]);
  if (seed) kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed) return;
  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();
  this.V = this._hmac().update(this.V).digest();
};
HmacDRBG$2.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }
  entropy = utils$i.toArray(entropy, entropyEnc);
  add = utils$i.toArray(add, addEnc);
  assert$f(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._update(entropy.concat(add || []));
  this._reseed = 1;
};
HmacDRBG$2.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils$i.toArray(add, addEnc || 'hex');
    this._update(add);
  }
  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }
  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils$i.encode(res, enc);
};
var hmacDrbg$1 = /*@__PURE__*/getDefaultExportFromCjs$1(hmacDrbg);

'use strict';
var BN$b = bnExports;
var utils$h = utils$q;
var assert$e = utils$h.assert;
function KeyPair$7(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv) this._importPrivate(options.priv, options.privEnc);
  if (options.pub) this._importPublic(options.pub, options.pubEnc);
}
var key$6 = KeyPair$7;
KeyPair$7.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair$7) return pub;
  return new KeyPair$7(ec, {
    pub: pub,
    pubEnc: enc
  });
};
KeyPair$7.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair$7) return priv;
  return new KeyPair$7(ec, {
    priv: priv,
    privEnc: enc
  });
};
KeyPair$7.prototype.validate = function validate() {
  var pub = this.getPublic();
  if (pub.isInfinity()) return {
    result: false,
    reason: 'Invalid public key'
  };
  if (!pub.validate()) return {
    result: false,
    reason: 'Public key is not a point'
  };
  if (!pub.mul(this.ec.curve.n).isInfinity()) return {
    result: false,
    reason: 'Public key * N != O'
  };
  return {
    result: true,
    reason: null
  };
};
KeyPair$7.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }
  if (!this.pub) this.pub = this.ec.g.mul(this.priv);
  if (!enc) return this.pub;
  return this.pub.encode(enc, compact);
};
KeyPair$7.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;
};
KeyPair$7.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN$b(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};
KeyPair$7.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert$e(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {
      assert$e(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair$7.prototype.derive = function derive(pub) {
  if (!pub.validate()) {
    assert$e(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair$7.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};
KeyPair$7.prototype.verify = function verify(msg, signature, options) {
  return this.ec.verify(msg, signature, this, undefined, options);
};
KeyPair$7.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};
var key$7 = /*@__PURE__*/getDefaultExportFromCjs$1(key$6);

'use strict';
var BN$a = bnExports;
var utils$g = utils$q;
var assert$d = utils$g.assert;
function Signature$7(options, enc) {
  if (options instanceof Signature$7) return options;
  if (this._importDER(options, enc)) return;
  assert$d(options.r && options.s, 'Signature without r or s');
  this.r = new BN$a(options.r, 16);
  this.s = new BN$a(options.s, 16);
  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;
}
var signature$6 = Signature$7;
function Position$1() {
  this.place = 0;
}
function getLength$1(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }
  if (buf[p.place] === 0x00) {
    return false;
  }
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }
  p.place = off;
  return val;
}
function rmPadding$1(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}
Signature$7.prototype._importDER = function _importDER(data, enc) {
  data = utils$g.toArray(data, enc);
  var p = new Position$1();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength$1(data, p);
  if (len === false) {
    return false;
  }
  if (len + p.place !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength$1(data, p);
  if (rlen === false) {
    return false;
  }
  if ((data[p.place] & 128) !== 0) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength$1(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  if ((data[p.place] & 128) !== 0) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  this.r = new BN$a(r);
  this.s = new BN$a(s);
  this.recoveryParam = null;
  return true;
};
function constructLength$1(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push(len >>> (octets << 3) & 0xff);
  }
  arr.push(len);
}
Signature$7.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80) r = [0].concat(r);
  // Pad values
  if (s[0] & 0x80) s = [0].concat(s);
  r = rmPadding$1(r);
  s = rmPadding$1(s);
  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [0x02];
  constructLength$1(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength$1(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [0x30];
  constructLength$1(res, backHalf.length);
  res = res.concat(backHalf);
  return utils$g.encode(res, enc);
};
var signature$7 = /*@__PURE__*/getDefaultExportFromCjs$1(signature$6);

'use strict';
var BN$9 = bnExports;
var HmacDRBG$1 = hmacDrbg;
var utils$f = utils$q;
var curves$5 = curves$7;
var rand$1 = brorandExports;
var assert$c = utils$f.assert;
var KeyPair$6 = key$6;
var Signature$6 = signature$6;
function EC$1(options) {
  if (!(this instanceof EC$1)) return new EC$1(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert$c(Object.prototype.hasOwnProperty.call(curves$5, options), 'Unknown curve ' + options);
    options = curves$5[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves$5.PresetCurve) options = {
    curve: options
  };
  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
var ec$1 = EC$1;
EC$1.prototype.keyPair = function keyPair(options) {
  return new KeyPair$6(this, options);
};
EC$1.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair$6.fromPrivate(this, priv, enc);
};
EC$1.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair$6.fromPublic(this, pub, enc);
};
EC$1.prototype.genKeyPair = function genKeyPair(options) {
  if (!options) options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG$1({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand$1(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });
  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN$9(2));
  for (;;) {
    var priv = new BN$9(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0) continue;
    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};
EC$1.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {
  var byteLength;
  if (BN$9.isBN(msg) || typeof msg === 'number') {
    msg = new BN$9(msg, 16);
    byteLength = msg.byteLength();
  } else if (_typeof(msg) === 'object') {
    // BN assumes an array-like input and asserts length
    byteLength = msg.length;
    msg = new BN$9(msg, 16);
  } else {
    // BN converts the value to string
    var str = msg.toString();
    // HEX encoding
    byteLength = str.length + 1 >>> 1;
    msg = new BN$9(str, 16);
  }
  // Allow overriding
  if (typeof bitLength !== 'number') {
    bitLength = byteLength * 8;
  }
  var delta = bitLength - this.n.bitLength();
  if (delta > 0) msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;
};
EC$1.prototype.sign = function sign(msg, key, enc, options) {
  if (_typeof(enc) === 'object') {
    options = enc;
    enc = null;
  }
  if (!options) options = {};
  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(msg, false, options.msgBitLength);

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG$1({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN$9(1));
  for (var iter = 0;; iter++) {
    var k = options.k ? options.k(iter) : new BN$9(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;
    var kp = this.g.mul(k);
    if (kp.isInfinity()) continue;
    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0) continue;
    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0) continue;
    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }
    return new Signature$6({
      r: r,
      s: s,
      recoveryParam: recoveryParam
    });
  }
};
EC$1.prototype.verify = function verify(msg, signature, key, enc, options) {
  if (!options) options = {};
  msg = this._truncateToN(msg, false, options.msgBitLength);
  key = this.keyFromPublic(key, enc);
  signature = new Signature$6(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;
  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity()) return false;
    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity()) return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};
EC$1.prototype.recoverPubKey = function (msg, signature, j, enc) {
  assert$c((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature$6(signature, enc);
  var n = this.n;
  var e = new BN$9(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);
  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};
EC$1.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {
  signature = new Signature$6(signature, enc);
  if (signature.recoveryParam !== null) return signature.recoveryParam;
  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }
    if (Qprime.eq(Q)) return i;
  }
  throw new Error('Unable to find valid recovery factor');
};
var index$5 = /*@__PURE__*/getDefaultExportFromCjs$1(ec$1);

'use strict';
var utils$e = utils$q;
var assert$b = utils$e.assert;
var parseBytes$5 = utils$e.parseBytes;
var cachedProperty$3 = utils$e.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair$5(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes$5(params.secret);
  if (eddsa.isPoint(params.pub)) this._pub = params.pub;else this._pubBytes = parseBytes$5(params.pub);
}
KeyPair$5.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair$5) return pub;
  return new KeyPair$5(eddsa, {
    pub: pub
  });
};
KeyPair$5.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair$5) return secret;
  return new KeyPair$5(eddsa, {
    secret: secret
  });
};
KeyPair$5.prototype.secret = function secret() {
  return this._secret;
};
cachedProperty$3(KeyPair$5, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});
cachedProperty$3(KeyPair$5, 'pub', function pub() {
  if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});
cachedProperty$3(KeyPair$5, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;
  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;
  return a;
});
cachedProperty$3(KeyPair$5, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});
cachedProperty$3(KeyPair$5, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});
cachedProperty$3(KeyPair$5, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});
KeyPair$5.prototype.sign = function sign(message) {
  assert$b(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};
KeyPair$5.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};
KeyPair$5.prototype.getSecret = function getSecret(enc) {
  assert$b(this._secret, 'KeyPair is public only');
  return utils$e.encode(this.secret(), enc);
};
KeyPair$5.prototype.getPublic = function getPublic(enc) {
  return utils$e.encode(this.pubBytes(), enc);
};
var key$4 = KeyPair$5;
var key$5 = /*@__PURE__*/getDefaultExportFromCjs$1(key$4);

'use strict';
var BN$8 = bnExports;
var utils$d = utils$q;
var assert$a = utils$d.assert;
var cachedProperty$2 = utils$d.cachedProperty;
var parseBytes$4 = utils$d.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature$5(eddsa, sig) {
  this.eddsa = eddsa;
  if (_typeof(sig) !== 'object') sig = parseBytes$4(sig);
  if (Array.isArray(sig)) {
    assert$a(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }
  assert$a(sig.R && sig.S, 'Signature without R or S');
  if (eddsa.isPoint(sig.R)) this._R = sig.R;
  if (sig.S instanceof BN$8) this._S = sig.S;
  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}
cachedProperty$2(Signature$5, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});
cachedProperty$2(Signature$5, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});
cachedProperty$2(Signature$5, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});
cachedProperty$2(Signature$5, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});
Signature$5.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};
Signature$5.prototype.toHex = function toHex() {
  return utils$d.encode(this.toBytes(), 'hex').toUpperCase();
};
var signature$4 = Signature$5;
var signature$5 = /*@__PURE__*/getDefaultExportFromCjs$1(signature$4);

'use strict';
var hash$1 = hash$5;
var curves$4 = curves$7;
var utils$c = utils$q;
var assert$9 = utils$c.assert;
var parseBytes$3 = utils$c.parseBytes;
var KeyPair$4 = key$4;
var Signature$4 = signature$4;
function EDDSA$1(curve) {
  assert$9(curve === 'ed25519', 'only tested with ed25519 so far');
  if (!(this instanceof EDDSA$1)) return new EDDSA$1(curve);
  curve = curves$4[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);
  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash$1.sha512;
}
var eddsa$1 = EDDSA$1;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA$1.prototype.sign = function sign(message, secret) {
  message = parseBytes$3(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({
    R: R,
    S: S,
    Rencoded: Rencoded
  });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA$1.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes$3(message);
  sig = this.makeSignature(sig);
  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {
    return false;
  }
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};
EDDSA$1.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++) hash.update(arguments[i]);
  return utils$c.intFromLE(hash.digest()).umod(this.curve.n);
};
EDDSA$1.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair$4.fromPublic(this, pub);
};
EDDSA$1.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair$4.fromSecret(this, secret);
};
EDDSA$1.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature$4) return sig;
  return new Signature$4(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA$1.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};
EDDSA$1.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils$c.parseBytes(bytes);
  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;
  var y = utils$c.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};
EDDSA$1.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};
EDDSA$1.prototype.decodeInt = function decodeInt(bytes) {
  return utils$c.intFromLE(bytes);
};
EDDSA$1.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};
var index$4 = /*@__PURE__*/getDefaultExportFromCjs$1(eddsa$1);

(function (exports) {
  'use strict';

  var elliptic = exports;
  elliptic.version = require$$0$2.version;
  elliptic.utils = utils$q;
  elliptic.rand = brorandExports;
  elliptic.curve = curve$1;
  elliptic.curves = curves$7;

  // Protocols
  elliptic.ec = ec$1;
  elliptic.eddsa = eddsa$1;
})(elliptic$3);
var elliptic$2 = /*@__PURE__*/getDefaultExportFromCjs$1(elliptic$3);

function e$1(s, r) {
  var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "string";
  if (!s[r] || _typeof(s[r]) !== i) throw new Error("Missing or invalid \"".concat(r, "\" param"));
}
function l$2(s, r) {
  var i = !0;
  return r.forEach(function (t) {
    t in s || (i = !1);
  }), i;
}
function f$4(s, r) {
  return Array.isArray(s) ? s.length === r : Object.keys(s).length === r;
}
function w$3(s, r) {
  return Array.isArray(s) ? s.length >= r : Object.keys(s).length >= r;
}
function u$1(s, r, i) {
  return (i.length ? w$3(s, r.length) : f$4(s, r.length)) ? l$2(s, r) : !1;
}
function n$2(s, r) {
  var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "_";
  var t = s.split(i);
  return t[t.length - 1].trim().toLowerCase() === r.trim().toLowerCase();
}
function R$4(s) {
  return b$5(s.method) && a$2(s.params);
}
function b$5(s) {
  return n$2(s, "subscribe");
}
function a$2(s) {
  return u$1(s, ["topic"], []);
}
function P$5(s) {
  return c$1(s.method) && h$2(s.params);
}
function c$1(s) {
  return n$2(s, "publish");
}
function h$2(s) {
  return u$1(s, ["message", "topic", "ttl"], ["prompt", "tag"]);
}
function _$3(s) {
  return o$3(s.method) && p$2(s.params);
}
function o$3(s) {
  return n$2(s, "unsubscribe");
}
function p$2(s) {
  return u$1(s, ["id", "topic"], []);
}
function S$8(s) {
  return m$1(s.method) && d$2(s.params);
}
function m$1(s) {
  return n$2(s, "subscription");
}
function d$2(s) {
  return u$1(s, ["id", "data"], []);
}
function g$4(s) {
  if (!b$5(s.method)) throw new Error("JSON-RPC Request has invalid subscribe method");
  if (!a$2(s.params)) throw new Error("JSON-RPC Request has invalid subscribe params");
  var r = s.params;
  return e$1(r, "topic"), r;
}
function q$1(s) {
  if (!c$1(s.method)) throw new Error("JSON-RPC Request has invalid publish method");
  if (!h$2(s.params)) throw new Error("JSON-RPC Request has invalid publish params");
  var r = s.params;
  return e$1(r, "topic"), e$1(r, "message"), e$1(r, "ttl", "number"), r;
}
function E$2(s) {
  if (!o$3(s.method)) throw new Error("JSON-RPC Request has invalid unsubscribe method");
  if (!p$2(s.params)) throw new Error("JSON-RPC Request has invalid unsubscribe params");
  var r = s.params;
  return e$1(r, "id"), r;
}
function k$3(s) {
  if (!m$1(s.method)) throw new Error("JSON-RPC Request has invalid subscription method");
  if (!d$2(s.params)) throw new Error("JSON-RPC Request has invalid subscription params");
  var r = s.params;
  return e$1(r, "id"), e$1(r, "data"), r;
}
var C$4 = {
  waku: {
    publish: "waku_publish",
    batchPublish: "waku_batchPublish",
    subscribe: "waku_subscribe",
    batchSubscribe: "waku_batchSubscribe",
    subscription: "waku_subscription",
    unsubscribe: "waku_unsubscribe",
    batchUnsubscribe: "waku_batchUnsubscribe",
    batchFetchMessages: "waku_batchFetchMessages"
  },
  irn: {
    publish: "irn_publish",
    batchPublish: "irn_batchPublish",
    subscribe: "irn_subscribe",
    batchSubscribe: "irn_batchSubscribe",
    subscription: "irn_subscription",
    unsubscribe: "irn_unsubscribe",
    batchUnsubscribe: "irn_batchUnsubscribe",
    batchFetchMessages: "irn_batchFetchMessages"
  },
  iridium: {
    publish: "iridium_publish",
    batchPublish: "iridium_batchPublish",
    subscribe: "iridium_subscribe",
    batchSubscribe: "iridium_batchSubscribe",
    subscription: "iridium_subscription",
    unsubscribe: "iridium_unsubscribe",
    batchUnsubscribe: "iridium_batchUnsubscribe",
    batchFetchMessages: "iridium_batchFetchMessages"
  }
};

var H$3 = ":";
function re$4(e) {
  var _e$split = e.split(H$3),
    _e$split2 = _slicedToArray(_e$split, 2),
    n = _e$split2[0],
    t = _e$split2[1];
  return {
    namespace: n,
    reference: t
  };
}
function ke$2(e) {
  var n = e.namespace,
    t = e.reference;
  return [n, t].join(H$3);
}
function oe$3(e) {
  var _e$split3 = e.split(H$3),
    _e$split4 = _slicedToArray(_e$split3, 3),
    n = _e$split4[0],
    t = _e$split4[1],
    r = _e$split4[2];
  return {
    namespace: n,
    reference: t,
    address: r
  };
}
function De$4(e) {
  var n = e.namespace,
    t = e.reference,
    r = e.address;
  return [n, t, r].join(H$3);
}
function se$5(e, n) {
  var t = [];
  return e.forEach(function (r) {
    var o = n(r);
    t.includes(o) || t.push(o);
  }), t;
}
function xe$2(e) {
  var _oe = oe$3(e),
    n = _oe.address;
  return n;
}
function Ve$1(e) {
  var _oe2 = oe$3(e),
    n = _oe2.namespace,
    t = _oe2.reference;
  return ke$2({
    namespace: n,
    reference: t
  });
}
function ft$4(e, n) {
  var _re = re$4(n),
    t = _re.namespace,
    r = _re.reference;
  return De$4({
    namespace: t,
    reference: r,
    address: e
  });
}
function pt$5(e) {
  return se$5(e, xe$2);
}
function Me$1(e) {
  return se$5(e, Ve$1);
}
function mt$4(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var t = [];
  return Object.keys(e).forEach(function (r) {
    if (n.length && !n.includes(r)) return;
    var o = e[r];
    t.push.apply(t, _toConsumableArray(o.accounts));
  }), t;
}
function ht$5(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var t = [];
  return Object.keys(e).forEach(function (r) {
    if (n.length && !n.includes(r)) return;
    var o = e[r];
    t.push.apply(t, _toConsumableArray(Me$1(o.accounts)));
  }), t;
}
function yt$5(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var t = [];
  return Object.keys(e).forEach(function (r) {
    if (n.length && !n.includes(r)) return;
    var o = e[r];
    t.push.apply(t, _toConsumableArray(W$4(r, o)));
  }), t;
}
function W$4(e, n) {
  return e.includes(":") ? [e] : n.chains || [];
}
var gt$5 = Object.defineProperty,
  Ke$1 = Object.getOwnPropertySymbols,
  vt$4 = Object.prototype.hasOwnProperty,
  bt$4 = Object.prototype.propertyIsEnumerable,
  Le$2 = function Le(e, n, t) {
    return n in e ? gt$5(e, n, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : e[n] = t;
  },
  Fe$1 = function Fe(e, n) {
    for (var t in n || (n = {})) vt$4.call(n, t) && Le$2(e, t, n[t]);
    if (Ke$1) {
      var _iterator = _createForOfIteratorHelper(Ke$1(n)),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var t = _step.value;
          bt$4.call(n, t) && Le$2(e, t, n[t]);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var qe$1 = "ReactNative",
  y$3 = {
    reactNative: "react-native",
    node: "node",
    browser: "browser",
    unknown: "unknown"
  },
  J$4 = " ",
  Et$4 = ":",
  Be$1 = "/",
  ie$5 = 2,
  wt$4 = 1e3,
  He$2 = "js";
function ce$2() {
  return (typeof process === "undefined" ? "undefined" : _typeof(process)) < "u" && _typeof(process.versions) < "u" && _typeof(process.versions.node) < "u";
}
function _$2() {
  return !getDocument_1() && !!getNavigator_1() && navigator.product === qe$1;
}
function V$5() {
  return !ce$2() && !!getNavigator_1() && !!getDocument_1();
}
function P$4() {
  return _$2() ? y$3.reactNative : ce$2() ? y$3.node : V$5() ? y$3.browser : y$3.unknown;
}
function Ot$4() {
  var e;
  try {
    return _$2() && (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && _typeof(global == null ? void 0 : global.Application) < "u" ? (e = global.Application) == null ? void 0 : e.applicationId : void 0;
  } catch (_unused) {
    return;
  }
}
function We$4(e, n) {
  var t = queryString.parse(e);
  return t = Fe$1(Fe$1({}, t), n), e = queryString.stringify(t), e;
}
function Nt$4() {
  return getWindowMetadata_1() || {
    name: "",
    description: "",
    url: "",
    icons: [""]
  };
}
function St$4(e, n) {
  var t;
  var r = P$4(),
    o = {
      protocol: e,
      version: n,
      env: r
    };
  return r === "browser" && (o.host = ((t = getLocation_1()) == null ? void 0 : t.host) || "unknown"), o;
}
function Je$3() {
  if (P$4() === y$3.reactNative && (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && _typeof(global == null ? void 0 : global.Platform) < "u") {
    var _global$Platform = global.Platform,
      t = _global$Platform.OS,
      r = _global$Platform.Version;
    return [t, r].join("-");
  }
  var e = detect();
  if (e === null) return "unknown";
  var n = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
  return e.type === "browser" ? [n, e.name, e.version].join("-") : [n, e.version].join("-");
}
function ze$1() {
  var e;
  var n = P$4();
  return n === y$3.browser ? [n, ((e = getLocation_1()) == null ? void 0 : e.host) || "unknown"].join(":") : n;
}
function Ge$2(e, n, t) {
  var r = Je$3(),
    o = ze$1();
  return [[e, n].join("-"), [He$2, t].join("-"), r, o].join("/");
}
function $t$4(_ref) {
  var e = _ref.protocol,
    n = _ref.version,
    t = _ref.relayUrl,
    r = _ref.sdkVersion,
    o = _ref.auth,
    s = _ref.projectId,
    i = _ref.useOnCloseEvent,
    u = _ref.bundleId;
  var l = t.split("?"),
    c = Ge$2(e, n, r),
    d = {
      auth: o,
      ua: c,
      projectId: s,
      useOnCloseEvent: i || void 0,
      origin: u || void 0
    },
    a = We$4(l[1] || "", d);
  return l[0] + "?" + a;
}
function Rt$4(e) {
  var n = (e.match(/^[^:]+(?=:\/\/)/gi) || [])[0];
  var t = _typeof(n) < "u" ? e.split("://")[1] : e;
  return n = n === "wss" ? "https" : "http", [n, t].join("://");
}
function It$4(e, n, t) {
  if (!e[n] || _typeof(e[n]) !== t) throw new Error("Missing or invalid \"".concat(n, "\" param"));
}
function Ye$4(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ie$5;
  return Qe$4(e.split(Be$1), n);
}
function jt$4(e) {
  return Ye$4(e).join(J$4);
}
function $$5(e, n) {
  return e.filter(function (t) {
    return n.includes(t);
  }).length === e.length;
}
function Qe$4(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ie$5;
  return e.slice(Math.max(e.length - n, 0));
}
function Tt$4(e) {
  return Object.fromEntries(e.entries());
}
function Pt$4(e) {
  return new Map(Object.entries(e));
}
function At$4(e, n) {
  var t = {};
  return Object.keys(e).forEach(function (r) {
    t[r] = n(e[r]);
  }), t;
}
var Ct$4 = function Ct(e) {
  return e;
};
function Ze$4(e) {
  return e.trim().replace(/^\w/, function (n) {
    return n.toUpperCase();
  });
}
function Ut$4(e) {
  return e.split(J$4).map(function (n) {
    return Ze$4(n);
  }).join(J$4);
}
function _t$4() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cjs$3.FIVE_MINUTES;
  var n = arguments.length > 1 ? arguments[1] : undefined;
  var t = cjs$3.toMiliseconds(e || cjs$3.FIVE_MINUTES);
  var r, o, s;
  return {
    resolve: function resolve(i) {
      s && r && (clearTimeout(s), r(i));
    },
    reject: function reject(i) {
      s && o && (clearTimeout(s), o(i));
    },
    done: function done() {
      return new Promise(function (i, u) {
        s = setTimeout(function () {
          u(new Error(n));
        }, t), r = i, o = u;
      });
    }
  };
}
function kt$4(e, n, t) {
  return new Promise(/*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(r, o) {
      var s, i;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            s = setTimeout(function () {
              return o(new Error(t));
            }, n);
            _context.prev = 1;
            _context.next = 4;
            return e;
          case 4:
            i = _context.sent;
            r(i);
            _context.next = 11;
            break;
          case 8:
            _context.prev = 8;
            _context.t0 = _context["catch"](1);
            o(_context.t0);
          case 11:
            clearTimeout(s);
          case 12:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[1, 8]]);
    }));
    return function (_x, _x2) {
      return _ref2.apply(this, arguments);
    };
  }());
}
function ae$3(e, n) {
  if (typeof n == "string" && n.startsWith("".concat(e, ":"))) return n;
  if (e.toLowerCase() === "topic") {
    if (typeof n != "string") throw new Error('Value must be "string" for expirer target type: topic');
    return "topic:".concat(n);
  } else if (e.toLowerCase() === "id") {
    if (typeof n != "number") throw new Error('Value must be "number" for expirer target type: id');
    return "id:".concat(n);
  }
  throw new Error("Unknown expirer target type: ".concat(e));
}
function Dt$4(e) {
  return ae$3("topic", e);
}
function xt$4(e) {
  return ae$3("id", e);
}
function Vt$4(e) {
  var _e$split5 = e.split(":"),
    _e$split6 = _slicedToArray(_e$split5, 2),
    n = _e$split6[0],
    t = _e$split6[1],
    r = {
      id: void 0,
      topic: void 0
    };
  if (n === "topic" && typeof t == "string") r.topic = t;else if (n === "id" && Number.isInteger(Number(t))) r.id = Number(t);else throw new Error("Invalid target, expected id:number or topic:string, got ".concat(n, ":").concat(t));
  return r;
}
function Mt$4(e, n) {
  return cjs$3.fromMiliseconds((n || Date.now()) + cjs$3.toMiliseconds(e));
}
function Kt$4(e) {
  return Date.now() >= cjs$3.toMiliseconds(e);
}
function Lt$4(e, n) {
  return "".concat(e).concat(n ? ":".concat(n) : "");
}
function N$1() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return _toConsumableArray(new Set([].concat(_toConsumableArray(e), _toConsumableArray(n))));
}
function Ft$4(_x3) {
  return _Ft$1.apply(this, arguments);
}
function _Ft$1() {
  _Ft$1 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3) {
    var e, n, t, r, o, s, i, u;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          e = _ref3.id, n = _ref3.topic, t = _ref3.wcDeepLink;
          _context2.prev = 1;
          if (t) {
            _context2.next = 4;
            break;
          }
          return _context2.abrupt("return");
        case 4:
          o = typeof t == "string" ? JSON.parse(t) : t, s = o === null || o === void 0 ? void 0 : o.href;
          if (!(typeof s != "string")) {
            _context2.next = 7;
            break;
          }
          return _context2.abrupt("return");
        case 7:
          i = Xe$3(s, e, n), u = P$4();
          if (!(u === y$3.browser)) {
            _context2.next = 15;
            break;
          }
          if ((r = getDocument_1()) != null && r.hasFocus()) {
            _context2.next = 12;
            break;
          }
          console.warn("Document does not have focus, skipping deeplink.");
          return _context2.abrupt("return");
        case 12:
          i.startsWith("https://") || i.startsWith("http://") ? window.open(i, "_blank", "noreferrer noopener") : window.open(i, en$3() ? "_blank" : "_self", "noreferrer noopener");
          _context2.next = 19;
          break;
        case 15:
          _context2.t0 = u === y$3.reactNative && _typeof(global == null ? void 0 : global.Linking) < "u";
          if (!_context2.t0) {
            _context2.next = 19;
            break;
          }
          _context2.next = 19;
          return global.Linking.openURL(i);
        case 19:
          _context2.next = 24;
          break;
        case 21:
          _context2.prev = 21;
          _context2.t1 = _context2["catch"](1);
          console.error(_context2.t1);
        case 24:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[1, 21]]);
  }));
  return _Ft$1.apply(this, arguments);
}
function Xe$3(e, n, t) {
  var r = "requestId=".concat(n, "&sessionTopic=").concat(t);
  e.endsWith("/") && (e = e.slice(0, -1));
  var o = "".concat(e);
  if (e.startsWith("https://t.me")) {
    var s = e.includes("?") ? "&startapp=" : "?startapp=";
    o = "".concat(o).concat(s).concat(nn$3(r, !0));
  } else o = "".concat(o, "/wc?").concat(r);
  return o;
}
function qt$4(_x4, _x5) {
  return _qt$1.apply(this, arguments);
}
function _qt$1() {
  _qt$1 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e, n) {
    var t;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          t = "";
          _context3.prev = 1;
          if (!(V$5() && (t = localStorage.getItem(n), t))) {
            _context3.next = 4;
            break;
          }
          return _context3.abrupt("return", t);
        case 4:
          _context3.next = 6;
          return e.getItem(n);
        case 6:
          t = _context3.sent;
          _context3.next = 12;
          break;
        case 9:
          _context3.prev = 9;
          _context3.t0 = _context3["catch"](1);
          console.error(_context3.t0);
        case 12:
          return _context3.abrupt("return", t);
        case 13:
        case "end":
          return _context3.stop();
      }
    }, _callee3, null, [[1, 9]]);
  }));
  return _qt$1.apply(this, arguments);
}
function ue$2(e, n) {
  return e.filter(function (t) {
    return n.includes(t);
  });
}
function Bt$4(e, n) {
  if (!e.includes(n)) return null;
  var t = e.split(/([&,?,=])/),
    r = t.indexOf(n);
  return t[r + 2];
}
function Ht$4() {
  return (typeof crypto === "undefined" ? "undefined" : _typeof(crypto)) < "u" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) {
    var n = Math.random() * 16 | 0;
    return (e === "x" ? n : n & 3 | 8).toString(16);
  });
}
function Wt$4() {
  return (typeof process === "undefined" ? "undefined" : _typeof(process)) < "u" && process.env.IS_VITEST === "true";
}
function en$3() {
  return (typeof window === "undefined" ? "undefined" : _typeof(window)) < "u" && (!!window.TelegramWebviewProxy || !!window.Telegram || !!window.TelegramWebviewProxyProto);
}
function nn$3(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
  var t = Buffer.from(e).toString("base64");
  return n ? t.replace(/[=]/g, "") : t;
}
function le$2(e) {
  return Buffer.from(e, "base64").toString("utf-8");
}
var Jt$4 = "https://rpc.walletconnect.org/v1";
function tn$3(_x6, _x7, _x8, _x9, _x10, _x11) {
  return _tn$1.apply(this, arguments);
}
function _tn$1() {
  _tn$1 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e, n, t, r, o, s) {
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          _context4.t0 = t.t;
          _context4.next = _context4.t0 === "eip191" ? 3 : _context4.t0 === "eip1271" ? 4 : 7;
          break;
        case 3:
          return _context4.abrupt("return", rn$3(e, n, t.s));
        case 4:
          _context4.next = 6;
          return on$3(e, n, t.s, r, o, s);
        case 6:
          return _context4.abrupt("return", _context4.sent);
        case 7:
          throw new Error("verifySignature failed: Attempted to verify CacaoSignature with unknown type: ".concat(t.t));
        case 8:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return _tn$1.apply(this, arguments);
}
function rn$3(e, n, t) {
  return recoverAddress(hashMessage(n), t).toLowerCase() === e.toLowerCase();
}
function on$3(_x12, _x13, _x14, _x15, _x16, _x17) {
  return _on$1.apply(this, arguments);
}
function _on$1() {
  _on$1 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e, n, t, r, o, s) {
    var i, u, l, c, d, a, f, h, _yield$h$json, p;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          i = re$4(r);
          if (!(!i.namespace || !i.reference)) {
            _context5.next = 3;
            break;
          }
          throw new Error("isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ".concat(r));
        case 3:
          _context5.prev = 3;
          u = "0x1626ba7e";
          l = "0000000000000000000000000000000000000000000000000000000000000040";
          c = "0000000000000000000000000000000000000000000000000000000000000041";
          d = t.substring(2);
          a = hashMessage(n).substring(2);
          f = u + a + l + c + d;
          _context5.next = 12;
          return fetch("".concat(s || Jt$4, "/?chainId=").concat(r, "&projectId=").concat(o), {
            method: "POST",
            body: JSON.stringify({
              id: zt$4(),
              jsonrpc: "2.0",
              method: "eth_call",
              params: [{
                to: e,
                data: f
              }, "latest"]
            })
          });
        case 12:
          h = _context5.sent;
          _context5.next = 15;
          return h.json();
        case 15:
          _yield$h$json = _context5.sent;
          p = _yield$h$json.result;
          return _context5.abrupt("return", p ? p.slice(0, u.length).toLowerCase() === u.toLowerCase() : !1);
        case 20:
          _context5.prev = 20;
          _context5.t0 = _context5["catch"](3);
          return _context5.abrupt("return", (console.error("isValidEip1271Signature: ", _context5.t0), !1));
        case 23:
        case "end":
          return _context5.stop();
      }
    }, _callee5, null, [[3, 20]]);
  }));
  return _on$1.apply(this, arguments);
}
function zt$4() {
  return Date.now() + Math.floor(Math.random() * 1e3);
}
var Gt$4 = Object.defineProperty,
  Yt$4 = Object.defineProperties,
  Qt$4 = Object.getOwnPropertyDescriptors,
  sn$3 = Object.getOwnPropertySymbols,
  Zt$4 = Object.prototype.hasOwnProperty,
  Xt$4 = Object.prototype.propertyIsEnumerable,
  cn$3 = function cn(e, n, t) {
    return n in e ? Gt$4(e, n, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : e[n] = t;
  },
  de$2 = function de(e, n) {
    for (var t in n || (n = {})) Zt$4.call(n, t) && cn$3(e, t, n[t]);
    if (sn$3) {
      var _iterator2 = _createForOfIteratorHelper(sn$3(n)),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var t = _step2.value;
          Xt$4.call(n, t) && cn$3(e, t, n[t]);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    return e;
  },
  an$3 = function an(e, n) {
    return Yt$4(e, Qt$4(n));
  };
var er$4 = "did:pkh:",
  z$6 = function z(e) {
    return e === null || e === void 0 ? void 0 : e.split(":");
  },
  un$3 = function un(e) {
    var n = e && z$6(e);
    if (n) return e.includes(er$4) ? n[3] : n[1];
  },
  ln$3 = function ln(e) {
    var n = e && z$6(e);
    if (n) return n[2] + ":" + n[3];
  },
  fe$4 = function fe(e) {
    var n = e && z$6(e);
    if (n) return n.pop();
  };
function nr$4(_x18) {
  return _nr$1.apply(this, arguments);
}
function _nr$1() {
  _nr$1 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(e) {
    var n, t, r, o, s, i;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          n = e.cacao, t = e.projectId, r = n.s, o = n.p, s = dn$3(o, o.iss), i = fe$4(o.iss);
          _context6.next = 3;
          return tn$3(i, s, r, ln$3(o.iss), t);
        case 3:
          return _context6.abrupt("return", _context6.sent);
        case 4:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return _nr$1.apply(this, arguments);
}
var dn$3 = function dn(e, n) {
  var t = "".concat(e.domain, " wants you to sign in with your Ethereum account:"),
    r = fe$4(n);
  if (!e.aud && !e.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
  var o = e.statement || void 0;
  var s = "URI: ".concat(e.aud || e.uri),
    i = "Version: ".concat(e.version),
    u = "Chain ID: ".concat(un$3(n)),
    l = "Nonce: ".concat(e.nonce),
    c = "Issued At: ".concat(e.iat),
    d = e.exp ? "Expiration Time: ".concat(e.exp) : void 0,
    a = e.nbf ? "Not Before: ".concat(e.nbf) : void 0,
    f = e.requestId ? "Request ID: ".concat(e.requestId) : void 0,
    h = e.resources ? "Resources:".concat(e.resources.map(function (m) {
      return "\n- ".concat(m);
    }).join("")) : void 0,
    p = Y$3(e.resources);
  if (p) {
    var m = R$3(p);
    o = he$2(o, m);
  }
  return [t, r, "", o, "", s, i, u, l, c, d, a, f, h].filter(function (m) {
    return m != null;
  }).join("\n");
};
function tr$4(e, n, t) {
  return t.includes("did:pkh:") || (t = "did:pkh:".concat(t)), {
    h: {
      t: "caip122"
    },
    p: {
      iss: t,
      domain: e.domain,
      aud: e.aud,
      version: e.version,
      nonce: e.nonce,
      iat: e.iat,
      statement: e.statement,
      requestId: e.requestId,
      resources: e.resources,
      nbf: e.nbf,
      exp: e.exp
    },
    s: n
  };
}
function rr$4(e) {
  var n;
  var t = e.authPayload,
    r = e.chains,
    o = e.methods,
    s = t.statement || "";
  if (!(r != null && r.length)) return t;
  var i = t.chains,
    u = ue$2(i, r);
  if (!(u != null && u.length)) throw new Error("No supported chains");
  var l = fn$1(t.resources);
  if (!l) return t;
  O$5(l);
  var c = pn$3(l, "eip155");
  var d = (t === null || t === void 0 ? void 0 : t.resources) || [];
  if (c != null && c.length) {
    var a = mn$3(c),
      f = ue$2(a, o);
    if (!(f != null && f.length)) throw new Error("Supported methods don't satisfy the requested: ".concat(JSON.stringify(a), ", supported: ").concat(JSON.stringify(o)));
    var h = pe$2("request", f, {
        chains: u
      }),
      p = vn$1(l, "eip155", h);
    d = ((n = t === null || t === void 0 ? void 0 : t.resources) == null ? void 0 : n.slice(0, -1)) || [], d.push(G$3(p));
  }
  return an$3(de$2({}, t), {
    statement: En$1(s, Y$3(d)),
    chains: u,
    resources: t != null && t.resources || d.length > 0 ? d : void 0
  });
}
function fn$1(e) {
  var n = Y$3(e);
  if (n && me$5(n)) return R$3(n);
}
function or$4(e, n) {
  var t;
  return (t = e === null || e === void 0 ? void 0 : e.att) == null ? void 0 : t.hasOwnProperty(n);
}
function pn$3(e, n) {
  var t, r;
  return (t = e === null || e === void 0 ? void 0 : e.att) != null && t[n] ? Object.keys((r = e === null || e === void 0 ? void 0 : e.att) == null ? void 0 : r[n]) : [];
}
function sr$4(e) {
  return (e === null || e === void 0 ? void 0 : e.map(function (n) {
    return Object.keys(n);
  })) || [];
}
function mn$3(e) {
  return (e === null || e === void 0 ? void 0 : e.map(function (n) {
    var t;
    return (t = n.split("/")) == null ? void 0 : t[1];
  })) || [];
}
function hn$3(e) {
  return Buffer.from(JSON.stringify(e)).toString("base64");
}
function yn$3(e) {
  return JSON.parse(Buffer.from(e, "base64").toString("utf-8"));
}
function O$5(e) {
  if (!e) throw new Error("No recap provided, value is undefined");
  if (!e.att) throw new Error("No `att` property found");
  var n = Object.keys(e.att);
  if (!(n != null && n.length)) throw new Error("No resources found in `att` property");
  n.forEach(function (t) {
    var r = e.att[t];
    if (Array.isArray(r)) throw new Error("Resource must be an object: ".concat(t));
    if (_typeof(r) != "object") throw new Error("Resource must be an object: ".concat(t));
    if (!Object.keys(r).length) throw new Error("Resource object is empty: ".concat(t));
    Object.keys(r).forEach(function (o) {
      var s = r[o];
      if (!Array.isArray(s)) throw new Error("Ability limits ".concat(o, " must be an array of objects, found: ").concat(s));
      if (!s.length) throw new Error("Value of ".concat(o, " is empty array, must be an array with objects"));
      s.forEach(function (i) {
        if (_typeof(i) != "object") throw new Error("Ability limits (".concat(o, ") must be an array of objects, found: ").concat(i));
      });
    });
  });
}
function gn$3(e, n, t) {
  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  return t !== null && t !== void 0 && t.sort(function (o, s) {
    return o.localeCompare(s);
  }), {
    att: _defineProperty({}, e, pe$2(n, t, r))
  };
}
function vn$1(e, n, t) {
  var r;
  return e.att[n] = de$2({}, t), ((r = Object.keys(e.att)) == null ? void 0 : r.sort(function (o, s) {
    return o.localeCompare(s);
  })).reduce(function (o, s) {
    return o.att[s] = e.att[s], o;
  }, {
    att: {}
  });
}
function pe$2(e, n) {
  var _n2;
  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  n = (_n2 = n) === null || _n2 === void 0 ? void 0 : _n2.sort(function (o, s) {
    return o.localeCompare(s);
  });
  var r = n.map(function (o) {
    return _defineProperty({}, "".concat(e, "/").concat(o), [t]);
  });
  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(r)));
}
function G$3(e) {
  return O$5(e), "urn:recap:".concat(hn$3(e).replace(/=/g, ""));
}
function R$3(e) {
  var n = yn$3(e.replace("urn:recap:", ""));
  return O$5(n), n;
}
function ir$4(e, n, t) {
  var r = gn$3(e, n, t);
  return G$3(r);
}
function me$5(e) {
  return e && e.includes("urn:recap:");
}
function cr$4(e, n) {
  var t = R$3(e),
    r = R$3(n),
    o = bn$3(t, r);
  return G$3(o);
}
function bn$3(e, n) {
  O$5(e), O$5(n);
  var t = Object.keys(e.att).concat(Object.keys(n.att)).sort(function (o, s) {
      return o.localeCompare(s);
    }),
    r = {
      att: {}
    };
  return t.forEach(function (o) {
    var s, i;
    Object.keys(((s = e.att) == null ? void 0 : s[o]) || {}).concat(Object.keys(((i = n.att) == null ? void 0 : i[o]) || {})).sort(function (u, l) {
      return u.localeCompare(l);
    }).forEach(function (u) {
      var l, c;
      r.att[o] = an$3(de$2({}, r.att[o]), _defineProperty({}, u, ((l = e.att[o]) == null ? void 0 : l[u]) || ((c = n.att[o]) == null ? void 0 : c[u])));
    });
  }), r;
}
function he$2() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var n = arguments.length > 1 ? arguments[1] : undefined;
  O$5(n);
  var t = "I further authorize the stated URI to perform the following actions on my behalf: ";
  if (e.includes(t)) return e;
  var r = [];
  var o = 0;
  Object.keys(n.att).forEach(function (u) {
    var l = Object.keys(n.att[u]).map(function (a) {
      return {
        ability: a.split("/")[0],
        action: a.split("/")[1]
      };
    });
    l.sort(function (a, f) {
      return a.action.localeCompare(f.action);
    });
    var c = {};
    l.forEach(function (a) {
      c[a.ability] || (c[a.ability] = []), c[a.ability].push(a.action);
    });
    var d = Object.keys(c).map(function (a) {
      return o++, "(".concat(o, ") '").concat(a, "': '").concat(c[a].join("', '"), "' for '").concat(u, "'.");
    });
    r.push(d.join(", ").replace(".,", "."));
  });
  var s = r.join(" "),
    i = "".concat(t).concat(s);
  return "".concat(e ? e + " " : "").concat(i);
}
function ar$4(e) {
  var n;
  var t = R$3(e);
  O$5(t);
  var r = (n = t.att) == null ? void 0 : n.eip155;
  return r ? Object.keys(r).map(function (o) {
    return o.split("/")[1];
  }) : [];
}
function ur$4(e) {
  var n = R$3(e);
  O$5(n);
  var t = [];
  return Object.values(n.att).forEach(function (r) {
    Object.values(r).forEach(function (o) {
      var s;
      (s = o === null || o === void 0 ? void 0 : o[0]) != null && s.chains && t.push(o[0].chains);
    });
  }), _toConsumableArray(new Set(t.flat()));
}
function En$1(e, n) {
  if (!n) return e;
  var t = R$3(n);
  return O$5(t), he$2(e, t);
}
function Y$3(e) {
  if (!e) return;
  var n = e === null || e === void 0 ? void 0 : e[e.length - 1];
  return me$5(n) ? n : void 0;
}
var ye$5 = "base10",
  g$3 = "base16",
  ge$2 = "base64pad",
  lr$4 = "base64url",
  k$2 = "utf8",
  ve$3 = 0,
  D$3 = 1,
  M$5 = 2,
  dr$4 = 0,
  wn$1 = 1,
  K$3 = 12,
  be$5 = 32;
function fr$4() {
  var e = x25519$1.generateKeyPair();
  return {
    privateKey: toString(e.secretKey, g$3),
    publicKey: toString(e.publicKey, g$3)
  };
}
function pr$4() {
  var e = random$1.randomBytes(be$5);
  return toString(e, g$3);
}
function mr$4(e, n) {
  var t = x25519$1.sharedKey(fromString(e, g$3), fromString(n, g$3), !0),
    r = new HKDF_1(sha256$1.SHA256, t).expand(be$5);
  return toString(r, g$3);
}
function hr$4(e) {
  var n = sha256$1.hash(fromString(e, g$3));
  return toString(n, g$3);
}
function yr$4(e) {
  var n = sha256$1.hash(fromString(e, k$2));
  return toString(n, g$3);
}
function Ee$4(e) {
  return fromString("".concat(e), ye$5);
}
function A$2(e) {
  return Number(toString(e, ye$5));
}
function gr$4(e) {
  var n = Ee$4(_typeof(e.type) < "u" ? e.type : ve$3);
  if (A$2(n) === D$3 && _typeof(e.senderPublicKey) > "u") throw new Error("Missing sender public key for type 1 envelope");
  var t = _typeof(e.senderPublicKey) < "u" ? fromString(e.senderPublicKey, g$3) : void 0,
    r = _typeof(e.iv) < "u" ? fromString(e.iv, g$3) : random$1.randomBytes(K$3),
    o = new chacha20poly1305$1.ChaCha20Poly1305(fromString(e.symKey, g$3)).seal(r, fromString(e.message, k$2));
  return we$5({
    type: n,
    sealed: o,
    iv: r,
    senderPublicKey: t,
    encoding: e.encoding
  });
}
function vr$4(e, n) {
  var t = Ee$4(M$5),
    r = random$1.randomBytes(K$3),
    o = fromString(e, k$2);
  return we$5({
    type: t,
    sealed: o,
    iv: r,
    encoding: n
  });
}
function br$4(e) {
  var n = new chacha20poly1305$1.ChaCha20Poly1305(fromString(e.symKey, g$3)),
    _Q = Q$3({
      encoded: e.encoded,
      encoding: e === null || e === void 0 ? void 0 : e.encoding
    }),
    t = _Q.sealed,
    r = _Q.iv,
    o = n.open(r, t);
  if (o === null) throw new Error("Failed to decrypt");
  return toString(o, k$2);
}
function Er$4(e, n) {
  var _Q2 = Q$3({
      encoded: e,
      encoding: n
    }),
    t = _Q2.sealed;
  return toString(t, k$2);
}
function we$5(e) {
  var _e$encoding = e.encoding,
    n = _e$encoding === void 0 ? ge$2 : _e$encoding;
  if (A$2(e.type) === M$5) return toString(concat([e.type, e.sealed]), n);
  if (A$2(e.type) === D$3) {
    if (_typeof(e.senderPublicKey) > "u") throw new Error("Missing sender public key for type 1 envelope");
    return toString(concat([e.type, e.senderPublicKey, e.iv, e.sealed]), n);
  }
  return toString(concat([e.type, e.iv, e.sealed]), n);
}
function Q$3(e) {
  var n = e.encoded,
    _e$encoding2 = e.encoding,
    t = _e$encoding2 === void 0 ? ge$2 : _e$encoding2,
    r = fromString(n, t),
    o = r.slice(dr$4, wn$1),
    s = wn$1;
  if (A$2(o) === D$3) {
    var c = s + be$5,
      d = c + K$3,
      a = r.slice(s, c),
      f = r.slice(c, d),
      h = r.slice(d);
    return {
      type: o,
      sealed: h,
      iv: f,
      senderPublicKey: a
    };
  }
  if (A$2(o) === M$5) {
    var _c = r.slice(s),
      _d = random$1.randomBytes(K$3);
    return {
      type: o,
      sealed: _c,
      iv: _d
    };
  }
  var i = s + K$3,
    u = r.slice(s, i),
    l = r.slice(i);
  return {
    type: o,
    sealed: l,
    iv: u
  };
}
function wr$4(e, n) {
  var t = Q$3({
    encoded: e,
    encoding: n === null || n === void 0 ? void 0 : n.encoding
  });
  return On$1({
    type: A$2(t.type),
    senderPublicKey: _typeof(t.senderPublicKey) < "u" ? toString(t.senderPublicKey, g$3) : void 0,
    receiverPublicKey: n === null || n === void 0 ? void 0 : n.receiverPublicKey
  });
}
function On$1(e) {
  var n = (e === null || e === void 0 ? void 0 : e.type) || ve$3;
  if (n === D$3) {
    if (_typeof(e === null || e === void 0 ? void 0 : e.senderPublicKey) > "u") throw new Error("missing sender public key");
    if (_typeof(e === null || e === void 0 ? void 0 : e.receiverPublicKey) > "u") throw new Error("missing receiver public key");
  }
  return {
    type: n,
    senderPublicKey: e === null || e === void 0 ? void 0 : e.senderPublicKey,
    receiverPublicKey: e === null || e === void 0 ? void 0 : e.receiverPublicKey
  };
}
function Or$4(e) {
  return e.type === D$3 && typeof e.senderPublicKey == "string" && typeof e.receiverPublicKey == "string";
}
function Nr$4(e) {
  return e.type === M$5;
}
function Nn$1(e) {
  return new elliptic$3.ec("p256").keyFromPublic({
    x: Buffer.from(e.x, "base64").toString("hex"),
    y: Buffer.from(e.y, "base64").toString("hex")
  }, "hex");
}
function Sr$4(e) {
  var n = e.replace(/-/g, "+").replace(/_/g, "/");
  var t = n.length % 4;
  return t > 0 && (n += "=".repeat(4 - t)), n;
}
function $r$4(e) {
  return Buffer.from(Sr$4(e), "base64");
}
function Rr$4(e, n) {
  var _e$split7 = e.split("."),
    _e$split8 = _slicedToArray(_e$split7, 3),
    t = _e$split8[0],
    r = _e$split8[1],
    o = _e$split8[2],
    s = $r$4(o);
  if (s.length !== 64) throw new Error("Invalid signature length");
  var i = s.slice(0, 32).toString("hex"),
    u = s.slice(32, 64).toString("hex"),
    l = "".concat(t, ".").concat(r),
    c = new sha256$1.SHA256().update(Buffer.from(l)).digest(),
    d = Nn$1(n),
    a = Buffer.from(c).toString("hex");
  if (!d.verify(a, {
    r: i,
    s: u
  })) throw new Error("Invalid signature");
  return decodeJWT(e).payload;
}
var Sn$1 = "irn";
function Ir$4(e) {
  return (e === null || e === void 0 ? void 0 : e.relay) || {
    protocol: Sn$1
  };
}
function jr$3(e) {
  var n = C$4[e];
  if (_typeof(n) > "u") throw new Error("Relay Protocol not supported: ".concat(e));
  return n;
}
var Tr$4 = Object.defineProperty,
  Pr$4 = Object.defineProperties,
  Ar$4 = Object.getOwnPropertyDescriptors,
  $n$1 = Object.getOwnPropertySymbols,
  Cr$4 = Object.prototype.hasOwnProperty,
  Ur$4 = Object.prototype.propertyIsEnumerable,
  Rn$1 = function Rn(e, n, t) {
    return n in e ? Tr$4(e, n, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : e[n] = t;
  },
  In$1 = function In(e, n) {
    for (var t in n || (n = {})) Cr$4.call(n, t) && Rn$1(e, t, n[t]);
    if ($n$1) {
      var _iterator3 = _createForOfIteratorHelper($n$1(n)),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var t = _step3.value;
          Ur$4.call(n, t) && Rn$1(e, t, n[t]);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
    return e;
  },
  _r$4 = function _r(e, n) {
    return Pr$4(e, Ar$4(n));
  };
function jn$1(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "-";
  var t = {},
    r = "relay" + n;
  return Object.keys(e).forEach(function (o) {
    if (o.startsWith(r)) {
      var s = o.replace(r, ""),
        i = e[o];
      t[s] = i;
    }
  }), t;
}
function kr$3(e) {
  if (!e.includes("wc:")) {
    var l = le$2(e);
    l != null && l.includes("wc:") && (e = l);
  }
  e = e.includes("wc://") ? e.replace("wc://", "") : e, e = e.includes("wc:") ? e.replace("wc:", "") : e;
  var n = e.indexOf(":"),
    t = e.indexOf("?") !== -1 ? e.indexOf("?") : void 0,
    r = e.substring(0, n),
    o = e.substring(n + 1, t).split("@"),
    s = _typeof(t) < "u" ? e.substring(t) : "",
    i = queryString.parse(s),
    u = typeof i.methods == "string" ? i.methods.split(",") : void 0;
  return {
    protocol: r,
    topic: Tn$1(o[0]),
    version: parseInt(o[1], 10),
    symKey: i.symKey,
    relay: jn$1(i),
    methods: u,
    expiryTimestamp: i.expiryTimestamp ? parseInt(i.expiryTimestamp, 10) : void 0
  };
}
function Tn$1(e) {
  return e.startsWith("//") ? e.substring(2) : e;
}
function Pn$1(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "-";
  var t = "relay",
    r = {};
  return Object.keys(e).forEach(function (o) {
    var s = t + n + o;
    e[o] && (r[s] = e[o]);
  }), r;
}
function Dr$4(e) {
  return "".concat(e.protocol, ":").concat(e.topic, "@").concat(e.version, "?") + queryString.stringify(In$1(_r$4(In$1({
    symKey: e.symKey
  }, Pn$1(e.relay)), {
    expiryTimestamp: e.expiryTimestamp
  }), e.methods ? {
    methods: e.methods.join(",")
  } : {}));
}
function xr$4(e, n, t) {
  return "".concat(e, "?wc_ev=").concat(t, "&topic=").concat(n);
}
var Vr$3 = Object.defineProperty,
  Mr$3 = Object.defineProperties,
  Kr$3 = Object.getOwnPropertyDescriptors,
  An$1 = Object.getOwnPropertySymbols,
  Lr$3 = Object.prototype.hasOwnProperty,
  Fr$4 = Object.prototype.propertyIsEnumerable,
  Cn$1 = function Cn(e, n, t) {
    return n in e ? Vr$3(e, n, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : e[n] = t;
  },
  qr$4 = function qr(e, n) {
    for (var t in n || (n = {})) Lr$3.call(n, t) && Cn$1(e, t, n[t]);
    if (An$1) {
      var _iterator4 = _createForOfIteratorHelper(An$1(n)),
        _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var t = _step4.value;
          Fr$4.call(n, t) && Cn$1(e, t, n[t]);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    return e;
  },
  Br$4 = function Br(e, n) {
    return Mr$3(e, Kr$3(n));
  };
function C$3(e) {
  var n = [];
  return e.forEach(function (t) {
    var _t$split = t.split(":"),
      _t$split2 = _slicedToArray(_t$split, 2),
      r = _t$split2[0],
      o = _t$split2[1];
    n.push("".concat(r, ":").concat(o));
  }), n;
}
function Un$1(e) {
  var n = [];
  return Object.values(e).forEach(function (t) {
    n.push.apply(n, _toConsumableArray(C$3(t.accounts)));
  }), n;
}
function _n$1(e, n) {
  var t = [];
  return Object.values(e).forEach(function (r) {
    C$3(r.accounts).includes(n) && t.push.apply(t, _toConsumableArray(r.methods));
  }), t;
}
function kn$1(e, n) {
  var t = [];
  return Object.values(e).forEach(function (r) {
    C$3(r.accounts).includes(n) && t.push.apply(t, _toConsumableArray(r.events));
  }), t;
}
function Hr$3(e, n) {
  var t = Wn$1(e, n);
  if (t) throw new Error(t.message);
  var r = {};
  for (var _i = 0, _Object$entries = Object.entries(e); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
      o = _Object$entries$_i[0],
      s = _Object$entries$_i[1];
    r[o] = {
      methods: s.methods,
      events: s.events,
      chains: s.accounts.map(function (i) {
        return "".concat(i.split(":")[0], ":").concat(i.split(":")[1]);
      })
    };
  }
  return r;
}
function Wr$3(e) {
  var _e$proposal = e.proposal,
    n = _e$proposal.requiredNamespaces,
    _e$proposal$optionalN = _e$proposal.optionalNamespaces,
    t = _e$proposal$optionalN === void 0 ? {} : _e$proposal$optionalN,
    r = e.supportedNamespaces,
    o = Ne$1(n),
    s = Ne$1(t),
    i = {};
  Object.keys(r).forEach(function (c) {
    var d = r[c].chains,
      a = r[c].methods,
      f = r[c].events,
      h = r[c].accounts;
    d.forEach(function (p) {
      if (!h.some(function (m) {
        return m.includes(p);
      })) throw new Error("No accounts provided for chain ".concat(p, " in namespace ").concat(c));
    }), i[c] = {
      chains: d,
      methods: a,
      events: f,
      accounts: h
    };
  });
  var u = zn$1(n, i, "approve()");
  if (u) throw new Error(u.message);
  var l = {};
  return !Object.keys(n).length && !Object.keys(t).length ? i : (Object.keys(o).forEach(function (c) {
    var d = r[c].chains.filter(function (p) {
        var m, E;
        return (E = (m = o[c]) == null ? void 0 : m.chains) == null ? void 0 : E.includes(p);
      }),
      a = r[c].methods.filter(function (p) {
        var m, E;
        return (E = (m = o[c]) == null ? void 0 : m.methods) == null ? void 0 : E.includes(p);
      }),
      f = r[c].events.filter(function (p) {
        var m, E;
        return (E = (m = o[c]) == null ? void 0 : m.events) == null ? void 0 : E.includes(p);
      }),
      h = d.map(function (p) {
        return r[c].accounts.filter(function (m) {
          return m.includes("".concat(p, ":"));
        });
      }).flat();
    l[c] = {
      chains: d,
      methods: a,
      events: f,
      accounts: h
    };
  }), Object.keys(s).forEach(function (c) {
    var d, a, f, h, p, m;
    if (!r[c]) return;
    var E = (a = (d = s[c]) == null ? void 0 : d.chains) == null ? void 0 : a.filter(function (j) {
        return r[c].chains.includes(j);
      }),
      nt = r[c].methods.filter(function (j) {
        var T, x;
        return (x = (T = s[c]) == null ? void 0 : T.methods) == null ? void 0 : x.includes(j);
      }),
      tt = r[c].events.filter(function (j) {
        var T, x;
        return (x = (T = s[c]) == null ? void 0 : T.events) == null ? void 0 : x.includes(j);
      }),
      rt = E === null || E === void 0 ? void 0 : E.map(function (j) {
        return r[c].accounts.filter(function (T) {
          return T.includes("".concat(j, ":"));
        });
      }).flat();
    l[c] = {
      chains: N$1((f = l[c]) == null ? void 0 : f.chains, E),
      methods: N$1((h = l[c]) == null ? void 0 : h.methods, nt),
      events: N$1((p = l[c]) == null ? void 0 : p.events, tt),
      accounts: N$1((m = l[c]) == null ? void 0 : m.accounts, rt)
    };
  }), l);
}
function Oe$1(e) {
  return e.includes(":");
}
function Dn$3(e) {
  return Oe$1(e) ? e.split(":")[0] : e;
}
function Ne$1(e) {
  var n, t, r;
  var o = {};
  if (!Z$5(e)) return o;
  for (var _i2 = 0, _Object$entries2 = Object.entries(e); _i2 < _Object$entries2.length; _i2++) {
    var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),
      s = _Object$entries2$_i[0],
      i = _Object$entries2$_i[1];
    var u = Oe$1(s) ? [s] : i.chains,
      l = i.methods || [],
      c = i.events || [],
      d = Dn$3(s);
    o[d] = Br$4(qr$4({}, o[d]), {
      chains: N$1(u, (n = o[d]) == null ? void 0 : n.chains),
      methods: N$1(l, (t = o[d]) == null ? void 0 : t.methods),
      events: N$1(c, (r = o[d]) == null ? void 0 : r.events)
    });
  }
  return o;
}
function xn$1(e) {
  var n = {};
  return e !== null && e !== void 0 && e.forEach(function (t) {
    var _t$split3 = t.split(":"),
      _t$split4 = _slicedToArray(_t$split3, 2),
      r = _t$split4[0],
      o = _t$split4[1];
    n[r] || (n[r] = {
      accounts: [],
      chains: [],
      events: []
    }), n[r].accounts.push(t), n[r].chains.push("".concat(r, ":").concat(o));
  }), n;
}
function Jr$3(e, n) {
  n = n.map(function (r) {
    return r.replace("did:pkh:", "");
  });
  var t = xn$1(n);
  for (var _i3 = 0, _Object$entries3 = Object.entries(t); _i3 < _Object$entries3.length; _i3++) {
    var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),
      r = _Object$entries3$_i[0],
      o = _Object$entries3$_i[1];
    o.methods ? o.methods = N$1(o.methods, e) : o.methods = e, o.events = ["chainChanged", "accountsChanged"];
  }
  return t;
}
var Vn$1 = {
    INVALID_METHOD: {
      message: "Invalid method.",
      code: 1001
    },
    INVALID_EVENT: {
      message: "Invalid event.",
      code: 1002
    },
    INVALID_UPDATE_REQUEST: {
      message: "Invalid update request.",
      code: 1003
    },
    INVALID_EXTEND_REQUEST: {
      message: "Invalid extend request.",
      code: 1004
    },
    INVALID_SESSION_SETTLE_REQUEST: {
      message: "Invalid session settle request.",
      code: 1005
    },
    UNAUTHORIZED_METHOD: {
      message: "Unauthorized method.",
      code: 3001
    },
    UNAUTHORIZED_EVENT: {
      message: "Unauthorized event.",
      code: 3002
    },
    UNAUTHORIZED_UPDATE_REQUEST: {
      message: "Unauthorized update request.",
      code: 3003
    },
    UNAUTHORIZED_EXTEND_REQUEST: {
      message: "Unauthorized extend request.",
      code: 3004
    },
    USER_REJECTED: {
      message: "User rejected.",
      code: 5e3
    },
    USER_REJECTED_CHAINS: {
      message: "User rejected chains.",
      code: 5001
    },
    USER_REJECTED_METHODS: {
      message: "User rejected methods.",
      code: 5002
    },
    USER_REJECTED_EVENTS: {
      message: "User rejected events.",
      code: 5003
    },
    UNSUPPORTED_CHAINS: {
      message: "Unsupported chains.",
      code: 5100
    },
    UNSUPPORTED_METHODS: {
      message: "Unsupported methods.",
      code: 5101
    },
    UNSUPPORTED_EVENTS: {
      message: "Unsupported events.",
      code: 5102
    },
    UNSUPPORTED_ACCOUNTS: {
      message: "Unsupported accounts.",
      code: 5103
    },
    UNSUPPORTED_NAMESPACE_KEY: {
      message: "Unsupported namespace key.",
      code: 5104
    },
    USER_DISCONNECTED: {
      message: "User disconnected.",
      code: 6e3
    },
    SESSION_SETTLEMENT_FAILED: {
      message: "Session settlement failed.",
      code: 7e3
    },
    WC_METHOD_UNSUPPORTED: {
      message: "Unsupported wc_ method.",
      code: 10001
    }
  },
  Mn$1 = {
    NOT_INITIALIZED: {
      message: "Not initialized.",
      code: 1
    },
    NO_MATCHING_KEY: {
      message: "No matching key.",
      code: 2
    },
    RESTORE_WILL_OVERRIDE: {
      message: "Restore will override.",
      code: 3
    },
    RESUBSCRIBED: {
      message: "Resubscribed.",
      code: 4
    },
    MISSING_OR_INVALID: {
      message: "Missing or invalid.",
      code: 5
    },
    EXPIRED: {
      message: "Expired.",
      code: 6
    },
    UNKNOWN_TYPE: {
      message: "Unknown type.",
      code: 7
    },
    MISMATCHED_TOPIC: {
      message: "Mismatched topic.",
      code: 8
    },
    NON_CONFORMING_NAMESPACES: {
      message: "Non conforming namespaces.",
      code: 9
    }
  };
function S$7(e, n) {
  var _Mn$e = Mn$1[e],
    t = _Mn$e.message,
    r = _Mn$e.code;
  return {
    message: n ? "".concat(t, " ").concat(n) : t,
    code: r
  };
}
function U$3(e, n) {
  var _Vn$e = Vn$1[e],
    t = _Vn$e.message,
    r = _Vn$e.code;
  return {
    message: n ? "".concat(t, " ").concat(n) : t,
    code: r
  };
}
function L$3(e, n) {
  return Array.isArray(e) ? _typeof(n) < "u" && e.length ? e.every(n) : !0 : !1;
}
function Z$5(e) {
  return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;
}
function I$6(e) {
  return _typeof(e) > "u";
}
function b$4(e, n) {
  return n && I$6(e) ? !0 : typeof e == "string" && !!e.trim().length;
}
function X$4(e, n) {
  return n && I$6(e) ? !0 : typeof e == "number" && !isNaN(e);
}
function zr$4(e, n) {
  var t = n.requiredNamespaces,
    r = Object.keys(e.namespaces),
    o = Object.keys(t);
  var s = !0;
  return $$5(o, r) ? (r.forEach(function (i) {
    var _e$namespaces$i = e.namespaces[i],
      u = _e$namespaces$i.accounts,
      l = _e$namespaces$i.methods,
      c = _e$namespaces$i.events,
      d = C$3(u),
      a = t[i];
    (!$$5(W$4(i, a), d) || !$$5(a.methods, l) || !$$5(a.events, c)) && (s = !1);
  }), s) : !1;
}
function F$3(e) {
  return b$4(e, !1) && e.includes(":") ? e.split(":").length === 2 : !1;
}
function Kn$1(e) {
  if (b$4(e, !1) && e.includes(":")) {
    var n = e.split(":");
    if (n.length === 3) {
      var t = n[0] + ":" + n[1];
      return !!n[2] && F$3(t);
    }
  }
  return !1;
}
function Gr$3(e) {
  function n(t) {
    try {
      return _typeof(new URL(t)) < "u";
    } catch (_unused2) {
      return !1;
    }
  }
  try {
    if (b$4(e, !1)) {
      if (n(e)) return !0;
      var t = le$2(e);
      return n(t);
    }
  } catch (_unused3) {}
  return !1;
}
function Yr$3(e) {
  var n;
  return (n = e === null || e === void 0 ? void 0 : e.proposer) == null ? void 0 : n.publicKey;
}
function Qr$3(e) {
  return e === null || e === void 0 ? void 0 : e.topic;
}
function Zr$3(e, n) {
  var t = null;
  return b$4(e === null || e === void 0 ? void 0 : e.publicKey, !1) || (t = S$7("MISSING_OR_INVALID", "".concat(n, " controller public key should be a string"))), t;
}
function Se$1(e) {
  var n = !0;
  return L$3(e) ? e.length && (n = e.every(function (t) {
    return b$4(t, !1);
  })) : n = !1, n;
}
function Ln$1(e, n, t) {
  var r = null;
  return L$3(n) && n.length ? n.forEach(function (o) {
    r || F$3(o) || (r = U$3("UNSUPPORTED_CHAINS", "".concat(t, ", chain ").concat(o, " should be a string and conform to \"namespace:chainId\" format")));
  }) : F$3(e) || (r = U$3("UNSUPPORTED_CHAINS", "".concat(t, ", chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }"))), r;
}
function Fn$1(e, n, t) {
  var r = null;
  return Object.entries(e).forEach(function (_ref5) {
    var _ref6 = _slicedToArray(_ref5, 2),
      o = _ref6[0],
      s = _ref6[1];
    if (r) return;
    var i = Ln$1(o, W$4(o, s), "".concat(n, " ").concat(t));
    i && (r = i);
  }), r;
}
function qn$1(e, n) {
  var t = null;
  return L$3(e) ? e.forEach(function (r) {
    t || Kn$1(r) || (t = U$3("UNSUPPORTED_ACCOUNTS", "".concat(n, ", account ").concat(r, " should be a string and conform to \"namespace:chainId:address\" format")));
  }) : t = U$3("UNSUPPORTED_ACCOUNTS", "".concat(n, ", accounts should be an array of strings conforming to \"namespace:chainId:address\" format")), t;
}
function Bn$1(e, n) {
  var t = null;
  return Object.values(e).forEach(function (r) {
    if (t) return;
    var o = qn$1(r === null || r === void 0 ? void 0 : r.accounts, "".concat(n, " namespace"));
    o && (t = o);
  }), t;
}
function Hn$1(e, n) {
  var t = null;
  return Se$1(e === null || e === void 0 ? void 0 : e.methods) ? Se$1(e === null || e === void 0 ? void 0 : e.events) || (t = U$3("UNSUPPORTED_EVENTS", "".concat(n, ", events should be an array of strings or empty array for no events"))) : t = U$3("UNSUPPORTED_METHODS", "".concat(n, ", methods should be an array of strings or empty array for no methods")), t;
}
function $e$1(e, n) {
  var t = null;
  return Object.values(e).forEach(function (r) {
    if (t) return;
    var o = Hn$1(r, "".concat(n, ", namespace"));
    o && (t = o);
  }), t;
}
function Xr$3(e, n, t) {
  var r = null;
  if (e && Z$5(e)) {
    var o = $e$1(e, n);
    o && (r = o);
    var s = Fn$1(e, n, t);
    s && (r = s);
  } else r = S$7("MISSING_OR_INVALID", "".concat(n, ", ").concat(t, " should be an object with data"));
  return r;
}
function Wn$1(e, n) {
  var t = null;
  if (e && Z$5(e)) {
    var r = $e$1(e, n);
    r && (t = r);
    var o = Bn$1(e, n);
    o && (t = o);
  } else t = S$7("MISSING_OR_INVALID", "".concat(n, ", namespaces should be an object with data"));
  return t;
}
function Jn$1(e) {
  return b$4(e.protocol, !0);
}
function eo$1(e, n) {
  var t = !1;
  return n && !e ? t = !0 : e && L$3(e) && e.length && e.forEach(function (r) {
    t = Jn$1(r);
  }), t;
}
function no$1(e) {
  return typeof e == "number";
}
function to$1(e) {
  return _typeof(e) < "u" && _typeof(e) !== null;
}
function ro$1(e) {
  return !(!e || _typeof(e) != "object" || !e.code || !X$4(e.code, !1) || !e.message || !b$4(e.message, !1));
}
function oo$1(e) {
  return !(I$6(e) || !b$4(e.method, !1));
}
function so$1(e) {
  return !(I$6(e) || I$6(e.result) && I$6(e.error) || !X$4(e.id, !1) || !b$4(e.jsonrpc, !1));
}
function io$1(e) {
  return !(I$6(e) || !b$4(e.name, !1));
}
function co$1(e, n) {
  return !(!F$3(n) || !Un$1(e).includes(n));
}
function ao$1(e, n, t) {
  return b$4(t, !1) ? _n$1(e, n).includes(t) : !1;
}
function uo$1(e, n, t) {
  return b$4(t, !1) ? kn$1(e, n).includes(t) : !1;
}
function zn$1(e, n, t) {
  var r = null;
  var o = lo$1(e),
    s = fo$1(n),
    i = Object.keys(o),
    u = Object.keys(s),
    l = Gn$1(Object.keys(e)),
    c = Gn$1(Object.keys(n)),
    d = l.filter(function (a) {
      return !c.includes(a);
    });
  return d.length && (r = S$7("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces keys don't satisfy requiredNamespaces.\n      Required: ").concat(d.toString(), "\n      Received: ").concat(Object.keys(n).toString()))), $$5(i, u) || (r = S$7("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces chains don't satisfy required namespaces.\n      Required: ").concat(i.toString(), "\n      Approved: ").concat(u.toString()))), Object.keys(n).forEach(function (a) {
    if (!a.includes(":") || r) return;
    var f = C$3(n[a].accounts);
    f.includes(a) || (r = S$7("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces accounts don't satisfy namespace accounts for ").concat(a, "\n        Required: ").concat(a, "\n        Approved: ").concat(f.toString())));
  }), i.forEach(function (a) {
    r || ($$5(o[a].methods, s[a].methods) ? $$5(o[a].events, s[a].events) || (r = S$7("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces events don't satisfy namespace events for ").concat(a))) : r = S$7("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces methods don't satisfy namespace methods for ").concat(a)));
  }), r;
}
function lo$1(e) {
  var n = {};
  return Object.keys(e).forEach(function (t) {
    var r;
    t.includes(":") ? n[t] = e[t] : (r = e[t].chains) == null || r.forEach(function (o) {
      n[o] = {
        methods: e[t].methods,
        events: e[t].events
      };
    });
  }), n;
}
function Gn$1(e) {
  return _toConsumableArray(new Set(e.map(function (n) {
    return n.includes(":") ? n.split(":")[0] : n;
  })));
}
function fo$1(e) {
  var n = {};
  return Object.keys(e).forEach(function (t) {
    if (t.includes(":")) n[t] = e[t];else {
      var r = C$3(e[t].accounts);
      r === null || r === void 0 || r.forEach(function (o) {
        n[o] = {
          accounts: e[t].accounts.filter(function (s) {
            return s.includes("".concat(o, ":"));
          }),
          methods: e[t].methods,
          events: e[t].events
        };
      });
    }
  }), n;
}
function po$1(e, n) {
  return X$4(e, !1) && e <= n.max && e >= n.min;
}
function mo$1() {
  var e = P$4();
  return new Promise(function (n) {
    switch (e) {
      case y$3.browser:
        n(Yn$1());
        break;
      case y$3.reactNative:
        n(Qn$1());
        break;
      case y$3.node:
        n(Zn$1());
        break;
      default:
        n(!0);
    }
  });
}
function Yn$1() {
  var _navigator;
  return V$5() && ((_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.onLine);
}
function Qn$1() {
  return _Qn$1.apply(this, arguments);
}
function _Qn$1() {
  _Qn$1 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
    var e;
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          if (!(_$2() && (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && global != null && global.NetInfo)) {
            _context7.next = 5;
            break;
          }
          _context7.next = 3;
          return global == null ? void 0 : global.NetInfo.fetch();
        case 3:
          e = _context7.sent;
          return _context7.abrupt("return", e === null || e === void 0 ? void 0 : e.isConnected);
        case 5:
          return _context7.abrupt("return", !0);
        case 6:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return _Qn$1.apply(this, arguments);
}
function Zn$1() {
  return !0;
}
function ho$1(e) {
  switch (P$4()) {
    case y$3.browser:
      Xn$1(e);
      break;
    case y$3.reactNative:
      et$4(e);
      break;
    case y$3.node:
      break;
  }
}
function Xn$1(e) {
  !_$2() && V$5() && (window.addEventListener("online", function () {
    return e(!0);
  }), window.addEventListener("offline", function () {
    return e(!1);
  }));
}
function et$4(e) {
  var _global;
  _$2() && (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && global != null && global.NetInfo && ((_global = global) === null || _global === void 0 ? void 0 : _global.NetInfo.addEventListener(function (n) {
    return e(n === null || n === void 0 ? void 0 : n.isConnected);
  }));
}
var Re$1 = {};
var yo$1 = /*#__PURE__*/function () {
  function yo() {
    _classCallCheck(this, yo);
  }
  return _createClass(yo, null, [{
    key: "get",
    value: function get(n) {
      return Re$1[n];
    }
  }, {
    key: "set",
    value: function set(n, t) {
      Re$1[n] = t;
    }
  }, {
    key: "delete",
    value: function _delete(n) {
      delete Re$1[n];
    }
  }]);
}();

var PARSE_ERROR = "PARSE_ERROR";
var INVALID_REQUEST = "INVALID_REQUEST";
var METHOD_NOT_FOUND = "METHOD_NOT_FOUND";
var INVALID_PARAMS = "INVALID_PARAMS";
var INTERNAL_ERROR = "INTERNAL_ERROR";
var SERVER_ERROR = "SERVER_ERROR";
var RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];
var SERVER_ERROR_CODE_RANGE = [-32000, -32099];
var STANDARD_ERROR_MAP = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, PARSE_ERROR, {
  code: -32700,
  message: "Parse error"
}), INVALID_REQUEST, {
  code: -32600,
  message: "Invalid Request"
}), METHOD_NOT_FOUND, {
  code: -32601,
  message: "Method not found"
}), INVALID_PARAMS, {
  code: -32602,
  message: "Invalid params"
}), INTERNAL_ERROR, {
  code: -32603,
  message: "Internal error"
}), SERVER_ERROR, {
  code: -32000,
  message: "Server error"
});
var DEFAULT_ERROR = SERVER_ERROR;

function isServerErrorCode(code) {
  return code <= SERVER_ERROR_CODE_RANGE[0] && code >= SERVER_ERROR_CODE_RANGE[1];
}
function isReservedErrorCode(code) {
  return RESERVED_ERROR_CODES.includes(code);
}
function isValidErrorCode(code) {
  return typeof code === "number";
}
function getError(type) {
  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return STANDARD_ERROR_MAP[type];
}
function getErrorByCode(code) {
  var match = Object.values(STANDARD_ERROR_MAP).find(function (e) {
    return e.code === code;
  });
  if (!match) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return match;
}
function validateJsonRpcError(response) {
  if (typeof response.error.code === "undefined") {
    return {
      valid: false,
      error: "Missing code for JSON-RPC error"
    };
  }
  if (typeof response.error.message === "undefined") {
    return {
      valid: false,
      error: "Missing message for JSON-RPC error"
    };
  }
  if (!isValidErrorCode(response.error.code)) {
    return {
      valid: false,
      error: "Invalid error code type for JSON-RPC: ".concat(response.error.code)
    };
  }
  if (isReservedErrorCode(response.error.code)) {
    var error = getErrorByCode(response.error.code);
    if (error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message && response.error.message === error.message) {
      return {
        valid: false,
        error: "Invalid error code message for JSON-RPC: ".concat(response.error.code)
      };
    }
  }
  return {
    valid: true
  };
}
function parseConnectionError(e, url, type) {
  return e.message.includes("getaddrinfo ENOTFOUND") || e.message.includes("connect ECONNREFUSED") ? new Error("Unavailable ".concat(type, " RPC url at ").concat(url)) : e;
}

var cjs = {};

var crypto$1 = {};

var hasRequiredCrypto;
function requireCrypto() {
  if (hasRequiredCrypto) return crypto$1;
  hasRequiredCrypto = 1;
  "use strict";
  Object.defineProperty(crypto$1, "__esModule", {
    value: true
  });
  crypto$1.isBrowserCryptoAvailable = crypto$1.getSubtleCrypto = crypto$1.getBrowerCrypto = void 0;
  function getBrowerCrypto() {
    return (commonjsGlobal$1 === null || commonjsGlobal$1 === void 0 ? void 0 : commonjsGlobal$1.crypto) || (commonjsGlobal$1 === null || commonjsGlobal$1 === void 0 ? void 0 : commonjsGlobal$1.msCrypto) || {};
  }
  crypto$1.getBrowerCrypto = getBrowerCrypto;
  function getSubtleCrypto() {
    var browserCrypto = getBrowerCrypto();
    return browserCrypto.subtle || browserCrypto.webkitSubtle;
  }
  crypto$1.getSubtleCrypto = getSubtleCrypto;
  function isBrowserCryptoAvailable() {
    return !!getBrowerCrypto() && !!getSubtleCrypto();
  }
  crypto$1.isBrowserCryptoAvailable = isBrowserCryptoAvailable;
  return crypto$1;
}

var env = {};

var hasRequiredEnv;
function requireEnv() {
  if (hasRequiredEnv) return env;
  hasRequiredEnv = 1;
  "use strict";
  Object.defineProperty(env, "__esModule", {
    value: true
  });
  env.isBrowser = env.isNode = env.isReactNative = void 0;
  function isReactNative() {
    return typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative";
  }
  env.isReactNative = isReactNative;
  function isNode() {
    return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
  }
  env.isNode = isNode;
  function isBrowser() {
    return !isReactNative() && !isNode();
  }
  env.isBrowser = isBrowser;
  return env;
}

(function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var tslib_1 = require$$0$4;
  tslib_1.__exportStar(requireCrypto(), exports);
  tslib_1.__exportStar(requireEnv(), exports);
})(cjs);
var index$3 = /*@__PURE__*/getDefaultExportFromCjs$1(cjs);

var isNodeJs = cjs.isNode;

function payloadId() {
  var entropy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;
  var date = Date.now() * Math.pow(10, entropy);
  var extra = Math.floor(Math.random() * Math.pow(10, entropy));
  return date + extra;
}
function getBigIntRpcId() {
  var entropy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;
  return BigInt(payloadId(entropy));
}
function formatJsonRpcRequest(method, params, id) {
  return {
    id: id || payloadId(),
    jsonrpc: "2.0",
    method: method,
    params: params
  };
}
function formatJsonRpcResult(id, result) {
  return {
    id: id,
    jsonrpc: "2.0",
    result: result
  };
}
function formatJsonRpcError(id, error, data) {
  return {
    id: id,
    jsonrpc: "2.0",
    error: formatErrorMessage(error, data)
  };
}
function formatErrorMessage(error, data) {
  if (typeof error === "undefined") {
    return getError(INTERNAL_ERROR);
  }
  if (typeof error === "string") {
    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), {
      message: error
    });
  }
  if (typeof data !== "undefined") {
    error.data = data;
  }
  if (isReservedErrorCode(error.code)) {
    error = getErrorByCode(error.code);
  }
  return error;
}

function isValidRoute(route) {
  if (route.includes("*")) {
    return isValidWildcardRoute(route);
  }
  if (/\W/g.test(route)) {
    return false;
  }
  return true;
}
function isValidDefaultRoute(route) {
  return route === "*";
}
function isValidWildcardRoute(route) {
  if (isValidDefaultRoute(route)) {
    return true;
  }
  if (!route.includes("*")) {
    return false;
  }
  if (route.split("*").length !== 2) {
    return false;
  }
  if (route.split("*").filter(function (x) {
    return x.trim() === "";
  }).length !== 1) {
    return false;
  }
  return true;
}
function isValidLeadingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[0].trim();
}
function isValidTrailingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[1].trim();
}

var e = /*#__PURE__*/_createClass(function e() {
  _classCallCheck(this, e);
});
var o$2 = /*#__PURE__*/function (_e) {
  function o(c) {
    _classCallCheck(this, o);
    return _callSuper(this, o);
  }
  _inherits(o, _e);
  return _createClass(o);
}(e);
var n$1 = /*#__PURE__*/function (_e2) {
  function n() {
    _classCallCheck(this, n);
    return _callSuper(this, n);
  }
  _inherits(n, _e2);
  return _createClass(n);
}(e);
var r = /*#__PURE__*/function (_n) {
  function r(c) {
    _classCallCheck(this, r);
    return _callSuper(this, r);
  }
  _inherits(r, _n);
  return _createClass(r);
}(n$1);

var HTTP_REGEX = "^https?:";
var WS_REGEX = "^wss?:";
function getUrlProtocol(url) {
  var matches = url.match(new RegExp(/^\w+:/, "gi"));
  if (!matches || !matches.length) return;
  return matches[0];
}
function matchRegexProtocol(url, regex) {
  var protocol = getUrlProtocol(url);
  if (typeof protocol === "undefined") return false;
  return new RegExp(regex).test(protocol);
}
function isHttpUrl(url) {
  return matchRegexProtocol(url, HTTP_REGEX);
}
function isWsUrl(url) {
  return matchRegexProtocol(url, WS_REGEX);
}
function isLocalhostUrl(url) {
  return new RegExp("wss?://localhost(:d{2,5})?").test(url);
}

function isJsonRpcPayload(payload) {
  return _typeof(payload) === "object" && "id" in payload && "jsonrpc" in payload && payload.jsonrpc === "2.0";
}
function isJsonRpcRequest(payload) {
  return isJsonRpcPayload(payload) && "method" in payload;
}
function isJsonRpcResponse(payload) {
  return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));
}
function isJsonRpcResult(payload) {
  return "result" in payload;
}
function isJsonRpcError(payload) {
  return "error" in payload;
}
function isJsonRpcValidationInvalid(validation) {
  return "error" in validation && validation.valid === false;
}

var o$1 = /*#__PURE__*/function (_r) {
  function o(t) {
    var _this;
    _classCallCheck(this, o);
    _this = _callSuper(this, o, [t]), _this.events = new eventsExports.EventEmitter(), _this.hasRegisteredEventListeners = !1, _this.connection = _this.setConnection(t), _this.connection.connected && _this.registerEventListeners();
    return _this;
  }
  _inherits(o, _r);
  return _createClass(o, [{
    key: "connect",
    value: function () {
      var _connect = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var t,
          _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              t = _args.length > 0 && _args[0] !== undefined ? _args[0] : this.connection;
              _context.next = 3;
              return this.open(t);
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function connect() {
        return _connect.apply(this, arguments);
      }
      return connect;
    }()
  }, {
    key: "disconnect",
    value: function () {
      var _disconnect = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return this.close();
            case 2:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function disconnect() {
        return _disconnect.apply(this, arguments);
      }
      return disconnect;
    }()
  }, {
    key: "on",
    value: function on(t, e) {
      this.events.on(t, e);
    }
  }, {
    key: "once",
    value: function once(t, e) {
      this.events.once(t, e);
    }
  }, {
    key: "off",
    value: function off(t, e) {
      this.events.off(t, e);
    }
  }, {
    key: "removeListener",
    value: function removeListener(t, e) {
      this.events.removeListener(t, e);
    }
  }, {
    key: "request",
    value: function () {
      var _request = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(t, e) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              return _context3.abrupt("return", this.requestStrict(formatJsonRpcRequest(t.method, t.params || [], t.id || getBigIntRpcId().toString()), e));
            case 1:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function request(_x, _x2) {
        return _request.apply(this, arguments);
      }
      return request;
    }()
  }, {
    key: "requestStrict",
    value: function () {
      var _requestStrict = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(t, e) {
        var _this2 = this;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              return _context5.abrupt("return", new Promise(/*#__PURE__*/function () {
                var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(i, s) {
                  return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                    while (1) switch (_context4.prev = _context4.next) {
                      case 0:
                        if (_this2.connection.connected) {
                          _context4.next = 9;
                          break;
                        }
                        _context4.prev = 1;
                        _context4.next = 4;
                        return _this2.open();
                      case 4:
                        _context4.next = 9;
                        break;
                      case 6:
                        _context4.prev = 6;
                        _context4.t0 = _context4["catch"](1);
                        s(_context4.t0);
                      case 9:
                        _this2.events.on("".concat(t.id), function (n) {
                          isJsonRpcError(n) ? s(n.error) : i(n.result);
                        });
                        _context4.prev = 10;
                        _context4.next = 13;
                        return _this2.connection.send(t, e);
                      case 13:
                        _context4.next = 18;
                        break;
                      case 15:
                        _context4.prev = 15;
                        _context4.t1 = _context4["catch"](10);
                        s(_context4.t1);
                      case 18:
                      case "end":
                        return _context4.stop();
                    }
                  }, _callee4, null, [[1, 6], [10, 15]]);
                }));
                return function (_x5, _x6) {
                  return _ref.apply(this, arguments);
                };
              }()));
            case 1:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }));
      function requestStrict(_x3, _x4) {
        return _requestStrict.apply(this, arguments);
      }
      return requestStrict;
    }()
  }, {
    key: "setConnection",
    value: function setConnection() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.connection;
      return t;
    }
  }, {
    key: "onPayload",
    value: function onPayload(t) {
      this.events.emit("payload", t), isJsonRpcResponse(t) ? this.events.emit("".concat(t.id), t) : this.events.emit("message", {
        type: t.method,
        data: t.params
      });
    }
  }, {
    key: "onClose",
    value: function onClose(t) {
      t && t.code === 3e3 && this.events.emit("error", new Error("WebSocket connection closed abnormally with code: ".concat(t.code, " ").concat(t.reason ? "(".concat(t.reason, ")") : ""))), this.events.emit("disconnect");
    }
  }, {
    key: "open",
    value: function () {
      var _open = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
        var t,
          _args6 = arguments;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              t = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : this.connection;
              _context6.t0 = this.connection === t && this.connection.connected;
              if (_context6.t0) {
                _context6.next = 14;
                break;
              }
              this.connection.connected && this.close();
              _context6.t1 = typeof t == "string";
              if (!_context6.t1) {
                _context6.next = 9;
                break;
              }
              _context6.next = 8;
              return this.connection.open(t);
            case 8:
              t = this.connection;
            case 9:
              this.connection = this.setConnection(t);
              _context6.next = 12;
              return this.connection.open();
            case 12:
              this.registerEventListeners();
              this.events.emit("connect");
            case 14:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function open() {
        return _open.apply(this, arguments);
      }
      return open;
    }()
  }, {
    key: "close",
    value: function () {
      var _close = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return this.connection.close();
            case 2:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function close() {
        return _close.apply(this, arguments);
      }
      return close;
    }()
  }, {
    key: "registerEventListeners",
    value: function registerEventListeners() {
      var _this3 = this;
      this.hasRegisteredEventListeners || (this.connection.on("payload", function (t) {
        return _this3.onPayload(t);
      }), this.connection.on("close", function (t) {
        return _this3.onClose(t);
      }), this.connection.on("error", function (t) {
        return _this3.events.emit("error", t);
      }), this.connection.on("register_error", function (t) {
        return _this3.onClose();
      }), this.hasRegisteredEventListeners = !0);
    }
  }]);
}(r);

var browser$1;
var hasRequiredBrowser;
function requireBrowser() {
  if (hasRequiredBrowser) return browser$1;
  hasRequiredBrowser = 1;
  'use strict';
  browser$1 = function browser() {
    throw new Error('ws does not work in the browser. Browser clients must use the native ' + 'WebSocket object');
  };
  return browser$1;
}

var w$2 = function w() {
    return (typeof WebSocket === "undefined" ? "undefined" : _typeof(WebSocket)) < "u" ? WebSocket : (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && _typeof(global.WebSocket) < "u" ? global.WebSocket : (typeof window === "undefined" ? "undefined" : _typeof(window)) < "u" && _typeof(window.WebSocket) < "u" ? window.WebSocket : (typeof self === "undefined" ? "undefined" : _typeof(self)) < "u" && _typeof(self.WebSocket) < "u" ? self.WebSocket : requireBrowser();
  },
  b$3 = function b() {
    return (typeof WebSocket === "undefined" ? "undefined" : _typeof(WebSocket)) < "u" || (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && _typeof(global.WebSocket) < "u" || (typeof window === "undefined" ? "undefined" : _typeof(window)) < "u" && _typeof(window.WebSocket) < "u" || (typeof self === "undefined" ? "undefined" : _typeof(self)) < "u" && _typeof(self.WebSocket) < "u";
  },
  a$1 = function a(c) {
    return c.split("?")[0];
  },
  h$1 = 10,
  S$6 = w$2();
var f$3 = /*#__PURE__*/function () {
  function f(e) {
    _classCallCheck(this, f);
    if (this.url = e, this.events = new eventsExports.EventEmitter(), this.registering = !1, !isWsUrl(e)) throw new Error("Provided URL is not compatible with WebSocket connection: ".concat(e));
    this.url = e;
  }
  return _createClass(f, [{
    key: "connected",
    get: function get() {
      return _typeof(this.socket) < "u";
    }
  }, {
    key: "connecting",
    get: function get() {
      return this.registering;
    }
  }, {
    key: "on",
    value: function on(e, t) {
      this.events.on(e, t);
    }
  }, {
    key: "once",
    value: function once(e, t) {
      this.events.once(e, t);
    }
  }, {
    key: "off",
    value: function off(e, t) {
      this.events.off(e, t);
    }
  }, {
    key: "removeListener",
    value: function removeListener(e, t) {
      this.events.removeListener(e, t);
    }
  }, {
    key: "open",
    value: function () {
      var _open = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var e,
          _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              e = _args.length > 0 && _args[0] !== undefined ? _args[0] : this.url;
              _context.next = 3;
              return this.register(e);
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function open() {
        return _open.apply(this, arguments);
      }
      return open;
    }()
  }, {
    key: "close",
    value: function () {
      var _close = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var _this = this;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", new Promise(function (e, t) {
                if (_typeof(_this.socket) > "u") {
                  t(new Error("Connection already closed"));
                  return;
                }
                _this.socket.onclose = function (n) {
                  _this.onClose(n), e();
                }, _this.socket.close();
              }));
            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function close() {
        return _close.apply(this, arguments);
      }
      return close;
    }()
  }, {
    key: "send",
    value: function () {
      var _send = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.t0 = _typeof(this.socket) > "u";
              if (!_context3.t0) {
                _context3.next = 5;
                break;
              }
              _context3.next = 4;
              return this.register();
            case 4:
              this.socket = _context3.sent;
            case 5:
              try {
                this.socket.send(safeJsonStringify(e));
              } catch (t) {
                this.onError(e.id, t);
              }
            case 6:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function send(_x) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
  }, {
    key: "register",
    value: function register() {
      var _this2 = this;
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.url;
      if (!isWsUrl(e)) throw new Error("Provided URL is not compatible with WebSocket connection: ".concat(e));
      if (this.registering) {
        var t = this.events.getMaxListeners();
        return (this.events.listenerCount("register_error") >= t || this.events.listenerCount("open") >= t) && this.events.setMaxListeners(t + 1), new Promise(function (n, o) {
          _this2.events.once("register_error", function (s) {
            _this2.resetMaxListeners(), o(s);
          }), _this2.events.once("open", function () {
            if (_this2.resetMaxListeners(), _typeof(_this2.socket) > "u") return o(new Error("WebSocket connection is missing or invalid"));
            n(_this2.socket);
          });
        });
      }
      return this.url = e, this.registering = !0, new Promise(function (t, n) {
        var o = new URLSearchParams(e).get("origin"),
          s = cjs.isReactNative() ? {
            headers: {
              origin: o
            }
          } : {
            rejectUnauthorized: !isLocalhostUrl(e)
          },
          i = new S$6(e, [], s);
        b$3() ? i.onerror = function (r) {
          var l = r;
          n(_this2.emitError(l.error));
        } : i.on("error", function (r) {
          n(_this2.emitError(r));
        }), i.onopen = function () {
          _this2.onOpen(i), t(i);
        };
      });
    }
  }, {
    key: "onOpen",
    value: function onOpen(e) {
      var _this3 = this;
      e.onmessage = function (t) {
        return _this3.onPayload(t);
      }, e.onclose = function (t) {
        return _this3.onClose(t);
      }, this.socket = e, this.registering = !1, this.events.emit("open");
    }
  }, {
    key: "onClose",
    value: function onClose(e) {
      this.socket = void 0, this.registering = !1, this.events.emit("close", e);
    }
  }, {
    key: "onPayload",
    value: function onPayload(e) {
      if (_typeof(e.data) > "u") return;
      var t = typeof e.data == "string" ? safeJsonParse(e.data) : e.data;
      this.events.emit("payload", t);
    }
  }, {
    key: "onError",
    value: function onError(e, t) {
      var n = this.parseError(t),
        o = n.message || n.toString(),
        s = formatJsonRpcError(e, o);
      this.events.emit("payload", s);
    }
  }, {
    key: "parseError",
    value: function parseError(e) {
      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.url;
      return parseConnectionError(e, a$1(t), "WS");
    }
  }, {
    key: "resetMaxListeners",
    value: function resetMaxListeners() {
      this.events.getMaxListeners() > h$1 && this.events.setMaxListeners(h$1);
    }
  }, {
    key: "emitError",
    value: function emitError(e) {
      var t = this.parseError(new Error((e === null || e === void 0 ? void 0 : e.message) || "WebSocket connection failed for host: ".concat(a$1(this.url))));
      return this.events.emit("register_error", t), t;
    }
  }]);
}();

var lodash_isequal$1 = {exports: {}};

var lodash_isequal = lodash_isequal$1.exports;
(function (module, exports) {
  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    asyncTag = '[object AsyncFunction]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    nullTag = '[object Null]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    proxyTag = '[object Proxy]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    undefinedTag = '[object Undefined]',
    weakMapTag = '[object WeakMap]';
  var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = _typeof(commonjsGlobal$1) == 'object' && commonjsGlobal$1 && commonjsGlobal$1.Object === Object && commonjsGlobal$1;

  /** Detect free variable `self`. */
  var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof(self)) == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = 'object' == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = function () {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }();

  /* Node.js helper references. */
  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];
    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
      length = values.length,
      offset = array.length;
    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
      length = array == null ? 0 : array.length;
    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
      result = Array(n);
    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function (value) {
      return func(value);
    };
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
      result = Array(map.size);
    map.forEach(function (value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function (arg) {
      return func(transform(arg));
    };
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
      result = Array(set.size);
    set.forEach(function (value) {
      result[++index] = value;
    });
    return result;
  }

  /** Used for built-in method references. */
  var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

  /** Used to detect overreaching core-js shims. */
  var coreJsData = root['__core-js_shared__'];

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to detect methods masquerading as native. */
  var maskSrcKey = function () {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
  }();

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

  /** Built-in value references. */
  var Buffer = moduleExports ? root.Buffer : undefined,
    _Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice,
    symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols,
    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
    nativeKeys = overArg(Object.keys, Object);

  /* Built-in method references that are verified to be native. */
  var DataView = getNative(root, 'DataView'),
    Map = getNative(root, 'Map'),
    Promise = getNative(root, 'Promise'),
    Set = getNative(root, 'Set'),
    WeakMap = getNative(root, 'WeakMap'),
    nativeCreate = getNative(Object, 'create');

  /** Used to detect maps, sets, and weakmaps. */
  var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  /**
   * Creates a hash object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Hash(entries) {
    var index = -1,
      length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  /**
   * Removes all key-value entries from the hash.
   *
   * @private
   * @name clear
   * @memberOf Hash
   */
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
  }

  /**
   * Removes `key` and its value from the hash.
   *
   * @private
   * @name delete
   * @memberOf Hash
   * @param {Object} hash The hash to modify.
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }

  /**
   * Gets the hash value for `key`.
   *
   * @private
   * @name get
   * @memberOf Hash
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }

  /**
   * Checks if a hash value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Hash
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }

  /**
   * Sets the hash `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Hash
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the hash instance.
   */
  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
  }

  // Add methods to `Hash`.
  Hash.prototype.clear = hashClear;
  Hash.prototype['delete'] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;

  /**
   * Creates an list cache object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function ListCache(entries) {
    var index = -1,
      length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  /**
   * Removes all key-value entries from the list cache.
   *
   * @private
   * @name clear
   * @memberOf ListCache
   */
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }

  /**
   * Removes `key` and its value from the list cache.
   *
   * @private
   * @name delete
   * @memberOf ListCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function listCacheDelete(key) {
    var data = this.__data__,
      index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    --this.size;
    return true;
  }

  /**
   * Gets the list cache value for `key`.
   *
   * @private
   * @name get
   * @memberOf ListCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function listCacheGet(key) {
    var data = this.__data__,
      index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
  }

  /**
   * Checks if a list cache value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf ListCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }

  /**
   * Sets the list cache `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf ListCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the list cache instance.
   */
  function listCacheSet(key, value) {
    var data = this.__data__,
      index = assocIndexOf(data, key);
    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }

  // Add methods to `ListCache`.
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype['delete'] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;

  /**
   * Creates a map cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function MapCache(entries) {
    var index = -1,
      length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  /**
   * Removes all key-value entries from the map.
   *
   * @private
   * @name clear
   * @memberOf MapCache
   */
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      'hash': new Hash(),
      'map': new (Map || ListCache)(),
      'string': new Hash()
    };
  }

  /**
   * Removes `key` and its value from the map.
   *
   * @private
   * @name delete
   * @memberOf MapCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
  }

  /**
   * Gets the map value for `key`.
   *
   * @private
   * @name get
   * @memberOf MapCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }

  /**
   * Checks if a map value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf MapCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }

  /**
   * Sets the map `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf MapCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the map cache instance.
   */
  function mapCacheSet(key, value) {
    var data = getMapData(this, key),
      size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }

  // Add methods to `MapCache`.
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype['delete'] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;

  /**
   *
   * Creates an array cache object to store unique values.
   *
   * @private
   * @constructor
   * @param {Array} [values] The values to cache.
   */
  function SetCache(values) {
    var index = -1,
      length = values == null ? 0 : values.length;
    this.__data__ = new MapCache();
    while (++index < length) {
      this.add(values[index]);
    }
  }

  /**
   * Adds `value` to the array cache.
   *
   * @private
   * @name add
   * @memberOf SetCache
   * @alias push
   * @param {*} value The value to cache.
   * @returns {Object} Returns the cache instance.
   */
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }

  /**
   * Checks if `value` is in the array cache.
   *
   * @private
   * @name has
   * @memberOf SetCache
   * @param {*} value The value to search for.
   * @returns {number} Returns `true` if `value` is found, else `false`.
   */
  function setCacheHas(value) {
    return this.__data__.has(value);
  }

  // Add methods to `SetCache`.
  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;

  /**
   * Creates a stack cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }

  /**
   * Removes all key-value entries from the stack.
   *
   * @private
   * @name clear
   * @memberOf Stack
   */
  function stackClear() {
    this.__data__ = new ListCache();
    this.size = 0;
  }

  /**
   * Removes `key` and its value from the stack.
   *
   * @private
   * @name delete
   * @memberOf Stack
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function stackDelete(key) {
    var data = this.__data__,
      result = data['delete'](key);
    this.size = data.size;
    return result;
  }

  /**
   * Gets the stack value for `key`.
   *
   * @private
   * @name get
   * @memberOf Stack
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function stackGet(key) {
    return this.__data__.get(key);
  }

  /**
   * Checks if a stack value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Stack
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function stackHas(key) {
    return this.__data__.has(key);
  }

  /**
   * Sets the stack `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Stack
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the stack cache instance.
   */
  function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
      var pairs = data.__data__;
      if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }

  // Add methods to `Stack`.
  Stack.prototype.clear = stackClear;
  Stack.prototype['delete'] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;
    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (
      // Safari 9 has enumerable `arguments.length` in strict mode.
      key == 'length' ||
      // Node.js 0.10 has enumerable non-index properties on buffers.
      isBuff && (key == 'offset' || key == 'parent') ||
      // PhantomJS 2 has enumerable non-index properties on typed arrays.
      isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') ||
      // Skip index properties.
      isIndex(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * Gets the index at which the `key` is found in `array` of key-value pairs.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} key The key to search for.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function assocIndexOf(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
   * `keysFunc` and `symbolsFunc` to get the enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @param {Function} symbolsFunc The function to get the symbols of `object`.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  }

  /**
   * The base implementation of `getTag` without fallbacks for buggy environments.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  function baseGetTag(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
  }

  /**
   * The base implementation of `_.isArguments`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   */
  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
  }

  /**
   * The base implementation of `_.isEqual` which supports partial comparisons
   * and tracks traversed objects.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @param {boolean} bitmask The bitmask flags.
   *  1 - Unordered comparison
   *  2 - Partial comparison
   * @param {Function} [customizer] The function to customize comparisons.
   * @param {Object} [stack] Tracks traversed `value` and `other` objects.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   */
  function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
      return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
  }

  /**
   * A specialized version of `baseIsEqual` for arrays and objects which performs
   * deep comparisons and tracks traversed objects enabling objects with circular
   * references to be compared.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} [stack] Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);
    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;
    var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;
    if (isSameTag && isBuffer(object)) {
      if (!isBuffer(other)) {
        return false;
      }
      objIsArr = true;
      objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack());
      return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;
        stack || (stack = new Stack());
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new Stack());
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }

  /**
   * The base implementation of `_.isNative` without bad shim checks.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function,
   *  else `false`.
   */
  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }

  /**
   * The base implementation of `_.isTypedArray` without Node.js optimizations.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   */
  function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
  }

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * A specialized version of `baseIsEqualDeep` for arrays with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Array} array The array to compare.
   * @param {Array} other The other array to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `array` and `other` objects.
   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
   */
  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(array);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var index = -1,
      result = true,
      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
    stack.set(array, other);
    stack.set(other, array);

    // Ignore non-index properties.
    while (++index < arrLength) {
      var arrValue = array[index],
        othValue = other[index];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
      }
      if (compared !== undefined) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      // Recursively compare arrays (susceptible to call stack limits).
      if (seen) {
        if (!arraySome(other, function (othValue, othIndex) {
          if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            return seen.push(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
        result = false;
        break;
      }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
  }

  /**
   * A specialized version of `baseIsEqualDeep` for comparing objects of
   * the same `toStringTag`.
   *
   * **Note:** This function only supports comparing values with tags of
   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {string} tag The `toStringTag` of the objects to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag:
        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;
      case arrayBufferTag:
        if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
          return false;
        }
        return true;
      case boolTag:
      case dateTag:
      case numberTag:
        // Coerce booleans to `1` or `0` and dates to milliseconds.
        // Invalid dates are coerced to `NaN`.
        return eq(+object, +other);
      case errorTag:
        return object.name == other.name && object.message == other.message;
      case regexpTag:
      case stringTag:
        // Coerce regexes to strings and treat strings, primitives and objects,
        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
        // for more details.
        return object == other + '';
      case mapTag:
        var convert = mapToArray;
      case setTag:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
        convert || (convert = setToArray);
        if (object.size != other.size && !isPartial) {
          return false;
        }
        // Assume cyclic values are equal.
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= COMPARE_UNORDERED_FLAG;

        // Recursively compare objects (susceptible to call stack limits).
        stack.set(object, other);
        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack['delete'](object);
        return result;
      case symbolTag:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }
    }
    return false;
  }

  /**
   * A specialized version of `baseIsEqualDeep` for objects with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;
    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
        return false;
      }
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(object);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);
    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key],
        othValue = other[key];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
      }
      // Recursively compare objects (susceptible to call stack limits).
      if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor,
        othCtor = other.constructor;

      // Non `Object` object instances with different constructors are not equal.
      if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
  }

  /**
   * Creates an array of own enumerable property names and symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  }

  /**
   * Gets the data for `map`.
   *
   * @private
   * @param {Object} map The map to query.
   * @param {string} key The reference key.
   * @returns {*} Returns the map data.
   */
  function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
  }

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }

  /**
   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the raw `toStringTag`.
   */
  function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];
    try {
      value[symToStringTag] = undefined;
      var unmasked = true;
    } catch (e) {}
    var result = nativeObjectToString.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }

  /**
   * Creates an array of the own enumerable symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function (symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };

  /**
   * Gets the `toStringTag` of `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  var getTag = baseGetTag;

  // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
  if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
    getTag = function getTag(value) {
      var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';
      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;
          case mapCtorString:
            return mapTag;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag;
          case weakMapCtorString:
            return weakMapTag;
        }
      }
      return result;
    };
  }

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
  }

  /**
   * Checks if `value` is suitable for use as unique object key.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
   */
  function isKeyable(value) {
    var type = _typeof(value);
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
  }

  /**
   * Checks if `func` has its source masked.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` is masked, else `false`.
   */
  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype(value) {
    var Ctor = value && value.constructor,
      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
    return value === proto;
  }

  /**
   * Converts `value` to a string using `Object.prototype.toString`.
   *
   * @private
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   */
  function objectToString(value) {
    return nativeObjectToString.call(value);
  }

  /**
   * Converts `func` to its source code.
   *
   * @private
   * @param {Function} func The function to convert.
   * @returns {string} Returns the source code.
   */
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}
      try {
        return func + '';
      } catch (e) {}
    }
    return '';
  }

  /**
   * Performs a
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * comparison between two values to determine if they are equivalent.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.eq(object, object);
   * // => true
   *
   * _.eq(object, other);
   * // => false
   *
   * _.eq('a', 'a');
   * // => true
   *
   * _.eq('a', Object('a'));
   * // => false
   *
   * _.eq(NaN, NaN);
   * // => true
   */
  function eq(value, other) {
    return value === other || value !== value && other !== other;
  }

  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  var isArguments = baseIsArguments(function () {
    return arguments;
  }()) ? baseIsArguments : function (value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
  };

  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */
  var isArray = Array.isArray;

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }

  /**
   * Checks if `value` is a buffer.
   *
   * @static
   * @memberOf _
   * @since 4.3.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
   * @example
   *
   * _.isBuffer(new Buffer(2));
   * // => true
   *
   * _.isBuffer(new Uint8Array(2));
   * // => false
   */
  var isBuffer = nativeIsBuffer || stubFalse;

  /**
   * Performs a deep comparison between two values to determine if they are
   * equivalent.
   *
   * **Note:** This method supports comparing arrays, array buffers, booleans,
   * date objects, error objects, maps, numbers, `Object` objects, regexes,
   * sets, strings, symbols, and typed arrays. `Object` objects are compared
   * by their own, not inherited, enumerable properties. Functions and DOM
   * nodes are compared by strict equality, i.e. `===`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.isEqual(object, other);
   * // => true
   *
   * object === other;
   * // => false
   */
  function isEqual(value, other) {
    return baseIsEqual(value, other);
  }

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction(value) {
    if (!isObject(value)) {
      return false;
    }
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
  }

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject(value) {
    var type = _typeof(value);
    return value != null && (type == 'object' || type == 'function');
  }

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike(value) {
    return value != null && _typeof(value) == 'object';
  }

  /**
   * Checks if `value` is classified as a typed array.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   * @example
   *
   * _.isTypedArray(new Uint8Array);
   * // => true
   *
   * _.isTypedArray([]);
   * // => false
   */
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }

  /**
   * This method returns a new empty array.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {Array} Returns the new empty array.
   * @example
   *
   * var arrays = _.times(2, _.stubArray);
   *
   * console.log(arrays);
   * // => [[], []]
   *
   * console.log(arrays[0] === arrays[1]);
   * // => false
   */
  function stubArray() {
    return [];
  }

  /**
   * This method returns `false`.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {boolean} Returns `false`.
   * @example
   *
   * _.times(2, _.stubFalse);
   * // => [false, false]
   */
  function stubFalse() {
    return false;
  }
  module.exports = isEqual;
})(lodash_isequal$1, lodash_isequal$1.exports);
var lodash_isequalExports = lodash_isequal$1.exports;
var ys$1 = /*@__PURE__*/getDefaultExportFromCjs$1(lodash_isequalExports);

var ye$4 = "wc",
  De$3 = 2,
  ie$4 = "core",
  x$5 = "".concat(ye$4, "@2:").concat(ie$4, ":"),
  Ye$3 = {
    name: ie$4,
    logger: "error"
  },
  Je$2 = {
    database: ":memory:"
  },
  Xe$2 = "crypto",
  me$4 = "client_ed25519_seed",
  We$3 = cjs$3.ONE_DAY,
  Ze$3 = "keychain",
  Qe$3 = "0.3",
  et$3 = "messages",
  tt$2 = "0.3",
  it$3 = cjs$3.SIX_HOURS,
  st$3 = "publisher",
  rt$3 = "irn",
  nt$3 = "error",
  be$4 = "wss://relay.walletconnect.org",
  ot$3 = "relayer",
  v$4 = {
    message: "relayer_message",
    message_ack: "relayer_message_ack",
    connect: "relayer_connect",
    disconnect: "relayer_disconnect",
    error: "relayer_error",
    connection_stalled: "relayer_connection_stalled",
    transport_closed: "relayer_transport_closed",
    publish: "relayer_publish"
  },
  at$3 = "_subscription",
  I$5 = {
    payload: "payload",
    connect: "connect",
    disconnect: "disconnect",
    error: "error"
  },
  ht$4 = .1,
  ms$2 = {
    database: ":memory:"
  },
  se$4 = "2.17.2",
  bs$1 = 1e4,
  M$4 = {
    link_mode: "link_mode",
    relay: "relay"
  },
  ct$3 = "0.3",
  lt$3 = "WALLETCONNECT_CLIENT_ID",
  fe$3 = "WALLETCONNECT_LINK_MODE_APPS",
  O$4 = {
    created: "subscription_created",
    deleted: "subscription_deleted",
    expired: "subscription_expired",
    disabled: "subscription_disabled",
    sync: "subscription_sync",
    resubscribed: "subscription_resubscribed"
  },
  fs$2 = cjs$3.THIRTY_DAYS,
  ut$3 = "subscription",
  dt$3 = "0.3",
  pt$4 = cjs$3.FIVE_SECONDS * 1e3,
  gt$4 = "pairing",
  yt$4 = "0.3",
  _s$2 = cjs$3.THIRTY_DAYS,
  B$3 = {
    wc_pairingDelete: {
      req: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1e3
      },
      res: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1001
      }
    },
    wc_pairingPing: {
      req: {
        ttl: cjs$3.THIRTY_SECONDS,
        prompt: !1,
        tag: 1002
      },
      res: {
        ttl: cjs$3.THIRTY_SECONDS,
        prompt: !1,
        tag: 1003
      }
    },
    unregistered_method: {
      req: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 0
      },
      res: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 0
      }
    }
  },
  V$4 = {
    create: "pairing_create",
    expire: "pairing_expire",
    "delete": "pairing_delete",
    ping: "pairing_ping"
  },
  P$3 = {
    created: "history_created",
    updated: "history_updated",
    deleted: "history_deleted",
    sync: "history_sync"
  },
  Dt$3 = "history",
  mt$3 = "0.3",
  bt$3 = "expirer",
  S$5 = {
    created: "expirer_created",
    deleted: "expirer_deleted",
    expired: "expirer_expired",
    sync: "expirer_sync"
  },
  ft$3 = "0.3",
  Es$2 = cjs$3.ONE_DAY,
  _t$3 = "verify-api",
  vs$2 = "https://verify.walletconnect.com",
  Et$3 = "https://verify.walletconnect.org",
  J$3 = Et$3,
  vt$3 = "".concat(J$3, "/v3"),
  wt$3 = [vs$2, Et$3],
  It$3 = "echo",
  Tt$3 = "https://echo.walletconnect.com",
  ws$2 = "event-client",
  z$5 = {
    pairing_started: "pairing_started",
    pairing_uri_validation_success: "pairing_uri_validation_success",
    pairing_uri_not_expired: "pairing_uri_not_expired",
    store_new_pairing: "store_new_pairing",
    subscribing_pairing_topic: "subscribing_pairing_topic",
    subscribe_pairing_topic_success: "subscribe_pairing_topic_success",
    existing_pairing: "existing_pairing",
    pairing_not_expired: "pairing_not_expired",
    emit_inactive_pairing: "emit_inactive_pairing",
    emit_session_proposal: "emit_session_proposal",
    subscribing_to_pairing_topic: "subscribing_to_pairing_topic"
  },
  $$4 = {
    no_wss_connection: "no_wss_connection",
    no_internet_connection: "no_internet_connection",
    malformed_pairing_uri: "malformed_pairing_uri",
    active_pairing_already_exists: "active_pairing_already_exists",
    subscribe_pairing_topic_failure: "subscribe_pairing_topic_failure",
    pairing_expired: "pairing_expired",
    proposal_expired: "proposal_expired",
    proposal_listener_not_found: "proposal_listener_not_found"
  },
  Is$2 = {
    session_approve_started: "session_approve_started",
    proposal_not_expired: "proposal_not_expired",
    session_namespaces_validation_success: "session_namespaces_validation_success",
    create_session_topic: "create_session_topic",
    subscribing_session_topic: "subscribing_session_topic",
    subscribe_session_topic_success: "subscribe_session_topic_success",
    publishing_session_approve: "publishing_session_approve",
    session_approve_publish_success: "session_approve_publish_success",
    store_session: "store_session",
    publishing_session_settle: "publishing_session_settle",
    session_settle_publish_success: "session_settle_publish_success"
  },
  Ts$2 = {
    no_internet_connection: "no_internet_connection",
    no_wss_connection: "no_wss_connection",
    proposal_expired: "proposal_expired",
    subscribe_session_topic_failure: "subscribe_session_topic_failure",
    session_approve_publish_failure: "session_approve_publish_failure",
    session_settle_publish_failure: "session_settle_publish_failure",
    session_approve_namespace_validation_failure: "session_approve_namespace_validation_failure",
    proposal_not_found: "proposal_not_found"
  },
  Cs$1 = {
    authenticated_session_approve_started: "authenticated_session_approve_started",
    authenticated_session_not_expired: "authenticated_session_not_expired",
    chains_caip2_compliant: "chains_caip2_compliant",
    chains_evm_compliant: "chains_evm_compliant",
    create_authenticated_session_topic: "create_authenticated_session_topic",
    cacaos_verified: "cacaos_verified",
    store_authenticated_session: "store_authenticated_session",
    subscribing_authenticated_session_topic: "subscribing_authenticated_session_topic",
    subscribe_authenticated_session_topic_success: "subscribe_authenticated_session_topic_success",
    publishing_authenticated_session_approve: "publishing_authenticated_session_approve",
    authenticated_session_approve_publish_success: "authenticated_session_approve_publish_success"
  },
  Ps$2 = {
    no_internet_connection: "no_internet_connection",
    no_wss_connection: "no_wss_connection",
    missing_session_authenticate_request: "missing_session_authenticate_request",
    session_authenticate_request_expired: "session_authenticate_request_expired",
    chains_caip2_compliant_failure: "chains_caip2_compliant_failure",
    chains_evm_compliant_failure: "chains_evm_compliant_failure",
    invalid_cacao: "invalid_cacao",
    subscribe_authenticated_session_topic_failure: "subscribe_authenticated_session_topic_failure",
    authenticated_session_approve_publish_failure: "authenticated_session_approve_publish_failure",
    authenticated_session_pending_request_not_found: "authenticated_session_pending_request_not_found"
  },
  Ct$3 = .1,
  Pt$3 = "event-client",
  St$3 = 86400,
  Rt$3 = "https://pulse.walletconnect.org/batch";
function Ss$2(o, e) {
  if (o.length >= 255) throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), s = 0; s < t.length; s++) t[s] = 255;
  for (var i = 0; i < o.length; i++) {
    var r = o.charAt(i),
      n = r.charCodeAt(0);
    if (t[n] !== 255) throw new TypeError(r + " is ambiguous");
    t[n] = i;
  }
  var a = o.length,
    h = o.charAt(0),
    c = Math.log(a) / Math.log(256),
    l = Math.log(256) / Math.log(a);
  function p(u) {
    if (u instanceof Uint8Array || (ArrayBuffer.isView(u) ? u = new Uint8Array(u.buffer, u.byteOffset, u.byteLength) : Array.isArray(u) && (u = Uint8Array.from(u))), !(u instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (u.length === 0) return "";
    for (var g = 0, _ = 0, y = 0, b = u.length; y !== b && u[y] === 0;) y++, g++;
    for (var A = (b - y) * l + 1 >>> 0, T = new Uint8Array(A); y !== b;) {
      for (var N = u[y], k = 0, R = A - 1; (N !== 0 || k < _) && R !== -1; R--, k++) N += 256 * T[R] >>> 0, T[R] = N % a >>> 0, N = N / a >>> 0;
      if (N !== 0) throw new Error("Non-zero carry");
      _ = k, y++;
    }
    for (var L = A - _; L !== A && T[L] === 0;) L++;
    for (var Q = h.repeat(g); L < A; ++L) Q += o.charAt(T[L]);
    return Q;
  }
  function D(u) {
    if (typeof u != "string") throw new TypeError("Expected String");
    if (u.length === 0) return new Uint8Array();
    var g = 0;
    if (u[g] !== " ") {
      for (var _ = 0, y = 0; u[g] === h;) _++, g++;
      for (var b = (u.length - g) * c + 1 >>> 0, A = new Uint8Array(b); u[g];) {
        var T = t[u.charCodeAt(g)];
        if (T === 255) return;
        for (var N = 0, k = b - 1; (T !== 0 || N < y) && k !== -1; k--, N++) T += a * A[k] >>> 0, A[k] = T % 256 >>> 0, T = T / 256 >>> 0;
        if (T !== 0) throw new Error("Non-zero carry");
        y = N, g++;
      }
      if (u[g] !== " ") {
        for (var R = b - y; R !== b && A[R] === 0;) R++;
        for (var L = new Uint8Array(_ + (b - R)), Q = _; R !== b;) L[Q++] = A[R++];
        return L;
      }
    }
  }
  function m(u) {
    var g = D(u);
    if (g) return g;
    throw new Error("Non-".concat(e, " character"));
  }
  return {
    encode: p,
    decodeUnsafe: D,
    decode: m
  };
}
var Rs$2 = Ss$2,
  xs$1 = Rs$2;
var xt$3 = function xt(o) {
    if (o instanceof Uint8Array && o.constructor.name === "Uint8Array") return o;
    if (o instanceof ArrayBuffer) return new Uint8Array(o);
    if (ArrayBuffer.isView(o)) return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
    throw new Error("Unknown type, must be binary type");
  },
  Os$1 = function Os(o) {
    return new TextEncoder().encode(o);
  },
  As$1 = function As(o) {
    return new TextDecoder().decode(o);
  };
var Ns$2 = /*#__PURE__*/function () {
  function Ns(e, t, s) {
    _classCallCheck(this, Ns);
    this.name = e, this.prefix = t, this.baseEncode = s;
  }
  return _createClass(Ns, [{
    key: "encode",
    value: function encode(e) {
      if (e instanceof Uint8Array) return "".concat(this.prefix).concat(this.baseEncode(e));
      throw Error("Unknown type, must be binary type");
    }
  }]);
}();
var zs$1 = /*#__PURE__*/function () {
  function zs(e, t, s) {
    _classCallCheck(this, zs);
    if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = s;
  }
  return _createClass(zs, [{
    key: "decode",
    value: function decode(e) {
      if (typeof e == "string") {
        if (e.codePointAt(0) !== this.prefixCodePoint) throw Error("Unable to decode multibase string ".concat(JSON.stringify(e), ", ").concat(this.name, " decoder only supports inputs prefixed with ").concat(this.prefix));
        return this.baseDecode(e.slice(this.prefix.length));
      } else throw Error("Can only multibase decode strings");
    }
  }, {
    key: "or",
    value: function or(e) {
      return Ot$3(this, e);
    }
  }]);
}();
var Ls$1 = /*#__PURE__*/function () {
  function Ls(e) {
    _classCallCheck(this, Ls);
    this.decoders = e;
  }
  return _createClass(Ls, [{
    key: "or",
    value: function or(e) {
      return Ot$3(this, e);
    }
  }, {
    key: "decode",
    value: function decode(e) {
      var t = e[0],
        s = this.decoders[t];
      if (s) return s.decode(e);
      throw RangeError("Unable to decode multibase string ".concat(JSON.stringify(e), ", only inputs prefixed with ").concat(Object.keys(this.decoders), " are supported"));
    }
  }]);
}();
var Ot$3 = function Ot(o, e) {
  return new Ls$1(_objectSpread2(_objectSpread2({}, o.decoders || _defineProperty({}, o.prefix, o)), e.decoders || _defineProperty({}, e.prefix, e)));
};
var $s$1 = /*#__PURE__*/function () {
  function $s(e, t, s, i) {
    _classCallCheck(this, $s);
    this.name = e, this.prefix = t, this.baseEncode = s, this.baseDecode = i, this.encoder = new Ns$2(e, t, s), this.decoder = new zs$1(e, t, i);
  }
  return _createClass($s, [{
    key: "encode",
    value: function encode(e) {
      return this.encoder.encode(e);
    }
  }, {
    key: "decode",
    value: function decode(e) {
      return this.decoder.decode(e);
    }
  }]);
}();
var re$3 = function re(_ref3) {
    var o = _ref3.name,
      e = _ref3.prefix,
      t = _ref3.encode,
      s = _ref3.decode;
    return new $s$1(o, e, t, s);
  },
  X$3 = function X(_ref4) {
    var o = _ref4.prefix,
      e = _ref4.name,
      t = _ref4.alphabet;
    var _xs = xs$1(t, e),
      s = _xs.encode,
      i = _xs.decode;
    return re$3({
      prefix: o,
      name: e,
      encode: s,
      decode: function decode(r) {
        return xt$3(i(r));
      }
    });
  },
  ks$1 = function ks(o, e, t, s) {
    var i = {};
    for (var l = 0; l < e.length; ++l) i[e[l]] = l;
    var r = o.length;
    for (; o[r - 1] === "=";) --r;
    var n = new Uint8Array(r * t / 8 | 0);
    var a = 0,
      h = 0,
      c = 0;
    for (var _l = 0; _l < r; ++_l) {
      var p = i[o[_l]];
      if (p === void 0) throw new SyntaxError("Non-".concat(s, " character"));
      h = h << t | p, a += t, a >= 8 && (a -= 8, n[c++] = 255 & h >> a);
    }
    if (a >= t || 255 & h << 8 - a) throw new SyntaxError("Unexpected end of data");
    return n;
  },
  Ms$1 = function Ms(o, e, t) {
    var s = e[e.length - 1] === "=",
      i = (1 << t) - 1;
    var r = "",
      n = 0,
      a = 0;
    for (var h = 0; h < o.length; ++h) for (a = a << 8 | o[h], n += 8; n > t;) n -= t, r += e[i & a >> n];
    if (n && (r += e[i & a << t - n]), s) for (; r.length * t & 7;) r += "=";
    return r;
  },
  f$2 = function f(_ref5) {
    var o = _ref5.name,
      e = _ref5.prefix,
      t = _ref5.bitsPerChar,
      s = _ref5.alphabet;
    return re$3({
      prefix: e,
      name: o,
      encode: function encode(i) {
        return Ms$1(i, s, t);
      },
      decode: function decode(i) {
        return ks$1(i, s, t, o);
      }
    });
  },
  Us$1 = re$3({
    prefix: "\0",
    name: "identity",
    encode: function encode(o) {
      return As$1(o);
    },
    decode: function decode(o) {
      return Os$1(o);
    }
  });
var Fs$1 = Object.freeze({
  __proto__: null,
  identity: Us$1
});
var Ks$1 = f$2({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});
var Bs$1 = Object.freeze({
  __proto__: null,
  base2: Ks$1
});
var Vs$1 = f$2({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});
var js$1 = Object.freeze({
  __proto__: null,
  base8: Vs$1
});
var qs$2 = X$3({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});
var Gs$1 = Object.freeze({
  __proto__: null,
  base10: qs$2
});
var Hs$1 = f$2({
    prefix: "f",
    name: "base16",
    alphabet: "0123456789abcdef",
    bitsPerChar: 4
  }),
  Ys$1 = f$2({
    prefix: "F",
    name: "base16upper",
    alphabet: "0123456789ABCDEF",
    bitsPerChar: 4
  });
var Js$1 = Object.freeze({
  __proto__: null,
  base16: Hs$1,
  base16upper: Ys$1
});
var Xs$1 = f$2({
    prefix: "b",
    name: "base32",
    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
    bitsPerChar: 5
  }),
  Ws$1 = f$2({
    prefix: "B",
    name: "base32upper",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
    bitsPerChar: 5
  }),
  Zs$1 = f$2({
    prefix: "c",
    name: "base32pad",
    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
    bitsPerChar: 5
  }),
  Qs$1 = f$2({
    prefix: "C",
    name: "base32padupper",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
    bitsPerChar: 5
  }),
  er$3 = f$2({
    prefix: "v",
    name: "base32hex",
    alphabet: "0123456789abcdefghijklmnopqrstuv",
    bitsPerChar: 5
  }),
  tr$3 = f$2({
    prefix: "V",
    name: "base32hexupper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
    bitsPerChar: 5
  }),
  ir$3 = f$2({
    prefix: "t",
    name: "base32hexpad",
    alphabet: "0123456789abcdefghijklmnopqrstuv=",
    bitsPerChar: 5
  }),
  sr$3 = f$2({
    prefix: "T",
    name: "base32hexpadupper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
    bitsPerChar: 5
  }),
  rr$3 = f$2({
    prefix: "h",
    name: "base32z",
    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
    bitsPerChar: 5
  });
var nr$3 = Object.freeze({
  __proto__: null,
  base32: Xs$1,
  base32upper: Ws$1,
  base32pad: Zs$1,
  base32padupper: Qs$1,
  base32hex: er$3,
  base32hexupper: tr$3,
  base32hexpad: ir$3,
  base32hexpadupper: sr$3,
  base32z: rr$3
});
var or$3 = X$3({
    prefix: "k",
    name: "base36",
    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
  }),
  ar$3 = X$3({
    prefix: "K",
    name: "base36upper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  });
var hr$3 = Object.freeze({
  __proto__: null,
  base36: or$3,
  base36upper: ar$3
});
var cr$3 = X$3({
    name: "base58btc",
    prefix: "z",
    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
  }),
  lr$3 = X$3({
    name: "base58flickr",
    prefix: "Z",
    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
  });
var ur$3 = Object.freeze({
  __proto__: null,
  base58btc: cr$3,
  base58flickr: lr$3
});
var dr$3 = f$2({
    prefix: "m",
    name: "base64",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    bitsPerChar: 6
  }),
  pr$3 = f$2({
    prefix: "M",
    name: "base64pad",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    bitsPerChar: 6
  }),
  gr$3 = f$2({
    prefix: "u",
    name: "base64url",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
    bitsPerChar: 6
  }),
  yr$3 = f$2({
    prefix: "U",
    name: "base64urlpad",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
    bitsPerChar: 6
  });
var Dr$3 = Object.freeze({
  __proto__: null,
  base64: dr$3,
  base64pad: pr$3,
  base64url: gr$3,
  base64urlpad: yr$3
});
var At$3 = Array.from("\uD83D\uDE80\uD83E\uDE90\u2604\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09\u2600\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02\u2764\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09\u263A\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E\u270C\u2728\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D\u2763\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33\u270B\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13\u2B50\u2705\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6\u2714\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90\u2639\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20\u261D\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B\u26BD\uD83E\uDD19\u2615\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81\u26A1\uD83C\uDF1E\uD83C\uDF88\u274C\u270A\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C\u2708\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74\u25B6\u27A1\u2753\uD83D\uDC8E\uD83D\uDCB8\u2B07\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A\u26A0\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37\u260E\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51\u2744\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"),
  mr$3 = At$3.reduce(function (o, e, t) {
    return o[t] = e, o;
  }, []),
  br$3 = At$3.reduce(function (o, e, t) {
    return o[e.codePointAt(0)] = t, o;
  }, []);
function fr$3(o) {
  return o.reduce(function (e, t) {
    return e += mr$3[t], e;
  }, "");
}
function _r$3(o) {
  var e = [];
  var _iterator = _createForOfIteratorHelper(o),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var t = _step.value;
      var s = br$3[t.codePointAt(0)];
      if (s === void 0) throw new Error("Non-base256emoji character: ".concat(t));
      e.push(s);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return new Uint8Array(e);
}
var Er$3 = re$3({
  prefix: "\uD83D\uDE80",
  name: "base256emoji",
  encode: fr$3,
  decode: _r$3
});
var vr$3 = Object.freeze({
    __proto__: null,
    base256emoji: Er$3
  }),
  wr$3 = zt$3,
  Nt$3 = 128,
  Ir$3 = 127,
  Tr$3 = ~Ir$3,
  Cr$3 = Math.pow(2, 31);
function zt$3(o, e, t) {
  e = e || [], t = t || 0;
  for (var s = t; o >= Cr$3;) e[t++] = o & 255 | Nt$3, o /= 128;
  for (; o & Tr$3;) e[t++] = o & 255 | Nt$3, o >>>= 7;
  return e[t] = o | 0, zt$3.bytes = t - s + 1, e;
}
var Pr$3 = _e$2,
  Sr$3 = 128,
  Lt$3 = 127;
function _e$2(o, s) {
  var t = 0,
    s = s || 0,
    i = 0,
    r = s,
    n,
    a = o.length;
  do {
    if (r >= a) throw _e$2.bytes = 0, new RangeError("Could not decode varint");
    n = o[r++], t += i < 28 ? (n & Lt$3) << i : (n & Lt$3) * Math.pow(2, i), i += 7;
  } while (n >= Sr$3);
  return _e$2.bytes = r - s, t;
}
var Rr$3 = Math.pow(2, 7),
  xr$3 = Math.pow(2, 14),
  Or$3 = Math.pow(2, 21),
  Ar$3 = Math.pow(2, 28),
  Nr$3 = Math.pow(2, 35),
  zr$3 = Math.pow(2, 42),
  Lr$2 = Math.pow(2, 49),
  $r$3 = Math.pow(2, 56),
  kr$2 = Math.pow(2, 63),
  Mr$2 = function Mr(o) {
    return o < Rr$3 ? 1 : o < xr$3 ? 2 : o < Or$3 ? 3 : o < Ar$3 ? 4 : o < Nr$3 ? 5 : o < zr$3 ? 6 : o < Lr$2 ? 7 : o < $r$3 ? 8 : o < kr$2 ? 9 : 10;
  },
  Ur$3 = {
    encode: wr$3,
    decode: Pr$3,
    encodingLength: Mr$2
  },
  $t$3 = Ur$3;
var kt$3 = function kt(o, e) {
    var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    return $t$3.encode(o, e, t), e;
  },
  Mt$3 = function Mt(o) {
    return $t$3.encodingLength(o);
  },
  Ee$3 = function Ee(o, e) {
    var t = e.byteLength,
      s = Mt$3(o),
      i = s + Mt$3(t),
      r = new Uint8Array(i + t);
    return kt$3(o, r, 0), kt$3(t, r, s), r.set(e, i), new Fr$3(o, t, e, r);
  };
var Fr$3 = /*#__PURE__*/_createClass(function Fr(e, t, s, i) {
  _classCallCheck(this, Fr);
  this.code = e, this.size = t, this.digest = s, this.bytes = i;
});
var Ut$3 = function Ut(_ref6) {
  var o = _ref6.name,
    e = _ref6.code,
    t = _ref6.encode;
  return new Kr$2(o, e, t);
};
var Kr$2 = /*#__PURE__*/function () {
  function Kr(e, t, s) {
    _classCallCheck(this, Kr);
    this.name = e, this.code = t, this.encode = s;
  }
  return _createClass(Kr, [{
    key: "digest",
    value: function digest(e) {
      var _this = this;
      if (e instanceof Uint8Array) {
        var t = this.encode(e);
        return t instanceof Uint8Array ? Ee$3(this.code, t) : t.then(function (s) {
          return Ee$3(_this.code, s);
        });
      } else throw Error("Unknown type, must be binary type");
    }
  }]);
}();
var Ft$3 = function Ft(o) {
    return /*#__PURE__*/function () {
      var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.t0 = Uint8Array;
              _context.next = 3;
              return crypto.subtle.digest(o, e);
            case 3:
              _context.t1 = _context.sent;
              return _context.abrupt("return", new _context.t0(_context.t1));
            case 5:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref7.apply(this, arguments);
      };
    }();
  },
  Br$3 = Ut$3({
    name: "sha2-256",
    code: 18,
    encode: Ft$3("SHA-256")
  }),
  Vr$2 = Ut$3({
    name: "sha2-512",
    code: 19,
    encode: Ft$3("SHA-512")
  });
var jr$2 = Object.freeze({
  __proto__: null,
  sha256: Br$3,
  sha512: Vr$2
});
var Kt$3 = 0,
  qr$3 = "identity",
  Bt$3 = xt$3,
  Gr$2 = function Gr(o) {
    return Ee$3(Kt$3, Bt$3(o));
  },
  Hr$2 = {
    code: Kt$3,
    name: qr$3,
    encode: Bt$3,
    digest: Gr$2
  };
var Yr$2 = Object.freeze({
  __proto__: null,
  identity: Hr$2
});
new TextEncoder(), new TextDecoder();
var Vt$3 = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, Fs$1), Bs$1), js$1), Gs$1), Js$1), nr$3), hr$3), ur$3), Dr$3), vr$3);
_objectSpread2(_objectSpread2({}, jr$2), Yr$2);
function Jr$2() {
  var o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(o) : new Uint8Array(o);
}
function jt$3(o, e, t, s) {
  return {
    name: o,
    prefix: e,
    encoder: {
      name: o,
      prefix: e,
      encode: t
    },
    decoder: {
      decode: s
    }
  };
}
var qt$3 = jt$3("utf8", "u", function (o) {
    return "u" + new TextDecoder("utf8").decode(o);
  }, function (o) {
    return new TextEncoder().encode(o.substring(1));
  }),
  ve$2 = jt$3("ascii", "a", function (o) {
    var e = "a";
    for (var t = 0; t < o.length; t++) e += String.fromCharCode(o[t]);
    return e;
  }, function (o) {
    o = o.substring(1);
    var e = Jr$2(o.length);
    for (var t = 0; t < o.length; t++) e[t] = o.charCodeAt(t);
    return e;
  }),
  Xr$2 = _objectSpread2({
    utf8: qt$3,
    "utf-8": qt$3,
    hex: Vt$3.base16,
    latin1: ve$2,
    ascii: ve$2,
    binary: ve$2
  }, Vt$3);
function Wr$2(o) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "utf8";
  var t = Xr$2[e];
  if (!t) throw new Error("Unsupported encoding \"".concat(e, "\""));
  return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(o, "utf8") : t.decoder.decode("".concat(t.prefix).concat(o));
}
var Gt$3 = /*#__PURE__*/function () {
  function Gt(e, t) {
    var _this2 = this;
    _classCallCheck(this, Gt);
    this.core = e, this.logger = t, this.keychain = new Map(), this.name = Ze$3, this.version = Qe$3, this.initialized = !1, this.storagePrefix = x$5, this.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      var s;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            if (_this2.initialized) {
              _context2.next = 5;
              break;
            }
            _context2.next = 3;
            return _this2.getKeyChain();
          case 3:
            s = _context2.sent;
            _typeof(s) < "u" && (_this2.keychain = s), _this2.initialized = !0;
          case 5:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    })), this.has = function (s) {
      return _this2.isInitialized(), _this2.keychain.has(s);
    }, this.set = /*#__PURE__*/function () {
      var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(s, i) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _this2.isInitialized();
              _this2.keychain.set(s, i);
              _context3.next = 4;
              return _this2.persist();
            case 4:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      return function (_x2, _x3) {
        return _ref9.apply(this, arguments);
      };
    }(), this.get = function (s) {
      _this2.isInitialized();
      var i = _this2.keychain.get(s);
      if (_typeof(i) > "u") {
        var _d = S$7("NO_MATCHING_KEY", "".concat(_this2.name, ": ").concat(s)),
          r = _d.message;
        throw new Error(r);
      }
      return i;
    }, this.del = /*#__PURE__*/function () {
      var _ref10 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(s) {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _this2.isInitialized();
              _this2.keychain["delete"](s);
              _context4.next = 4;
              return _this2.persist();
            case 4:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
      return function (_x4) {
        return _ref10.apply(this, arguments);
      };
    }(), this.core = e, this.logger = E$4(t, this.name);
  }
  return _createClass(Gt, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "setKeyChain",
    value: function () {
      var _setKeyChain = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e) {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return this.core.storage.setItem(this.storageKey, Tt$4(e));
            case 2:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function setKeyChain(_x5) {
        return _setKeyChain.apply(this, arguments);
      }
      return setKeyChain;
    }()
  }, {
    key: "getKeyChain",
    value: function () {
      var _getKeyChain = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
        var e;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              e = _context6.sent;
              return _context6.abrupt("return", _typeof(e) < "u" ? Pt$4(e) : void 0);
            case 4:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function getKeyChain() {
        return _getKeyChain.apply(this, arguments);
      }
      return getKeyChain;
    }()
  }, {
    key: "persist",
    value: function () {
      var _persist = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return this.setKeyChain(this.keychain);
            case 2:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function persist() {
        return _persist.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d2 = S$7("NOT_INITIALIZED", this.name),
          e = _d2.message;
        throw new Error(e);
      }
    }
  }]);
}();
var Ht$3 = /*#__PURE__*/function () {
  function Ht(e, t, s) {
    var _this3 = this;
    _classCallCheck(this, Ht);
    this.core = e, this.logger = t, this.name = Xe$2, this.randomSessionIdentifier = pr$4(), this.initialized = !1, this.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
      return _regeneratorRuntime().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            _context8.t0 = _this3.initialized;
            if (_context8.t0) {
              _context8.next = 5;
              break;
            }
            _context8.next = 4;
            return _this3.keychain.init();
          case 4:
            _this3.initialized = !0;
          case 5:
          case "end":
            return _context8.stop();
        }
      }, _callee8);
    })), this.hasKeys = function (i) {
      return _this3.isInitialized(), _this3.keychain.has(i);
    }, this.getClientId = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
      var i, r;
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            _this3.isInitialized();
            _context9.next = 3;
            return _this3.getClientSeed();
          case 3:
            i = _context9.sent;
            r = generateKeyPair(i);
            return _context9.abrupt("return", encodeIss(r.publicKey));
          case 6:
          case "end":
            return _context9.stop();
        }
      }, _callee9);
    })), this.generateKeyPair = function () {
      _this3.isInitialized();
      var i = fr$4();
      return _this3.setPrivateKey(i.publicKey, i.privateKey);
    }, this.signJWT = /*#__PURE__*/function () {
      var _ref13 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(i) {
        var r, n, a, h;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              _this3.isInitialized();
              _context10.next = 3;
              return _this3.getClientSeed();
            case 3:
              r = _context10.sent;
              n = generateKeyPair(r);
              a = _this3.randomSessionIdentifier;
              h = We$3;
              _context10.next = 9;
              return signJWT(a, i, h, n);
            case 9:
              return _context10.abrupt("return", _context10.sent);
            case 10:
            case "end":
              return _context10.stop();
          }
        }, _callee10);
      }));
      return function (_x6) {
        return _ref13.apply(this, arguments);
      };
    }(), this.generateSharedKey = function (i, r, n) {
      _this3.isInitialized();
      var a = _this3.getPrivateKey(i),
        h = mr$4(a, r);
      return _this3.setSymKey(h, n);
    }, this.setSymKey = /*#__PURE__*/function () {
      var _ref14 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(i, r) {
        var n;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              _this3.isInitialized();
              n = r || hr$4(i);
              _context11.next = 4;
              return _this3.keychain.set(n, i);
            case 4:
              return _context11.abrupt("return", n);
            case 5:
            case "end":
              return _context11.stop();
          }
        }, _callee11);
      }));
      return function (_x7, _x8) {
        return _ref14.apply(this, arguments);
      };
    }(), this.deleteKeyPair = /*#__PURE__*/function () {
      var _ref15 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(i) {
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              _this3.isInitialized();
              _context12.next = 3;
              return _this3.keychain.del(i);
            case 3:
            case "end":
              return _context12.stop();
          }
        }, _callee12);
      }));
      return function (_x9) {
        return _ref15.apply(this, arguments);
      };
    }(), this.deleteSymKey = /*#__PURE__*/function () {
      var _ref16 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(i) {
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              _this3.isInitialized();
              _context13.next = 3;
              return _this3.keychain.del(i);
            case 3:
            case "end":
              return _context13.stop();
          }
        }, _callee13);
      }));
      return function (_x10) {
        return _ref16.apply(this, arguments);
      };
    }(), this.encode = /*#__PURE__*/function () {
      var _ref17 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(i, r, n) {
        var a, h, D, m, c, l, p;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              _this3.isInitialized();
              a = On$1(n), h = safeJsonStringify(r);
              if (!Nr$4(a)) {
                _context14.next = 4;
                break;
              }
              return _context14.abrupt("return", vr$4(h, n === null || n === void 0 ? void 0 : n.encoding));
            case 4:
              if (!Or$4(a)) {
                _context14.next = 9;
                break;
              }
              D = a.senderPublicKey, m = a.receiverPublicKey;
              _context14.next = 8;
              return _this3.generateSharedKey(D, m);
            case 8:
              i = _context14.sent;
            case 9:
              c = _this3.getSymKey(i), l = a.type, p = a.senderPublicKey;
              return _context14.abrupt("return", gr$4({
                type: l,
                symKey: c,
                message: h,
                senderPublicKey: p,
                encoding: n === null || n === void 0 ? void 0 : n.encoding
              }));
            case 11:
            case "end":
              return _context14.stop();
          }
        }, _callee14);
      }));
      return function (_x11, _x12, _x13) {
        return _ref17.apply(this, arguments);
      };
    }(), this.decode = /*#__PURE__*/function () {
      var _ref18 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(i, r, n) {
        var a, h, _h, c, _h2, _c;
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              _this3.isInitialized();
              a = wr$4(r, n);
              if (!Nr$4(a)) {
                _context15.next = 5;
                break;
              }
              h = Er$4(r, n === null || n === void 0 ? void 0 : n.encoding);
              return _context15.abrupt("return", safeJsonParse(h));
            case 5:
              if (!Or$4(a)) {
                _context15.next = 10;
                break;
              }
              _h = a.receiverPublicKey, c = a.senderPublicKey;
              _context15.next = 9;
              return _this3.generateSharedKey(_h, c);
            case 9:
              i = _context15.sent;
            case 10:
              _context15.prev = 10;
              _h2 = _this3.getSymKey(i), _c = br$4({
                symKey: _h2,
                encoded: r,
                encoding: n === null || n === void 0 ? void 0 : n.encoding
              });
              return _context15.abrupt("return", safeJsonParse(_c));
            case 15:
              _context15.prev = 15;
              _context15.t0 = _context15["catch"](10);
              _context15.t1 = _this3.logger;
              _context15.t2 = "Failed to decode message from topic: '".concat(i, "', clientId: '");
              _context15.next = 21;
              return _this3.getClientId();
            case 21:
              _context15.t3 = _context15.sent;
              _context15.t4 = _context15.t2.concat.call(_context15.t2, _context15.t3, "'");
              _context15.t1.error.call(_context15.t1, _context15.t4);
              _this3.logger.error(_context15.t0);
            case 25:
            case "end":
              return _context15.stop();
          }
        }, _callee15, null, [[10, 15]]);
      }));
      return function (_x14, _x15, _x16) {
        return _ref18.apply(this, arguments);
      };
    }(), this.getPayloadType = function (i) {
      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ge$2;
      var n = Q$3({
        encoded: i,
        encoding: r
      });
      return A$2(n.type);
    }, this.getPayloadSenderPublicKey = function (i) {
      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ge$2;
      var n = Q$3({
        encoded: i,
        encoding: r
      });
      return n.senderPublicKey ? toString(n.senderPublicKey, g$3) : void 0;
    }, this.core = e, this.logger = E$4(t, this.name), this.keychain = s || new Gt$3(this.core, this.logger);
  }
  return _createClass(Ht, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "setPrivateKey",
    value: function () {
      var _setPrivateKey = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(e, t) {
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return this.keychain.set(e, t);
            case 2:
              return _context16.abrupt("return", e);
            case 3:
            case "end":
              return _context16.stop();
          }
        }, _callee16, this);
      }));
      function setPrivateKey(_x17, _x18) {
        return _setPrivateKey.apply(this, arguments);
      }
      return setPrivateKey;
    }()
  }, {
    key: "getPrivateKey",
    value: function getPrivateKey(e) {
      return this.keychain.get(e);
    }
  }, {
    key: "getClientSeed",
    value: function () {
      var _getClientSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
        var e;
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              e = "";
              _context17.prev = 1;
              e = this.keychain.get(me$4);
              _context17.next = 10;
              break;
            case 5:
              _context17.prev = 5;
              _context17.t0 = _context17["catch"](1);
              e = pr$4();
              _context17.next = 10;
              return this.keychain.set(me$4, e);
            case 10:
              return _context17.abrupt("return", Wr$2(e, "base16"));
            case 11:
            case "end":
              return _context17.stop();
          }
        }, _callee17, this, [[1, 5]]);
      }));
      function getClientSeed() {
        return _getClientSeed.apply(this, arguments);
      }
      return getClientSeed;
    }()
  }, {
    key: "getSymKey",
    value: function getSymKey(e) {
      return this.keychain.get(e);
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d3 = S$7("NOT_INITIALIZED", this.name),
          e = _d3.message;
        throw new Error(e);
      }
    }
  }]);
}();
var Yt$3 = /*#__PURE__*/function (_vi) {
  function Yt(e, t) {
    var _this4;
    _classCallCheck(this, Yt);
    _this4 = _callSuper(this, Yt, [e, t]), _this4.logger = e, _this4.core = t, _this4.messages = new Map(), _this4.name = et$3, _this4.version = tt$2, _this4.initialized = !1, _this4.storagePrefix = x$5, _this4.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {
      var s;
      return _regeneratorRuntime().wrap(function _callee18$(_context18) {
        while (1) switch (_context18.prev = _context18.next) {
          case 0:
            if (_this4.initialized) {
              _context18.next = 15;
              break;
            }
            _this4.logger.trace("Initialized");
            _context18.prev = 2;
            _context18.next = 5;
            return _this4.getRelayerMessages();
          case 5:
            s = _context18.sent;
            _typeof(s) < "u" && (_this4.messages = s), _this4.logger.debug("Successfully Restored records for ".concat(_this4.name)), _this4.logger.trace({
              type: "method",
              method: "restore",
              size: _this4.messages.size
            });
            _context18.next = 12;
            break;
          case 9:
            _context18.prev = 9;
            _context18.t0 = _context18["catch"](2);
            _this4.logger.debug("Failed to Restore records for ".concat(_this4.name)), _this4.logger.error(_context18.t0);
          case 12:
            _context18.prev = 12;
            _this4.initialized = !0;
            return _context18.finish(12);
          case 15:
          case "end":
            return _context18.stop();
        }
      }, _callee18, null, [[2, 9, 12, 15]]);
    })), _this4.set = /*#__PURE__*/function () {
      var _ref20 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(s, i) {
        var r, n;
        return _regeneratorRuntime().wrap(function _callee19$(_context19) {
          while (1) switch (_context19.prev = _context19.next) {
            case 0:
              _this4.isInitialized();
              r = yr$4(i);
              n = _this4.messages.get(s);
              _typeof(n) > "u" && (n = {});
              _context19.t0 = _typeof(n[r]) < "u";
              if (_context19.t0) {
                _context19.next = 10;
                break;
              }
              n[r] = i;
              _this4.messages.set(s, n);
              _context19.next = 10;
              return _this4.persist();
            case 10:
              return _context19.abrupt("return", r);
            case 11:
            case "end":
              return _context19.stop();
          }
        }, _callee19);
      }));
      return function (_x19, _x20) {
        return _ref20.apply(this, arguments);
      };
    }(), _this4.get = function (s) {
      _this4.isInitialized();
      var i = _this4.messages.get(s);
      return _typeof(i) > "u" && (i = {}), i;
    }, _this4.has = function (s, i) {
      _this4.isInitialized();
      var r = _this4.get(s),
        n = yr$4(i);
      return _typeof(r[n]) < "u";
    }, _this4.del = /*#__PURE__*/function () {
      var _ref21 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(s) {
        return _regeneratorRuntime().wrap(function _callee20$(_context20) {
          while (1) switch (_context20.prev = _context20.next) {
            case 0:
              _this4.isInitialized();
              _this4.messages["delete"](s);
              _context20.next = 4;
              return _this4.persist();
            case 4:
            case "end":
              return _context20.stop();
          }
        }, _callee20);
      }));
      return function (_x21) {
        return _ref21.apply(this, arguments);
      };
    }(), _this4.logger = E$4(e, _this4.name), _this4.core = t;
    return _this4;
  }
  _inherits(Yt, _vi);
  return _createClass(Yt, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "setRelayerMessages",
    value: function () {
      var _setRelayerMessages = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21(e) {
        return _regeneratorRuntime().wrap(function _callee21$(_context21) {
          while (1) switch (_context21.prev = _context21.next) {
            case 0:
              _context21.next = 2;
              return this.core.storage.setItem(this.storageKey, Tt$4(e));
            case 2:
            case "end":
              return _context21.stop();
          }
        }, _callee21, this);
      }));
      function setRelayerMessages(_x22) {
        return _setRelayerMessages.apply(this, arguments);
      }
      return setRelayerMessages;
    }()
  }, {
    key: "getRelayerMessages",
    value: function () {
      var _getRelayerMessages = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {
        var e;
        return _regeneratorRuntime().wrap(function _callee22$(_context22) {
          while (1) switch (_context22.prev = _context22.next) {
            case 0:
              _context22.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              e = _context22.sent;
              return _context22.abrupt("return", _typeof(e) < "u" ? Pt$4(e) : void 0);
            case 4:
            case "end":
              return _context22.stop();
          }
        }, _callee22, this);
      }));
      function getRelayerMessages() {
        return _getRelayerMessages.apply(this, arguments);
      }
      return getRelayerMessages;
    }()
  }, {
    key: "persist",
    value: function () {
      var _persist2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {
        return _regeneratorRuntime().wrap(function _callee23$(_context23) {
          while (1) switch (_context23.prev = _context23.next) {
            case 0:
              _context23.next = 2;
              return this.setRelayerMessages(this.messages);
            case 2:
            case "end":
              return _context23.stop();
          }
        }, _callee23, this);
      }));
      function persist() {
        return _persist2.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d4 = S$7("NOT_INITIALIZED", this.name),
          e = _d4.message;
        throw new Error(e);
      }
    }
  }]);
}(a$3);
var Zr$2 = /*#__PURE__*/function (_wi) {
  function Zr(e, t) {
    var _this5;
    _classCallCheck(this, Zr);
    _this5 = _callSuper(this, Zr, [e, t]), _this5.relayer = e, _this5.logger = t, _this5.events = new eventsExports.EventEmitter(), _this5.name = st$3, _this5.queue = new Map(), _this5.publishTimeout = cjs$3.toMiliseconds(cjs$3.ONE_MINUTE), _this5.failedPublishTimeout = cjs$3.toMiliseconds(cjs$3.ONE_SECOND), _this5.needsTransportRestart = !1, _this5.publish = /*#__PURE__*/function () {
      var _ref22 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee24(s, i, r) {
        var n, a, h, c, l, p, D, m, u, g, _;
        return _regeneratorRuntime().wrap(function _callee24$(_context24) {
          while (1) switch (_context24.prev = _context24.next) {
            case 0:
              _this5.logger.debug("Publishing Payload"), _this5.logger.trace({
                type: "method",
                method: "publish",
                params: {
                  topic: s,
                  message: i,
                  opts: r
                }
              });
              a = (r === null || r === void 0 ? void 0 : r.ttl) || it$3, h = Ir$4(r), c = (r === null || r === void 0 ? void 0 : r.prompt) || !1, l = (r === null || r === void 0 ? void 0 : r.tag) || 0, p = (r === null || r === void 0 ? void 0 : r.id) || getBigIntRpcId().toString(), D = {
                topic: s,
                message: i,
                opts: {
                  ttl: a,
                  relay: h,
                  prompt: c,
                  tag: l,
                  id: p,
                  attestation: r === null || r === void 0 ? void 0 : r.attestation
                }
              }, m = "Failed to publish payload, please try again. id:".concat(p, " tag:").concat(l), u = Date.now();
              _ = 1;
              _context24.prev = 3;
            case 4:
              if (!(g === void 0)) {
                _context24.next = 20;
                break;
              }
              if (!(Date.now() - u > _this5.publishTimeout)) {
                _context24.next = 7;
                break;
              }
              throw new Error(m);
            case 7:
              _this5.logger.trace({
                id: p,
                attempts: _
              }, "publisher.publish - attempt ".concat(_));
              _context24.next = 10;
              return kt$4(_this5.rpcPublish(s, i, a, h, c, l, p, r === null || r === void 0 ? void 0 : r.attestation)["catch"](function (y) {
                return _this5.logger.warn(y);
              }), _this5.publishTimeout, m);
            case 10:
              _context24.next = 12;
              return _context24.sent;
            case 12:
              g = _context24.sent;
              _++;
              _context24.t0 = g;
              if (_context24.t0) {
                _context24.next = 18;
                break;
              }
              _context24.next = 18;
              return new Promise(function (y) {
                return setTimeout(y, _this5.failedPublishTimeout);
              });
            case 18:
              _context24.next = 4;
              break;
            case 20:
              _this5.relayer.events.emit(v$4.publish, D), _this5.logger.debug("Successfully Published Payload"), _this5.logger.trace({
                type: "method",
                method: "publish",
                params: {
                  id: p,
                  topic: s,
                  message: i,
                  opts: r
                }
              });
              _context24.next = 28;
              break;
            case 23:
              _context24.prev = 23;
              _context24.t1 = _context24["catch"](3);
              if (!(_this5.logger.debug("Failed to Publish Payload"), _this5.logger.error(_context24.t1), (n = r === null || r === void 0 ? void 0 : r.internal) != null && n.throwOnFailedPublish)) {
                _context24.next = 27;
                break;
              }
              throw _context24.t1;
            case 27:
              _this5.queue.set(p, D);
            case 28:
            case "end":
              return _context24.stop();
          }
        }, _callee24, null, [[3, 23]]);
      }));
      return function (_x23, _x24, _x25) {
        return _ref22.apply(this, arguments);
      };
    }(), _this5.on = function (s, i) {
      _this5.events.on(s, i);
    }, _this5.once = function (s, i) {
      _this5.events.once(s, i);
    }, _this5.off = function (s, i) {
      _this5.events.off(s, i);
    }, _this5.removeListener = function (s, i) {
      _this5.events.removeListener(s, i);
    }, _this5.relayer = e, _this5.logger = E$4(t, _this5.name), _this5.registerEventListeners();
    return _this5;
  }
  _inherits(Zr, _wi);
  return _createClass(Zr, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "rpcPublish",
    value: function rpcPublish(e, t, s, i, r, n, a, h) {
      var c, l, p, D;
      var m = {
        method: jr$3(i.protocol).publish,
        params: {
          topic: e,
          message: t,
          ttl: s,
          prompt: r,
          tag: n,
          attestation: h
        },
        id: a
      };
      return I$6((c = m.params) == null ? void 0 : c.prompt) && ((l = m.params) == null || delete l.prompt), I$6((p = m.params) == null ? void 0 : p.tag) && ((D = m.params) == null || delete D.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
        type: "message",
        direction: "outgoing",
        request: m
      }), this.relayer.request(m);
    }
  }, {
    key: "removeRequestFromQueue",
    value: function removeRequestFromQueue(e) {
      this.queue["delete"](e);
    }
  }, {
    key: "checkQueue",
    value: function checkQueue() {
      var _this6 = this;
      this.queue.forEach(/*#__PURE__*/function () {
        var _ref23 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee25(e) {
          var t, s, i;
          return _regeneratorRuntime().wrap(function _callee25$(_context25) {
            while (1) switch (_context25.prev = _context25.next) {
              case 0:
                t = e.topic, s = e.message, i = e.opts;
                _context25.next = 3;
                return _this6.publish(t, s, i);
              case 3:
              case "end":
                return _context25.stop();
            }
          }, _callee25);
        }));
        return function (_x26) {
          return _ref23.apply(this, arguments);
        };
      }());
    }
  }, {
    key: "registerEventListeners",
    value: function registerEventListeners() {
      var _this7 = this;
      this.relayer.core.heartbeat.on(r$4.pulse, function () {
        if (_this7.needsTransportRestart) {
          _this7.needsTransportRestart = !1, _this7.relayer.events.emit(v$4.connection_stalled);
          return;
        }
        _this7.checkQueue();
      }), this.relayer.on(v$4.message_ack, function (e) {
        _this7.removeRequestFromQueue(e.id.toString());
      });
    }
  }]);
}(g$5);
var Qr$2 = /*#__PURE__*/function () {
  function Qr() {
    var _this8 = this;
    _classCallCheck(this, Qr);
    this.map = new Map(), this.set = function (e, t) {
      var s = _this8.get(e);
      _this8.exists(e, t) || _this8.map.set(e, [].concat(_toConsumableArray(s), [t]));
    }, this.get = function (e) {
      return _this8.map.get(e) || [];
    }, this.exists = function (e, t) {
      return _this8.get(e).includes(t);
    }, this["delete"] = function (e, t) {
      if (_typeof(t) > "u") {
        _this8.map["delete"](e);
        return;
      }
      if (!_this8.map.has(e)) return;
      var s = _this8.get(e);
      if (!_this8.exists(e, t)) return;
      var i = s.filter(function (r) {
        return r !== t;
      });
      if (!i.length) {
        _this8.map["delete"](e);
        return;
      }
      _this8.map.set(e, i);
    }, this.clear = function () {
      _this8.map.clear();
    };
  }
  return _createClass(Qr, [{
    key: "topics",
    get: function get() {
      return Array.from(this.map.keys());
    }
  }]);
}();
var en$2 = Object.defineProperty,
  tn$2 = Object.defineProperties,
  sn$2 = Object.getOwnPropertyDescriptors,
  Jt$3 = Object.getOwnPropertySymbols,
  rn$2 = Object.prototype.hasOwnProperty,
  nn$2 = Object.prototype.propertyIsEnumerable,
  Xt$3 = function Xt(o, e, t) {
    return e in o ? en$2(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  W$3 = function W(o, e) {
    for (var t in e || (e = {})) rn$2.call(e, t) && Xt$3(o, t, e[t]);
    if (Jt$3) {
      var _iterator2 = _createForOfIteratorHelper(Jt$3(e)),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var t = _step2.value;
          nn$2.call(e, t) && Xt$3(o, t, e[t]);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    return o;
  },
  we$4 = function we(o, e) {
    return tn$2(o, sn$2(e));
  };
var Wt$3 = /*#__PURE__*/function (_Ii) {
  function Wt(e, t) {
    var _this9;
    _classCallCheck(this, Wt);
    _this9 = _callSuper(this, Wt, [e, t]), _this9.relayer = e, _this9.logger = t, _this9.subscriptions = new Map(), _this9.topicMap = new Qr$2(), _this9.events = new eventsExports.EventEmitter(), _this9.name = ut$3, _this9.version = dt$3, _this9.pending = new Map(), _this9.cached = [], _this9.initialized = !1, _this9.pendingSubscriptionWatchLabel = "pending_sub_watch_label", _this9.pollingInterval = 20, _this9.storagePrefix = x$5, _this9.subscribeTimeout = cjs$3.toMiliseconds(cjs$3.ONE_MINUTE), _this9.restartInProgress = !1, _this9.batchSubscribeTopicsLimit = 500, _this9.pendingBatchMessages = [], _this9.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {
      return _regeneratorRuntime().wrap(function _callee26$(_context26) {
        while (1) switch (_context26.prev = _context26.next) {
          case 0:
            _context26.t0 = _this9.initialized;
            if (_context26.t0) {
              _context26.next = 9;
              break;
            }
            _this9.logger.trace("Initialized");
            _this9.registerEventListeners();
            _context26.next = 6;
            return _this9.relayer.core.crypto.getClientId();
          case 6:
            _this9.clientId = _context26.sent;
            _context26.next = 9;
            return _this9.restore();
          case 9:
            _this9.initialized = !0;
          case 10:
          case "end":
            return _context26.stop();
        }
      }, _callee26);
    })), _this9.subscribe = /*#__PURE__*/function () {
      var _ref25 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee27(s, i) {
        var r, n, a;
        return _regeneratorRuntime().wrap(function _callee27$(_context27) {
          while (1) switch (_context27.prev = _context27.next) {
            case 0:
              _this9.isInitialized(), _this9.logger.debug("Subscribing Topic"), _this9.logger.trace({
                type: "method",
                method: "subscribe",
                params: {
                  topic: s,
                  opts: i
                }
              });
              _context27.prev = 1;
              r = Ir$4(i), n = {
                topic: s,
                relay: r,
                transportType: i === null || i === void 0 ? void 0 : i.transportType
              };
              _this9.pending.set(s, n);
              _context27.next = 6;
              return _this9.rpcSubscribe(s, r, i);
            case 6:
              a = _context27.sent;
              return _context27.abrupt("return", (typeof a == "string" && (_this9.onSubscribe(a, n), _this9.logger.debug("Successfully Subscribed Topic"), _this9.logger.trace({
                type: "method",
                method: "subscribe",
                params: {
                  topic: s,
                  opts: i
                }
              })), a));
            case 10:
              _context27.prev = 10;
              _context27.t0 = _context27["catch"](1);
              throw _this9.logger.debug("Failed to Subscribe Topic"), _this9.logger.error(_context27.t0), _context27.t0;
            case 13:
            case "end":
              return _context27.stop();
          }
        }, _callee27, null, [[1, 10]]);
      }));
      return function (_x27, _x28) {
        return _ref25.apply(this, arguments);
      };
    }(), _this9.unsubscribe = /*#__PURE__*/function () {
      var _ref26 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee28(s, i) {
        return _regeneratorRuntime().wrap(function _callee28$(_context28) {
          while (1) switch (_context28.prev = _context28.next) {
            case 0:
              _context28.next = 2;
              return _this9.restartToComplete();
            case 2:
              _this9.isInitialized();
              if (!(_typeof(i === null || i === void 0 ? void 0 : i.id) < "u")) {
                _context28.next = 8;
                break;
              }
              _context28.next = 6;
              return _this9.unsubscribeById(s, i.id, i);
            case 6:
              _context28.next = 10;
              break;
            case 8:
              _context28.next = 10;
              return _this9.unsubscribeByTopic(s, i);
            case 10:
            case "end":
              return _context28.stop();
          }
        }, _callee28);
      }));
      return function (_x29, _x30) {
        return _ref26.apply(this, arguments);
      };
    }(), _this9.isSubscribed = /*#__PURE__*/function () {
      var _ref27 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee29(s) {
        var i;
        return _regeneratorRuntime().wrap(function _callee29$(_context29) {
          while (1) switch (_context29.prev = _context29.next) {
            case 0:
              if (!_this9.topics.includes(s)) {
                _context29.next = 2;
                break;
              }
              return _context29.abrupt("return", !0);
            case 2:
              i = "".concat(_this9.pendingSubscriptionWatchLabel, "_").concat(s);
              _context29.next = 5;
              return new Promise(function (r, n) {
                var a = new cjs$3.Watch();
                a.start(i);
                var h = setInterval(function () {
                  !_this9.pending.has(s) && _this9.topics.includes(s) && (clearInterval(h), a.stop(i), r(!0)), a.elapsed(i) >= pt$4 && (clearInterval(h), a.stop(i), n(new Error("Subscription resolution timeout")));
                }, _this9.pollingInterval);
              })["catch"](function () {
                return !1;
              });
            case 5:
              return _context29.abrupt("return", _context29.sent);
            case 6:
            case "end":
              return _context29.stop();
          }
        }, _callee29);
      }));
      return function (_x31) {
        return _ref27.apply(this, arguments);
      };
    }(), _this9.on = function (s, i) {
      _this9.events.on(s, i);
    }, _this9.once = function (s, i) {
      _this9.events.once(s, i);
    }, _this9.off = function (s, i) {
      _this9.events.off(s, i);
    }, _this9.removeListener = function (s, i) {
      _this9.events.removeListener(s, i);
    }, _this9.start = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee30() {
      return _regeneratorRuntime().wrap(function _callee30$(_context30) {
        while (1) switch (_context30.prev = _context30.next) {
          case 0:
            _context30.next = 2;
            return _this9.onConnect();
          case 2:
          case "end":
            return _context30.stop();
        }
      }, _callee30);
    })), _this9.stop = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee31() {
      return _regeneratorRuntime().wrap(function _callee31$(_context31) {
        while (1) switch (_context31.prev = _context31.next) {
          case 0:
            _context31.next = 2;
            return _this9.onDisconnect();
          case 2:
          case "end":
            return _context31.stop();
        }
      }, _callee31);
    })), _this9.restart = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {
      return _regeneratorRuntime().wrap(function _callee32$(_context32) {
        while (1) switch (_context32.prev = _context32.next) {
          case 0:
            _this9.restartInProgress = !0;
            _context32.next = 3;
            return _this9.restore();
          case 3:
            _context32.next = 5;
            return _this9.reset();
          case 5:
            _this9.restartInProgress = !1;
          case 6:
          case "end":
            return _context32.stop();
        }
      }, _callee32);
    })), _this9.relayer = e, _this9.logger = E$4(t, _this9.name), _this9.clientId = "";
    return _this9;
  }
  _inherits(Wt, _Ii);
  return _createClass(Wt, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "length",
    get: function get() {
      return this.subscriptions.size;
    }
  }, {
    key: "ids",
    get: function get() {
      return Array.from(this.subscriptions.keys());
    }
  }, {
    key: "values",
    get: function get() {
      return Array.from(this.subscriptions.values());
    }
  }, {
    key: "topics",
    get: function get() {
      return this.topicMap.topics;
    }
  }, {
    key: "hasSubscription",
    value: function hasSubscription(e, t) {
      var s = !1;
      try {
        s = this.getSubscription(e).topic === t;
      } catch (_unused2) {}
      return s;
    }
  }, {
    key: "onEnable",
    value: function onEnable() {
      this.cached = [], this.initialized = !0;
    }
  }, {
    key: "onDisable",
    value: function onDisable() {
      this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
    }
  }, {
    key: "unsubscribeByTopic",
    value: function () {
      var _unsubscribeByTopic = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee34(e, t) {
        var _this10 = this;
        var s;
        return _regeneratorRuntime().wrap(function _callee34$(_context34) {
          while (1) switch (_context34.prev = _context34.next) {
            case 0:
              s = this.topicMap.get(e);
              _context34.next = 3;
              return Promise.all(s.map(/*#__PURE__*/function () {
                var _ref31 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee33(i) {
                  return _regeneratorRuntime().wrap(function _callee33$(_context33) {
                    while (1) switch (_context33.prev = _context33.next) {
                      case 0:
                        _context33.next = 2;
                        return _this10.unsubscribeById(e, i, t);
                      case 2:
                        return _context33.abrupt("return", _context33.sent);
                      case 3:
                      case "end":
                        return _context33.stop();
                    }
                  }, _callee33);
                }));
                return function (_x34) {
                  return _ref31.apply(this, arguments);
                };
              }()));
            case 3:
            case "end":
              return _context34.stop();
          }
        }, _callee34, this);
      }));
      function unsubscribeByTopic(_x32, _x33) {
        return _unsubscribeByTopic.apply(this, arguments);
      }
      return unsubscribeByTopic;
    }()
  }, {
    key: "unsubscribeById",
    value: function () {
      var _unsubscribeById = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee35(e, t, s) {
        var i, r;
        return _regeneratorRuntime().wrap(function _callee35$(_context35) {
          while (1) switch (_context35.prev = _context35.next) {
            case 0:
              this.logger.debug("Unsubscribing Topic"), this.logger.trace({
                type: "method",
                method: "unsubscribe",
                params: {
                  topic: e,
                  id: t,
                  opts: s
                }
              });
              _context35.prev = 1;
              i = Ir$4(s);
              _context35.next = 5;
              return this.rpcUnsubscribe(e, t, i);
            case 5:
              r = U$3("USER_DISCONNECTED", "".concat(this.name, ", ").concat(e));
              _context35.next = 8;
              return this.onUnsubscribe(e, t, r);
            case 8:
              this.logger.debug("Successfully Unsubscribed Topic");
              this.logger.trace({
                type: "method",
                method: "unsubscribe",
                params: {
                  topic: e,
                  id: t,
                  opts: s
                }
              });
              _context35.next = 15;
              break;
            case 12:
              _context35.prev = 12;
              _context35.t0 = _context35["catch"](1);
              throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(_context35.t0), _context35.t0;
            case 15:
            case "end":
              return _context35.stop();
          }
        }, _callee35, this, [[1, 12]]);
      }));
      function unsubscribeById(_x35, _x36, _x37) {
        return _unsubscribeById.apply(this, arguments);
      }
      return unsubscribeById;
    }()
  }, {
    key: "rpcSubscribe",
    value: function () {
      var _rpcSubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee36(e, t, s) {
        var _this11 = this;
        var i, r, n, a, h;
        return _regeneratorRuntime().wrap(function _callee36$(_context36) {
          while (1) switch (_context36.prev = _context36.next) {
            case 0:
              _context36.t0 = (s === null || s === void 0 ? void 0 : s.transportType) === M$4.relay;
              if (!_context36.t0) {
                _context36.next = 4;
                break;
              }
              _context36.next = 4;
              return this.restartToComplete();
            case 4:
              r = {
                method: jr$3(t.protocol).subscribe,
                params: {
                  topic: e
                }
              };
              this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                type: "payload",
                direction: "outgoing",
                request: r
              });
              n = (i = s === null || s === void 0 ? void 0 : s.internal) == null ? void 0 : i.throwOnFailedPublish;
              _context36.prev = 7;
              a = yr$4(e + this.clientId);
              if (!((s === null || s === void 0 ? void 0 : s.transportType) === M$4.link_mode)) {
                _context36.next = 11;
                break;
              }
              return _context36.abrupt("return", (setTimeout(function () {
                (_this11.relayer.connected || _this11.relayer.connecting) && _this11.relayer.request(r)["catch"](function (c) {
                  return _this11.logger.warn(c);
                });
              }, cjs$3.toMiliseconds(cjs$3.ONE_SECOND)), a));
            case 11:
              _context36.next = 13;
              return kt$4(this.relayer.request(r)["catch"](function (c) {
                return _this11.logger.warn(c);
              }), this.subscribeTimeout, "Subscribing to ".concat(e, " failed, please try again"));
            case 13:
              h = _context36.sent;
              if (!(!h && n)) {
                _context36.next = 16;
                break;
              }
              throw new Error("Subscribing to ".concat(e, " failed, please try again"));
            case 16:
              return _context36.abrupt("return", h ? a : null);
            case 19:
              _context36.prev = 19;
              _context36.t1 = _context36["catch"](7);
              if (!(this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(v$4.connection_stalled), n)) {
                _context36.next = 23;
                break;
              }
              throw _context36.t1;
            case 23:
              return _context36.abrupt("return", null);
            case 24:
            case "end":
              return _context36.stop();
          }
        }, _callee36, this, [[7, 19]]);
      }));
      function rpcSubscribe(_x38, _x39, _x40) {
        return _rpcSubscribe.apply(this, arguments);
      }
      return rpcSubscribe;
    }()
  }, {
    key: "rpcBatchSubscribe",
    value: function () {
      var _rpcBatchSubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee37(e) {
        var _this12 = this;
        var t, s;
        return _regeneratorRuntime().wrap(function _callee37$(_context37) {
          while (1) switch (_context37.prev = _context37.next) {
            case 0:
              if (e.length) {
                _context37.next = 2;
                break;
              }
              return _context37.abrupt("return");
            case 2:
              t = e[0].relay, s = {
                method: jr$3(t.protocol).batchSubscribe,
                params: {
                  topics: e.map(function (i) {
                    return i.topic;
                  })
                }
              };
              this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                type: "payload",
                direction: "outgoing",
                request: s
              });
              _context37.prev = 4;
              _context37.next = 7;
              return kt$4(this.relayer.request(s)["catch"](function (i) {
                return _this12.logger.warn(i);
              }), this.subscribeTimeout);
            case 7:
              _context37.next = 9;
              return _context37.sent;
            case 9:
              return _context37.abrupt("return", _context37.sent);
            case 12:
              _context37.prev = 12;
              _context37.t0 = _context37["catch"](4);
              this.relayer.events.emit(v$4.connection_stalled);
            case 15:
            case "end":
              return _context37.stop();
          }
        }, _callee37, this, [[4, 12]]);
      }));
      function rpcBatchSubscribe(_x41) {
        return _rpcBatchSubscribe.apply(this, arguments);
      }
      return rpcBatchSubscribe;
    }()
  }, {
    key: "rpcBatchFetchMessages",
    value: function () {
      var _rpcBatchFetchMessages = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee38(e) {
        var _this13 = this;
        var t, s, i;
        return _regeneratorRuntime().wrap(function _callee38$(_context38) {
          while (1) switch (_context38.prev = _context38.next) {
            case 0:
              if (e.length) {
                _context38.next = 2;
                break;
              }
              return _context38.abrupt("return");
            case 2:
              t = e[0].relay, s = {
                method: jr$3(t.protocol).batchFetchMessages,
                params: {
                  topics: e.map(function (r) {
                    return r.topic;
                  })
                }
              };
              this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                type: "payload",
                direction: "outgoing",
                request: s
              });
              _context38.prev = 4;
              _context38.next = 7;
              return kt$4(this.relayer.request(s)["catch"](function (r) {
                return _this13.logger.warn(r);
              }), this.subscribeTimeout);
            case 7:
              _context38.next = 9;
              return _context38.sent;
            case 9:
              i = _context38.sent;
              _context38.next = 15;
              break;
            case 12:
              _context38.prev = 12;
              _context38.t0 = _context38["catch"](4);
              this.relayer.events.emit(v$4.connection_stalled);
            case 15:
              return _context38.abrupt("return", i);
            case 16:
            case "end":
              return _context38.stop();
          }
        }, _callee38, this, [[4, 12]]);
      }));
      function rpcBatchFetchMessages(_x42) {
        return _rpcBatchFetchMessages.apply(this, arguments);
      }
      return rpcBatchFetchMessages;
    }()
  }, {
    key: "rpcUnsubscribe",
    value: function rpcUnsubscribe(e, t, s) {
      var i = {
        method: jr$3(s.protocol).unsubscribe,
        params: {
          topic: e,
          id: t
        }
      };
      return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
        type: "payload",
        direction: "outgoing",
        request: i
      }), this.relayer.request(i);
    }
  }, {
    key: "onSubscribe",
    value: function onSubscribe(e, t) {
      this.setSubscription(e, we$4(W$3({}, t), {
        id: e
      })), this.pending["delete"](t.topic);
    }
  }, {
    key: "onBatchSubscribe",
    value: function onBatchSubscribe(e) {
      var _this14 = this;
      e.length && e.forEach(function (t) {
        _this14.setSubscription(t.id, W$3({}, t)), _this14.pending["delete"](t.topic);
      });
    }
  }, {
    key: "onUnsubscribe",
    value: function () {
      var _onUnsubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee39(e, t, s) {
        return _regeneratorRuntime().wrap(function _callee39$(_context39) {
          while (1) switch (_context39.prev = _context39.next) {
            case 0:
              this.events.removeAllListeners(t);
              this.hasSubscription(t, e) && this.deleteSubscription(t, s);
              _context39.next = 4;
              return this.relayer.messages.del(e);
            case 4:
            case "end":
              return _context39.stop();
          }
        }, _callee39, this);
      }));
      function onUnsubscribe(_x43, _x44, _x45) {
        return _onUnsubscribe.apply(this, arguments);
      }
      return onUnsubscribe;
    }()
  }, {
    key: "setRelayerSubscriptions",
    value: function () {
      var _setRelayerSubscriptions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee40(e) {
        return _regeneratorRuntime().wrap(function _callee40$(_context40) {
          while (1) switch (_context40.prev = _context40.next) {
            case 0:
              _context40.next = 2;
              return this.relayer.core.storage.setItem(this.storageKey, e);
            case 2:
            case "end":
              return _context40.stop();
          }
        }, _callee40, this);
      }));
      function setRelayerSubscriptions(_x46) {
        return _setRelayerSubscriptions.apply(this, arguments);
      }
      return setRelayerSubscriptions;
    }()
  }, {
    key: "getRelayerSubscriptions",
    value: function () {
      var _getRelayerSubscriptions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee41() {
        return _regeneratorRuntime().wrap(function _callee41$(_context41) {
          while (1) switch (_context41.prev = _context41.next) {
            case 0:
              _context41.next = 2;
              return this.relayer.core.storage.getItem(this.storageKey);
            case 2:
              return _context41.abrupt("return", _context41.sent);
            case 3:
            case "end":
              return _context41.stop();
          }
        }, _callee41, this);
      }));
      function getRelayerSubscriptions() {
        return _getRelayerSubscriptions.apply(this, arguments);
      }
      return getRelayerSubscriptions;
    }()
  }, {
    key: "setSubscription",
    value: function setSubscription(e, t) {
      this.logger.debug("Setting subscription"), this.logger.trace({
        type: "method",
        method: "setSubscription",
        id: e,
        subscription: t
      }), this.addSubscription(e, t);
    }
  }, {
    key: "addSubscription",
    value: function addSubscription(e, t) {
      this.subscriptions.set(e, W$3({}, t)), this.topicMap.set(t.topic, e), this.events.emit(O$4.created, t);
    }
  }, {
    key: "getSubscription",
    value: function getSubscription(e) {
      this.logger.debug("Getting subscription"), this.logger.trace({
        type: "method",
        method: "getSubscription",
        id: e
      });
      var t = this.subscriptions.get(e);
      if (!t) {
        var _d5 = S$7("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)),
          s = _d5.message;
        throw new Error(s);
      }
      return t;
    }
  }, {
    key: "deleteSubscription",
    value: function deleteSubscription(e, t) {
      this.logger.debug("Deleting subscription"), this.logger.trace({
        type: "method",
        method: "deleteSubscription",
        id: e,
        reason: t
      });
      var s = this.getSubscription(e);
      this.subscriptions["delete"](e), this.topicMap["delete"](s.topic, e), this.events.emit(O$4.deleted, we$4(W$3({}, s), {
        reason: t
      }));
    }
  }, {
    key: "persist",
    value: function () {
      var _persist3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee42() {
        return _regeneratorRuntime().wrap(function _callee42$(_context42) {
          while (1) switch (_context42.prev = _context42.next) {
            case 0:
              _context42.next = 2;
              return this.setRelayerSubscriptions(this.values);
            case 2:
              this.events.emit(O$4.sync);
            case 3:
            case "end":
              return _context42.stop();
          }
        }, _callee42, this);
      }));
      function persist() {
        return _persist3.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "reset",
    value: function () {
      var _reset = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {
        var e, t, s;
        return _regeneratorRuntime().wrap(function _callee43$(_context43) {
          while (1) switch (_context43.prev = _context43.next) {
            case 0:
              if (!this.cached.length) {
                _context43.next = 12;
                break;
              }
              e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
              t = 0;
            case 3:
              if (!(t < e)) {
                _context43.next = 12;
                break;
              }
              s = this.cached.splice(0, this.batchSubscribeTopicsLimit);
              _context43.next = 7;
              return this.batchFetchMessages(s);
            case 7:
              _context43.next = 9;
              return this.batchSubscribe(s);
            case 9:
              t++;
              _context43.next = 3;
              break;
            case 12:
              this.events.emit(O$4.resubscribed);
            case 13:
            case "end":
              return _context43.stop();
          }
        }, _callee43, this);
      }));
      function reset() {
        return _reset.apply(this, arguments);
      }
      return reset;
    }()
  }, {
    key: "restore",
    value: function () {
      var _restore = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee44() {
        var e, _d6, t;
        return _regeneratorRuntime().wrap(function _callee44$(_context44) {
          while (1) switch (_context44.prev = _context44.next) {
            case 0:
              _context44.prev = 0;
              _context44.next = 3;
              return this.getRelayerSubscriptions();
            case 3:
              e = _context44.sent;
              if (!(_typeof(e) > "u" || !e.length)) {
                _context44.next = 6;
                break;
              }
              return _context44.abrupt("return");
            case 6:
              if (!this.subscriptions.size) {
                _context44.next = 9;
                break;
              }
              _d6 = S$7("RESTORE_WILL_OVERRIDE", this.name), t = _d6.message;
              throw this.logger.error(t), this.logger.error("".concat(this.name, ": ").concat(JSON.stringify(this.values))), new Error(t);
            case 9:
              this.cached = e, this.logger.debug("Successfully Restored subscriptions for ".concat(this.name)), this.logger.trace({
                type: "method",
                method: "restore",
                subscriptions: this.values
              });
              _context44.next = 15;
              break;
            case 12:
              _context44.prev = 12;
              _context44.t0 = _context44["catch"](0);
              this.logger.debug("Failed to Restore subscriptions for ".concat(this.name)), this.logger.error(_context44.t0);
            case 15:
            case "end":
              return _context44.stop();
          }
        }, _callee44, this, [[0, 12]]);
      }));
      function restore() {
        return _restore.apply(this, arguments);
      }
      return restore;
    }()
  }, {
    key: "batchSubscribe",
    value: function () {
      var _batchSubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee45(e) {
        var t;
        return _regeneratorRuntime().wrap(function _callee45$(_context45) {
          while (1) switch (_context45.prev = _context45.next) {
            case 0:
              if (e.length) {
                _context45.next = 2;
                break;
              }
              return _context45.abrupt("return");
            case 2:
              _context45.next = 4;
              return this.rpcBatchSubscribe(e);
            case 4:
              t = _context45.sent;
              L$3(t) && this.onBatchSubscribe(t.map(function (s, i) {
                return we$4(W$3({}, e[i]), {
                  id: s
                });
              }));
            case 6:
            case "end":
              return _context45.stop();
          }
        }, _callee45, this);
      }));
      function batchSubscribe(_x47) {
        return _batchSubscribe.apply(this, arguments);
      }
      return batchSubscribe;
    }()
  }, {
    key: "batchFetchMessages",
    value: function () {
      var _batchFetchMessages = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee46(e) {
        var t;
        return _regeneratorRuntime().wrap(function _callee46$(_context46) {
          while (1) switch (_context46.prev = _context46.next) {
            case 0:
              if (e.length) {
                _context46.next = 2;
                break;
              }
              return _context46.abrupt("return");
            case 2:
              this.logger.trace("Fetching batch messages for ".concat(e.length, " subscriptions"));
              _context46.next = 5;
              return this.rpcBatchFetchMessages(e);
            case 5:
              t = _context46.sent;
              t && t.messages && (this.pendingBatchMessages = this.pendingBatchMessages.concat(t.messages));
            case 7:
            case "end":
              return _context46.stop();
          }
        }, _callee46, this);
      }));
      function batchFetchMessages(_x48) {
        return _batchFetchMessages.apply(this, arguments);
      }
      return batchFetchMessages;
    }()
  }, {
    key: "onConnect",
    value: function () {
      var _onConnect = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee47() {
        return _regeneratorRuntime().wrap(function _callee47$(_context47) {
          while (1) switch (_context47.prev = _context47.next) {
            case 0:
              _context47.next = 2;
              return this.restart();
            case 2:
              this.onEnable();
            case 3:
            case "end":
              return _context47.stop();
          }
        }, _callee47, this);
      }));
      function onConnect() {
        return _onConnect.apply(this, arguments);
      }
      return onConnect;
    }()
  }, {
    key: "onDisconnect",
    value: function onDisconnect() {
      this.onDisable();
    }
  }, {
    key: "checkPending",
    value: function () {
      var _checkPending = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee48() {
        var e;
        return _regeneratorRuntime().wrap(function _callee48$(_context48) {
          while (1) switch (_context48.prev = _context48.next) {
            case 0:
              if (!(!this.initialized || !this.relayer.connected)) {
                _context48.next = 2;
                break;
              }
              return _context48.abrupt("return");
            case 2:
              e = [];
              this.pending.forEach(function (t) {
                e.push(t);
              });
              _context48.next = 6;
              return this.batchSubscribe(e);
            case 6:
              _context48.t0 = this.pendingBatchMessages.length;
              if (!_context48.t0) {
                _context48.next = 11;
                break;
              }
              _context48.next = 10;
              return this.relayer.handleBatchMessageEvents(this.pendingBatchMessages);
            case 10:
              this.pendingBatchMessages = [];
            case 11:
            case "end":
              return _context48.stop();
          }
        }, _callee48, this);
      }));
      function checkPending() {
        return _checkPending.apply(this, arguments);
      }
      return checkPending;
    }()
  }, {
    key: "registerEventListeners",
    value: function registerEventListeners() {
      var _this15 = this;
      this.relayer.core.heartbeat.on(r$4.pulse, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee49() {
        return _regeneratorRuntime().wrap(function _callee49$(_context49) {
          while (1) switch (_context49.prev = _context49.next) {
            case 0:
              _context49.next = 2;
              return _this15.checkPending();
            case 2:
            case "end":
              return _context49.stop();
          }
        }, _callee49);
      }))), this.events.on(O$4.created, /*#__PURE__*/function () {
        var _ref33 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee50(e) {
          var t;
          return _regeneratorRuntime().wrap(function _callee50$(_context50) {
            while (1) switch (_context50.prev = _context50.next) {
              case 0:
                t = O$4.created;
                _this15.logger.info("Emitting ".concat(t));
                _this15.logger.debug({
                  type: "event",
                  event: t,
                  data: e
                });
                _context50.next = 5;
                return _this15.persist();
              case 5:
              case "end":
                return _context50.stop();
            }
          }, _callee50);
        }));
        return function (_x49) {
          return _ref33.apply(this, arguments);
        };
      }()), this.events.on(O$4.deleted, /*#__PURE__*/function () {
        var _ref34 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee51(e) {
          var t;
          return _regeneratorRuntime().wrap(function _callee51$(_context51) {
            while (1) switch (_context51.prev = _context51.next) {
              case 0:
                t = O$4.deleted;
                _this15.logger.info("Emitting ".concat(t));
                _this15.logger.debug({
                  type: "event",
                  event: t,
                  data: e
                });
                _context51.next = 5;
                return _this15.persist();
              case 5:
              case "end":
                return _context51.stop();
            }
          }, _callee51);
        }));
        return function (_x50) {
          return _ref34.apply(this, arguments);
        };
      }());
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d7 = S$7("NOT_INITIALIZED", this.name),
          e = _d7.message;
        throw new Error(e);
      }
    }
  }, {
    key: "restartToComplete",
    value: function () {
      var _restartToComplete = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee52() {
        var _this16 = this;
        return _regeneratorRuntime().wrap(function _callee52$(_context52) {
          while (1) switch (_context52.prev = _context52.next) {
            case 0:
              _context52.t0 = !this.relayer.connected && !this.relayer.connecting;
              if (!_context52.t0) {
                _context52.next = 4;
                break;
              }
              _context52.next = 4;
              return this.relayer.transportOpen();
            case 4:
              _context52.t1 = this.restartInProgress;
              if (!_context52.t1) {
                _context52.next = 8;
                break;
              }
              _context52.next = 8;
              return new Promise(function (e) {
                var t = setInterval(function () {
                  _this16.restartInProgress || (clearInterval(t), e());
                }, _this16.pollingInterval);
              });
            case 8:
            case "end":
              return _context52.stop();
          }
        }, _callee52, this);
      }));
      function restartToComplete() {
        return _restartToComplete.apply(this, arguments);
      }
      return restartToComplete;
    }()
  }]);
}(d$3);
var on$2 = Object.defineProperty,
  Zt$3 = Object.getOwnPropertySymbols,
  an$2 = Object.prototype.hasOwnProperty,
  hn$2 = Object.prototype.propertyIsEnumerable,
  Qt$3 = function Qt(o, e, t) {
    return e in o ? on$2(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  ei$1 = function ei(o, e) {
    for (var t in e || (e = {})) an$2.call(e, t) && Qt$3(o, t, e[t]);
    if (Zt$3) {
      var _iterator3 = _createForOfIteratorHelper(Zt$3(e)),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var t = _step3.value;
          hn$2.call(e, t) && Qt$3(o, t, e[t]);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
    return o;
  };
var ti$1 = /*#__PURE__*/function (_Ti) {
  function ti(e) {
    var _this17;
    _classCallCheck(this, ti);
    _this17 = _callSuper(this, ti, [e]), _this17.protocol = "wc", _this17.version = 2, _this17.events = new eventsExports.EventEmitter(), _this17.name = ot$3, _this17.transportExplicitlyClosed = !1, _this17.initialized = !1, _this17.connectionAttemptInProgress = !1, _this17.connectionStatusPollingInterval = 20, _this17.staleConnectionErrors = ["socket hang up", "stalled", "interrupted"], _this17.hasExperiencedNetworkDisruption = !1, _this17.requestsInFlight = new Map(), _this17.heartBeatTimeout = cjs$3.toMiliseconds(cjs$3.THIRTY_SECONDS + cjs$3.ONE_SECOND), _this17.request = /*#__PURE__*/function () {
      var _ref35 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee54(t) {
        var s, i, r, n, a;
        return _regeneratorRuntime().wrap(function _callee54$(_context54) {
          while (1) switch (_context54.prev = _context54.next) {
            case 0:
              _this17.logger.debug("Publishing Request Payload");
              r = t.id || getBigIntRpcId().toString();
              _context54.next = 4;
              return _this17.toEstablishConnection();
            case 4:
              _context54.prev = 4;
              n = _this17.provider.request(t);
              _this17.requestsInFlight.set(r, {
                promise: n,
                request: t
              }), _this17.logger.trace({
                id: r,
                method: t.method,
                topic: (s = t.params) == null ? void 0 : s.topic
              }, "relayer.request - attempt to publish...");
              _context54.next = 9;
              return new Promise(/*#__PURE__*/function () {
                var _ref36 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee53(h, c) {
                  var l, p;
                  return _regeneratorRuntime().wrap(function _callee53$(_context53) {
                    while (1) switch (_context53.prev = _context53.next) {
                      case 0:
                        l = function l() {
                          c(new Error("relayer.request - publish interrupted, id: ".concat(r)));
                        };
                        _this17.provider.on(I$5.disconnect, l);
                        _context53.next = 4;
                        return n;
                      case 4:
                        p = _context53.sent;
                        _this17.provider.off(I$5.disconnect, l), h(p);
                      case 6:
                      case "end":
                        return _context53.stop();
                    }
                  }, _callee53);
                }));
                return function (_x52, _x53) {
                  return _ref36.apply(this, arguments);
                };
              }());
            case 9:
              a = _context54.sent;
              return _context54.abrupt("return", (_this17.logger.trace({
                id: r,
                method: t.method,
                topic: (i = t.params) == null ? void 0 : i.topic
              }, "relayer.request - published"), a));
            case 13:
              _context54.prev = 13;
              _context54.t0 = _context54["catch"](4);
              throw _this17.logger.debug("Failed to Publish Request: ".concat(r)), _context54.t0;
            case 16:
              _context54.prev = 16;
              _this17.requestsInFlight["delete"](r);
              return _context54.finish(16);
            case 19:
            case "end":
              return _context54.stop();
          }
        }, _callee54, null, [[4, 13, 16, 19]]);
      }));
      return function (_x51) {
        return _ref35.apply(this, arguments);
      };
    }(), _this17.resetPingTimeout = function () {
      if (ce$2()) try {
        clearTimeout(_this17.pingTimeout), _this17.pingTimeout = setTimeout(function () {
          var t, s, i;
          (i = (s = (t = _this17.provider) == null ? void 0 : t.connection) == null ? void 0 : s.socket) == null || i.terminate();
        }, _this17.heartBeatTimeout);
      } catch (t) {
        _this17.logger.warn(t);
      }
    }, _this17.onPayloadHandler = function (t) {
      _this17.onProviderPayload(t), _this17.resetPingTimeout();
    }, _this17.onConnectHandler = function () {
      _this17.logger.trace("relayer connected"), _this17.startPingTimeout(), _this17.events.emit(v$4.connect);
    }, _this17.onDisconnectHandler = function () {
      _this17.logger.trace("relayer disconnected"), _this17.onProviderDisconnect();
    }, _this17.onProviderErrorHandler = function (t) {
      _this17.logger.error(t), _this17.events.emit(v$4.error, t), _this17.logger.info("Fatal socket error received, closing transport"), _this17.transportClose();
    }, _this17.registerProviderListeners = function () {
      _this17.provider.on(I$5.payload, _this17.onPayloadHandler), _this17.provider.on(I$5.connect, _this17.onConnectHandler), _this17.provider.on(I$5.disconnect, _this17.onDisconnectHandler), _this17.provider.on(I$5.error, _this17.onProviderErrorHandler);
    }, _this17.core = e.core, _this17.logger = _typeof(e.logger) < "u" && typeof e.logger != "string" ? E$4(e.logger, _this17.name) : qt$5(k$4({
      level: e.logger || nt$3
    })), _this17.messages = new Yt$3(_this17.logger, e.core), _this17.subscriber = new Wt$3(_assertThisInitialized(_this17), _this17.logger), _this17.publisher = new Zr$2(_assertThisInitialized(_this17), _this17.logger), _this17.relayUrl = (e === null || e === void 0 ? void 0 : e.relayUrl) || be$4, _this17.projectId = e.projectId, _this17.bundleId = Ot$4(), _this17.provider = {};
    return _this17;
  }
  _inherits(ti, _Ti);
  return _createClass(ti, [{
    key: "init",
    value: function () {
      var _init = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee55() {
        return _regeneratorRuntime().wrap(function _callee55$(_context55) {
          while (1) switch (_context55.prev = _context55.next) {
            case 0:
              this.logger.trace("Initialized");
              this.registerEventListeners();
              _context55.next = 4;
              return Promise.all([this.messages.init(), this.subscriber.init()]);
            case 4:
              this.initialized = !0;
              if (!(this.subscriber.cached.length > 0)) {
                _context55.next = 14;
                break;
              }
              _context55.prev = 6;
              _context55.next = 9;
              return this.transportOpen();
            case 9:
              _context55.next = 14;
              break;
            case 11:
              _context55.prev = 11;
              _context55.t0 = _context55["catch"](6);
              this.logger.warn(_context55.t0);
            case 14:
            case "end":
              return _context55.stop();
          }
        }, _callee55, this, [[6, 11]]);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "connected",
    get: function get() {
      var e, t, s;
      return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 1;
    }
  }, {
    key: "connecting",
    get: function get() {
      var e, t, s;
      return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 0;
    }
  }, {
    key: "publish",
    value: function () {
      var _publish = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee56(e, t, s) {
        return _regeneratorRuntime().wrap(function _callee56$(_context56) {
          while (1) switch (_context56.prev = _context56.next) {
            case 0:
              this.isInitialized();
              _context56.next = 3;
              return this.publisher.publish(e, t, s);
            case 3:
              _context56.next = 5;
              return this.recordMessageEvent({
                topic: e,
                message: t,
                publishedAt: Date.now(),
                transportType: M$4.relay
              });
            case 5:
            case "end":
              return _context56.stop();
          }
        }, _callee56, this);
      }));
      function publish(_x54, _x55, _x56) {
        return _publish.apply(this, arguments);
      }
      return publish;
    }()
  }, {
    key: "subscribe",
    value: function () {
      var _subscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee58(e, t) {
        var _this18 = this;
        var s, i, r, n, a, h, _c2;
        return _regeneratorRuntime().wrap(function _callee58$(_context58) {
          while (1) switch (_context58.prev = _context58.next) {
            case 0:
              this.isInitialized();
              _context58.t0 = (t === null || t === void 0 ? void 0 : t.transportType) === "relay";
              if (!_context58.t0) {
                _context58.next = 5;
                break;
              }
              _context58.next = 5;
              return this.toEstablishConnection();
            case 5:
              n = _typeof((s = t === null || t === void 0 ? void 0 : t.internal) == null ? void 0 : s.throwOnFailedPublish) > "u" ? !0 : (i = t === null || t === void 0 ? void 0 : t.internal) == null ? void 0 : i.throwOnFailedPublish;
              a = ((r = this.subscriber.topicMap.get(e)) == null ? void 0 : r[0]) || "";
              _c2 = function c(l) {
                l.topic === e && (_this18.subscriber.off(O$4.created, _c2), h());
              };
              _context58.next = 10;
              return Promise.all([new Promise(function (l) {
                h = l, _this18.subscriber.on(O$4.created, _c2);
              }), new Promise(/*#__PURE__*/function () {
                var _ref37 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee57(l, p) {
                  return _regeneratorRuntime().wrap(function _callee57$(_context57) {
                    while (1) switch (_context57.prev = _context57.next) {
                      case 0:
                        _context57.next = 2;
                        return _this18.subscriber.subscribe(e, ei$1({
                          internal: {
                            throwOnFailedPublish: n
                          }
                        }, t))["catch"](function (D) {
                          n && p(D);
                        });
                      case 2:
                        _context57.t0 = _context57.sent;
                        if (_context57.t0) {
                          _context57.next = 5;
                          break;
                        }
                        _context57.t0 = a;
                      case 5:
                        a = _context57.t0;
                        l();
                      case 7:
                      case "end":
                        return _context57.stop();
                    }
                  }, _callee57);
                }));
                return function (_x59, _x60) {
                  return _ref37.apply(this, arguments);
                };
              }())]);
            case 10:
              return _context58.abrupt("return", a);
            case 11:
            case "end":
              return _context58.stop();
          }
        }, _callee58, this);
      }));
      function subscribe(_x57, _x58) {
        return _subscribe.apply(this, arguments);
      }
      return subscribe;
    }()
  }, {
    key: "unsubscribe",
    value: function () {
      var _unsubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee59(e, t) {
        return _regeneratorRuntime().wrap(function _callee59$(_context59) {
          while (1) switch (_context59.prev = _context59.next) {
            case 0:
              this.isInitialized();
              _context59.next = 3;
              return this.subscriber.unsubscribe(e, t);
            case 3:
            case "end":
              return _context59.stop();
          }
        }, _callee59, this);
      }));
      function unsubscribe(_x61, _x62) {
        return _unsubscribe.apply(this, arguments);
      }
      return unsubscribe;
    }()
  }, {
    key: "on",
    value: function on(e, t) {
      this.events.on(e, t);
    }
  }, {
    key: "once",
    value: function once(e, t) {
      this.events.once(e, t);
    }
  }, {
    key: "off",
    value: function off(e, t) {
      this.events.off(e, t);
    }
  }, {
    key: "removeListener",
    value: function removeListener(e, t) {
      this.events.removeListener(e, t);
    }
  }, {
    key: "transportDisconnect",
    value: function () {
      var _transportDisconnect = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee60() {
        var _this19 = this;
        return _regeneratorRuntime().wrap(function _callee60$(_context60) {
          while (1) switch (_context60.prev = _context60.next) {
            case 0:
              if (!(!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0)) {
                _context60.next = 9;
                break;
              }
              _context60.prev = 1;
              _context60.next = 4;
              return Promise.all(Array.from(this.requestsInFlight.values()).map(function (e) {
                return e.promise;
              }));
            case 4:
              _context60.next = 9;
              break;
            case 6:
              _context60.prev = 6;
              _context60.t0 = _context60["catch"](1);
              this.logger.warn(_context60.t0);
            case 9:
              if (!(this.provider.disconnect && (this.hasExperiencedNetworkDisruption || this.connected))) {
                _context60.next = 14;
                break;
              }
              _context60.next = 12;
              return kt$4(this.provider.disconnect(), 2e3, "provider.disconnect()")["catch"](function () {
                return _this19.onProviderDisconnect();
              });
            case 12:
              _context60.next = 15;
              break;
            case 14:
              this.onProviderDisconnect();
            case 15:
            case "end":
              return _context60.stop();
          }
        }, _callee60, this, [[1, 6]]);
      }));
      function transportDisconnect() {
        return _transportDisconnect.apply(this, arguments);
      }
      return transportDisconnect;
    }()
  }, {
    key: "transportClose",
    value: function () {
      var _transportClose = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {
        return _regeneratorRuntime().wrap(function _callee61$(_context61) {
          while (1) switch (_context61.prev = _context61.next) {
            case 0:
              this.transportExplicitlyClosed = !0;
              _context61.next = 3;
              return this.transportDisconnect();
            case 3:
            case "end":
              return _context61.stop();
          }
        }, _callee61, this);
      }));
      function transportClose() {
        return _transportClose.apply(this, arguments);
      }
      return transportClose;
    }()
  }, {
    key: "transportOpen",
    value: function () {
      var _transportOpen = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee63(e) {
        var _this20 = this;
        var s;
        return _regeneratorRuntime().wrap(function _callee63$(_context63) {
          while (1) switch (_context63.prev = _context63.next) {
            case 0:
              _context63.next = 2;
              return this.confirmOnlineStateOrThrow();
            case 2:
              _context63.t0 = e && e !== this.relayUrl;
              if (!_context63.t0) {
                _context63.next = 7;
                break;
              }
              this.relayUrl = e;
              _context63.next = 7;
              return this.transportDisconnect();
            case 7:
              _context63.next = 9;
              return this.createProvider();
            case 9:
              this.connectionAttemptInProgress = !0;
              this.transportExplicitlyClosed = !1;
              _context63.prev = 11;
              _context63.next = 14;
              return new Promise(/*#__PURE__*/function () {
                var _ref38 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee62(t, s) {
                  var _i2;
                  return _regeneratorRuntime().wrap(function _callee62$(_context62) {
                    while (1) switch (_context62.prev = _context62.next) {
                      case 0:
                        _i2 = function i() {
                          _this20.provider.off(I$5.disconnect, _i2), s(new Error("Connection interrupted while trying to subscribe"));
                        };
                        _this20.provider.on(I$5.disconnect, _i2);
                        _context62.next = 4;
                        return kt$4(_this20.provider.connect(), cjs$3.toMiliseconds(cjs$3.ONE_MINUTE), "Socket stalled when trying to connect to ".concat(_this20.relayUrl))["catch"](function (r) {
                          s(r);
                        })["finally"](function () {
                          clearTimeout(_this20.reconnectTimeout), _this20.reconnectTimeout = void 0;
                        });
                      case 4:
                        _this20.subscriber.start()["catch"](function (r) {
                          _this20.logger.error(r), _this20.onDisconnectHandler();
                        });
                        _this20.hasExperiencedNetworkDisruption = !1;
                        t();
                      case 7:
                      case "end":
                        return _context62.stop();
                    }
                  }, _callee62);
                }));
                return function (_x64, _x65) {
                  return _ref38.apply(this, arguments);
                };
              }());
            case 14:
              _context63.next = 22;
              break;
            case 16:
              _context63.prev = 16;
              _context63.t1 = _context63["catch"](11);
              this.logger.error(_context63.t1);
              s = _context63.t1;
              if (!(this.hasExperiencedNetworkDisruption = !0, !this.isConnectionStalled(s.message))) {
                _context63.next = 22;
                break;
              }
              throw _context63.t1;
            case 22:
              _context63.prev = 22;
              this.connectionAttemptInProgress = !1;
              return _context63.finish(22);
            case 25:
            case "end":
              return _context63.stop();
          }
        }, _callee63, this, [[11, 16, 22, 25]]);
      }));
      function transportOpen(_x63) {
        return _transportOpen.apply(this, arguments);
      }
      return transportOpen;
    }()
  }, {
    key: "restartTransport",
    value: function () {
      var _restartTransport = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee64(e) {
        return _regeneratorRuntime().wrap(function _callee64$(_context64) {
          while (1) switch (_context64.prev = _context64.next) {
            case 0:
              _context64.t0 = this.connectionAttemptInProgress;
              if (_context64.t0) {
                _context64.next = 9;
                break;
              }
              this.relayUrl = e || this.relayUrl;
              _context64.next = 5;
              return this.confirmOnlineStateOrThrow();
            case 5:
              _context64.next = 7;
              return this.transportClose();
            case 7:
              _context64.next = 9;
              return this.transportOpen();
            case 9:
            case "end":
              return _context64.stop();
          }
        }, _callee64, this);
      }));
      function restartTransport(_x66) {
        return _restartTransport.apply(this, arguments);
      }
      return restartTransport;
    }()
  }, {
    key: "confirmOnlineStateOrThrow",
    value: function () {
      var _confirmOnlineStateOrThrow = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee65() {
        return _regeneratorRuntime().wrap(function _callee65$(_context65) {
          while (1) switch (_context65.prev = _context65.next) {
            case 0:
              _context65.next = 2;
              return mo$1();
            case 2:
              if (_context65.sent) {
                _context65.next = 4;
                break;
              }
              throw new Error("No internet connection detected. Please restart your network and try again.");
            case 4:
            case "end":
              return _context65.stop();
          }
        }, _callee65);
      }));
      function confirmOnlineStateOrThrow() {
        return _confirmOnlineStateOrThrow.apply(this, arguments);
      }
      return confirmOnlineStateOrThrow;
    }()
  }, {
    key: "handleBatchMessageEvents",
    value: function () {
      var _handleBatchMessageEvents = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee66(e) {
        var t, _iterator4, _step4, s;
        return _regeneratorRuntime().wrap(function _callee66$(_context66) {
          while (1) switch (_context66.prev = _context66.next) {
            case 0:
              if (!((e === null || e === void 0 ? void 0 : e.length) === 0)) {
                _context66.next = 3;
                break;
              }
              this.logger.trace("Batch message events is empty. Ignoring...");
              return _context66.abrupt("return");
            case 3:
              t = e.sort(function (s, i) {
                return s.publishedAt - i.publishedAt;
              });
              this.logger.trace("Batch of ".concat(t.length, " message events sorted"));
              _iterator4 = _createForOfIteratorHelper(t);
              _context66.prev = 6;
              _iterator4.s();
            case 8:
              if ((_step4 = _iterator4.n()).done) {
                _context66.next = 20;
                break;
              }
              s = _step4.value;
              _context66.prev = 10;
              _context66.next = 13;
              return this.onMessageEvent(s);
            case 13:
              _context66.next = 18;
              break;
            case 15:
              _context66.prev = 15;
              _context66.t0 = _context66["catch"](10);
              this.logger.warn(_context66.t0);
            case 18:
              _context66.next = 8;
              break;
            case 20:
              _context66.next = 25;
              break;
            case 22:
              _context66.prev = 22;
              _context66.t1 = _context66["catch"](6);
              _iterator4.e(_context66.t1);
            case 25:
              _context66.prev = 25;
              _iterator4.f();
              return _context66.finish(25);
            case 28:
              this.logger.trace("Batch of ".concat(t.length, " message events processed"));
            case 29:
            case "end":
              return _context66.stop();
          }
        }, _callee66, this, [[6, 22, 25, 28], [10, 15]]);
      }));
      function handleBatchMessageEvents(_x67) {
        return _handleBatchMessageEvents.apply(this, arguments);
      }
      return handleBatchMessageEvents;
    }()
  }, {
    key: "onLinkMessageEvent",
    value: function () {
      var _onLinkMessageEvent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee67(e, t) {
        var s, i, r;
        return _regeneratorRuntime().wrap(function _callee67$(_context67) {
          while (1) switch (_context67.prev = _context67.next) {
            case 0:
              s = e.topic;
              if (t.sessionExists) {
                _context67.next = 5;
                break;
              }
              i = Mt$4(cjs$3.FIVE_MINUTES), r = {
                topic: s,
                expiry: i,
                relay: {
                  protocol: "irn"
                },
                active: !1
              };
              _context67.next = 5;
              return this.core.pairing.pairings.set(s, r);
            case 5:
              this.events.emit(v$4.message, e);
              _context67.next = 8;
              return this.recordMessageEvent(e);
            case 8:
            case "end":
              return _context67.stop();
          }
        }, _callee67, this);
      }));
      function onLinkMessageEvent(_x68, _x69) {
        return _onLinkMessageEvent.apply(this, arguments);
      }
      return onLinkMessageEvent;
    }()
  }, {
    key: "startPingTimeout",
    value: function startPingTimeout() {
      var _this21 = this;
      var e, t, s, i, r;
      if (ce$2()) try {
        (t = (e = this.provider) == null ? void 0 : e.connection) != null && t.socket && ((r = (i = (s = this.provider) == null ? void 0 : s.connection) == null ? void 0 : i.socket) == null || r.once("ping", function () {
          _this21.resetPingTimeout();
        })), this.resetPingTimeout();
      } catch (n) {
        this.logger.warn(n);
      }
    }
  }, {
    key: "isConnectionStalled",
    value: function isConnectionStalled(e) {
      return this.staleConnectionErrors.some(function (t) {
        return e.includes(t);
      });
    }
  }, {
    key: "createProvider",
    value: function () {
      var _createProvider = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee68() {
        var e;
        return _regeneratorRuntime().wrap(function _callee68$(_context68) {
          while (1) switch (_context68.prev = _context68.next) {
            case 0:
              this.provider.connection && this.unregisterProviderListeners();
              _context68.next = 3;
              return this.core.crypto.signJWT(this.relayUrl);
            case 3:
              e = _context68.sent;
              this.provider = new o$1(new f$3($t$4({
                sdkVersion: se$4,
                protocol: this.protocol,
                version: this.version,
                relayUrl: this.relayUrl,
                projectId: this.projectId,
                auth: e,
                useOnCloseEvent: !0,
                bundleId: this.bundleId
              }))), this.registerProviderListeners();
            case 5:
            case "end":
              return _context68.stop();
          }
        }, _callee68, this);
      }));
      function createProvider() {
        return _createProvider.apply(this, arguments);
      }
      return createProvider;
    }()
  }, {
    key: "recordMessageEvent",
    value: function () {
      var _recordMessageEvent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee69(e) {
        var t, s;
        return _regeneratorRuntime().wrap(function _callee69$(_context69) {
          while (1) switch (_context69.prev = _context69.next) {
            case 0:
              t = e.topic, s = e.message;
              _context69.next = 3;
              return this.messages.set(t, s);
            case 3:
            case "end":
              return _context69.stop();
          }
        }, _callee69, this);
      }));
      function recordMessageEvent(_x70) {
        return _recordMessageEvent.apply(this, arguments);
      }
      return recordMessageEvent;
    }()
  }, {
    key: "shouldIgnoreMessageEvent",
    value: function () {
      var _shouldIgnoreMessageEvent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee70(e) {
        var t, s, i;
        return _regeneratorRuntime().wrap(function _callee70$(_context70) {
          while (1) switch (_context70.prev = _context70.next) {
            case 0:
              t = e.topic, s = e.message;
              if (!(!s || s.length === 0)) {
                _context70.next = 3;
                break;
              }
              return _context70.abrupt("return", (this.logger.debug("Ignoring invalid/empty message: ".concat(s)), !0));
            case 3:
              _context70.next = 5;
              return this.subscriber.isSubscribed(t);
            case 5:
              if (_context70.sent) {
                _context70.next = 7;
                break;
              }
              return _context70.abrupt("return", (this.logger.debug("Ignoring message for non-subscribed topic ".concat(t)), !0));
            case 7:
              i = this.messages.has(t, s);
              return _context70.abrupt("return", (i && this.logger.debug("Ignoring duplicate message: ".concat(s)), i));
            case 9:
            case "end":
              return _context70.stop();
          }
        }, _callee70, this);
      }));
      function shouldIgnoreMessageEvent(_x71) {
        return _shouldIgnoreMessageEvent.apply(this, arguments);
      }
      return shouldIgnoreMessageEvent;
    }()
  }, {
    key: "onProviderPayload",
    value: function () {
      var _onProviderPayload = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee71(e) {
        var t, _t$data, s, i, r, n, a;
        return _regeneratorRuntime().wrap(function _callee71$(_context71) {
          while (1) switch (_context71.prev = _context71.next) {
            case 0:
              if (!(this.logger.debug("Incoming Relay Payload"), this.logger.trace({
                type: "payload",
                direction: "incoming",
                payload: e
              }), isJsonRpcRequest(e))) {
                _context71.next = 13;
                break;
              }
              if (e.method.endsWith(at$3)) {
                _context71.next = 3;
                break;
              }
              return _context71.abrupt("return");
            case 3:
              t = e.params, _t$data = t.data, s = _t$data.topic, i = _t$data.message, r = _t$data.publishedAt, n = _t$data.attestation, a = {
                topic: s,
                message: i,
                publishedAt: r,
                transportType: M$4.relay,
                attestation: n
              };
              this.logger.debug("Emitting Relayer Payload");
              this.logger.trace(ei$1({
                type: "event",
                event: t.id
              }, a));
              this.events.emit(t.id, a);
              _context71.next = 9;
              return this.acknowledgePayload(e);
            case 9:
              _context71.next = 11;
              return this.onMessageEvent(a);
            case 11:
              _context71.next = 14;
              break;
            case 13:
              isJsonRpcResponse(e) && this.events.emit(v$4.message_ack, e);
            case 14:
            case "end":
              return _context71.stop();
          }
        }, _callee71, this);
      }));
      function onProviderPayload(_x72) {
        return _onProviderPayload.apply(this, arguments);
      }
      return onProviderPayload;
    }()
  }, {
    key: "onMessageEvent",
    value: function () {
      var _onMessageEvent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee72(e) {
        return _regeneratorRuntime().wrap(function _callee72$(_context72) {
          while (1) switch (_context72.prev = _context72.next) {
            case 0:
              _context72.next = 2;
              return this.shouldIgnoreMessageEvent(e);
            case 2:
              _context72.t0 = _context72.sent;
              if (_context72.t0) {
                _context72.next = 7;
                break;
              }
              this.events.emit(v$4.message, e);
              _context72.next = 7;
              return this.recordMessageEvent(e);
            case 7:
            case "end":
              return _context72.stop();
          }
        }, _callee72, this);
      }));
      function onMessageEvent(_x73) {
        return _onMessageEvent.apply(this, arguments);
      }
      return onMessageEvent;
    }()
  }, {
    key: "acknowledgePayload",
    value: function () {
      var _acknowledgePayload = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee73(e) {
        var t;
        return _regeneratorRuntime().wrap(function _callee73$(_context73) {
          while (1) switch (_context73.prev = _context73.next) {
            case 0:
              t = formatJsonRpcResult(e.id, !0);
              _context73.next = 3;
              return this.provider.connection.send(t);
            case 3:
            case "end":
              return _context73.stop();
          }
        }, _callee73, this);
      }));
      function acknowledgePayload(_x74) {
        return _acknowledgePayload.apply(this, arguments);
      }
      return acknowledgePayload;
    }()
  }, {
    key: "unregisterProviderListeners",
    value: function unregisterProviderListeners() {
      this.provider.off(I$5.payload, this.onPayloadHandler), this.provider.off(I$5.connect, this.onConnectHandler), this.provider.off(I$5.disconnect, this.onDisconnectHandler), this.provider.off(I$5.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);
    }
  }, {
    key: "registerEventListeners",
    value: function () {
      var _registerEventListeners = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee75() {
        var _this22 = this;
        var e;
        return _regeneratorRuntime().wrap(function _callee75$(_context75) {
          while (1) switch (_context75.prev = _context75.next) {
            case 0:
              _context75.next = 2;
              return mo$1();
            case 2:
              e = _context75.sent;
              ho$1(/*#__PURE__*/function () {
                var _ref39 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee74(t) {
                  return _regeneratorRuntime().wrap(function _callee74$(_context74) {
                    while (1) switch (_context74.prev = _context74.next) {
                      case 0:
                        _context74.t0 = e !== t;
                        if (!_context74.t0) {
                          _context74.next = 12;
                          break;
                        }
                        e = t;
                        if (!t) {
                          _context74.next = 8;
                          break;
                        }
                        _context74.next = 6;
                        return _this22.restartTransport()["catch"](function (s) {
                          return _this22.logger.error(s);
                        });
                      case 6:
                        _context74.next = 12;
                        break;
                      case 8:
                        _this22.hasExperiencedNetworkDisruption = !0;
                        _context74.next = 11;
                        return _this22.transportDisconnect();
                      case 11:
                        _this22.transportExplicitlyClosed = !1;
                      case 12:
                      case "end":
                        return _context74.stop();
                    }
                  }, _callee74);
                }));
                return function (_x75) {
                  return _ref39.apply(this, arguments);
                };
              }());
            case 4:
            case "end":
              return _context75.stop();
          }
        }, _callee75);
      }));
      function registerEventListeners() {
        return _registerEventListeners.apply(this, arguments);
      }
      return registerEventListeners;
    }()
  }, {
    key: "onProviderDisconnect",
    value: function () {
      var _onProviderDisconnect = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee77() {
        var _this23 = this;
        return _regeneratorRuntime().wrap(function _callee77$(_context77) {
          while (1) switch (_context77.prev = _context77.next) {
            case 0:
              _context77.next = 2;
              return this.subscriber.stop();
            case 2:
              this.requestsInFlight.clear();
              clearTimeout(this.pingTimeout);
              this.events.emit(v$4.disconnect);
              this.connectionAttemptInProgress = !1;
              !this.transportExplicitlyClosed && (this.reconnectTimeout || (this.reconnectTimeout = setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee76() {
                return _regeneratorRuntime().wrap(function _callee76$(_context76) {
                  while (1) switch (_context76.prev = _context76.next) {
                    case 0:
                      _context76.next = 2;
                      return _this23.transportOpen()["catch"](function (e) {
                        return _this23.logger.error(e);
                      });
                    case 2:
                    case "end":
                      return _context76.stop();
                  }
                }, _callee76);
              })), cjs$3.toMiliseconds(ht$4))));
            case 7:
            case "end":
              return _context77.stop();
          }
        }, _callee77, this);
      }));
      function onProviderDisconnect() {
        return _onProviderDisconnect.apply(this, arguments);
      }
      return onProviderDisconnect;
    }()
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d8 = S$7("NOT_INITIALIZED", this.name),
          e = _d8.message;
        throw new Error(e);
      }
    }
  }, {
    key: "toEstablishConnection",
    value: function () {
      var _toEstablishConnection = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee78() {
        var _this24 = this;
        return _regeneratorRuntime().wrap(function _callee78$(_context78) {
          while (1) switch (_context78.prev = _context78.next) {
            case 0:
              _context78.next = 2;
              return this.confirmOnlineStateOrThrow();
            case 2:
              _context78.t0 = !this.connected;
              if (!_context78.t0) {
                _context78.next = 10;
                break;
              }
              _context78.t1 = this.connectionAttemptInProgress;
              if (!_context78.t1) {
                _context78.next = 8;
                break;
              }
              _context78.next = 8;
              return new Promise(function (e) {
                var t = setInterval(function () {
                  _this24.connected && (clearInterval(t), e());
                }, _this24.connectionStatusPollingInterval);
              });
            case 8:
              _context78.next = 10;
              return this.transportOpen();
            case 10:
            case "end":
              return _context78.stop();
          }
        }, _callee78, this);
      }));
      function toEstablishConnection() {
        return _toEstablishConnection.apply(this, arguments);
      }
      return toEstablishConnection;
    }()
  }]);
}(u$2);
var cn$2 = Object.defineProperty,
  ii$1 = Object.getOwnPropertySymbols,
  ln$2 = Object.prototype.hasOwnProperty,
  un$2 = Object.prototype.propertyIsEnumerable,
  si$1 = function si(o, e, t) {
    return e in o ? cn$2(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  ri$1 = function ri(o, e) {
    for (var t in e || (e = {})) ln$2.call(e, t) && si$1(o, t, e[t]);
    if (ii$1) {
      var _iterator5 = _createForOfIteratorHelper(ii$1(e)),
        _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var t = _step5.value;
          un$2.call(e, t) && si$1(o, t, e[t]);
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
    }
    return o;
  };
var ni$1 = /*#__PURE__*/function (_Ci) {
  function ni(e, t, s) {
    var _this25;
    var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : x$5;
    var r = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : void 0;
    _classCallCheck(this, ni);
    _this25 = _callSuper(this, ni, [e, t, s, i]), _this25.core = e, _this25.logger = t, _this25.name = s, _this25.map = new Map(), _this25.version = ct$3, _this25.cached = [], _this25.initialized = !1, _this25.storagePrefix = x$5, _this25.recentlyDeleted = [], _this25.recentlyDeletedLimit = 200, _this25.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee79() {
      return _regeneratorRuntime().wrap(function _callee79$(_context79) {
        while (1) switch (_context79.prev = _context79.next) {
          case 0:
            _context79.t0 = _this25.initialized;
            if (_context79.t0) {
              _context79.next = 8;
              break;
            }
            _this25.logger.trace("Initialized");
            _context79.next = 5;
            return _this25.restore();
          case 5:
            _this25.cached.forEach(function (n) {
              _this25.getKey && n !== null && !I$6(n) ? _this25.map.set(_this25.getKey(n), n) : Yr$3(n) ? _this25.map.set(n.id, n) : Qr$3(n) && _this25.map.set(n.topic, n);
            });
            _this25.cached = [];
            _this25.initialized = !0;
          case 8:
          case "end":
            return _context79.stop();
        }
      }, _callee79);
    })), _this25.set = /*#__PURE__*/function () {
      var _ref42 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee80(n, a) {
        return _regeneratorRuntime().wrap(function _callee80$(_context80) {
          while (1) switch (_context80.prev = _context80.next) {
            case 0:
              _this25.isInitialized();
              if (!_this25.map.has(n)) {
                _context80.next = 6;
                break;
              }
              _context80.next = 4;
              return _this25.update(n, a);
            case 4:
              _context80.next = 11;
              break;
            case 6:
              _this25.logger.debug("Setting value");
              _this25.logger.trace({
                type: "method",
                method: "set",
                key: n,
                value: a
              });
              _this25.map.set(n, a);
              _context80.next = 11;
              return _this25.persist();
            case 11:
            case "end":
              return _context80.stop();
          }
        }, _callee80);
      }));
      return function (_x76, _x77) {
        return _ref42.apply(this, arguments);
      };
    }(), _this25.get = function (n) {
      return _this25.isInitialized(), _this25.logger.debug("Getting value"), _this25.logger.trace({
        type: "method",
        method: "get",
        key: n
      }), _this25.getData(n);
    }, _this25.getAll = function (n) {
      return _this25.isInitialized(), n ? _this25.values.filter(function (a) {
        return Object.keys(n).every(function (h) {
          return ys$1(a[h], n[h]);
        });
      }) : _this25.values;
    }, _this25.update = /*#__PURE__*/function () {
      var _ref43 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee81(n, a) {
        var h;
        return _regeneratorRuntime().wrap(function _callee81$(_context81) {
          while (1) switch (_context81.prev = _context81.next) {
            case 0:
              _this25.isInitialized(), _this25.logger.debug("Updating value"), _this25.logger.trace({
                type: "method",
                method: "update",
                key: n,
                update: a
              });
              h = ri$1(ri$1({}, _this25.getData(n)), a);
              _this25.map.set(n, h);
              _context81.next = 5;
              return _this25.persist();
            case 5:
            case "end":
              return _context81.stop();
          }
        }, _callee81);
      }));
      return function (_x78, _x79) {
        return _ref43.apply(this, arguments);
      };
    }(), _this25["delete"] = /*#__PURE__*/function () {
      var _ref44 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee82(n, a) {
        return _regeneratorRuntime().wrap(function _callee82$(_context82) {
          while (1) switch (_context82.prev = _context82.next) {
            case 0:
              _this25.isInitialized();
              _context82.t0 = _this25.map.has(n);
              if (!_context82.t0) {
                _context82.next = 9;
                break;
              }
              _this25.logger.debug("Deleting value");
              _this25.logger.trace({
                type: "method",
                method: "delete",
                key: n,
                reason: a
              });
              _this25.map["delete"](n);
              _this25.addToRecentlyDeleted(n);
              _context82.next = 9;
              return _this25.persist();
            case 9:
            case "end":
              return _context82.stop();
          }
        }, _callee82);
      }));
      return function (_x80, _x81) {
        return _ref44.apply(this, arguments);
      };
    }(), _this25.logger = E$4(t, _this25.name), _this25.storagePrefix = i, _this25.getKey = r;
    return _this25;
  }
  _inherits(ni, _Ci);
  return _createClass(ni, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "length",
    get: function get() {
      return this.map.size;
    }
  }, {
    key: "keys",
    get: function get() {
      return Array.from(this.map.keys());
    }
  }, {
    key: "values",
    get: function get() {
      return Array.from(this.map.values());
    }
  }, {
    key: "addToRecentlyDeleted",
    value: function addToRecentlyDeleted(e) {
      this.recentlyDeleted.push(e), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
    }
  }, {
    key: "setDataStore",
    value: function () {
      var _setDataStore = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee83(e) {
        return _regeneratorRuntime().wrap(function _callee83$(_context83) {
          while (1) switch (_context83.prev = _context83.next) {
            case 0:
              _context83.next = 2;
              return this.core.storage.setItem(this.storageKey, e);
            case 2:
            case "end":
              return _context83.stop();
          }
        }, _callee83, this);
      }));
      function setDataStore(_x82) {
        return _setDataStore.apply(this, arguments);
      }
      return setDataStore;
    }()
  }, {
    key: "getDataStore",
    value: function () {
      var _getDataStore = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee84() {
        return _regeneratorRuntime().wrap(function _callee84$(_context84) {
          while (1) switch (_context84.prev = _context84.next) {
            case 0:
              _context84.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              return _context84.abrupt("return", _context84.sent);
            case 3:
            case "end":
              return _context84.stop();
          }
        }, _callee84, this);
      }));
      function getDataStore() {
        return _getDataStore.apply(this, arguments);
      }
      return getDataStore;
    }()
  }, {
    key: "getData",
    value: function getData(e) {
      var t = this.map.get(e);
      if (!t) {
        if (this.recentlyDeleted.includes(e)) {
          var _d9 = S$7("MISSING_OR_INVALID", "Record was recently deleted - ".concat(this.name, ": ").concat(e)),
            i = _d9.message;
          throw this.logger.error(i), new Error(i);
        }
        var _d10 = S$7("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)),
          s = _d10.message;
        throw this.logger.error(s), new Error(s);
      }
      return t;
    }
  }, {
    key: "persist",
    value: function () {
      var _persist4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee85() {
        return _regeneratorRuntime().wrap(function _callee85$(_context85) {
          while (1) switch (_context85.prev = _context85.next) {
            case 0:
              _context85.next = 2;
              return this.setDataStore(this.values);
            case 2:
            case "end":
              return _context85.stop();
          }
        }, _callee85, this);
      }));
      function persist() {
        return _persist4.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "restore",
    value: function () {
      var _restore2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee86() {
        var e, _d11, t;
        return _regeneratorRuntime().wrap(function _callee86$(_context86) {
          while (1) switch (_context86.prev = _context86.next) {
            case 0:
              _context86.prev = 0;
              _context86.next = 3;
              return this.getDataStore();
            case 3:
              e = _context86.sent;
              if (!(_typeof(e) > "u" || !e.length)) {
                _context86.next = 6;
                break;
              }
              return _context86.abrupt("return");
            case 6:
              if (!this.map.size) {
                _context86.next = 9;
                break;
              }
              _d11 = S$7("RESTORE_WILL_OVERRIDE", this.name), t = _d11.message;
              throw this.logger.error(t), new Error(t);
            case 9:
              this.cached = e, this.logger.debug("Successfully Restored value for ".concat(this.name)), this.logger.trace({
                type: "method",
                method: "restore",
                value: this.values
              });
              _context86.next = 15;
              break;
            case 12:
              _context86.prev = 12;
              _context86.t0 = _context86["catch"](0);
              this.logger.debug("Failed to Restore value for ".concat(this.name)), this.logger.error(_context86.t0);
            case 15:
            case "end":
              return _context86.stop();
          }
        }, _callee86, this, [[0, 12]]);
      }));
      function restore() {
        return _restore2.apply(this, arguments);
      }
      return restore;
    }()
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d12 = S$7("NOT_INITIALIZED", this.name),
          e = _d12.message;
        throw new Error(e);
      }
    }
  }]);
}(p$3);
var oi$1 = /*#__PURE__*/function () {
  function oi(e, t) {
    var _this26 = this;
    _classCallCheck(this, oi);
    this.core = e, this.logger = t, this.name = gt$4, this.version = yt$4, this.events = new es(), this.initialized = !1, this.storagePrefix = x$5, this.ignoredPayloadTypes = [D$3], this.registeredMethods = [], this.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee87() {
      return _regeneratorRuntime().wrap(function _callee87$(_context87) {
        while (1) switch (_context87.prev = _context87.next) {
          case 0:
            _context87.t0 = _this26.initialized;
            if (_context87.t0) {
              _context87.next = 10;
              break;
            }
            _context87.next = 4;
            return _this26.pairings.init();
          case 4:
            _context87.next = 6;
            return _this26.cleanup();
          case 6:
            _this26.registerRelayerEvents();
            _this26.registerExpirerEvents();
            _this26.initialized = !0;
            _this26.logger.trace("Initialized");
          case 10:
          case "end":
            return _context87.stop();
        }
      }, _callee87);
    })), this.register = function (_ref46) {
      var s = _ref46.methods;
      _this26.isInitialized(), _this26.registeredMethods = _toConsumableArray(new Set([].concat(_toConsumableArray(_this26.registeredMethods), _toConsumableArray(s))));
    }, this.create = /*#__PURE__*/function () {
      var _ref47 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee88(s) {
        var i, r, n, a, h, c;
        return _regeneratorRuntime().wrap(function _callee88$(_context88) {
          while (1) switch (_context88.prev = _context88.next) {
            case 0:
              _this26.isInitialized();
              i = pr$4();
              _context88.next = 4;
              return _this26.core.crypto.setSymKey(i);
            case 4:
              r = _context88.sent;
              n = Mt$4(cjs$3.FIVE_MINUTES);
              a = {
                protocol: rt$3
              };
              h = {
                topic: r,
                expiry: n,
                relay: a,
                active: !1,
                methods: s === null || s === void 0 ? void 0 : s.methods
              };
              c = Dr$4({
                protocol: _this26.core.protocol,
                version: _this26.core.version,
                topic: r,
                symKey: i,
                relay: a,
                expiryTimestamp: n,
                methods: s === null || s === void 0 ? void 0 : s.methods
              });
              _this26.events.emit(V$4.create, h);
              _this26.core.expirer.set(r, n);
              _context88.next = 13;
              return _this26.pairings.set(r, h);
            case 13:
              _context88.next = 15;
              return _this26.core.relayer.subscribe(r, {
                transportType: s === null || s === void 0 ? void 0 : s.transportType
              });
            case 15:
              return _context88.abrupt("return", {
                topic: r,
                uri: c
              });
            case 16:
            case "end":
              return _context88.stop();
          }
        }, _callee88);
      }));
      return function (_x83) {
        return _ref47.apply(this, arguments);
      };
    }(), this.pair = /*#__PURE__*/function () {
      var _ref48 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee89(s) {
        var i, _Me, r, n, a, h, c, l, p, D;
        return _regeneratorRuntime().wrap(function _callee89$(_context89) {
          while (1) switch (_context89.prev = _context89.next) {
            case 0:
              _this26.isInitialized();
              i = _this26.core.eventClient.createEvent({
                properties: {
                  topic: s === null || s === void 0 ? void 0 : s.uri,
                  trace: [z$5.pairing_started]
                }
              });
              _this26.isValidPair(s, i);
              _Me = kr$3(s.uri), r = _Me.topic, n = _Me.symKey, a = _Me.relay, h = _Me.expiryTimestamp, c = _Me.methods;
              i.props.properties.topic = r, i.addTrace(z$5.pairing_uri_validation_success), i.addTrace(z$5.pairing_uri_not_expired);
              if (!_this26.pairings.keys.includes(r)) {
                _context89.next = 9;
                break;
              }
              if (!(l = _this26.pairings.get(r), i.addTrace(z$5.existing_pairing), l.active)) {
                _context89.next = 8;
                break;
              }
              throw i.setError($$4.active_pairing_already_exists), new Error("Pairing already exists: ".concat(r, ". Please try again with a new connection URI."));
            case 8:
              i.addTrace(z$5.pairing_not_expired);
            case 9:
              p = h || Mt$4(cjs$3.FIVE_MINUTES), D = {
                topic: r,
                relay: a,
                expiry: p,
                active: !1,
                methods: c
              };
              _this26.core.expirer.set(r, p);
              _context89.next = 13;
              return _this26.pairings.set(r, D);
            case 13:
              i.addTrace(z$5.store_new_pairing);
              _context89.t0 = s.activatePairing;
              if (!_context89.t0) {
                _context89.next = 18;
                break;
              }
              _context89.next = 18;
              return _this26.activate({
                topic: r
              });
            case 18:
              _this26.events.emit(V$4.create, D);
              i.addTrace(z$5.emit_inactive_pairing);
              _context89.t1 = _this26.core.crypto.keychain.has(r);
              if (_context89.t1) {
                _context89.next = 24;
                break;
              }
              _context89.next = 24;
              return _this26.core.crypto.setSymKey(n, r);
            case 24:
              i.addTrace(z$5.subscribing_pairing_topic);
              _context89.prev = 25;
              _context89.next = 28;
              return _this26.core.relayer.confirmOnlineStateOrThrow();
            case 28:
              _context89.next = 33;
              break;
            case 30:
              _context89.prev = 30;
              _context89.t2 = _context89["catch"](25);
              i.setError($$4.no_internet_connection);
            case 33:
              _context89.prev = 33;
              _context89.next = 36;
              return _this26.core.relayer.subscribe(r, {
                relay: a
              });
            case 36:
              _context89.next = 41;
              break;
            case 38:
              _context89.prev = 38;
              _context89.t3 = _context89["catch"](33);
              throw i.setError($$4.subscribe_pairing_topic_failure), _context89.t3;
            case 41:
              return _context89.abrupt("return", (i.addTrace(z$5.subscribe_pairing_topic_success), D));
            case 42:
            case "end":
              return _context89.stop();
          }
        }, _callee89, null, [[25, 30], [33, 38]]);
      }));
      return function (_x84) {
        return _ref48.apply(this, arguments);
      };
    }(), this.activate = /*#__PURE__*/function () {
      var _ref50 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee90(_ref49) {
        var s, i;
        return _regeneratorRuntime().wrap(function _callee90$(_context90) {
          while (1) switch (_context90.prev = _context90.next) {
            case 0:
              s = _ref49.topic;
              _this26.isInitialized();
              i = Mt$4(cjs$3.THIRTY_DAYS);
              _this26.core.expirer.set(s, i);
              _context90.next = 6;
              return _this26.pairings.update(s, {
                active: !0,
                expiry: i
              });
            case 6:
            case "end":
              return _context90.stop();
          }
        }, _callee90);
      }));
      return function (_x85) {
        return _ref50.apply(this, arguments);
      };
    }(), this.ping = /*#__PURE__*/function () {
      var _ref51 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee91(s) {
        var i, r, _es, n, a, _h3;
        return _regeneratorRuntime().wrap(function _callee91$(_context91) {
          while (1) switch (_context91.prev = _context91.next) {
            case 0:
              _this26.isInitialized();
              _context91.next = 3;
              return _this26.isValidPing(s);
            case 3:
              i = s.topic;
              if (!_this26.pairings.keys.includes(i)) {
                _context91.next = 15;
                break;
              }
              _context91.next = 7;
              return _this26.sendRequest(i, "wc_pairingPing", {});
            case 7:
              r = _context91.sent;
              _es = _t$4();
              n = _es.done;
              a = _es.resolve;
              _h3 = _es.reject;
              _this26.events.once(Lt$4("pairing_ping", r), function (_ref52) {
                var c = _ref52.error;
                c ? _h3(c) : a();
              });
              _context91.next = 15;
              return n();
            case 15:
            case "end":
              return _context91.stop();
          }
        }, _callee91);
      }));
      return function (_x86) {
        return _ref51.apply(this, arguments);
      };
    }(), this.updateExpiry = /*#__PURE__*/function () {
      var _ref54 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee92(_ref53) {
        var s, i;
        return _regeneratorRuntime().wrap(function _callee92$(_context92) {
          while (1) switch (_context92.prev = _context92.next) {
            case 0:
              s = _ref53.topic, i = _ref53.expiry;
              _this26.isInitialized();
              _context92.next = 4;
              return _this26.pairings.update(s, {
                expiry: i
              });
            case 4:
            case "end":
              return _context92.stop();
          }
        }, _callee92);
      }));
      return function (_x87) {
        return _ref54.apply(this, arguments);
      };
    }(), this.updateMetadata = /*#__PURE__*/function () {
      var _ref56 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee93(_ref55) {
        var s, i;
        return _regeneratorRuntime().wrap(function _callee93$(_context93) {
          while (1) switch (_context93.prev = _context93.next) {
            case 0:
              s = _ref55.topic, i = _ref55.metadata;
              _this26.isInitialized();
              _context93.next = 4;
              return _this26.pairings.update(s, {
                peerMetadata: i
              });
            case 4:
            case "end":
              return _context93.stop();
          }
        }, _callee93);
      }));
      return function (_x88) {
        return _ref56.apply(this, arguments);
      };
    }(), this.getPairings = function () {
      return _this26.isInitialized(), _this26.pairings.values;
    }, this.disconnect = /*#__PURE__*/function () {
      var _ref57 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee94(s) {
        var i;
        return _regeneratorRuntime().wrap(function _callee94$(_context94) {
          while (1) switch (_context94.prev = _context94.next) {
            case 0:
              _this26.isInitialized();
              _context94.next = 3;
              return _this26.isValidDisconnect(s);
            case 3:
              i = s.topic;
              _context94.t0 = _this26.pairings.keys.includes(i);
              if (!_context94.t0) {
                _context94.next = 10;
                break;
              }
              _context94.next = 8;
              return _this26.sendRequest(i, "wc_pairingDelete", U$3("USER_DISCONNECTED"));
            case 8:
              _context94.next = 10;
              return _this26.deletePairing(i);
            case 10:
            case "end":
              return _context94.stop();
          }
        }, _callee94);
      }));
      return function (_x89) {
        return _ref57.apply(this, arguments);
      };
    }(), this.formatUriFromPairing = function (s) {
      _this26.isInitialized();
      var i = s.topic,
        r = s.relay,
        n = s.expiry,
        a = s.methods,
        h = _this26.core.crypto.keychain.get(i);
      return Dr$4({
        protocol: _this26.core.protocol,
        version: _this26.core.version,
        topic: i,
        symKey: h,
        relay: r,
        expiryTimestamp: n,
        methods: a
      });
    }, this.sendRequest = /*#__PURE__*/function () {
      var _ref58 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee95(s, i, r) {
        var n, a, h;
        return _regeneratorRuntime().wrap(function _callee95$(_context95) {
          while (1) switch (_context95.prev = _context95.next) {
            case 0:
              n = formatJsonRpcRequest(i, r);
              _context95.next = 3;
              return _this26.core.crypto.encode(s, n);
            case 3:
              a = _context95.sent;
              h = B$3[i].req;
              return _context95.abrupt("return", (_this26.core.history.set(s, n), _this26.core.relayer.publish(s, a, h), n.id));
            case 6:
            case "end":
              return _context95.stop();
          }
        }, _callee95);
      }));
      return function (_x90, _x91, _x92) {
        return _ref58.apply(this, arguments);
      };
    }(), this.sendResult = /*#__PURE__*/function () {
      var _ref59 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee96(s, i, r) {
        var n, a, h, c;
        return _regeneratorRuntime().wrap(function _callee96$(_context96) {
          while (1) switch (_context96.prev = _context96.next) {
            case 0:
              n = formatJsonRpcResult(s, r);
              _context96.next = 3;
              return _this26.core.crypto.encode(i, n);
            case 3:
              a = _context96.sent;
              _context96.next = 6;
              return _this26.core.history.get(i, s);
            case 6:
              h = _context96.sent;
              c = B$3[h.request.method].res;
              _context96.next = 10;
              return _this26.core.relayer.publish(i, a, c);
            case 10:
              _context96.next = 12;
              return _this26.core.history.resolve(n);
            case 12:
            case "end":
              return _context96.stop();
          }
        }, _callee96);
      }));
      return function (_x93, _x94, _x95) {
        return _ref59.apply(this, arguments);
      };
    }(), this.sendError = /*#__PURE__*/function () {
      var _ref60 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee97(s, i, r) {
        var n, a, h, c;
        return _regeneratorRuntime().wrap(function _callee97$(_context97) {
          while (1) switch (_context97.prev = _context97.next) {
            case 0:
              n = formatJsonRpcError(s, r);
              _context97.next = 3;
              return _this26.core.crypto.encode(i, n);
            case 3:
              a = _context97.sent;
              _context97.next = 6;
              return _this26.core.history.get(i, s);
            case 6:
              h = _context97.sent;
              c = B$3[h.request.method] ? B$3[h.request.method].res : B$3.unregistered_method.res;
              _context97.next = 10;
              return _this26.core.relayer.publish(i, a, c);
            case 10:
              _context97.next = 12;
              return _this26.core.history.resolve(n);
            case 12:
            case "end":
              return _context97.stop();
          }
        }, _callee97);
      }));
      return function (_x96, _x97, _x98) {
        return _ref60.apply(this, arguments);
      };
    }(), this.deletePairing = /*#__PURE__*/function () {
      var _ref61 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee98(s, i) {
        return _regeneratorRuntime().wrap(function _callee98$(_context98) {
          while (1) switch (_context98.prev = _context98.next) {
            case 0:
              _context98.next = 2;
              return _this26.core.relayer.unsubscribe(s);
            case 2:
              _context98.next = 4;
              return Promise.all([_this26.pairings["delete"](s, U$3("USER_DISCONNECTED")), _this26.core.crypto.deleteSymKey(s), i ? Promise.resolve() : _this26.core.expirer.del(s)]);
            case 4:
            case "end":
              return _context98.stop();
          }
        }, _callee98);
      }));
      return function (_x99, _x100) {
        return _ref61.apply(this, arguments);
      };
    }(), this.cleanup = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee99() {
      var s;
      return _regeneratorRuntime().wrap(function _callee99$(_context99) {
        while (1) switch (_context99.prev = _context99.next) {
          case 0:
            s = _this26.pairings.getAll().filter(function (i) {
              return Kt$4(i.expiry);
            });
            _context99.next = 3;
            return Promise.all(s.map(function (i) {
              return _this26.deletePairing(i.topic);
            }));
          case 3:
          case "end":
            return _context99.stop();
        }
      }, _callee99);
    })), this.onRelayEventRequest = function (s) {
      var i = s.topic,
        r = s.payload;
      switch (r.method) {
        case "wc_pairingPing":
          return _this26.onPairingPingRequest(i, r);
        case "wc_pairingDelete":
          return _this26.onPairingDeleteRequest(i, r);
        default:
          return _this26.onUnknownRpcMethodRequest(i, r);
      }
    }, this.onRelayEventResponse = /*#__PURE__*/function () {
      var _ref63 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee100(s) {
        var i, r, n;
        return _regeneratorRuntime().wrap(function _callee100$(_context100) {
          while (1) switch (_context100.prev = _context100.next) {
            case 0:
              i = s.topic;
              r = s.payload;
              _context100.next = 4;
              return _this26.core.history.get(i, r.id);
            case 4:
              n = _context100.sent.request.method;
              _context100.t0 = n;
              _context100.next = _context100.t0 === "wc_pairingPing" ? 8 : 9;
              break;
            case 8:
              return _context100.abrupt("return", _this26.onPairingPingResponse(i, r));
            case 9:
              return _context100.abrupt("return", _this26.onUnknownRpcMethodResponse(n));
            case 10:
            case "end":
              return _context100.stop();
          }
        }, _callee100);
      }));
      return function (_x101) {
        return _ref63.apply(this, arguments);
      };
    }(), this.onPairingPingRequest = /*#__PURE__*/function () {
      var _ref64 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee101(s, i) {
        var r;
        return _regeneratorRuntime().wrap(function _callee101$(_context101) {
          while (1) switch (_context101.prev = _context101.next) {
            case 0:
              r = i.id;
              _context101.prev = 1;
              _this26.isValidPing({
                topic: s
              });
              _context101.next = 5;
              return _this26.sendResult(r, s, !0);
            case 5:
              _this26.events.emit(V$4.ping, {
                id: r,
                topic: s
              });
              _context101.next = 13;
              break;
            case 8:
              _context101.prev = 8;
              _context101.t0 = _context101["catch"](1);
              _context101.next = 12;
              return _this26.sendError(r, s, _context101.t0);
            case 12:
              _this26.logger.error(_context101.t0);
            case 13:
            case "end":
              return _context101.stop();
          }
        }, _callee101, null, [[1, 8]]);
      }));
      return function (_x102, _x103) {
        return _ref64.apply(this, arguments);
      };
    }(), this.onPairingPingResponse = function (s, i) {
      var r = i.id;
      setTimeout(function () {
        isJsonRpcResult(i) ? _this26.events.emit(Lt$4("pairing_ping", r), {}) : isJsonRpcError(i) && _this26.events.emit(Lt$4("pairing_ping", r), {
          error: i.error
        });
      }, 500);
    }, this.onPairingDeleteRequest = /*#__PURE__*/function () {
      var _ref65 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee102(s, i) {
        var r;
        return _regeneratorRuntime().wrap(function _callee102$(_context102) {
          while (1) switch (_context102.prev = _context102.next) {
            case 0:
              r = i.id;
              _context102.prev = 1;
              _this26.isValidDisconnect({
                topic: s
              });
              _context102.next = 5;
              return _this26.deletePairing(s);
            case 5:
              _this26.events.emit(V$4["delete"], {
                id: r,
                topic: s
              });
              _context102.next = 13;
              break;
            case 8:
              _context102.prev = 8;
              _context102.t0 = _context102["catch"](1);
              _context102.next = 12;
              return _this26.sendError(r, s, _context102.t0);
            case 12:
              _this26.logger.error(_context102.t0);
            case 13:
            case "end":
              return _context102.stop();
          }
        }, _callee102, null, [[1, 8]]);
      }));
      return function (_x104, _x105) {
        return _ref65.apply(this, arguments);
      };
    }(), this.onUnknownRpcMethodRequest = /*#__PURE__*/function () {
      var _ref66 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee103(s, i) {
        var r, n, a;
        return _regeneratorRuntime().wrap(function _callee103$(_context103) {
          while (1) switch (_context103.prev = _context103.next) {
            case 0:
              r = i.id, n = i.method;
              _context103.prev = 1;
              if (!_this26.registeredMethods.includes(n)) {
                _context103.next = 4;
                break;
              }
              return _context103.abrupt("return");
            case 4:
              a = U$3("WC_METHOD_UNSUPPORTED", n);
              _context103.next = 7;
              return _this26.sendError(r, s, a);
            case 7:
              _this26.logger.error(a);
              _context103.next = 15;
              break;
            case 10:
              _context103.prev = 10;
              _context103.t0 = _context103["catch"](1);
              _context103.next = 14;
              return _this26.sendError(r, s, _context103.t0);
            case 14:
              _this26.logger.error(_context103.t0);
            case 15:
            case "end":
              return _context103.stop();
          }
        }, _callee103, null, [[1, 10]]);
      }));
      return function (_x106, _x107) {
        return _ref66.apply(this, arguments);
      };
    }(), this.onUnknownRpcMethodResponse = function (s) {
      _this26.registeredMethods.includes(s) || _this26.logger.error(U$3("WC_METHOD_UNSUPPORTED", s));
    }, this.isValidPair = function (s, i) {
      var r;
      if (!to$1(s)) {
        var _d13 = S$7("MISSING_OR_INVALID", "pair() params: ".concat(s)),
          a = _d13.message;
        throw i.setError($$4.malformed_pairing_uri), new Error(a);
      }
      if (!Gr$3(s.uri)) {
        var _d14 = S$7("MISSING_OR_INVALID", "pair() uri: ".concat(s.uri)),
          _a = _d14.message;
        throw i.setError($$4.malformed_pairing_uri), new Error(_a);
      }
      var n = kr$3(s === null || s === void 0 ? void 0 : s.uri);
      if (!((r = n === null || n === void 0 ? void 0 : n.relay) != null && r.protocol)) {
        var _d15 = S$7("MISSING_OR_INVALID", "pair() uri#relay-protocol"),
          _a2 = _d15.message;
        throw i.setError($$4.malformed_pairing_uri), new Error(_a2);
      }
      if (!(n != null && n.symKey)) {
        var _d16 = S$7("MISSING_OR_INVALID", "pair() uri#symKey"),
          _a3 = _d16.message;
        throw i.setError($$4.malformed_pairing_uri), new Error(_a3);
      }
      if (n != null && n.expiryTimestamp && cjs$3.toMiliseconds(n === null || n === void 0 ? void 0 : n.expiryTimestamp) < Date.now()) {
        i.setError($$4.pairing_expired);
        var _d17 = S$7("EXPIRED", "pair() URI has expired. Please try again with a new connection URI."),
          _a4 = _d17.message;
        throw new Error(_a4);
      }
    }, this.isValidPing = /*#__PURE__*/function () {
      var _ref67 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee104(s) {
        var _d18, r, i;
        return _regeneratorRuntime().wrap(function _callee104$(_context104) {
          while (1) switch (_context104.prev = _context104.next) {
            case 0:
              if (to$1(s)) {
                _context104.next = 3;
                break;
              }
              _d18 = S$7("MISSING_OR_INVALID", "ping() params: ".concat(s)), r = _d18.message;
              throw new Error(r);
            case 3:
              i = s.topic;
              _context104.next = 6;
              return _this26.isValidPairingTopic(i);
            case 6:
            case "end":
              return _context104.stop();
          }
        }, _callee104);
      }));
      return function (_x108) {
        return _ref67.apply(this, arguments);
      };
    }(), this.isValidDisconnect = /*#__PURE__*/function () {
      var _ref68 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee105(s) {
        var _d19, r, i;
        return _regeneratorRuntime().wrap(function _callee105$(_context105) {
          while (1) switch (_context105.prev = _context105.next) {
            case 0:
              if (to$1(s)) {
                _context105.next = 3;
                break;
              }
              _d19 = S$7("MISSING_OR_INVALID", "disconnect() params: ".concat(s)), r = _d19.message;
              throw new Error(r);
            case 3:
              i = s.topic;
              _context105.next = 6;
              return _this26.isValidPairingTopic(i);
            case 6:
            case "end":
              return _context105.stop();
          }
        }, _callee105);
      }));
      return function (_x109) {
        return _ref68.apply(this, arguments);
      };
    }(), this.isValidPairingTopic = /*#__PURE__*/function () {
      var _ref69 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee106(s) {
        var _d20, i, _d21, _i3, _d22, _i4;
        return _regeneratorRuntime().wrap(function _callee106$(_context106) {
          while (1) switch (_context106.prev = _context106.next) {
            case 0:
              if (b$4(s, !1)) {
                _context106.next = 3;
                break;
              }
              _d20 = S$7("MISSING_OR_INVALID", "pairing topic should be a string: ".concat(s)), i = _d20.message;
              throw new Error(i);
            case 3:
              if (_this26.pairings.keys.includes(s)) {
                _context106.next = 6;
                break;
              }
              _d21 = S$7("NO_MATCHING_KEY", "pairing topic doesn't exist: ".concat(s)), _i3 = _d21.message;
              throw new Error(_i3);
            case 6:
              if (!Kt$4(_this26.pairings.get(s).expiry)) {
                _context106.next = 11;
                break;
              }
              _context106.next = 9;
              return _this26.deletePairing(s);
            case 9:
              _d22 = S$7("EXPIRED", "pairing topic: ".concat(s)), _i4 = _d22.message;
              throw new Error(_i4);
            case 11:
            case "end":
              return _context106.stop();
          }
        }, _callee106);
      }));
      return function (_x110) {
        return _ref69.apply(this, arguments);
      };
    }(), this.core = e, this.logger = E$4(t, this.name), this.pairings = new ni$1(this.core, this.logger, this.name, this.storagePrefix);
  }
  return _createClass(oi, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d23 = S$7("NOT_INITIALIZED", this.name),
          e = _d23.message;
        throw new Error(e);
      }
    }
  }, {
    key: "registerRelayerEvents",
    value: function registerRelayerEvents() {
      var _this27 = this;
      this.core.relayer.on(v$4.message, /*#__PURE__*/function () {
        var _ref70 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee107(e) {
          var t, s, i, r;
          return _regeneratorRuntime().wrap(function _callee107$(_context107) {
            while (1) switch (_context107.prev = _context107.next) {
              case 0:
                t = e.topic, s = e.message, i = e.transportType;
                if (!(!_this27.pairings.keys.includes(t) || i === M$4.link_mode || _this27.ignoredPayloadTypes.includes(_this27.core.crypto.getPayloadType(s)))) {
                  _context107.next = 3;
                  break;
                }
                return _context107.abrupt("return");
              case 3:
                _context107.next = 5;
                return _this27.core.crypto.decode(t, s);
              case 5:
                r = _context107.sent;
                _context107.prev = 6;
                if (!isJsonRpcRequest(r)) {
                  _context107.next = 11;
                  break;
                }
                _this27.core.history.set(t, r), _this27.onRelayEventRequest({
                  topic: t,
                  payload: r
                });
                _context107.next = 18;
                break;
              case 11:
                _context107.t0 = isJsonRpcResponse(r);
                if (!_context107.t0) {
                  _context107.next = 18;
                  break;
                }
                _context107.next = 15;
                return _this27.core.history.resolve(r);
              case 15:
                _context107.next = 17;
                return _this27.onRelayEventResponse({
                  topic: t,
                  payload: r
                });
              case 17:
                _this27.core.history["delete"](t, r.id);
              case 18:
                _context107.next = 23;
                break;
              case 20:
                _context107.prev = 20;
                _context107.t1 = _context107["catch"](6);
                _this27.logger.error(_context107.t1);
              case 23:
              case "end":
                return _context107.stop();
            }
          }, _callee107, null, [[6, 20]]);
        }));
        return function (_x111) {
          return _ref70.apply(this, arguments);
        };
      }());
    }
  }, {
    key: "registerExpirerEvents",
    value: function registerExpirerEvents() {
      var _this28 = this;
      this.core.expirer.on(S$5.expired, /*#__PURE__*/function () {
        var _ref71 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee108(e) {
          var _ss, t;
          return _regeneratorRuntime().wrap(function _callee108$(_context108) {
            while (1) switch (_context108.prev = _context108.next) {
              case 0:
                _ss = Vt$4(e.target), t = _ss.topic;
                _context108.t0 = t && _this28.pairings.keys.includes(t);
                if (!_context108.t0) {
                  _context108.next = 6;
                  break;
                }
                _context108.next = 5;
                return _this28.deletePairing(t, !0);
              case 5:
                _this28.events.emit(V$4.expire, {
                  topic: t
                });
              case 6:
              case "end":
                return _context108.stop();
            }
          }, _callee108);
        }));
        return function (_x112) {
          return _ref71.apply(this, arguments);
        };
      }());
    }
  }]);
}();
var ai$1 = /*#__PURE__*/function (_Pi) {
  function ai(e, t) {
    var _this29;
    _classCallCheck(this, ai);
    _this29 = _callSuper(this, ai, [e, t]), _this29.core = e, _this29.logger = t, _this29.records = new Map(), _this29.events = new eventsExports.EventEmitter(), _this29.name = Dt$3, _this29.version = mt$3, _this29.cached = [], _this29.initialized = !1, _this29.storagePrefix = x$5, _this29.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee109() {
      return _regeneratorRuntime().wrap(function _callee109$(_context109) {
        while (1) switch (_context109.prev = _context109.next) {
          case 0:
            _context109.t0 = _this29.initialized;
            if (_context109.t0) {
              _context109.next = 9;
              break;
            }
            _this29.logger.trace("Initialized");
            _context109.next = 5;
            return _this29.restore();
          case 5:
            _this29.cached.forEach(function (s) {
              return _this29.records.set(s.id, s);
            });
            _this29.cached = [];
            _this29.registerEventListeners();
            _this29.initialized = !0;
          case 9:
          case "end":
            return _context109.stop();
        }
      }, _callee109);
    })), _this29.set = function (s, i, r) {
      if (_this29.isInitialized(), _this29.logger.debug("Setting JSON-RPC request history record"), _this29.logger.trace({
        type: "method",
        method: "set",
        topic: s,
        request: i,
        chainId: r
      }), _this29.records.has(i.id)) return;
      var n = {
        id: i.id,
        topic: s,
        request: {
          method: i.method,
          params: i.params || null
        },
        chainId: r,
        expiry: Mt$4(cjs$3.THIRTY_DAYS)
      };
      _this29.records.set(n.id, n), _this29.persist(), _this29.events.emit(P$3.created, n);
    }, _this29.resolve = /*#__PURE__*/function () {
      var _ref73 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee110(s) {
        var i;
        return _regeneratorRuntime().wrap(function _callee110$(_context110) {
          while (1) switch (_context110.prev = _context110.next) {
            case 0:
              if (!(_this29.isInitialized(), _this29.logger.debug("Updating JSON-RPC response history record"), _this29.logger.trace({
                type: "method",
                method: "update",
                response: s
              }), !_this29.records.has(s.id))) {
                _context110.next = 2;
                break;
              }
              return _context110.abrupt("return");
            case 2:
              _context110.next = 4;
              return _this29.getRecord(s.id);
            case 4:
              i = _context110.sent;
              _typeof(i.response) > "u" && (i.response = isJsonRpcError(s) ? {
                error: s.error
              } : {
                result: s.result
              }, _this29.records.set(i.id, i), _this29.persist(), _this29.events.emit(P$3.updated, i));
            case 6:
            case "end":
              return _context110.stop();
          }
        }, _callee110);
      }));
      return function (_x113) {
        return _ref73.apply(this, arguments);
      };
    }(), _this29.get = /*#__PURE__*/function () {
      var _ref74 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee111(s, i) {
        return _regeneratorRuntime().wrap(function _callee111$(_context111) {
          while (1) switch (_context111.prev = _context111.next) {
            case 0:
              _this29.isInitialized();
              _this29.logger.debug("Getting record");
              _this29.logger.trace({
                type: "method",
                method: "get",
                topic: s,
                id: i
              });
              _context111.next = 5;
              return _this29.getRecord(i);
            case 5:
              return _context111.abrupt("return", _context111.sent);
            case 6:
            case "end":
              return _context111.stop();
          }
        }, _callee111);
      }));
      return function (_x114, _x115) {
        return _ref74.apply(this, arguments);
      };
    }(), _this29["delete"] = function (s, i) {
      _this29.isInitialized(), _this29.logger.debug("Deleting record"), _this29.logger.trace({
        type: "method",
        method: "delete",
        id: i
      }), _this29.values.forEach(function (r) {
        if (r.topic === s) {
          if (_typeof(i) < "u" && r.id !== i) return;
          _this29.records["delete"](r.id), _this29.events.emit(P$3.deleted, r);
        }
      }), _this29.persist();
    }, _this29.exists = /*#__PURE__*/function () {
      var _ref75 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee112(s, i) {
        return _regeneratorRuntime().wrap(function _callee112$(_context112) {
          while (1) switch (_context112.prev = _context112.next) {
            case 0:
              _this29.isInitialized();
              if (!_this29.records.has(i)) {
                _context112.next = 9;
                break;
              }
              _context112.next = 4;
              return _this29.getRecord(i);
            case 4:
              _context112.t1 = _context112.sent.topic;
              _context112.t2 = s;
              _context112.t0 = _context112.t1 === _context112.t2;
              _context112.next = 10;
              break;
            case 9:
              _context112.t0 = !1;
            case 10:
              return _context112.abrupt("return", _context112.t0);
            case 11:
            case "end":
              return _context112.stop();
          }
        }, _callee112);
      }));
      return function (_x116, _x117) {
        return _ref75.apply(this, arguments);
      };
    }(), _this29.on = function (s, i) {
      _this29.events.on(s, i);
    }, _this29.once = function (s, i) {
      _this29.events.once(s, i);
    }, _this29.off = function (s, i) {
      _this29.events.off(s, i);
    }, _this29.removeListener = function (s, i) {
      _this29.events.removeListener(s, i);
    }, _this29.logger = E$4(t, _this29.name);
    return _this29;
  }
  _inherits(ai, _Pi);
  return _createClass(ai, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "size",
    get: function get() {
      return this.records.size;
    }
  }, {
    key: "keys",
    get: function get() {
      return Array.from(this.records.keys());
    }
  }, {
    key: "values",
    get: function get() {
      return Array.from(this.records.values());
    }
  }, {
    key: "pending",
    get: function get() {
      var e = [];
      return this.values.forEach(function (t) {
        if (_typeof(t.response) < "u") return;
        var s = {
          topic: t.topic,
          request: formatJsonRpcRequest(t.request.method, t.request.params, t.id),
          chainId: t.chainId
        };
        return e.push(s);
      }), e;
    }
  }, {
    key: "setJsonRpcRecords",
    value: function () {
      var _setJsonRpcRecords = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee113(e) {
        return _regeneratorRuntime().wrap(function _callee113$(_context113) {
          while (1) switch (_context113.prev = _context113.next) {
            case 0:
              _context113.next = 2;
              return this.core.storage.setItem(this.storageKey, e);
            case 2:
            case "end":
              return _context113.stop();
          }
        }, _callee113, this);
      }));
      function setJsonRpcRecords(_x118) {
        return _setJsonRpcRecords.apply(this, arguments);
      }
      return setJsonRpcRecords;
    }()
  }, {
    key: "getJsonRpcRecords",
    value: function () {
      var _getJsonRpcRecords = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee114() {
        return _regeneratorRuntime().wrap(function _callee114$(_context114) {
          while (1) switch (_context114.prev = _context114.next) {
            case 0:
              _context114.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              return _context114.abrupt("return", _context114.sent);
            case 3:
            case "end":
              return _context114.stop();
          }
        }, _callee114, this);
      }));
      function getJsonRpcRecords() {
        return _getJsonRpcRecords.apply(this, arguments);
      }
      return getJsonRpcRecords;
    }()
  }, {
    key: "getRecord",
    value: function getRecord(e) {
      this.isInitialized();
      var t = this.records.get(e);
      if (!t) {
        var _d24 = S$7("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)),
          s = _d24.message;
        throw new Error(s);
      }
      return t;
    }
  }, {
    key: "persist",
    value: function () {
      var _persist5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee115() {
        return _regeneratorRuntime().wrap(function _callee115$(_context115) {
          while (1) switch (_context115.prev = _context115.next) {
            case 0:
              _context115.next = 2;
              return this.setJsonRpcRecords(this.values);
            case 2:
              this.events.emit(P$3.sync);
            case 3:
            case "end":
              return _context115.stop();
          }
        }, _callee115, this);
      }));
      function persist() {
        return _persist5.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "restore",
    value: function () {
      var _restore3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee116() {
        var e, _d25, t;
        return _regeneratorRuntime().wrap(function _callee116$(_context116) {
          while (1) switch (_context116.prev = _context116.next) {
            case 0:
              _context116.prev = 0;
              _context116.next = 3;
              return this.getJsonRpcRecords();
            case 3:
              e = _context116.sent;
              if (!(_typeof(e) > "u" || !e.length)) {
                _context116.next = 6;
                break;
              }
              return _context116.abrupt("return");
            case 6:
              if (!this.records.size) {
                _context116.next = 9;
                break;
              }
              _d25 = S$7("RESTORE_WILL_OVERRIDE", this.name), t = _d25.message;
              throw this.logger.error(t), new Error(t);
            case 9:
              this.cached = e, this.logger.debug("Successfully Restored records for ".concat(this.name)), this.logger.trace({
                type: "method",
                method: "restore",
                records: this.values
              });
              _context116.next = 15;
              break;
            case 12:
              _context116.prev = 12;
              _context116.t0 = _context116["catch"](0);
              this.logger.debug("Failed to Restore records for ".concat(this.name)), this.logger.error(_context116.t0);
            case 15:
            case "end":
              return _context116.stop();
          }
        }, _callee116, this, [[0, 12]]);
      }));
      function restore() {
        return _restore3.apply(this, arguments);
      }
      return restore;
    }()
  }, {
    key: "registerEventListeners",
    value: function registerEventListeners() {
      var _this30 = this;
      this.events.on(P$3.created, function (e) {
        var t = P$3.created;
        _this30.logger.info("Emitting ".concat(t)), _this30.logger.debug({
          type: "event",
          event: t,
          record: e
        });
      }), this.events.on(P$3.updated, function (e) {
        var t = P$3.updated;
        _this30.logger.info("Emitting ".concat(t)), _this30.logger.debug({
          type: "event",
          event: t,
          record: e
        });
      }), this.events.on(P$3.deleted, function (e) {
        var t = P$3.deleted;
        _this30.logger.info("Emitting ".concat(t)), _this30.logger.debug({
          type: "event",
          event: t,
          record: e
        });
      }), this.core.heartbeat.on(r$4.pulse, function () {
        _this30.cleanup();
      });
    }
  }, {
    key: "cleanup",
    value: function cleanup() {
      var _this31 = this;
      try {
        this.isInitialized();
        var e = !1;
        this.records.forEach(function (t) {
          cjs$3.toMiliseconds(t.expiry || 0) - Date.now() <= 0 && (_this31.logger.info("Deleting expired history log: ".concat(t.id)), _this31.records["delete"](t.id), _this31.events.emit(P$3.deleted, t, !1), e = !0);
        }), e && this.persist();
      } catch (e) {
        this.logger.warn(e);
      }
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d26 = S$7("NOT_INITIALIZED", this.name),
          e = _d26.message;
        throw new Error(e);
      }
    }
  }]);
}(h$3);
var hi$1 = /*#__PURE__*/function (_Si) {
  function hi(e, t) {
    var _this32;
    _classCallCheck(this, hi);
    _this32 = _callSuper(this, hi, [e, t]), _this32.core = e, _this32.logger = t, _this32.expirations = new Map(), _this32.events = new eventsExports.EventEmitter(), _this32.name = bt$3, _this32.version = ft$3, _this32.cached = [], _this32.initialized = !1, _this32.storagePrefix = x$5, _this32.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee117() {
      return _regeneratorRuntime().wrap(function _callee117$(_context117) {
        while (1) switch (_context117.prev = _context117.next) {
          case 0:
            _context117.t0 = _this32.initialized;
            if (_context117.t0) {
              _context117.next = 9;
              break;
            }
            _this32.logger.trace("Initialized");
            _context117.next = 5;
            return _this32.restore();
          case 5:
            _this32.cached.forEach(function (s) {
              return _this32.expirations.set(s.target, s);
            });
            _this32.cached = [];
            _this32.registerEventListeners();
            _this32.initialized = !0;
          case 9:
          case "end":
            return _context117.stop();
        }
      }, _callee117);
    })), _this32.has = function (s) {
      try {
        var i = _this32.formatTarget(s);
        return _typeof(_this32.getExpiration(i)) < "u";
      } catch (_unused6) {
        return !1;
      }
    }, _this32.set = function (s, i) {
      _this32.isInitialized();
      var r = _this32.formatTarget(s),
        n = {
          target: r,
          expiry: i
        };
      _this32.expirations.set(r, n), _this32.checkExpiry(r, n), _this32.events.emit(S$5.created, {
        target: r,
        expiration: n
      });
    }, _this32.get = function (s) {
      _this32.isInitialized();
      var i = _this32.formatTarget(s);
      return _this32.getExpiration(i);
    }, _this32.del = function (s) {
      if (_this32.isInitialized(), _this32.has(s)) {
        var i = _this32.formatTarget(s),
          r = _this32.getExpiration(i);
        _this32.expirations["delete"](i), _this32.events.emit(S$5.deleted, {
          target: i,
          expiration: r
        });
      }
    }, _this32.on = function (s, i) {
      _this32.events.on(s, i);
    }, _this32.once = function (s, i) {
      _this32.events.once(s, i);
    }, _this32.off = function (s, i) {
      _this32.events.off(s, i);
    }, _this32.removeListener = function (s, i) {
      _this32.events.removeListener(s, i);
    }, _this32.logger = E$4(t, _this32.name);
    return _this32;
  }
  _inherits(hi, _Si);
  return _createClass(hi, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "length",
    get: function get() {
      return this.expirations.size;
    }
  }, {
    key: "keys",
    get: function get() {
      return Array.from(this.expirations.keys());
    }
  }, {
    key: "values",
    get: function get() {
      return Array.from(this.expirations.values());
    }
  }, {
    key: "formatTarget",
    value: function formatTarget(e) {
      if (typeof e == "string") return Dt$4(e);
      if (typeof e == "number") return xt$4(e);
      var _d27 = S$7("UNKNOWN_TYPE", "Target type: ".concat(_typeof(e))),
        t = _d27.message;
      throw new Error(t);
    }
  }, {
    key: "setExpirations",
    value: function () {
      var _setExpirations = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee118(e) {
        return _regeneratorRuntime().wrap(function _callee118$(_context118) {
          while (1) switch (_context118.prev = _context118.next) {
            case 0:
              _context118.next = 2;
              return this.core.storage.setItem(this.storageKey, e);
            case 2:
            case "end":
              return _context118.stop();
          }
        }, _callee118, this);
      }));
      function setExpirations(_x119) {
        return _setExpirations.apply(this, arguments);
      }
      return setExpirations;
    }()
  }, {
    key: "getExpirations",
    value: function () {
      var _getExpirations = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee119() {
        return _regeneratorRuntime().wrap(function _callee119$(_context119) {
          while (1) switch (_context119.prev = _context119.next) {
            case 0:
              _context119.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              return _context119.abrupt("return", _context119.sent);
            case 3:
            case "end":
              return _context119.stop();
          }
        }, _callee119, this);
      }));
      function getExpirations() {
        return _getExpirations.apply(this, arguments);
      }
      return getExpirations;
    }()
  }, {
    key: "persist",
    value: function () {
      var _persist6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee120() {
        return _regeneratorRuntime().wrap(function _callee120$(_context120) {
          while (1) switch (_context120.prev = _context120.next) {
            case 0:
              _context120.next = 2;
              return this.setExpirations(this.values);
            case 2:
              this.events.emit(S$5.sync);
            case 3:
            case "end":
              return _context120.stop();
          }
        }, _callee120, this);
      }));
      function persist() {
        return _persist6.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "restore",
    value: function () {
      var _restore4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee121() {
        var e, _d28, t;
        return _regeneratorRuntime().wrap(function _callee121$(_context121) {
          while (1) switch (_context121.prev = _context121.next) {
            case 0:
              _context121.prev = 0;
              _context121.next = 3;
              return this.getExpirations();
            case 3:
              e = _context121.sent;
              if (!(_typeof(e) > "u" || !e.length)) {
                _context121.next = 6;
                break;
              }
              return _context121.abrupt("return");
            case 6:
              if (!this.expirations.size) {
                _context121.next = 9;
                break;
              }
              _d28 = S$7("RESTORE_WILL_OVERRIDE", this.name), t = _d28.message;
              throw this.logger.error(t), new Error(t);
            case 9:
              this.cached = e, this.logger.debug("Successfully Restored expirations for ".concat(this.name)), this.logger.trace({
                type: "method",
                method: "restore",
                expirations: this.values
              });
              _context121.next = 15;
              break;
            case 12:
              _context121.prev = 12;
              _context121.t0 = _context121["catch"](0);
              this.logger.debug("Failed to Restore expirations for ".concat(this.name)), this.logger.error(_context121.t0);
            case 15:
            case "end":
              return _context121.stop();
          }
        }, _callee121, this, [[0, 12]]);
      }));
      function restore() {
        return _restore4.apply(this, arguments);
      }
      return restore;
    }()
  }, {
    key: "getExpiration",
    value: function getExpiration(e) {
      var t = this.expirations.get(e);
      if (!t) {
        var _d29 = S$7("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)),
          s = _d29.message;
        throw this.logger.warn(s), new Error(s);
      }
      return t;
    }
  }, {
    key: "checkExpiry",
    value: function checkExpiry(e, t) {
      var s = t.expiry;
      cjs$3.toMiliseconds(s) - Date.now() <= 0 && this.expire(e, t);
    }
  }, {
    key: "expire",
    value: function expire(e, t) {
      this.expirations["delete"](e), this.events.emit(S$5.expired, {
        target: e,
        expiration: t
      });
    }
  }, {
    key: "checkExpirations",
    value: function checkExpirations() {
      var _this33 = this;
      this.core.relayer.connected && this.expirations.forEach(function (e, t) {
        return _this33.checkExpiry(t, e);
      });
    }
  }, {
    key: "registerEventListeners",
    value: function registerEventListeners() {
      var _this34 = this;
      this.core.heartbeat.on(r$4.pulse, function () {
        return _this34.checkExpirations();
      }), this.events.on(S$5.created, function (e) {
        var t = S$5.created;
        _this34.logger.info("Emitting ".concat(t)), _this34.logger.debug({
          type: "event",
          event: t,
          data: e
        }), _this34.persist();
      }), this.events.on(S$5.expired, function (e) {
        var t = S$5.expired;
        _this34.logger.info("Emitting ".concat(t)), _this34.logger.debug({
          type: "event",
          event: t,
          data: e
        }), _this34.persist();
      }), this.events.on(S$5.deleted, function (e) {
        var t = S$5.deleted;
        _this34.logger.info("Emitting ".concat(t)), _this34.logger.debug({
          type: "event",
          event: t,
          data: e
        }), _this34.persist();
      });
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d30 = S$7("NOT_INITIALIZED", this.name),
          e = _d30.message;
        throw new Error(e);
      }
    }
  }]);
}(x$6);
var ci$1 = /*#__PURE__*/function (_Ri) {
  function ci(e, t, s) {
    var _this35;
    _classCallCheck(this, ci);
    _this35 = _callSuper(this, ci, [e, t, s]), _this35.core = e, _this35.logger = t, _this35.store = s, _this35.name = _t$3, _this35.verifyUrlV3 = vt$3, _this35.storagePrefix = x$5, _this35.version = De$3, _this35.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee122() {
      var i;
      return _regeneratorRuntime().wrap(function _callee122$(_context122) {
        while (1) switch (_context122.prev = _context122.next) {
          case 0:
            _context122.t0 = _this35.isDevEnv;
            if (_context122.t0) {
              _context122.next = 10;
              break;
            }
            _context122.next = 4;
            return _this35.store.getItem(_this35.storeKey);
          case 4:
            _this35.publicKey = _context122.sent;
            _context122.t1 = _this35.publicKey && cjs$3.toMiliseconds((i = _this35.publicKey) == null ? void 0 : i.expiresAt) < Date.now();
            if (!_context122.t1) {
              _context122.next = 10;
              break;
            }
            _this35.logger.debug("verify v2 public key expired");
            _context122.next = 10;
            return _this35.removePublicKey();
          case 10:
          case "end":
            return _context122.stop();
        }
      }, _callee122);
    })), _this35.register = /*#__PURE__*/function () {
      var _ref78 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee123(i) {
        var r, n, a, h, c, l, p;
        return _regeneratorRuntime().wrap(function _callee123$(_context123) {
          while (1) switch (_context123.prev = _context123.next) {
            case 0:
              if (!(!V$5() || _this35.isDevEnv)) {
                _context123.next = 2;
                break;
              }
              return _context123.abrupt("return");
            case 2:
              r = window.location.origin, n = i.id, a = i.decryptedId, h = "".concat(_this35.verifyUrlV3, "/attestation?projectId=").concat(_this35.core.projectId, "&origin=").concat(r, "&id=").concat(n, "&decryptedId=").concat(a);
              _context123.prev = 3;
              c = getDocument_1();
              l = _this35.startAbortTimer(cjs$3.ONE_SECOND * 5);
              _context123.next = 8;
              return new Promise(function (D, m) {
                var u = function u() {
                  window.removeEventListener("message", _2), c.body.removeChild(g), m("attestation aborted");
                };
                _this35.abortController.signal.addEventListener("abort", u);
                var g = c.createElement("iframe");
                g.src = h, g.style.display = "none", g.addEventListener("error", u, {
                  signal: _this35.abortController.signal
                });
                var _2 = function _(y) {
                  if (y.data && typeof y.data == "string") try {
                    var b = JSON.parse(y.data);
                    if (b.type === "verify_attestation") {
                      if (decodeJWT(b.attestation).payload.id !== n) return;
                      clearInterval(l), c.body.removeChild(g), _this35.abortController.signal.removeEventListener("abort", u), window.removeEventListener("message", _2), D(b.attestation === null ? "" : b.attestation);
                    }
                  } catch (b) {
                    _this35.logger.warn(b);
                  }
                };
                c.body.appendChild(g), window.addEventListener("message", _2, {
                  signal: _this35.abortController.signal
                });
              });
            case 8:
              p = _context123.sent;
              return _context123.abrupt("return", (_this35.logger.debug("jwt attestation", p), p));
            case 12:
              _context123.prev = 12;
              _context123.t0 = _context123["catch"](3);
              _this35.logger.warn(_context123.t0);
            case 15:
              return _context123.abrupt("return", "");
            case 16:
            case "end":
              return _context123.stop();
          }
        }, _callee123, null, [[3, 12]]);
      }));
      return function (_x120) {
        return _ref78.apply(this, arguments);
      };
    }(), _this35.resolve = /*#__PURE__*/function () {
      var _ref79 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee124(i) {
        var r, n, a, c, h;
        return _regeneratorRuntime().wrap(function _callee124$(_context124) {
          while (1) switch (_context124.prev = _context124.next) {
            case 0:
              if (!_this35.isDevEnv) {
                _context124.next = 2;
                break;
              }
              return _context124.abrupt("return", "");
            case 2:
              r = i.attestationId, n = i.hash, a = i.encryptedId;
              if (!(r === "")) {
                _context124.next = 6;
                break;
              }
              _this35.logger.debug("resolve: attestationId is empty, skipping");
              return _context124.abrupt("return");
            case 6:
              if (!r) {
                _context124.next = 17;
                break;
              }
              if (!(decodeJWT(r).payload.id !== a)) {
                _context124.next = 9;
                break;
              }
              return _context124.abrupt("return");
            case 9:
              _context124.next = 11;
              return _this35.isValidJwtAttestation(r);
            case 11:
              c = _context124.sent;
              if (!c) {
                _context124.next = 17;
                break;
              }
              if (c.isVerified) {
                _context124.next = 16;
                break;
              }
              _this35.logger.warn("resolve: jwt attestation: origin url not verified");
              return _context124.abrupt("return");
            case 16:
              return _context124.abrupt("return", c);
            case 17:
              if (n) {
                _context124.next = 19;
                break;
              }
              return _context124.abrupt("return");
            case 19:
              h = _this35.getVerifyUrl(i === null || i === void 0 ? void 0 : i.verifyUrl);
              return _context124.abrupt("return", _this35.fetchAttestation(n, h));
            case 21:
            case "end":
              return _context124.stop();
          }
        }, _callee124);
      }));
      return function (_x121) {
        return _ref79.apply(this, arguments);
      };
    }(), _this35.fetchAttestation = /*#__PURE__*/function () {
      var _ref80 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee125(i, r) {
        var n, a;
        return _regeneratorRuntime().wrap(function _callee125$(_context125) {
          while (1) switch (_context125.prev = _context125.next) {
            case 0:
              _this35.logger.debug("resolving attestation: ".concat(i, " from url: ").concat(r));
              n = _this35.startAbortTimer(cjs$3.ONE_SECOND * 5);
              _context125.next = 4;
              return fetch("".concat(r, "/attestation/").concat(i, "?v2Supported=true"), {
                signal: _this35.abortController.signal
              });
            case 4:
              a = _context125.sent;
              clearTimeout(n);
              if (!(a.status === 200)) {
                _context125.next = 12;
                break;
              }
              _context125.next = 9;
              return a.json();
            case 9:
              _context125.t0 = _context125.sent;
              _context125.next = 13;
              break;
            case 12:
              _context125.t0 = void 0;
            case 13:
              return _context125.abrupt("return", _context125.t0);
            case 14:
            case "end":
              return _context125.stop();
          }
        }, _callee125);
      }));
      return function (_x122, _x123) {
        return _ref80.apply(this, arguments);
      };
    }(), _this35.getVerifyUrl = function (i) {
      var r = i || J$3;
      return wt$3.includes(r) || (_this35.logger.info("verify url: ".concat(r, ", not included in trusted list, assigning default: ").concat(J$3)), r = J$3), r;
    }, _this35.fetchPublicKey = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee126() {
      var i, r;
      return _regeneratorRuntime().wrap(function _callee126$(_context126) {
        while (1) switch (_context126.prev = _context126.next) {
          case 0:
            _context126.prev = 0;
            _this35.logger.debug("fetching public key from: ".concat(_this35.verifyUrlV3));
            i = _this35.startAbortTimer(cjs$3.FIVE_SECONDS);
            _context126.next = 5;
            return fetch("".concat(_this35.verifyUrlV3, "/public-key"), {
              signal: _this35.abortController.signal
            });
          case 5:
            r = _context126.sent;
            clearTimeout(i);
            _context126.next = 9;
            return r.json();
          case 9:
            return _context126.abrupt("return", _context126.sent);
          case 12:
            _context126.prev = 12;
            _context126.t0 = _context126["catch"](0);
            _this35.logger.warn(_context126.t0);
          case 15:
          case "end":
            return _context126.stop();
        }
      }, _callee126, null, [[0, 12]]);
    })), _this35.persistPublicKey = /*#__PURE__*/function () {
      var _ref82 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee127(i) {
        return _regeneratorRuntime().wrap(function _callee127$(_context127) {
          while (1) switch (_context127.prev = _context127.next) {
            case 0:
              _this35.logger.debug("persisting public key to local storage", i);
              _context127.next = 3;
              return _this35.store.setItem(_this35.storeKey, i);
            case 3:
              _this35.publicKey = i;
            case 4:
            case "end":
              return _context127.stop();
          }
        }, _callee127);
      }));
      return function (_x124) {
        return _ref82.apply(this, arguments);
      };
    }(), _this35.removePublicKey = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee128() {
      return _regeneratorRuntime().wrap(function _callee128$(_context128) {
        while (1) switch (_context128.prev = _context128.next) {
          case 0:
            _this35.logger.debug("removing verify v2 public key from storage");
            _context128.next = 3;
            return _this35.store.removeItem(_this35.storeKey);
          case 3:
            _this35.publicKey = void 0;
          case 4:
          case "end":
            return _context128.stop();
        }
      }, _callee128);
    })), _this35.isValidJwtAttestation = /*#__PURE__*/function () {
      var _ref84 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee129(i) {
        var r, n;
        return _regeneratorRuntime().wrap(function _callee129$(_context129) {
          while (1) switch (_context129.prev = _context129.next) {
            case 0:
              _context129.next = 2;
              return _this35.getPublicKey();
            case 2:
              r = _context129.sent;
              _context129.prev = 3;
              if (!r) {
                _context129.next = 6;
                break;
              }
              return _context129.abrupt("return", _this35.validateAttestation(i, r));
            case 6:
              _context129.next = 11;
              break;
            case 8:
              _context129.prev = 8;
              _context129.t0 = _context129["catch"](3);
              _this35.logger.error(_context129.t0), _this35.logger.warn("error validating attestation");
            case 11:
              _context129.next = 13;
              return _this35.fetchAndPersistPublicKey();
            case 13:
              n = _context129.sent;
              _context129.prev = 14;
              if (!n) {
                _context129.next = 17;
                break;
              }
              return _context129.abrupt("return", _this35.validateAttestation(i, n));
            case 17:
              _context129.next = 22;
              break;
            case 19:
              _context129.prev = 19;
              _context129.t1 = _context129["catch"](14);
              _this35.logger.error(_context129.t1), _this35.logger.warn("error validating attestation");
            case 22:
            case "end":
              return _context129.stop();
          }
        }, _callee129, null, [[3, 8], [14, 19]]);
      }));
      return function (_x125) {
        return _ref84.apply(this, arguments);
      };
    }(), _this35.getPublicKey = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee130() {
      return _regeneratorRuntime().wrap(function _callee130$(_context130) {
        while (1) switch (_context130.prev = _context130.next) {
          case 0:
            if (!_this35.publicKey) {
              _context130.next = 4;
              break;
            }
            _context130.t0 = _this35.publicKey;
            _context130.next = 7;
            break;
          case 4:
            _context130.next = 6;
            return _this35.fetchAndPersistPublicKey();
          case 6:
            _context130.t0 = _context130.sent;
          case 7:
            return _context130.abrupt("return", _context130.t0);
          case 8:
          case "end":
            return _context130.stop();
        }
      }, _callee130);
    })), _this35.fetchAndPersistPublicKey = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee132() {
      var i;
      return _regeneratorRuntime().wrap(function _callee132$(_context132) {
        while (1) switch (_context132.prev = _context132.next) {
          case 0:
            if (!_this35.fetchPromise) {
              _context132.next = 4;
              break;
            }
            _context132.next = 3;
            return _this35.fetchPromise;
          case 3:
            return _context132.abrupt("return", _this35.publicKey);
          case 4:
            _this35.fetchPromise = new Promise(/*#__PURE__*/function () {
              var _ref87 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee131(r) {
                var n;
                return _regeneratorRuntime().wrap(function _callee131$(_context131) {
                  while (1) switch (_context131.prev = _context131.next) {
                    case 0:
                      _context131.next = 2;
                      return _this35.fetchPublicKey();
                    case 2:
                      n = _context131.sent;
                      _context131.t0 = n;
                      if (!_context131.t0) {
                        _context131.next = 8;
                        break;
                      }
                      _context131.next = 7;
                      return _this35.persistPublicKey(n);
                    case 7:
                      r(n);
                    case 8:
                    case "end":
                      return _context131.stop();
                  }
                }, _callee131);
              }));
              return function (_x126) {
                return _ref87.apply(this, arguments);
              };
            }());
            _context132.next = 7;
            return _this35.fetchPromise;
          case 7:
            i = _context132.sent;
            return _context132.abrupt("return", (_this35.fetchPromise = void 0, i));
          case 9:
          case "end":
            return _context132.stop();
        }
      }, _callee132);
    })), _this35.validateAttestation = function (i, r) {
      var n = Rr$4(i, r.publicKey),
        a = {
          hasExpired: cjs$3.toMiliseconds(n.exp) < Date.now(),
          payload: n
        };
      if (a.hasExpired) throw _this35.logger.warn("resolve: jwt attestation expired"), new Error("JWT attestation expired");
      return {
        origin: a.payload.origin,
        isScam: a.payload.isScam,
        isVerified: a.payload.isVerified
      };
    }, _this35.logger = E$4(t, _this35.name), _this35.abortController = new AbortController(), _this35.isDevEnv = Wt$4(), _this35.init();
    return _this35;
  }
  _inherits(ci, _Ri);
  return _createClass(ci, [{
    key: "storeKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//verify:public:key";
    }
  }, {
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "startAbortTimer",
    value: function startAbortTimer(e) {
      var _this36 = this;
      return this.abortController = new AbortController(), setTimeout(function () {
        return _this36.abortController.abort();
      }, cjs$3.toMiliseconds(e));
    }
  }]);
}(y$4);
var li$1 = /*#__PURE__*/function (_xi) {
  function li(e, t) {
    var _this37;
    _classCallCheck(this, li);
    _this37 = _callSuper(this, li, [e, t]), _this37.projectId = e, _this37.logger = t, _this37.context = It$3, _this37.registerDeviceToken = /*#__PURE__*/function () {
      var _ref88 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee133(s) {
        var i, r, n, _s$enableEncrypted, a, h;
        return _regeneratorRuntime().wrap(function _callee133$(_context133) {
          while (1) switch (_context133.prev = _context133.next) {
            case 0:
              i = s.clientId, r = s.token, n = s.notificationType, _s$enableEncrypted = s.enableEncrypted, a = _s$enableEncrypted === void 0 ? !1 : _s$enableEncrypted, h = "".concat(Tt$3, "/").concat(_this37.projectId, "/clients");
              _context133.next = 3;
              return fetch(h, {
                method: "POST",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({
                  client_id: i,
                  type: n,
                  token: r,
                  always_raw: a
                })
              });
            case 3:
            case "end":
              return _context133.stop();
          }
        }, _callee133);
      }));
      return function (_x127) {
        return _ref88.apply(this, arguments);
      };
    }(), _this37.logger = E$4(t, _this37.context);
    return _this37;
  }
  _inherits(li, _xi);
  return _createClass(li);
}(v$5);
var dn$2 = Object.defineProperty,
  ui$1 = Object.getOwnPropertySymbols,
  pn$2 = Object.prototype.hasOwnProperty,
  gn$2 = Object.prototype.propertyIsEnumerable,
  di$1 = function di(o, e, t) {
    return e in o ? dn$2(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  Z$4 = function Z(o, e) {
    for (var t in e || (e = {})) pn$2.call(e, t) && di$1(o, t, e[t]);
    if (ui$1) {
      var _iterator6 = _createForOfIteratorHelper(ui$1(e)),
        _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var t = _step6.value;
          gn$2.call(e, t) && di$1(o, t, e[t]);
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
    }
    return o;
  };
var pi$1 = /*#__PURE__*/function (_Oi) {
  function pi(e, t) {
    var _this38;
    var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
    _classCallCheck(this, pi);
    _this38 = _callSuper(this, pi, [e, t, s]), _this38.core = e, _this38.logger = t, _this38.context = Pt$3, _this38.storagePrefix = x$5, _this38.storageVersion = Ct$3, _this38.events = new Map(), _this38.shouldPersist = !1, _this38.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee134() {
      var i;
      return _regeneratorRuntime().wrap(function _callee134$(_context134) {
        while (1) switch (_context134.prev = _context134.next) {
          case 0:
            if (Wt$4()) {
              _context134.next = 19;
              break;
            }
            _context134.prev = 1;
            _context134.t0 = Ht$4();
            _context134.t1 = Date.now();
            _context134.t2 = _this38.getAppDomain();
            _context134.next = 7;
            return _this38.core.crypto.getClientId();
          case 7:
            _context134.t3 = _context134.sent;
            _context134.t4 = Ge$2(_this38.core.relayer.protocol, _this38.core.relayer.version, se$4);
            _context134.t5 = {
              client_id: _context134.t3,
              user_agent: _context134.t4
            };
            _context134.t6 = {
              event: "INIT",
              type: "",
              properties: _context134.t5
            };
            i = {
              eventId: _context134.t0,
              timestamp: _context134.t1,
              domain: _context134.t2,
              props: _context134.t6
            };
            _context134.next = 14;
            return _this38.sendEvent([i]);
          case 14:
            _context134.next = 19;
            break;
          case 16:
            _context134.prev = 16;
            _context134.t7 = _context134["catch"](1);
            _this38.logger.warn(_context134.t7);
          case 19:
          case "end":
            return _context134.stop();
        }
      }, _callee134, null, [[1, 16]]);
    })), _this38.createEvent = function (i) {
      var _i$event = i.event,
        r = _i$event === void 0 ? "ERROR" : _i$event,
        _i$type = i.type,
        n = _i$type === void 0 ? "" : _i$type,
        _i$properties = i.properties,
        a = _i$properties.topic,
        h = _i$properties.trace,
        c = Ht$4(),
        l = _this38.core.projectId || "",
        p = Date.now(),
        D = Z$4({
          eventId: c,
          timestamp: p,
          props: {
            event: r,
            type: n,
            properties: {
              topic: a,
              trace: h
            }
          },
          bundleId: l,
          domain: _this38.getAppDomain()
        }, _this38.setMethods(c));
      return _this38.telemetryEnabled && (_this38.events.set(c, D), _this38.shouldPersist = !0), D;
    }, _this38.getEvent = function (i) {
      var r = i.eventId,
        n = i.topic;
      if (r) return _this38.events.get(r);
      var a = Array.from(_this38.events.values()).find(function (h) {
        return h.props.properties.topic === n;
      });
      if (a) return Z$4(Z$4({}, a), _this38.setMethods(a.eventId));
    }, _this38.deleteEvent = function (i) {
      var r = i.eventId;
      _this38.events["delete"](r), _this38.shouldPersist = !0;
    }, _this38.setEventListeners = function () {
      _this38.core.heartbeat.on(r$4.pulse, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee135() {
        return _regeneratorRuntime().wrap(function _callee135$(_context135) {
          while (1) switch (_context135.prev = _context135.next) {
            case 0:
              _context135.t0 = _this38.shouldPersist;
              if (!_context135.t0) {
                _context135.next = 4;
                break;
              }
              _context135.next = 4;
              return _this38.persist();
            case 4:
              _this38.events.forEach(function (i) {
                cjs$3.fromMiliseconds(Date.now()) - cjs$3.fromMiliseconds(i.timestamp) > St$3 && (_this38.events["delete"](i.eventId), _this38.shouldPersist = !0);
              });
            case 5:
            case "end":
              return _context135.stop();
          }
        }, _callee135);
      })));
    }, _this38.setMethods = function (i) {
      return {
        addTrace: function addTrace(r) {
          return _this38.addTrace(i, r);
        },
        setError: function setError(r) {
          return _this38.setError(i, r);
        }
      };
    }, _this38.addTrace = function (i, r) {
      var n = _this38.events.get(i);
      n && (n.props.properties.trace.push(r), _this38.events.set(i, n), _this38.shouldPersist = !0);
    }, _this38.setError = function (i, r) {
      var n = _this38.events.get(i);
      n && (n.props.type = r, n.timestamp = Date.now(), _this38.events.set(i, n), _this38.shouldPersist = !0);
    }, _this38.persist = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee136() {
      return _regeneratorRuntime().wrap(function _callee136$(_context136) {
        while (1) switch (_context136.prev = _context136.next) {
          case 0:
            _context136.next = 2;
            return _this38.core.storage.setItem(_this38.storageKey, Array.from(_this38.events.values()));
          case 2:
            _this38.shouldPersist = !1;
          case 3:
          case "end":
            return _context136.stop();
        }
      }, _callee136);
    })), _this38.restore = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee137() {
      var i;
      return _regeneratorRuntime().wrap(function _callee137$(_context137) {
        while (1) switch (_context137.prev = _context137.next) {
          case 0:
            _context137.prev = 0;
            _context137.next = 3;
            return _this38.core.storage.getItem(_this38.storageKey);
          case 3:
            _context137.t0 = _context137.sent;
            if (_context137.t0) {
              _context137.next = 6;
              break;
            }
            _context137.t0 = [];
          case 6:
            i = _context137.t0;
            if (i.length) {
              _context137.next = 9;
              break;
            }
            return _context137.abrupt("return");
          case 9:
            i.forEach(function (r) {
              _this38.events.set(r.eventId, Z$4(Z$4({}, r), _this38.setMethods(r.eventId)));
            });
            _context137.next = 15;
            break;
          case 12:
            _context137.prev = 12;
            _context137.t1 = _context137["catch"](0);
            _this38.logger.warn(_context137.t1);
          case 15:
          case "end":
            return _context137.stop();
        }
      }, _callee137, null, [[0, 12]]);
    })), _this38.submit = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee138() {
      var i, _iterator7, _step7, _step7$value, _r2, n, _iterator8, _step8, r;
      return _regeneratorRuntime().wrap(function _callee138$(_context138) {
        while (1) switch (_context138.prev = _context138.next) {
          case 0:
            if (!(!_this38.telemetryEnabled || _this38.events.size === 0)) {
              _context138.next = 2;
              break;
            }
            return _context138.abrupt("return");
          case 2:
            i = [];
            _iterator7 = _createForOfIteratorHelper(_this38.events);
            try {
              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                _step7$value = _slicedToArray(_step7.value, 2), _r2 = _step7$value[0], n = _step7$value[1];
                n.props.type && i.push(n);
              }
            } catch (err) {
              _iterator7.e(err);
            } finally {
              _iterator7.f();
            }
            if (!(i.length !== 0)) {
              _context138.next = 17;
              break;
            }
            _context138.prev = 6;
            _context138.next = 9;
            return _this38.sendEvent(i);
          case 9:
            if (!_context138.sent.ok) {
              _context138.next = 12;
              break;
            }
            _iterator8 = _createForOfIteratorHelper(i);
            try {
              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                r = _step8.value;
                _this38.events["delete"](r.eventId), _this38.shouldPersist = !0;
              }
            } catch (err) {
              _iterator8.e(err);
            } finally {
              _iterator8.f();
            }
          case 12:
            _context138.next = 17;
            break;
          case 14:
            _context138.prev = 14;
            _context138.t0 = _context138["catch"](6);
            _this38.logger.warn(_context138.t0);
          case 17:
          case "end":
            return _context138.stop();
        }
      }, _callee138, null, [[6, 14]]);
    })), _this38.sendEvent = /*#__PURE__*/function () {
      var _ref94 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee139(i) {
        var r;
        return _regeneratorRuntime().wrap(function _callee139$(_context139) {
          while (1) switch (_context139.prev = _context139.next) {
            case 0:
              r = _this38.getAppDomain() ? "" : "&sp=desktop";
              _context139.next = 3;
              return fetch("".concat(Rt$3, "?projectId=").concat(_this38.core.projectId, "&st=events_sdk&sv=js-").concat(se$4).concat(r), {
                method: "POST",
                body: JSON.stringify(i)
              });
            case 3:
              return _context139.abrupt("return", _context139.sent);
            case 4:
            case "end":
              return _context139.stop();
          }
        }, _callee139);
      }));
      return function (_x128) {
        return _ref94.apply(this, arguments);
      };
    }(), _this38.getAppDomain = function () {
      return Nt$4().url;
    }, _this38.logger = E$4(t, _this38.context), _this38.telemetryEnabled = s, s ? _this38.restore().then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee140() {
      return _regeneratorRuntime().wrap(function _callee140$(_context140) {
        while (1) switch (_context140.prev = _context140.next) {
          case 0:
            _context140.next = 2;
            return _this38.submit();
          case 2:
            _this38.setEventListeners();
          case 3:
          case "end":
            return _context140.stop();
        }
      }, _callee140);
    }))) : _this38.persist();
    return _this38;
  }
  _inherits(pi, _Oi);
  return _createClass(pi, [{
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + "//" + this.context;
    }
  }]);
}(C$5);
var yn$2 = Object.defineProperty,
  gi$1 = Object.getOwnPropertySymbols,
  Dn$2 = Object.prototype.hasOwnProperty,
  mn$2 = Object.prototype.propertyIsEnumerable,
  yi$1 = function yi(o, e, t) {
    return e in o ? yn$2(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  Di$1 = function Di(o, e) {
    for (var t in e || (e = {})) Dn$2.call(e, t) && yi$1(o, t, e[t]);
    if (gi$1) {
      var _iterator9 = _createForOfIteratorHelper(gi$1(e)),
        _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
          var t = _step9.value;
          mn$2.call(e, t) && yi$1(o, t, e[t]);
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
    }
    return o;
  };
var ne$3 = /*#__PURE__*/function (_Ai) {
  function ne(e) {
    var _this39;
    _classCallCheck(this, ne);
    var t;
    _this39 = _callSuper(this, ne, [e]), _this39.protocol = ye$4, _this39.version = De$3, _this39.name = ie$4, _this39.events = new eventsExports.EventEmitter(), _this39.initialized = !1, _this39.on = function (n, a) {
      return _this39.events.on(n, a);
    }, _this39.once = function (n, a) {
      return _this39.events.once(n, a);
    }, _this39.off = function (n, a) {
      return _this39.events.off(n, a);
    }, _this39.removeListener = function (n, a) {
      return _this39.events.removeListener(n, a);
    }, _this39.dispatchEnvelope = function (_ref96) {
      var n = _ref96.topic,
        a = _ref96.message,
        h = _ref96.sessionExists;
      if (!n || !a) return;
      var c = {
        topic: n,
        message: a,
        publishedAt: Date.now(),
        transportType: M$4.link_mode
      };
      _this39.relayer.onLinkMessageEvent(c, {
        sessionExists: h
      });
    }, _this39.projectId = e === null || e === void 0 ? void 0 : e.projectId, _this39.relayUrl = (e === null || e === void 0 ? void 0 : e.relayUrl) || be$4, _this39.customStoragePrefix = e != null && e.customStoragePrefix ? ":".concat(e.customStoragePrefix) : "";
    var s = k$4({
        level: typeof (e === null || e === void 0 ? void 0 : e.logger) == "string" && e.logger ? e.logger : Ye$3.logger
      }),
      _Ei = A$3({
        opts: s,
        maxSizeInBytes: e === null || e === void 0 ? void 0 : e.maxLogBlobSizeInBytes,
        loggerOverride: e === null || e === void 0 ? void 0 : e.logger
      }),
      i = _Ei.logger,
      r = _Ei.chunkLoggerController;
    _this39.logChunkController = r, (t = _this39.logChunkController) != null && t.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee141() {
      var n, a;
      return _regeneratorRuntime().wrap(function _callee141$(_context141) {
        while (1) switch (_context141.prev = _context141.next) {
          case 0:
            _context141.t0 = (n = _this39.logChunkController) != null && n.downloadLogsBlobInBrowser;
            if (!_context141.t0) {
              _context141.next = 10;
              break;
            }
            _context141.t1 = (a = _this39.logChunkController) == null;
            if (_context141.t1) {
              _context141.next = 10;
              break;
            }
            _context141.t2 = a;
            _context141.next = 7;
            return _this39.crypto.getClientId();
          case 7:
            _context141.t3 = _context141.sent;
            _context141.t4 = {
              clientId: _context141.t3
            };
            _context141.t2.downloadLogsBlobInBrowser.call(_context141.t2, _context141.t4);
          case 10:
          case "end":
            return _context141.stop();
        }
      }, _callee141);
    }))), _this39.logger = E$4(i, _this39.name), _this39.heartbeat = new i$2(), _this39.crypto = new Ht$3(_this39, _this39.logger, e === null || e === void 0 ? void 0 : e.keychain), _this39.history = new ai$1(_this39, _this39.logger), _this39.expirer = new hi$1(_this39, _this39.logger), _this39.storage = e != null && e.storage ? e.storage : new h$4(Di$1(Di$1({}, Je$2), e === null || e === void 0 ? void 0 : e.storageOptions)), _this39.relayer = new ti$1({
      core: _this39,
      logger: _this39.logger,
      relayUrl: _this39.relayUrl,
      projectId: _this39.projectId
    }), _this39.pairing = new oi$1(_this39, _this39.logger), _this39.verify = new ci$1(_this39, _this39.logger, _this39.storage), _this39.echoClient = new li$1(_this39.projectId || "", _this39.logger), _this39.linkModeSupportedApps = [], _this39.eventClient = new pi$1(_this39, _this39.logger, e === null || e === void 0 ? void 0 : e.telemetryEnabled);
    return _this39;
  }
  _inherits(ne, _Ai);
  return _createClass(ne, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "start",
    value: function () {
      var _start = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee142() {
        return _regeneratorRuntime().wrap(function _callee142$(_context142) {
          while (1) switch (_context142.prev = _context142.next) {
            case 0:
              _context142.t0 = this.initialized;
              if (_context142.t0) {
                _context142.next = 4;
                break;
              }
              _context142.next = 4;
              return this.initialize();
            case 4:
            case "end":
              return _context142.stop();
          }
        }, _callee142, this);
      }));
      function start() {
        return _start.apply(this, arguments);
      }
      return start;
    }()
  }, {
    key: "getLogsBlob",
    value: function () {
      var _getLogsBlob = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee143() {
        var e;
        return _regeneratorRuntime().wrap(function _callee143$(_context143) {
          while (1) switch (_context143.prev = _context143.next) {
            case 0:
              if (!((e = this.logChunkController) == null)) {
                _context143.next = 4;
                break;
              }
              _context143.t0 = void 0;
              _context143.next = 10;
              break;
            case 4:
              _context143.t1 = e;
              _context143.next = 7;
              return this.crypto.getClientId();
            case 7:
              _context143.t2 = _context143.sent;
              _context143.t3 = {
                clientId: _context143.t2
              };
              _context143.t0 = _context143.t1.logsToBlob.call(_context143.t1, _context143.t3);
            case 10:
              return _context143.abrupt("return", _context143.t0);
            case 11:
            case "end":
              return _context143.stop();
          }
        }, _callee143, this);
      }));
      function getLogsBlob() {
        return _getLogsBlob.apply(this, arguments);
      }
      return getLogsBlob;
    }()
  }, {
    key: "addLinkModeSupportedApp",
    value: function () {
      var _addLinkModeSupportedApp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee144(e) {
        return _regeneratorRuntime().wrap(function _callee144$(_context144) {
          while (1) switch (_context144.prev = _context144.next) {
            case 0:
              _context144.t0 = this.linkModeSupportedApps.includes(e);
              if (_context144.t0) {
                _context144.next = 5;
                break;
              }
              this.linkModeSupportedApps.push(e);
              _context144.next = 5;
              return this.storage.setItem(fe$3, this.linkModeSupportedApps);
            case 5:
            case "end":
              return _context144.stop();
          }
        }, _callee144, this);
      }));
      function addLinkModeSupportedApp(_x129) {
        return _addLinkModeSupportedApp.apply(this, arguments);
      }
      return addLinkModeSupportedApp;
    }()
  }, {
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee145() {
        return _regeneratorRuntime().wrap(function _callee145$(_context145) {
          while (1) switch (_context145.prev = _context145.next) {
            case 0:
              this.logger.trace("Initialized");
              _context145.prev = 1;
              _context145.next = 4;
              return this.crypto.init();
            case 4:
              _context145.next = 6;
              return this.history.init();
            case 6:
              _context145.next = 8;
              return this.expirer.init();
            case 8:
              _context145.next = 10;
              return this.relayer.init();
            case 10:
              _context145.next = 12;
              return this.heartbeat.init();
            case 12:
              _context145.next = 14;
              return this.pairing.init();
            case 14:
              this.eventClient.init();
              _context145.next = 17;
              return this.storage.getItem(fe$3);
            case 17:
              _context145.t0 = _context145.sent;
              if (_context145.t0) {
                _context145.next = 20;
                break;
              }
              _context145.t0 = [];
            case 20:
              this.linkModeSupportedApps = _context145.t0;
              this.initialized = !0;
              this.logger.info("Core Initialization Success");
              _context145.next = 28;
              break;
            case 25:
              _context145.prev = 25;
              _context145.t1 = _context145["catch"](1);
              throw this.logger.warn("Core Initialization Failure at epoch ".concat(Date.now()), _context145.t1), this.logger.error(_context145.t1.message), _context145.t1;
            case 28:
            case "end":
              return _context145.stop();
          }
        }, _callee145, this, [[1, 25]]);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
  }], [{
    key: "init",
    value: function () {
      var _init2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee146(e) {
        var t, s;
        return _regeneratorRuntime().wrap(function _callee146$(_context146) {
          while (1) switch (_context146.prev = _context146.next) {
            case 0:
              t = new ne(e);
              _context146.next = 3;
              return t.initialize();
            case 3:
              _context146.next = 5;
              return t.crypto.getClientId();
            case 5:
              s = _context146.sent;
              _context146.next = 8;
              return t.storage.setItem(lt$3, s);
            case 8:
              return _context146.abrupt("return", t);
            case 9:
            case "end":
              return _context146.stop();
          }
        }, _callee146);
      }));
      function init(_x130) {
        return _init2.apply(this, arguments);
      }
      return init;
    }()
  }]);
}(n$3);
var bn$2 = ne$3;

function unfetch_module (e, n) {
  return n = n || {}, new Promise(function (t, r) {
    var s = new XMLHttpRequest(),
      o = [],
      u = [],
      i = {},
      _a = function a() {
        return {
          ok: 2 == (s.status / 100 | 0),
          statusText: s.statusText,
          status: s.status,
          url: s.responseURL,
          text: function text() {
            return Promise.resolve(s.responseText);
          },
          json: function json() {
            return Promise.resolve(s.responseText).then(JSON.parse);
          },
          blob: function blob() {
            return Promise.resolve(new Blob([s.response]));
          },
          clone: _a,
          headers: {
            keys: function keys() {
              return o;
            },
            entries: function entries() {
              return u;
            },
            get: function get(e) {
              return i[e.toLowerCase()];
            },
            has: function has(e) {
              return e.toLowerCase() in i;
            }
          }
        };
      };
    for (var l in s.open(n.method || "get", e, !0), s.onload = function () {
      s.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function (e, n, t) {
        o.push(n = n.toLowerCase()), u.push([n, t]), i[n] = i[n] ? i[n] + "," + t : t;
      }), t(_a());
    }, s.onerror = r, s.withCredentials = "include" == n.credentials, n.headers) s.setRequestHeader(l, n.headers[l]);
    s.send(n.body || null);
  });
}

var unfetch_module$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  default: unfetch_module
});

var require$$0$1 = /*@__PURE__*/getAugmentedNamespace$1(unfetch_module$1);

var browser = self.fetch || (self.fetch = require$$0$1["default"] || require$$0$1);
var ke$1 = /*@__PURE__*/getDefaultExportFromCjs$1(browser);

var G$2 = /*#__PURE__*/_createClass(function G(t) {
  _classCallCheck(this, G);
  this.client = t;
});
var H$2 = /*#__PURE__*/_createClass(function H(t) {
  _classCallCheck(this, H);
  this.opts = t;
});
var Y$2 = "https://rpc.walletconnect.com/v1",
  R$2 = {
    wc_authRequest: {
      req: {
        ttl: cjs$3.ONE_DAY,
        prompt: !0,
        tag: 3e3
      },
      res: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 3001
      }
    }
  },
  U$2 = {
    min: cjs$3.FIVE_MINUTES,
    max: cjs$3.SEVEN_DAYS
  },
  $$3 = "wc",
  Q$2 = 1,
  Z$3 = "auth",
  B$2 = "authClient",
  F$2 = "".concat($$3, "@", 1, ":").concat(Z$3, ":"),
  x$4 = "".concat(F$2, ":PUB_KEY"),
  Ge$1 = "expirer",
  He$1 = {
    created: "expirer_created",
    deleted: "expirer_deleted",
    expired: "expirer_expired",
    sync: "expirer_sync"
  },
  Ye$2 = "0.3",
  Qe$2 = cjs$3.ONE_DAY;
function z$4(r) {
  return r === null || r === void 0 ? void 0 : r.split(":");
}
function Ze$2(r) {
  var t = r && z$4(r);
  if (t) return t[3];
}
function We$2(r) {
  var t = r && z$4(r);
  if (t) return t[2] + ":" + t[3];
}
function W$2(r) {
  var t = r && z$4(r);
  if (t) return t.pop();
}
function et$2(_x, _x2, _x3, _x4, _x5) {
  return _et.apply(this, arguments);
}
function _et() {
  _et = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(r, t, e, i, n) {
    return _regeneratorRuntime().wrap(function _callee19$(_context19) {
      while (1) switch (_context19.prev = _context19.next) {
        case 0:
          _context19.t0 = e.t;
          _context19.next = _context19.t0 === "eip191" ? 3 : _context19.t0 === "eip1271" ? 4 : 7;
          break;
        case 3:
          return _context19.abrupt("return", tt$1(r, t, e.s));
        case 4:
          _context19.next = 6;
          return rt$2(r, t, e.s, i, n);
        case 6:
          return _context19.abrupt("return", _context19.sent);
        case 7:
          throw new Error("verifySignature failed: Attempted to verify CacaoSignature with unknown type: ".concat(e.t));
        case 8:
        case "end":
          return _context19.stop();
      }
    }, _callee19);
  }));
  return _et.apply(this, arguments);
}
function tt$1(r, t, e) {
  return recoverAddress(hashMessage(t), e).toLowerCase() === r.toLowerCase();
}
function rt$2(_x6, _x7, _x8, _x9, _x10) {
  return _rt.apply(this, arguments);
}
function _rt() {
  _rt = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(r, t, e, i, n) {
    var s, o, u, a, c, h, f, _yield$f$json, p;
    return _regeneratorRuntime().wrap(function _callee20$(_context20) {
      while (1) switch (_context20.prev = _context20.next) {
        case 0:
          _context20.prev = 0;
          s = "0x1626ba7e";
          o = "0000000000000000000000000000000000000000000000000000000000000040";
          u = "0000000000000000000000000000000000000000000000000000000000000041";
          a = e.substring(2);
          c = hashMessage(t).substring(2);
          h = s + c + o + u + a;
          _context20.next = 9;
          return ke$1("".concat(Y$2, "/?chainId=").concat(i, "&projectId=").concat(n), {
            method: "POST",
            body: JSON.stringify({
              id: it$2(),
              jsonrpc: "2.0",
              method: "eth_call",
              params: [{
                to: r,
                data: h
              }, "latest"]
            })
          });
        case 9:
          f = _context20.sent;
          _context20.next = 12;
          return f.json();
        case 12:
          _yield$f$json = _context20.sent;
          p = _yield$f$json.result;
          return _context20.abrupt("return", p ? p.slice(0, s.length).toLowerCase() === s.toLowerCase() : !1);
        case 17:
          _context20.prev = 17;
          _context20.t0 = _context20["catch"](0);
          return _context20.abrupt("return", (console.error("isValidEip1271Signature: ", _context20.t0), !1));
        case 20:
        case "end":
          return _context20.stop();
      }
    }, _callee20, null, [[0, 17]]);
  }));
  return _rt.apply(this, arguments);
}
function it$2() {
  return Date.now() + Math.floor(Math.random() * 1e3);
}
function ee$1(r) {
  return r.getAll().filter(function (t) {
    return "requester" in t;
  });
}
function te$1(r, t) {
  return ee$1(r).find(function (e) {
    return e.id === t;
  });
}
function nt$2(r) {
  var t = Gr$3(r.aud),
    e = new RegExp("".concat(r.domain)).test(r.aud),
    i = !!r.nonce,
    n = r.type ? r.type === "eip4361" : !0,
    s = r.expiry;
  if (s && !po$1(s, U$2)) {
    var _k = S$7("MISSING_OR_INVALID", "request() expiry: ".concat(s, ". Expiry must be a number (in seconds) between ").concat(U$2.min, " and ").concat(U$2.max)),
      o = _k.message;
    throw new Error(o);
  }
  return !!(t && e && i && n);
}
function st$2(r, t) {
  return !!te$1(t, r.id);
}
function ot$2() {
  var r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(r) : new Uint8Array(r);
}
function ut$2(r, t) {
  if (r.length >= 255) throw new TypeError("Alphabet too long");
  for (var e = new Uint8Array(256), i = 0; i < e.length; i++) e[i] = 255;
  for (var n = 0; n < r.length; n++) {
    var s = r.charAt(n),
      o = s.charCodeAt(0);
    if (e[o] !== 255) throw new TypeError(s + " is ambiguous");
    e[o] = n;
  }
  var u = r.length,
    a = r.charAt(0),
    c = Math.log(u) / Math.log(256),
    h = Math.log(256) / Math.log(u);
  function f(D) {
    if (D instanceof Uint8Array || (ArrayBuffer.isView(D) ? D = new Uint8Array(D.buffer, D.byteOffset, D.byteLength) : Array.isArray(D) && (D = Uint8Array.from(D))), !(D instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (D.length === 0) return "";
    for (var l = 0, m = 0, E = 0, y = D.length; E !== y && D[E] === 0;) E++, l++;
    for (var w = (y - E) * h + 1 >>> 0, g = new Uint8Array(w); E !== y;) {
      for (var C = D[E], _ = 0, b = w - 1; (C !== 0 || _ < m) && b !== -1; b--, _++) C += 256 * g[b] >>> 0, g[b] = C % u >>> 0, C = C / u >>> 0;
      if (C !== 0) throw new Error("Non-zero carry");
      m = _, E++;
    }
    for (var v = w - m; v !== w && g[v] === 0;) v++;
    for (var q = a.repeat(l); v < w; ++v) q += r.charAt(g[v]);
    return q;
  }
  function p(D) {
    if (typeof D != "string") throw new TypeError("Expected String");
    if (D.length === 0) return new Uint8Array();
    var l = 0;
    if (D[l] !== " ") {
      for (var m = 0, E = 0; D[l] === a;) m++, l++;
      for (var y = (D.length - l) * c + 1 >>> 0, w = new Uint8Array(y); D[l];) {
        var g = e[D.charCodeAt(l)];
        if (g === 255) return;
        for (var C = 0, _ = y - 1; (g !== 0 || C < E) && _ !== -1; _--, C++) g += u * w[_] >>> 0, w[_] = g % 256 >>> 0, g = g / 256 >>> 0;
        if (g !== 0) throw new Error("Non-zero carry");
        E = C, l++;
      }
      if (D[l] !== " ") {
        for (var b = y - E; b !== y && w[b] === 0;) b++;
        for (var v = new Uint8Array(m + (y - b)), q = m; b !== y;) v[q++] = w[b++];
        return v;
      }
    }
  }
  function A(D) {
    var l = p(D);
    if (l) return l;
    throw new Error("Non-".concat(t, " character"));
  }
  return {
    encode: f,
    decodeUnsafe: p,
    decode: A
  };
}
var at$2 = ut$2,
  Dt$2 = at$2;
var re$2 = function re(r) {
    if (r instanceof Uint8Array && r.constructor.name === "Uint8Array") return r;
    if (r instanceof ArrayBuffer) return new Uint8Array(r);
    if (ArrayBuffer.isView(r)) return new Uint8Array(r.buffer, r.byteOffset, r.byteLength);
    throw new Error("Unknown type, must be binary type");
  },
  ct$2 = function ct(r) {
    return new TextEncoder().encode(r);
  },
  ht$3 = function ht(r) {
    return new TextDecoder().decode(r);
  };
var lt$2 = /*#__PURE__*/function () {
  function lt(t, e, i) {
    _classCallCheck(this, lt);
    this.name = t, this.prefix = e, this.baseEncode = i;
  }
  return _createClass(lt, [{
    key: "encode",
    value: function encode(t) {
      if (t instanceof Uint8Array) return "".concat(this.prefix).concat(this.baseEncode(t));
      throw Error("Unknown type, must be binary type");
    }
  }]);
}();
var dt$2 = /*#__PURE__*/function () {
  function dt(t, e, i) {
    _classCallCheck(this, dt);
    if (this.name = t, this.prefix = e, e.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = e.codePointAt(0), this.baseDecode = i;
  }
  return _createClass(dt, [{
    key: "decode",
    value: function decode(t) {
      if (typeof t == "string") {
        if (t.codePointAt(0) !== this.prefixCodePoint) throw Error("Unable to decode multibase string ".concat(JSON.stringify(t), ", ").concat(this.name, " decoder only supports inputs prefixed with ").concat(this.prefix));
        return this.baseDecode(t.slice(this.prefix.length));
      } else throw Error("Can only multibase decode strings");
    }
  }, {
    key: "or",
    value: function or(t) {
      return ie$3(this, t);
    }
  }]);
}();
var pt$3 = /*#__PURE__*/function () {
  function pt(t) {
    _classCallCheck(this, pt);
    this.decoders = t;
  }
  return _createClass(pt, [{
    key: "or",
    value: function or(t) {
      return ie$3(this, t);
    }
  }, {
    key: "decode",
    value: function decode(t) {
      var e = t[0],
        i = this.decoders[e];
      if (i) return i.decode(t);
      throw RangeError("Unable to decode multibase string ".concat(JSON.stringify(t), ", only inputs prefixed with ").concat(Object.keys(this.decoders), " are supported"));
    }
  }]);
}();
var ie$3 = function ie(r, t) {
  return new pt$3(_objectSpread2(_objectSpread2({}, r.decoders || _defineProperty({}, r.prefix, r)), t.decoders || _defineProperty({}, t.prefix, t)));
};
var ft$2 = /*#__PURE__*/function () {
  function ft(t, e, i, n) {
    _classCallCheck(this, ft);
    this.name = t, this.prefix = e, this.baseEncode = i, this.baseDecode = n, this.encoder = new lt$2(t, e, i), this.decoder = new dt$2(t, e, n);
  }
  return _createClass(ft, [{
    key: "encode",
    value: function encode(t) {
      return this.encoder.encode(t);
    }
  }, {
    key: "decode",
    value: function decode(t) {
      return this.decoder.decode(t);
    }
  }]);
}();
var O$3 = function O(_ref3) {
    var r = _ref3.name,
      t = _ref3.prefix,
      e = _ref3.encode,
      i = _ref3.decode;
    return new ft$2(r, t, e, i);
  },
  T = function T(_ref4) {
    var r = _ref4.prefix,
      t = _ref4.name,
      e = _ref4.alphabet;
    var _Dt = Dt$2(e, t),
      i = _Dt.encode,
      n = _Dt.decode;
    return O$3({
      prefix: r,
      name: t,
      encode: i,
      decode: function decode(s) {
        return re$2(n(s));
      }
    });
  },
  gt$3 = function gt(r, t, e, i) {
    var n = {};
    for (var h = 0; h < t.length; ++h) n[t[h]] = h;
    var s = r.length;
    for (; r[s - 1] === "=";) --s;
    var o = new Uint8Array(s * e / 8 | 0);
    var u = 0,
      a = 0,
      c = 0;
    for (var _h = 0; _h < s; ++_h) {
      var f = n[r[_h]];
      if (f === void 0) throw new SyntaxError("Non-".concat(i, " character"));
      a = a << e | f, u += e, u >= 8 && (u -= 8, o[c++] = 255 & a >> u);
    }
    if (u >= e || 255 & a << 8 - u) throw new SyntaxError("Unexpected end of data");
    return o;
  },
  Et$2 = function Et(r, t, e) {
    var i = t[t.length - 1] === "=",
      n = (1 << e) - 1;
    var s = "",
      o = 0,
      u = 0;
    for (var a = 0; a < r.length; ++a) for (u = u << 8 | r[a], o += 8; o > e;) o -= e, s += t[n & u >> o];
    if (o && (s += t[n & u << e - o]), i) for (; s.length * e & 7;) s += "=";
    return s;
  },
  d$1 = function d(_ref5) {
    var r = _ref5.name,
      t = _ref5.prefix,
      e = _ref5.bitsPerChar,
      i = _ref5.alphabet;
    return O$3({
      prefix: t,
      name: r,
      encode: function encode(n) {
        return Et$2(n, i, e);
      },
      decode: function decode(n) {
        return gt$3(n, i, e, r);
      }
    });
  },
  bt$2 = O$3({
    prefix: "\0",
    name: "identity",
    encode: function encode(r) {
      return ht$3(r);
    },
    decode: function decode(r) {
      return ct$2(r);
    }
  });
var yt$3 = Object.freeze({
  __proto__: null,
  identity: bt$2
});
var wt$2 = d$1({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});
var Ct$2 = Object.freeze({
  __proto__: null,
  base2: wt$2
});
var mt$2 = d$1({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});
var vt$2 = Object.freeze({
  __proto__: null,
  base8: mt$2
});
var At$2 = T({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});
var _t$2 = Object.freeze({
  __proto__: null,
  base10: At$2
});
var xt$2 = d$1({
    prefix: "f",
    name: "base16",
    alphabet: "0123456789abcdef",
    bitsPerChar: 4
  }),
  Rt$2 = d$1({
    prefix: "F",
    name: "base16upper",
    alphabet: "0123456789ABCDEF",
    bitsPerChar: 4
  });
var Ft$2 = Object.freeze({
  __proto__: null,
  base16: xt$2,
  base16upper: Rt$2
});
var Tt$2 = d$1({
    prefix: "b",
    name: "base32",
    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
    bitsPerChar: 5
  }),
  It$2 = d$1({
    prefix: "B",
    name: "base32upper",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
    bitsPerChar: 5
  }),
  qt$2 = d$1({
    prefix: "c",
    name: "base32pad",
    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
    bitsPerChar: 5
  }),
  Ut$2 = d$1({
    prefix: "C",
    name: "base32padupper",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
    bitsPerChar: 5
  }),
  Ot$2 = d$1({
    prefix: "v",
    name: "base32hex",
    alphabet: "0123456789abcdefghijklmnopqrstuv",
    bitsPerChar: 5
  }),
  St$2 = d$1({
    prefix: "V",
    name: "base32hexupper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
    bitsPerChar: 5
  }),
  Pt$2 = d$1({
    prefix: "t",
    name: "base32hexpad",
    alphabet: "0123456789abcdefghijklmnopqrstuv=",
    bitsPerChar: 5
  }),
  Nt$2 = d$1({
    prefix: "T",
    name: "base32hexpadupper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
    bitsPerChar: 5
  }),
  $t$2 = d$1({
    prefix: "h",
    name: "base32z",
    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
    bitsPerChar: 5
  });
var Bt$2 = Object.freeze({
  __proto__: null,
  base32: Tt$2,
  base32upper: It$2,
  base32pad: qt$2,
  base32padupper: Ut$2,
  base32hex: Ot$2,
  base32hexupper: St$2,
  base32hexpad: Pt$2,
  base32hexpadupper: Nt$2,
  base32z: $t$2
});
var zt$2 = T({
    prefix: "k",
    name: "base36",
    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
  }),
  jt$2 = T({
    prefix: "K",
    name: "base36upper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  });
var Mt$2 = Object.freeze({
  __proto__: null,
  base36: zt$2,
  base36upper: jt$2
});
var Lt$2 = T({
    name: "base58btc",
    prefix: "z",
    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
  }),
  Kt$2 = T({
    name: "base58flickr",
    prefix: "Z",
    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
  });
var Vt$2 = Object.freeze({
  __proto__: null,
  base58btc: Lt$2,
  base58flickr: Kt$2
});
var kt$2 = d$1({
    prefix: "m",
    name: "base64",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    bitsPerChar: 6
  }),
  Jt$2 = d$1({
    prefix: "M",
    name: "base64pad",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    bitsPerChar: 6
  }),
  Xt$2 = d$1({
    prefix: "u",
    name: "base64url",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
    bitsPerChar: 6
  }),
  Gt$2 = d$1({
    prefix: "U",
    name: "base64urlpad",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
    bitsPerChar: 6
  });
var Ht$2 = Object.freeze({
  __proto__: null,
  base64: kt$2,
  base64pad: Jt$2,
  base64url: Xt$2,
  base64urlpad: Gt$2
});
var ne$2 = Array.from("\uD83D\uDE80\uD83E\uDE90\u2604\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09\u2600\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02\u2764\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09\u263A\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E\u270C\u2728\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D\u2763\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33\u270B\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13\u2B50\u2705\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6\u2714\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90\u2639\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20\u261D\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B\u26BD\uD83E\uDD19\u2615\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81\u26A1\uD83C\uDF1E\uD83C\uDF88\u274C\u270A\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C\u2708\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74\u25B6\u27A1\u2753\uD83D\uDC8E\uD83D\uDCB8\u2B07\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A\u26A0\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37\u260E\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51\u2744\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"),
  Yt$2 = ne$2.reduce(function (r, t, e) {
    return r[e] = t, r;
  }, []),
  Qt$2 = ne$2.reduce(function (r, t, e) {
    return r[t.codePointAt(0)] = e, r;
  }, []);
function Zt$2(r) {
  return r.reduce(function (t, e) {
    return t += Yt$2[e], t;
  }, "");
}
function Wt$2(r) {
  var t = [];
  var _iterator = _createForOfIteratorHelper(r),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var e = _step.value;
      var i = Qt$2[e.codePointAt(0)];
      if (i === void 0) throw new Error("Non-base256emoji character: ".concat(e));
      t.push(i);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return new Uint8Array(t);
}
var er$2 = O$3({
  prefix: "\uD83D\uDE80",
  name: "base256emoji",
  encode: Zt$2,
  decode: Wt$2
});
var tr$2 = Object.freeze({
    __proto__: null,
    base256emoji: er$2
  }),
  rr$2 = oe$2,
  se$3 = 128,
  ir$2 = 127,
  nr$2 = ~ir$2,
  sr$2 = Math.pow(2, 31);
function oe$2(r, t, e) {
  t = t || [], e = e || 0;
  for (var i = e; r >= sr$2;) t[e++] = r & 255 | se$3, r /= 128;
  for (; r & nr$2;) t[e++] = r & 255 | se$3, r >>>= 7;
  return t[e] = r | 0, oe$2.bytes = e - i + 1, t;
}
var or$2 = j$1,
  ur$2 = 128,
  ue$1 = 127;
function j$1(r, i) {
  var e = 0,
    i = i || 0,
    n = 0,
    s = i,
    o,
    u = r.length;
  do {
    if (s >= u) throw j$1.bytes = 0, new RangeError("Could not decode varint");
    o = r[s++], e += n < 28 ? (o & ue$1) << n : (o & ue$1) * Math.pow(2, n), n += 7;
  } while (o >= ur$2);
  return j$1.bytes = s - i, e;
}
var ar$2 = Math.pow(2, 7),
  Dr$2 = Math.pow(2, 14),
  cr$2 = Math.pow(2, 21),
  hr$2 = Math.pow(2, 28),
  lr$2 = Math.pow(2, 35),
  dr$2 = Math.pow(2, 42),
  pr$2 = Math.pow(2, 49),
  fr$2 = Math.pow(2, 56),
  gr$2 = Math.pow(2, 63),
  Er$2 = function Er(r) {
    return r < ar$2 ? 1 : r < Dr$2 ? 2 : r < cr$2 ? 3 : r < hr$2 ? 4 : r < lr$2 ? 5 : r < dr$2 ? 6 : r < pr$2 ? 7 : r < fr$2 ? 8 : r < gr$2 ? 9 : 10;
  },
  br$2 = {
    encode: rr$2,
    decode: or$2,
    encodingLength: Er$2
  },
  ae$2 = br$2;
var De$2 = function De(r, t) {
    var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    return ae$2.encode(r, t, e), t;
  },
  ce$1 = function ce(r) {
    return ae$2.encodingLength(r);
  },
  M$3 = function M(r, t) {
    var e = t.byteLength,
      i = ce$1(r),
      n = i + ce$1(e),
      s = new Uint8Array(n + e);
    return De$2(r, s, 0), De$2(e, s, i), s.set(t, n), new yr$2(r, e, t, s);
  };
var yr$2 = /*#__PURE__*/_createClass(function yr(t, e, i, n) {
  _classCallCheck(this, yr);
  this.code = t, this.size = e, this.digest = i, this.bytes = n;
});
var he$1 = function he(_ref6) {
  var r = _ref6.name,
    t = _ref6.code,
    e = _ref6.encode;
  return new wr$2(r, t, e);
};
var wr$2 = /*#__PURE__*/function () {
  function wr(t, e, i) {
    _classCallCheck(this, wr);
    this.name = t, this.code = e, this.encode = i;
  }
  return _createClass(wr, [{
    key: "digest",
    value: function digest(t) {
      var _this = this;
      if (t instanceof Uint8Array) {
        var e = this.encode(t);
        return e instanceof Uint8Array ? M$3(this.code, e) : e.then(function (i) {
          return M$3(_this.code, i);
        });
      } else throw Error("Unknown type, must be binary type");
    }
  }]);
}();
var le$1 = function le(r) {
    return /*#__PURE__*/function () {
      var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(t) {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.t0 = Uint8Array;
              _context.next = 3;
              return crypto.subtle.digest(r, t);
            case 3:
              _context.t1 = _context.sent;
              return _context.abrupt("return", new _context.t0(_context.t1));
            case 5:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x11) {
        return _ref7.apply(this, arguments);
      };
    }();
  },
  Cr$2 = he$1({
    name: "sha2-256",
    code: 18,
    encode: le$1("SHA-256")
  }),
  mr$2 = he$1({
    name: "sha2-512",
    code: 19,
    encode: le$1("SHA-512")
  });
var vr$2 = Object.freeze({
  __proto__: null,
  sha256: Cr$2,
  sha512: mr$2
});
var de$1 = 0,
  Ar$2 = "identity",
  pe$1 = re$2,
  _r$2 = function _r(r) {
    return M$3(de$1, pe$1(r));
  },
  xr$2 = {
    code: de$1,
    name: Ar$2,
    encode: pe$1,
    digest: _r$2
  };
var Rr$2 = Object.freeze({
  __proto__: null,
  identity: xr$2
});
new TextEncoder(), new TextDecoder();
var fe$2 = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, yt$3), Ct$2), vt$2), _t$2), Ft$2), Bt$2), Mt$2), Vt$2), Ht$2), tr$2);
_objectSpread2(_objectSpread2({}, vr$2), Rr$2);
function ge$1(r, t, e, i) {
  return {
    name: r,
    prefix: t,
    encoder: {
      name: r,
      prefix: t,
      encode: e
    },
    decoder: {
      decode: i
    }
  };
}
var Ee$2 = ge$1("utf8", "u", function (r) {
    return "u" + new TextDecoder("utf8").decode(r);
  }, function (r) {
    return new TextEncoder().encode(r.substring(1));
  }),
  L$2 = ge$1("ascii", "a", function (r) {
    var t = "a";
    for (var e = 0; e < r.length; e++) t += String.fromCharCode(r[e]);
    return t;
  }, function (r) {
    r = r.substring(1);
    var t = ot$2(r.length);
    for (var e = 0; e < r.length; e++) t[e] = r.charCodeAt(e);
    return t;
  }),
  be$3 = _objectSpread2({
    utf8: Ee$2,
    "utf-8": Ee$2,
    hex: fe$2.base16,
    latin1: L$2,
    ascii: L$2,
    binary: L$2
  }, fe$2);
function Fr$2(r) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "utf8";
  var e = be$3[t];
  if (!e) throw new Error("Unsupported encoding \"".concat(t, "\""));
  return (t === "utf8" || t === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(r, "utf8") : e.decoder.decode("".concat(e.prefix).concat(r));
}
function Tr$2(r) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "utf8";
  var e = be$3[t];
  if (!e) throw new Error("Unsupported encoding \"".concat(t, "\""));
  return (t === "utf8" || t === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(r.buffer, r.byteOffset, r.byteLength).toString("utf8") : e.encoder.encode(r).substring(1);
}
var Ir$2 = "base10",
  ye$3 = "base16",
  qr$2 = "base64pad",
  we$3 = "utf8";
function Ur$2() {
  return random$1.randomStringForEntropy(96);
}
function K$2(r) {
  var t = sha256$1.hash(Fr$2(r, we$3));
  return Tr$2(t, ye$3);
}
var Or$2 = Object.defineProperty,
  Sr$2 = Object.defineProperties,
  Pr$2 = Object.getOwnPropertyDescriptors,
  Ce$1 = Object.getOwnPropertySymbols,
  Nr$2 = Object.prototype.hasOwnProperty,
  $r$2 = Object.prototype.propertyIsEnumerable,
  me$3 = function me(r, t, e) {
    return t in r ? Or$2(r, t, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: e
    }) : r[t] = e;
  },
  I$4 = function I(r, t) {
    for (var e in t || (t = {})) Nr$2.call(t, e) && me$3(r, e, t[e]);
    if (Ce$1) {
      var _iterator2 = _createForOfIteratorHelper(Ce$1(t)),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var e = _step2.value;
          $r$2.call(t, e) && me$3(r, e, t[e]);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    return r;
  },
  V$3 = function V(r, t) {
    return Sr$2(r, Pr$2(t));
  };
var Br$2 = /*#__PURE__*/function (_G) {
  function Br(t) {
    var _this2;
    _classCallCheck(this, Br);
    _this2 = _callSuper(this, Br, [t]), _this2.initialized = !1, _this2.name = "authEngine", _this2.init = function () {
      _this2.initialized || (_this2.registerRelayerEvents(), _this2.registerPairingEvents(), _this2.client.core.pairing.register({
        methods: Object.keys(R$2)
      }), _this2.initialized = !0);
    }, _this2.request = /*#__PURE__*/function () {
      var _ref8 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e, i) {
        var n, s, o, u, a, c, h, f, _yield$_this2$client$, p, A, D, l, m;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (!(_this2.isInitialized(), !nt$2(e))) {
                _context2.next = 2;
                break;
              }
              throw new Error("Invalid request");
            case 2:
              if (!(i != null && i.topic)) {
                _context2.next = 6;
                break;
              }
              _context2.next = 5;
              return _this2.requestOnKnownPairing(i.topic, e);
            case 5:
              return _context2.abrupt("return", _context2.sent);
            case 6:
              n = e.chainId;
              s = e.statement;
              o = e.aud;
              u = e.domain;
              a = e.nonce;
              c = e.type;
              h = e.exp;
              f = e.nbf;
              _context2.next = 16;
              return _this2.client.core.pairing.create();
            case 16:
              _yield$_this2$client$ = _context2.sent;
              p = _yield$_this2$client$.topic;
              A = _yield$_this2$client$.uri;
              _this2.client.logger.info({
                message: "Generated new pairing",
                pairing: {
                  topic: p,
                  uri: A
                }
              });
              _context2.next = 22;
              return _this2.client.core.crypto.generateKeyPair();
            case 22:
              D = _context2.sent;
              l = hr$4(D);
              _context2.next = 26;
              return _this2.client.authKeys.set(x$4, {
                responseTopic: l,
                publicKey: D
              });
            case 26:
              _context2.next = 28;
              return _this2.client.pairingTopics.set(l, {
                topic: l,
                pairingTopic: p
              });
            case 28:
              _context2.next = 30;
              return _this2.client.core.relayer.subscribe(l);
            case 30:
              _this2.client.logger.info("sending request to new pairing topic: ".concat(p));
              _context2.next = 33;
              return _this2.sendRequest(p, "wc_authRequest", {
                payloadParams: {
                  type: c !== null && c !== void 0 ? c : "eip4361",
                  chainId: n,
                  statement: s,
                  aud: o,
                  domain: u,
                  version: "1",
                  nonce: a,
                  iat: new Date().toISOString(),
                  exp: h,
                  nbf: f
                },
                requester: {
                  publicKey: D,
                  metadata: _this2.client.metadata
                }
              }, {}, e.expiry);
            case 33:
              m = _context2.sent;
              return _context2.abrupt("return", (_this2.client.logger.info("sent request to new pairing topic: ".concat(p)), {
                uri: A,
                id: m
              }));
            case 35:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      return function (_x12, _x13) {
        return _ref8.apply(this, arguments);
      };
    }(), _this2.respond = /*#__PURE__*/function () {
      var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e, i) {
        var n, s, o, u, a, c;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if (!(_this2.isInitialized(), !st$2(e, _this2.client.requests))) {
                _context3.next = 2;
                break;
              }
              throw new Error("Invalid response");
            case 2:
              n = te$1(_this2.client.requests, e.id);
              if (n) {
                _context3.next = 5;
                break;
              }
              throw new Error("Could not find pending auth request with id ".concat(e.id));
            case 5:
              s = n.requester.publicKey;
              _context3.next = 8;
              return _this2.client.core.crypto.generateKeyPair();
            case 8:
              o = _context3.sent;
              u = hr$4(s);
              a = {
                type: D$3,
                receiverPublicKey: s,
                senderPublicKey: o
              };
              if (!("error" in e)) {
                _context3.next = 15;
                break;
              }
              _context3.next = 14;
              return _this2.sendError(n.id, u, e, a);
            case 14:
              return _context3.abrupt("return");
            case 15:
              c = {
                h: {
                  t: "eip4361"
                },
                p: V$3(I$4({}, n.cacaoPayload), {
                  iss: i
                }),
                s: e.signature
              };
              _context3.next = 18;
              return _this2.sendResult(n.id, u, c, a);
            case 18:
              _context3.next = 20;
              return _this2.client.core.pairing.activate({
                topic: n.pairingTopic
              });
            case 20:
              _context3.next = 22;
              return _this2.client.requests.update(n.id, I$4({}, c));
            case 22:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      return function (_x14, _x15) {
        return _ref9.apply(this, arguments);
      };
    }(), _this2.getPendingRequests = function () {
      return ee$1(_this2.client.requests);
    }, _this2.formatMessage = function (e, i) {
      _this2.client.logger.debug("formatMessage, cacao is: ".concat(JSON.stringify(e)));
      var n = "".concat(e.domain, " wants you to sign in with your Ethereum account:"),
        s = W$2(i),
        o = e.statement,
        u = "URI: ".concat(e.aud),
        a = "Version: ".concat(e.version),
        c = "Chain ID: ".concat(Ze$2(i)),
        h = "Nonce: ".concat(e.nonce),
        f = "Issued At: ".concat(e.iat),
        p = e.exp ? "Expiry: ".concat(e.exp) : void 0,
        A = e.resources && e.resources.length > 0 ? "Resources:\n".concat(e.resources.map(function (D) {
          return "- ".concat(D);
        }).join("\n")) : void 0;
      return [n, s, "", o, "", u, a, c, h, f, p, A].filter(function (D) {
        return D != null;
      }).join("\n");
    }, _this2.setExpiry = /*#__PURE__*/function () {
      var _ref10 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e, i) {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.t0 = _this2.client.core.pairing.pairings.keys.includes(e);
              if (!_context4.t0) {
                _context4.next = 4;
                break;
              }
              _context4.next = 4;
              return _this2.client.core.pairing.updateExpiry({
                topic: e,
                expiry: i
              });
            case 4:
              _this2.client.core.expirer.set(e, i);
            case 5:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
      return function (_x16, _x17) {
        return _ref10.apply(this, arguments);
      };
    }(), _this2.sendRequest = /*#__PURE__*/function () {
      var _ref11 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e, i, n, s, o) {
        var u, a, c, h;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              u = formatJsonRpcRequest(i, n);
              _context5.next = 3;
              return _this2.client.core.crypto.encode(e, u, s);
            case 3:
              a = _context5.sent;
              c = R$2[i].req;
              if (o && (c.ttl = o), _this2.client.core.history.set(e, u), V$5()) {
                h = K$2(JSON.stringify(u));
                _this2.client.core.verify.register({
                  attestationId: h
                });
              }
              _context5.next = 8;
              return _this2.client.core.relayer.publish(e, a, V$3(I$4({}, c), {
                internal: {
                  throwOnFailedPublish: !0
                }
              }));
            case 8:
              return _context5.abrupt("return", u.id);
            case 9:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }));
      return function (_x18, _x19, _x20, _x21, _x22) {
        return _ref11.apply(this, arguments);
      };
    }(), _this2.sendResult = /*#__PURE__*/function () {
      var _ref12 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(e, i, n, s) {
        var o, u, a, c;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              o = formatJsonRpcResult(e, n);
              _context6.next = 3;
              return _this2.client.core.crypto.encode(i, o, s);
            case 3:
              u = _context6.sent;
              _context6.next = 6;
              return _this2.client.core.history.get(i, e);
            case 6:
              a = _context6.sent;
              c = R$2[a.request.method].res;
              _context6.next = 10;
              return _this2.client.core.relayer.publish(i, u, V$3(I$4({}, c), {
                internal: {
                  throwOnFailedPublish: !0
                }
              }));
            case 10:
              _context6.next = 12;
              return _this2.client.core.history.resolve(o);
            case 12:
              return _context6.abrupt("return", o.id);
            case 13:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }));
      return function (_x23, _x24, _x25, _x26) {
        return _ref12.apply(this, arguments);
      };
    }(), _this2.sendError = /*#__PURE__*/function () {
      var _ref13 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(e, i, n, s) {
        var o, u, a, c;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              o = formatJsonRpcError(e, n.error);
              _context7.next = 3;
              return _this2.client.core.crypto.encode(i, o, s);
            case 3:
              u = _context7.sent;
              _context7.next = 6;
              return _this2.client.core.history.get(i, e);
            case 6:
              a = _context7.sent;
              c = R$2[a.request.method].res;
              _context7.next = 10;
              return _this2.client.core.relayer.publish(i, u, c);
            case 10:
              _context7.next = 12;
              return _this2.client.core.history.resolve(o);
            case 12:
              return _context7.abrupt("return", o.id);
            case 13:
            case "end":
              return _context7.stop();
          }
        }, _callee7);
      }));
      return function (_x27, _x28, _x29, _x30) {
        return _ref13.apply(this, arguments);
      };
    }(), _this2.requestOnKnownPairing = /*#__PURE__*/function () {
      var _ref14 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e, i) {
        var n, _this2$client$authKey, s, o, u, a, c, h, f, p;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              n = _this2.client.core.pairing.pairings.getAll({
                active: !0
              }).find(function (A) {
                return A.topic === e;
              });
              if (n) {
                _context8.next = 3;
                break;
              }
              throw new Error("Could not find pairing for provided topic ".concat(e));
            case 3:
              _this2$client$authKey = _this2.client.authKeys.get(x$4);
              s = _this2$client$authKey.publicKey;
              o = i.chainId;
              u = i.statement;
              a = i.aud;
              c = i.domain;
              h = i.nonce;
              f = i.type;
              _context8.next = 13;
              return _this2.sendRequest(n.topic, "wc_authRequest", {
                payloadParams: {
                  type: f !== null && f !== void 0 ? f : "eip4361",
                  chainId: o,
                  statement: u,
                  aud: a,
                  domain: c,
                  version: "1",
                  nonce: h,
                  iat: new Date().toISOString()
                },
                requester: {
                  publicKey: s,
                  metadata: _this2.client.metadata
                }
              }, {}, i.expiry);
            case 13:
              p = _context8.sent;
              return _context8.abrupt("return", (_this2.client.logger.info("sent request to known pairing topic: ".concat(n.topic)), {
                id: p
              }));
            case 15:
            case "end":
              return _context8.stop();
          }
        }, _callee8);
      }));
      return function (_x31, _x32) {
        return _ref14.apply(this, arguments);
      };
    }(), _this2.onPairingCreated = function (e) {
      var i = _this2.getPendingRequests();
      if (i) {
        var n = Object.values(i).find(function (s) {
          return s.pairingTopic === e.topic;
        });
        n && _this2.handleAuthRequest(n);
      }
    }, _this2.onRelayEventRequest = function (e) {
      var i = e.topic,
        n = e.payload,
        s = n.method;
      switch (s) {
        case "wc_authRequest":
          return _this2.onAuthRequest(i, n);
        default:
          return _this2.client.logger.info("Unsupported request method ".concat(s));
      }
    }, _this2.onRelayEventResponse = /*#__PURE__*/function () {
      var _ref15 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(e) {
        var i, n, s;
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              i = e.topic;
              n = e.payload;
              _context9.next = 4;
              return _this2.client.core.history.get(i, n.id);
            case 4:
              s = _context9.sent.request.method;
              _context9.t0 = s;
              _context9.next = _context9.t0 === "wc_authRequest" ? 8 : 9;
              break;
            case 8:
              return _context9.abrupt("return", _this2.onAuthResponse(i, n));
            case 9:
              return _context9.abrupt("return", _this2.client.logger.info("Unsupported response method ".concat(s)));
            case 10:
            case "end":
              return _context9.stop();
          }
        }, _callee9);
      }));
      return function (_x33) {
        return _ref15.apply(this, arguments);
      };
    }(), _this2.onAuthRequest = /*#__PURE__*/function () {
      var _ref16 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(e, i) {
        var _i$params, n, s, o, u, a;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              _i$params = i.params, n = _i$params.requester, s = _i$params.payloadParams;
              _this2.client.logger.info({
                type: "onAuthRequest",
                topic: e,
                payload: i
              });
              o = K$2(JSON.stringify(i));
              _context10.next = 5;
              return _this2.getVerifyContext(o, _this2.client.metadata);
            case 5:
              u = _context10.sent;
              a = {
                requester: n,
                pairingTopic: e,
                id: i.id,
                cacaoPayload: s,
                verifyContext: u
              };
              _context10.next = 9;
              return _this2.client.requests.set(i.id, a);
            case 9:
              _this2.handleAuthRequest(a);
            case 10:
            case "end":
              return _context10.stop();
          }
        }, _callee10);
      }));
      return function (_x34, _x35) {
        return _ref16.apply(this, arguments);
      };
    }(), _this2.handleAuthRequest = /*#__PURE__*/function () {
      var _ref17 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(e) {
        var i, n, s, o, u;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              i = e.id, n = e.pairingTopic, s = e.requester, o = e.cacaoPayload, u = e.verifyContext;
              _context11.prev = 1;
              _this2.client.emit("auth_request", {
                id: i,
                topic: n,
                params: {
                  requester: s,
                  cacaoPayload: o
                },
                verifyContext: u
              });
              _context11.next = 10;
              break;
            case 5:
              _context11.prev = 5;
              _context11.t0 = _context11["catch"](1);
              _context11.next = 9;
              return _this2.sendError(e.id, e.pairingTopic, _context11.t0);
            case 9:
              _this2.client.logger.error(_context11.t0);
            case 10:
            case "end":
              return _context11.stop();
          }
        }, _callee11, null, [[1, 5]]);
      }));
      return function (_x36) {
        return _ref17.apply(this, arguments);
      };
    }(), _this2.onAuthResponse = /*#__PURE__*/function () {
      var _ref18 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(e, i) {
        var n, _this2$client$pairing, s, _i$result, o, u, a, c, h;
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              n = i.id;
              if (!(_this2.client.logger.info({
                type: "onAuthResponse",
                topic: e,
                response: i
              }), isJsonRpcResult(i))) {
                _context12.next = 25;
                break;
              }
              _this2$client$pairing = _this2.client.pairingTopics.get(e), s = _this2$client$pairing.pairingTopic;
              _context12.next = 5;
              return _this2.client.core.pairing.activate({
                topic: s
              });
            case 5:
              _i$result = i.result, o = _i$result.s, u = _i$result.p;
              _context12.next = 8;
              return _this2.client.requests.set(n, I$4({
                id: n,
                pairingTopic: s
              }, i.result));
            case 8:
              a = _this2.formatMessage(u, u.iss);
              _this2.client.logger.debug("reconstructed message:\n", JSON.stringify(a)), _this2.client.logger.debug("payload.iss:", u.iss), _this2.client.logger.debug("signature:", o);
              c = W$2(u.iss), h = We$2(u.iss);
              if (c) {
                _context12.next = 13;
                break;
              }
              throw new Error("Could not derive address from `payload.iss`");
            case 13:
              if (h) {
                _context12.next = 15;
                break;
              }
              throw new Error("Could not derive chainId from `payload.iss`");
            case 15:
              _this2.client.logger.debug("walletAddress extracted from `payload.iss`:", c);
              _context12.next = 18;
              return et$2(c, a, o, h, _this2.client.projectId);
            case 18:
              if (!_context12.sent) {
                _context12.next = 22;
                break;
              }
              _this2.client.emit("auth_response", {
                id: n,
                topic: e,
                params: i
              });
              _context12.next = 23;
              break;
            case 22:
              _this2.client.emit("auth_response", {
                id: n,
                topic: e,
                params: {
                  message: "Invalid signature",
                  code: -1
                }
              });
            case 23:
              _context12.next = 26;
              break;
            case 25:
              isJsonRpcError(i) && _this2.client.emit("auth_response", {
                id: n,
                topic: e,
                params: i
              });
            case 26:
            case "end":
              return _context12.stop();
          }
        }, _callee12);
      }));
      return function (_x37, _x38) {
        return _ref18.apply(this, arguments);
      };
    }(), _this2.getVerifyContext = /*#__PURE__*/function () {
      var _ref19 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(e, i) {
        var n, s;
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              n = {
                verified: {
                  verifyUrl: i.verifyUrl || "",
                  validation: "UNKNOWN",
                  origin: i.url || ""
                }
              };
              _context13.prev = 1;
              _context13.next = 4;
              return _this2.client.core.verify.resolve({
                attestationId: e,
                verifyUrl: i.verifyUrl
              });
            case 4:
              s = _context13.sent;
              s && (n.verified.origin = s.origin, n.verified.isScam = s.isScam, n.verified.validation = origin === new URL(i.url).origin ? "VALID" : "INVALID");
              _context13.next = 11;
              break;
            case 8:
              _context13.prev = 8;
              _context13.t0 = _context13["catch"](1);
              _this2.client.logger.error(_context13.t0);
            case 11:
              return _context13.abrupt("return", (_this2.client.logger.info("Verify context: ".concat(JSON.stringify(n))), n));
            case 12:
            case "end":
              return _context13.stop();
          }
        }, _callee13, null, [[1, 8]]);
      }));
      return function (_x39, _x40) {
        return _ref19.apply(this, arguments);
      };
    }();
    return _this2;
  }
  _inherits(Br, _G);
  return _createClass(Br, [{
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _k2 = S$7("NOT_INITIALIZED", this.name),
          t = _k2.message;
        throw new Error(t);
      }
    }
  }, {
    key: "registerRelayerEvents",
    value: function registerRelayerEvents() {
      var _this3 = this;
      this.client.core.relayer.on(v$4.message, /*#__PURE__*/function () {
        var _ref20 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(t) {
          var e, i, _ref21, n, s, o;
          return _regeneratorRuntime().wrap(function _callee14$(_context14) {
            while (1) switch (_context14.prev = _context14.next) {
              case 0:
                e = t.topic, i = t.message, _ref21 = _this3.client.authKeys.keys.includes(x$4) ? _this3.client.authKeys.get(x$4) : {
                  responseTopic: void 0,
                  publicKey: void 0
                }, n = _ref21.responseTopic, s = _ref21.publicKey;
                if (!(n && e !== n)) {
                  _context14.next = 4;
                  break;
                }
                _this3.client.logger.debug("[Auth] Ignoring message from unknown topic", e);
                return _context14.abrupt("return");
              case 4:
                _context14.next = 6;
                return _this3.client.core.crypto.decode(e, i, {
                  receiverPublicKey: s
                });
              case 6:
                o = _context14.sent;
                if (!isJsonRpcRequest(o)) {
                  _context14.next = 11;
                  break;
                }
                _this3.client.core.history.set(e, o), _this3.onRelayEventRequest({
                  topic: e,
                  payload: o
                });
                _context14.next = 16;
                break;
              case 11:
                _context14.t0 = isJsonRpcResponse(o);
                if (!_context14.t0) {
                  _context14.next = 16;
                  break;
                }
                _context14.next = 15;
                return _this3.client.core.history.resolve(o);
              case 15:
                _this3.onRelayEventResponse({
                  topic: e,
                  payload: o
                });
              case 16:
              case "end":
                return _context14.stop();
            }
          }, _callee14);
        }));
        return function (_x41) {
          return _ref20.apply(this, arguments);
        };
      }());
    }
  }, {
    key: "registerPairingEvents",
    value: function registerPairingEvents() {
      var _this4 = this;
      this.client.core.pairing.events.on(V$4.create, function (t) {
        return _this4.onPairingCreated(t);
      });
    }
  }]);
}(G$2);
var S$4 = /*#__PURE__*/function (_H) {
  function S(t) {
    var _this5;
    _classCallCheck(this, S);
    _this5 = _callSuper(this, S, [t]), _this5.protocol = $$3, _this5.version = Q$2, _this5.name = B$2, _this5.events = new eventsExports.EventEmitter(), _this5.emit = function (i, n) {
      return _this5.events.emit(i, n);
    }, _this5.on = function (i, n) {
      return _this5.events.on(i, n);
    }, _this5.once = function (i, n) {
      return _this5.events.once(i, n);
    }, _this5.off = function (i, n) {
      return _this5.events.off(i, n);
    }, _this5.removeListener = function (i, n) {
      return _this5.events.removeListener(i, n);
    }, _this5.request = /*#__PURE__*/function () {
      var _ref22 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(i, n) {
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              _context15.prev = 0;
              _context15.next = 3;
              return _this5.engine.request(i, n);
            case 3:
              return _context15.abrupt("return", _context15.sent);
            case 6:
              _context15.prev = 6;
              _context15.t0 = _context15["catch"](0);
              throw _this5.logger.error(_context15.t0.message), _context15.t0;
            case 9:
            case "end":
              return _context15.stop();
          }
        }, _callee15, null, [[0, 6]]);
      }));
      return function (_x42, _x43) {
        return _ref22.apply(this, arguments);
      };
    }(), _this5.respond = /*#__PURE__*/function () {
      var _ref23 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(i, n) {
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.prev = 0;
              _context16.next = 3;
              return _this5.engine.respond(i, n);
            case 3:
              return _context16.abrupt("return", _context16.sent);
            case 6:
              _context16.prev = 6;
              _context16.t0 = _context16["catch"](0);
              throw _this5.logger.error(_context16.t0.message), _context16.t0;
            case 9:
            case "end":
              return _context16.stop();
          }
        }, _callee16, null, [[0, 6]]);
      }));
      return function (_x44, _x45) {
        return _ref23.apply(this, arguments);
      };
    }(), _this5.getPendingRequests = function () {
      try {
        return _this5.engine.getPendingRequests();
      } catch (i) {
        throw _this5.logger.error(i.message), i;
      }
    }, _this5.formatMessage = function (i, n) {
      try {
        return _this5.engine.formatMessage(i, n);
      } catch (s) {
        throw _this5.logger.error(s.message), s;
      }
    };
    var e = _typeof(t.logger) < "u" && typeof t.logger != "string" ? t.logger : qt$5(k$4({
      level: t.logger || "error"
    }));
    _this5.name = (t === null || t === void 0 ? void 0 : t.name) || B$2, _this5.metadata = t.metadata, _this5.projectId = t.projectId, _this5.core = t.core || new bn$2(t), _this5.logger = E$4(e, _this5.name), _this5.authKeys = new ni$1(_this5.core, _this5.logger, "authKeys", F$2, function () {
      return x$4;
    }), _this5.pairingTopics = new ni$1(_this5.core, _this5.logger, "pairingTopics", F$2), _this5.requests = new ni$1(_this5.core, _this5.logger, "requests", F$2, function (i) {
      return i.id;
    }), _this5.engine = new Br$2(_this5);
    return _this5;
  }
  _inherits(S, _H);
  return _createClass(S, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              this.logger.trace("Initialized");
              _context17.prev = 1;
              _context17.next = 4;
              return this.core.start();
            case 4:
              _context17.next = 6;
              return this.authKeys.init();
            case 6:
              _context17.next = 8;
              return this.requests.init();
            case 8:
              _context17.next = 10;
              return this.pairingTopics.init();
            case 10:
              _context17.next = 12;
              return this.engine.init();
            case 12:
              this.logger.info("AuthClient Initialization Success");
              this.logger.info({
                authClient: this
              });
              _context17.next = 19;
              break;
            case 16:
              _context17.prev = 16;
              _context17.t0 = _context17["catch"](1);
              throw this.logger.info("AuthClient Initialization Failure"), this.logger.error(_context17.t0.message), _context17.t0;
            case 19:
            case "end":
              return _context17.stop();
          }
        }, _callee17, this, [[1, 16]]);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
  }], [{
    key: "init",
    value: function () {
      var _init = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(t) {
        var e;
        return _regeneratorRuntime().wrap(function _callee18$(_context18) {
          while (1) switch (_context18.prev = _context18.next) {
            case 0:
              e = new S(t);
              _context18.next = 3;
              return e.initialize();
            case 3:
              return _context18.abrupt("return", e);
            case 4:
            case "end":
              return _context18.stop();
          }
        }, _callee18);
      }));
      function init(_x46) {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }]);
}(H$2);
var zr$2 = S$4;

var n = /*#__PURE__*/function (_o) {
  function n(s) {
    var _this;
    _classCallCheck(this, n);
    _this = _callSuper(this, n), _this.opts = s, _this.protocol = "wc", _this.version = 2;
    return _this;
  }
  _inherits(n, _o);
  return _createClass(n);
}(IEvents);
var l$1 = /*#__PURE__*/_createClass(function l(s, t, e) {
  _classCallCheck(this, l);
  this.core = s, this.logger = t;
});
var h = /*#__PURE__*/function (_o2) {
  function h(s, t) {
    var _this2;
    _classCallCheck(this, h);
    _this2 = _callSuper(this, h), _this2.core = s, _this2.logger = t, _this2.records = new Map();
    return _this2;
  }
  _inherits(h, _o2);
  return _createClass(h);
}(IEvents);
var a = /*#__PURE__*/_createClass(function a(s, t) {
  _classCallCheck(this, a);
  this.logger = s, this.core = t;
});
var g$2 = /*#__PURE__*/function (_o3) {
  function g(s, t) {
    var _this3;
    _classCallCheck(this, g);
    _this3 = _callSuper(this, g), _this3.relayer = s, _this3.logger = t;
    return _this3;
  }
  _inherits(g, _o3);
  return _createClass(g);
}(IEvents);
var u = /*#__PURE__*/function (_o4) {
  function u(s) {
    _classCallCheck(this, u);
    return _callSuper(this, u);
  }
  _inherits(u, _o4);
  return _createClass(u);
}(IEvents);
var p$1 = /*#__PURE__*/_createClass(function p(s, t, e, f) {
  _classCallCheck(this, p);
  this.core = s, this.logger = t, this.name = e;
});
var I$3 = /*#__PURE__*/_createClass(function I() {
  _classCallCheck(this, I);
  this.map = new Map();
});
var d = /*#__PURE__*/function (_o5) {
  function d(s, t) {
    var _this4;
    _classCallCheck(this, d);
    _this4 = _callSuper(this, d), _this4.relayer = s, _this4.logger = t;
    return _this4;
  }
  _inherits(d, _o5);
  return _createClass(d);
}(IEvents);
var E$1 = /*#__PURE__*/_createClass(function E(s, t) {
  _classCallCheck(this, E);
  this.core = s, this.logger = t;
});
var x$3 = /*#__PURE__*/function (_o6) {
  function x(s, t) {
    var _this5;
    _classCallCheck(this, x);
    _this5 = _callSuper(this, x), _this5.core = s, _this5.logger = t;
    return _this5;
  }
  _inherits(x, _o6);
  return _createClass(x);
}(IEvents);
var m = /*#__PURE__*/_createClass(function m(s, t) {
  _classCallCheck(this, m);
  this.logger = s, this.core = t;
});
var y$2 = /*#__PURE__*/_createClass(function y(s, t, e) {
  _classCallCheck(this, y);
  this.core = s, this.logger = t, this.store = e;
});
var v$3 = /*#__PURE__*/_createClass(function v(s, t) {
  _classCallCheck(this, v);
  this.projectId = s, this.logger = t;
});
var C$2 = /*#__PURE__*/_createClass(function C(s, t, e) {
  _classCallCheck(this, C);
  this.core = s, this.logger = t, this.telemetryEnabled = e;
});
var b$2 = /*#__PURE__*/function (_c) {
  function b() {
    _classCallCheck(this, b);
    return _callSuper(this, b);
  }
  _inherits(b, _c);
  return _createClass(b);
}(es);
var S$3 = /*#__PURE__*/_createClass(function S(s) {
  _classCallCheck(this, S);
  this.opts = s, this.protocol = "wc", this.version = 2;
});
var w$1 = /*#__PURE__*/function (_i) {
  function w() {
    _classCallCheck(this, w);
    return _callSuper(this, w);
  }
  _inherits(w, _i);
  return _createClass(w);
}(eventsExports.EventEmitter);
var M$2 = /*#__PURE__*/_createClass(function M(s) {
  _classCallCheck(this, M);
  this.client = s;
});

var elliptic$1 = {};

var name = "elliptic";
var version = "6.5.7";
var description = "EC cryptography";
var main = "lib/elliptic.js";
var files = [
	"lib"
];
var scripts = {
	lint: "eslint lib test",
	"lint:fix": "npm run lint -- --fix",
	unit: "istanbul test _mocha --reporter=spec test/index.js",
	test: "npm run lint && npm run unit",
	version: "grunt dist && git add dist/"
};
var repository = {
	type: "git",
	url: "git@github.com:indutny/elliptic"
};
var keywords = [
	"EC",
	"Elliptic",
	"curve",
	"Cryptography"
];
var author = "Fedor Indutny <fedor@indutny.com>";
var license = "MIT";
var bugs = {
	url: "https://github.com/indutny/elliptic/issues"
};
var homepage = "https://github.com/indutny/elliptic";
var devDependencies = {
	brfs: "^2.0.2",
	coveralls: "^3.1.0",
	eslint: "^7.6.0",
	grunt: "^1.2.1",
	"grunt-browserify": "^5.3.0",
	"grunt-cli": "^1.3.2",
	"grunt-contrib-connect": "^3.0.0",
	"grunt-contrib-copy": "^1.0.0",
	"grunt-contrib-uglify": "^5.0.0",
	"grunt-mocha-istanbul": "^5.0.2",
	"grunt-saucelabs": "^9.0.1",
	istanbul: "^0.4.5",
	mocha: "^8.0.1"
};
var dependencies = {
	"bn.js": "^4.11.9",
	brorand: "^1.1.0",
	"hash.js": "^1.0.0",
	"hmac-drbg": "^1.0.1",
	inherits: "^2.0.4",
	"minimalistic-assert": "^1.0.1",
	"minimalistic-crypto-utils": "^1.0.1"
};
var require$$0 = {
	name: name,
	version: version,
	description: description,
	main: main,
	files: files,
	scripts: scripts,
	repository: repository,
	keywords: keywords,
	author: author,
	license: license,
	bugs: bugs,
	homepage: homepage,
	devDependencies: devDependencies,
	dependencies: dependencies
};

var utils$b = {};

(function (exports) {
  'use strict';

  var utils = exports;
  var BN = bnExports;
  var minAssert = minimalisticAssert$1;
  var minUtils = utils$p;
  utils.assert = minAssert;
  utils.toArray = minUtils.toArray;
  utils.zero2 = minUtils.zero2;
  utils.toHex = minUtils.toHex;
  utils.encode = minUtils.encode;

  // Represent num in a w-NAF form
  function getNAF(num, w, bits) {
    var naf = new Array(Math.max(num.bitLength(), bits) + 1);
    var i;
    for (i = 0; i < naf.length; i += 1) {
      naf[i] = 0;
    }
    var ws = 1 << w + 1;
    var k = num.clone();
    for (i = 0; i < naf.length; i++) {
      var z;
      var mod = k.andln(ws - 1);
      if (k.isOdd()) {
        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;
        k.isubn(z);
      } else {
        z = 0;
      }
      naf[i] = z;
      k.iushrn(1);
    }
    return naf;
  }
  utils.getNAF = getNAF;

  // Represent k1, k2 in a Joint Sparse Form
  function getJSF(k1, k2) {
    var jsf = [[], []];
    k1 = k1.clone();
    k2 = k2.clone();
    var d1 = 0;
    var d2 = 0;
    var m8;
    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
      // First phase
      var m14 = k1.andln(3) + d1 & 3;
      var m24 = k2.andln(3) + d2 & 3;
      if (m14 === 3) m14 = -1;
      if (m24 === 3) m24 = -1;
      var u1;
      if ((m14 & 1) === 0) {
        u1 = 0;
      } else {
        m8 = k1.andln(7) + d1 & 7;
        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;
      }
      jsf[0].push(u1);
      var u2;
      if ((m24 & 1) === 0) {
        u2 = 0;
      } else {
        m8 = k2.andln(7) + d2 & 7;
        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;
      }
      jsf[1].push(u2);

      // Second phase
      if (2 * d1 === u1 + 1) d1 = 1 - d1;
      if (2 * d2 === u2 + 1) d2 = 1 - d2;
      k1.iushrn(1);
      k2.iushrn(1);
    }
    return jsf;
  }
  utils.getJSF = getJSF;
  function cachedProperty(obj, name, computer) {
    var key = '_' + name;
    obj.prototype[name] = function cachedProperty() {
      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);
    };
  }
  utils.cachedProperty = cachedProperty;
  function parseBytes(bytes) {
    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;
  }
  utils.parseBytes = parseBytes;
  function intFromLE(bytes) {
    return new BN(bytes, 'hex', 'le');
  }
  utils.intFromLE = intFromLE;
})(utils$b);
var utils$a = /*@__PURE__*/getDefaultExportFromCjs$1(utils$b);

var curve = {};

'use strict';
var BN$7 = bnExports;
var utils$9 = utils$b;
var getNAF = utils$9.getNAF;
var getJSF = utils$9.getJSF;
var assert$8 = utils$9.assert;
function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN$7(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN$7.red(conf.prime) : BN$7.mont(this.p);

  // Useful for many curves
  this.zero = new BN$7(0).toRed(this.red);
  this.one = new BN$7(1).toRed(this.red);
  this.two = new BN$7(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN$7(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
var base = BaseCurve;
BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};
BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};
BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert$8(p.precomputed);
  var doubles = p._getDoubles();
  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }
  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};
BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;
    if (i >= 0) l++;
    acc = acc.dblp(l);
    if (i < 0) break;
    var z = naf[i];
    assert$8(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
    } else {
      // J +- J
      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};
BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }
    var comb = [points[a], /* 1 */
    null, /* 3 */
    null, /* 5 */
    points[b] /* 7 */];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }
    var index = [-3, /* -1 -1 */
    -1, /* -1 0 */
    -5, /* -1 1 */
    -7, /* 0 -1 */
    0, /* 0 0 */
    7, /* 0 1 */
    5, /* 1 -1 */
    1, /* 1 0 */
    3 /* 1 1 */];
    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;
      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }
  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;
    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0) zero = false;
      }
      if (!zero) break;
      k++;
      i--;
    }
    if (i >= 0) k++;
    acc = acc.dblp(k);
    if (i < 0) break;
    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();
      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++) wnd[i] = null;
  if (jacobianResult) return acc;else return acc.toP();
};
function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;
BasePoint.prototype.eq = function eq(/*other*/
) {
  throw new Error('Not implemented');
};
BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};
BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils$9.toArray(bytes, enc);
  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06) assert$8(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$8(bytes[bytes.length - 1] % 2 === 1);
    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};
BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};
BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);
  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);
  return [0x04].concat(x, this.getY().toArray('be', len));
};
BasePoint.prototype.encode = function encode(enc, compact) {
  return utils$9.encode(this._encode(compact), enc);
};
BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed) return this;
  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;
  return this;
};
BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed) return false;
  var doubles = this.precomputed.doubles;
  if (!doubles) return false;
  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};
BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
  var doubles = [this];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++) acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};
BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
  var res = [this];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};
BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};
BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++) r = r.dbl();
  return r;
};
var base$1 = /*@__PURE__*/getDefaultExportFromCjs$1(base);

'use strict';
var utils$8 = utils$b;
var BN$6 = bnExports;
var inherits$2 = inherits_browserExports;
var Base$2 = base;
var assert$7 = utils$8.assert;
function ShortCurve(conf) {
  Base$2.call(this, 'short', conf);
  this.a = new BN$6(conf.a, 16).toRed(this.red);
  this.b = new BN$6(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();
  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits$2(ShortCurve, Base$2);
var _short = ShortCurve;
ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN$6(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN$6(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert$7(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function (vec) {
      return {
        a: new BN$6(vec.a, 16),
        b: new BN$6(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }
  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};
ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN$6.mont(num);
  var tinv = new BN$6(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();
  var s = new BN$6(3).toRed(red).redNeg().redSqrt().redMul(tinv);
  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [l1, l2];
};
ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN$6(1);
  var y1 = new BN$6(0);
  var x2 = new BN$6(0);
  var y2 = new BN$6(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;
  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));
    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;
    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;
  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }
  return [{
    a: a1,
    b: b1
  }, {
    a: a2,
    b: b2
  }];
};
ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];
  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);
  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return {
    k1: k1,
    k2: k2
  };
};
ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN$6(x, 16);
  if (!x.red) x = x.toRed(this.red);
  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
  return this.point(x, y);
};
ShortCurve.prototype.validate = function validate(point) {
  if (point.inf) return true;
  var x = point.x;
  var y = point.y;
  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};
ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();
    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }
    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};
function Point$2(curve, x, y, isRed) {
  Base$2.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN$6(x, 16);
    this.y = new BN$6(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.y.red) this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits$2(Point$2, Base$2.BasePoint);
ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point$2(this, x, y, isRed);
};
ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point$2.fromJSON(this, obj, red);
};
Point$2.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo) return;
  var pre = this.precomputed;
  if (pre && pre.beta) return pre.beta;
  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function endoMul(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};
Point$2.prototype.toJSON = function toJSON() {
  if (!this.precomputed) return [this.x, this.y];
  return [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }];
};
Point$2.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string') obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2]) return res;
  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }
  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [res].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [res].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};
Point$2.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};
Point$2.prototype.isInfinity = function isInfinity() {
  return this.inf;
};
Point$2.prototype.add = function add(p) {
  // O + P = P
  if (this.inf) return p;

  // P + O = P
  if (p.inf) return this;

  // P + P = 2P
  if (this.eq(p)) return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p)) return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);
  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point$2.prototype.dbl = function dbl() {
  if (this.inf) return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);
  var a = this.curve.a;
  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};
Point$2.prototype.getX = function getX() {
  return this.x.fromRed();
};
Point$2.prototype.getY = function getY() {
  return this.y.fromRed();
};
Point$2.prototype.mul = function mul(k) {
  k = new BN$6(k, 16);
  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);
};
Point$2.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);
};
Point$2.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};
Point$2.prototype.eq = function eq(p) {
  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};
Point$2.prototype.neg = function neg(_precompute) {
  if (this.inf) return this;
  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function negate(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};
Point$2.prototype.toJ = function toJ() {
  if (this.inf) return this.curve.jpoint(null, null, null);
  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};
function JPoint(curve, x, y, z) {
  Base$2.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN$6(0);
  } else {
    this.x = new BN$6(x, 16);
    this.y = new BN$6(y, 16);
    this.z = new BN$6(z, 16);
  }
  if (!this.x.red) this.x = this.x.toRed(this.curve.red);
  if (!this.y.red) this.y = this.y.toRed(this.curve.red);
  if (!this.z.red) this.z = this.z.toRed(this.curve.red);
  this.zOne = this.z === this.curve.one;
}
inherits$2(JPoint, Base$2.BasePoint);
ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};
JPoint.prototype.toP = function toP() {
  if (this.isInfinity()) return this.curve.point(null, null);
  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);
  return this.curve.point(ax, ay);
};
JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity()) return p;

  // P + O = P
  if (p.isInfinity()) return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity()) return p.toJ();

  // P + O = P
  if (p.isInfinity()) return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();
  }
  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0) return this;
  if (this.isInfinity()) return this;
  if (!pow) return this.dbl();
  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++) r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);
    jx = nx;
    jz = nz;
    jyd = dny;
  }
  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};
JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity()) return this;
  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();
};
JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();
  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);
  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA) return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
  return this.curve.jpoint(nx, ny, nz);
};
JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN$6(k, kbase);
  return this.curve._wnafMul(this, k);
};
JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine') return this.eq(p.toJ());
  if (this === p) return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};
JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0) return true;
  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0) return false;
    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0) return true;
  }
};
JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';
};
JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};
var short = /*@__PURE__*/getDefaultExportFromCjs$1(_short);

'use strict';
var BN$5 = bnExports;
var inherits$1 = inherits_browserExports;
var Base$1 = base;
var utils$7 = utils$b;
function MontCurve(conf) {
  Base$1.call(this, 'mont', conf);
  this.a = new BN$5(conf.a, 16).toRed(this.red);
  this.b = new BN$5(conf.b, 16).toRed(this.red);
  this.i4 = new BN$5(4).toRed(this.red).redInvm();
  this.two = new BN$5(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits$1(MontCurve, Base$1);
var mont = MontCurve;
MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();
  return y.redSqr().cmp(rhs) === 0;
};
function Point$1(curve, x, z) {
  Base$1.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN$5(x, 16);
    this.z = new BN$5(z, 16);
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.z.red) this.z = this.z.toRed(this.curve.red);
  }
}
inherits$1(Point$1, Base$1.BasePoint);
MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils$7.toArray(bytes, enc), 1);
};
MontCurve.prototype.point = function point(x, z) {
  return new Point$1(this, x, z);
};
MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point$1.fromJSON(this, obj);
};
Point$1.prototype.precompute = function precompute() {
  // No-op
};
Point$1.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};
Point$1.fromJSON = function fromJSON(curve, obj) {
  return new Point$1(curve, obj[0], obj[1] || curve.one);
};
Point$1.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};
Point$1.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};
Point$1.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};
Point$1.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};
Point$1.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};
Point$1.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) bits.push(t.andln(1));
  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};
Point$1.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};
Point$1.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};
Point$1.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};
Point$1.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};
Point$1.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();
  return this.x.fromRed();
};
var mont$1 = /*@__PURE__*/getDefaultExportFromCjs$1(mont);

'use strict';
var utils$6 = utils$b;
var BN$4 = bnExports;
var inherits = inherits_browserExports;
var Base = base;
var assert$6 = utils$6.assert;
function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;
  Base.call(this, 'edwards', conf);
  this.a = new BN$4(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN$4(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN$4(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);
  assert$6(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
var edwards = EdwardsCurve;
EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA) return num.redNeg();else return this.a.redMul(num);
};
EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC) return num;else return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};
EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN$4(x, 16);
  if (!x.red) x = x.toRed(this.red);
  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));
  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
  return this.point(x, y);
};
EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN$4(y, 16);
  if (!y.red) y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());
  if (x2.cmp(this.zero) === 0) {
    if (odd) throw new Error('invalid point');else return this.point(this.zero, y);
  }
  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0) throw new Error('invalid point');
  if (x.fromRed().isOdd() !== odd) x = x.redNeg();
  return this.point(x, y);
};
EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity()) return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();
  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
  return lhs.cmp(rhs) === 0;
};
function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN$4(x, 16);
    this.y = new BN$4(y, 16);
    this.z = z ? new BN$4(z, 16) : this.curve.one;
    this.t = t && new BN$4(t, 16);
    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.y.red) this.y = this.y.toRed(this.curve.red);
    if (!this.z.red) this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);
EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};
EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};
Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};
Point.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};
Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
};
Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};
Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();
  var nx;
  var ny;
  var nz;
  var e;
  var h;
  var j;
  if (this.curve.twisted) {
    // E = a * C
    e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      h = this.z.redSqr();
      // J = F - 2 * H
      j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    e = c.redAdd(d);
    // H = (c * Z1)^2
    h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};
Point.prototype.dbl = function dbl() {
  if (this.isInfinity()) return this;

  // Double in extended coordinates
  if (this.curve.extended) return this._extDbl();else return this._projDbl();
};
Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};
Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};
Point.prototype.add = function add(p) {
  if (this.isInfinity()) return p;
  if (p.isInfinity()) return this;
  if (this.curve.extended) return this._extAdd(p);else return this._projAdd(p);
};
Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else return this.curve._wnafMul(this, k);
};
Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);
};
Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);
};
Point.prototype.normalize = function normalize() {
  if (this.zOne) return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t) this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};
Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
};
Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};
Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};
Point.prototype.eq = function eq(other) {
  return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;
};
Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0) return true;
  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0) return false;
    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0) return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;
var edwards$1 = /*@__PURE__*/getDefaultExportFromCjs$1(edwards);

(function (exports) {
  'use strict';

  var curve = exports;
  curve.base = base;
  curve["short"] = _short;
  curve.mont = mont;
  curve.edwards = edwards;
})(curve);
var index$2 = /*@__PURE__*/getDefaultExportFromCjs$1(curve);

var curves$3 = {};

var secp256k1;
var hasRequiredSecp256k1;
function requireSecp256k1() {
  if (hasRequiredSecp256k1) return secp256k1;
  hasRequiredSecp256k1 = 1;
  secp256k1 = {
    doubles: {
      step: 4,
      points: [['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a', 'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'], ['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508', '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'], ['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739', 'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'], ['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640', '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'], ['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c', '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'], ['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda', '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'], ['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa', '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'], ['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0', 'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'], ['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d', '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'], ['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d', 'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'], ['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1', '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'], ['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0', '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'], ['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047', '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'], ['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862', '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'], ['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7', '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'], ['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd', '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'], ['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83', '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'], ['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a', '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'], ['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8', 'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'], ['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d', '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'], ['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725', '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'], ['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754', '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'], ['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c', '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'], ['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6', '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'], ['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39', 'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'], ['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891', '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'], ['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b', 'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'], ['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03', '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'], ['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d', 'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'], ['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070', '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'], ['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4', 'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'], ['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da', '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'], ['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11', '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'], ['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e', 'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'], ['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41', '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'], ['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef', '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'], ['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8', 'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'], ['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d', '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'], ['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96', '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'], ['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd', 'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'], ['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5', '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'], ['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266', '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'], ['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71', '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'], ['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac', 'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'], ['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751', '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'], ['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e', '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'], ['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241', 'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'], ['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3', 'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'], ['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f', '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'], ['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19', 'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'], ['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be', 'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'], ['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9', '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'], ['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2', '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'], ['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13', '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'], ['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c', 'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'], ['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba', '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'], ['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151', 'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'], ['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073', 'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'], ['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458', '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'], ['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b', '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'], ['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366', 'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'], ['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa', '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'], ['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0', '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'], ['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787', '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'], ['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e', 'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]
    },
    naf: {
      wnd: 7,
      points: [['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9', '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'], ['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4', 'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'], ['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc', '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'], ['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe', 'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'], ['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb', 'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'], ['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8', 'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'], ['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e', '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'], ['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34', '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'], ['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c', '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'], ['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5', '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'], ['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f', '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'], ['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714', '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'], ['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729', 'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'], ['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db', '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'], ['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4', 'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'], ['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5', 'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'], ['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479', '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'], ['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d', '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'], ['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f', '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'], ['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb', 'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'], ['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9', 'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'], ['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963', '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'], ['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74', '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'], ['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530', 'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'], ['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b', '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'], ['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247', 'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'], ['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1', 'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'], ['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120', '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'], ['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435', '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'], ['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18', '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'], ['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8', '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'], ['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb', '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'], ['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f', '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'], ['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143', 'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'], ['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba', 'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'], ['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45', 'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'], ['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a', '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'], ['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e', 'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'], ['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8', 'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'], ['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c', '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'], ['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519', 'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'], ['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab', '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'], ['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca', 'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'], ['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf', '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'], ['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610', '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'], ['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4', 'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'], ['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c', 'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'], ['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940', 'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'], ['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980', 'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'], ['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3', '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'], ['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf', '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'], ['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63', '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'], ['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448', 'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'], ['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf', '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'], ['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5', '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'], ['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6', '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'], ['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5', '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'], ['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99', 'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'], ['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51', 'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'], ['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5', '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'], ['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5', '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'], ['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997', '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'], ['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881', '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'], ['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5', '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'], ['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66', 'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'], ['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726', 'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'], ['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede', '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'], ['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94', '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'], ['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31', '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'], ['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51', 'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'], ['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252', 'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'], ['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5', 'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'], ['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b', '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'], ['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4', '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'], ['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f', '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'], ['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889', '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'], ['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246', 'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'], ['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984', '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'], ['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a', 'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'], ['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030', 'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'], ['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197', '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'], ['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593', 'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'], ['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef', '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'], ['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38', '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'], ['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a', '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'], ['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111', '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'], ['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502', '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'], ['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea', 'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'], ['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26', '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'], ['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986', '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'], ['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e', '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'], ['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4', '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'], ['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda', 'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'], ['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859', 'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'], ['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f', 'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'], ['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c', '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'], ['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942', 'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'], ['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a', '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'], ['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80', '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'], ['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d', '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'], ['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1', 'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'], ['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63', 'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'], ['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352', '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'], ['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193', 'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'], ['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00', '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'], ['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58', 'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'], ['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7', 'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'], ['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8', 'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'], ['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e', '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'], ['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d', 'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'], ['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b', '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'], ['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f', 'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'], ['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6', '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'], ['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297', '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'], ['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a', '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'], ['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c', 'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'], ['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52', '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'], ['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb', 'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'], ['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065', 'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'], ['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917', '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'], ['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9', 'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'], ['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3', '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'], ['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57', '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'], ['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66', 'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'], ['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8', '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'], ['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721', '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'], ['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180', '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]
    }
  };
  return secp256k1;
}

(function (exports) {
  'use strict';

  var curves = exports;
  var hash = hash$5;
  var curve$1 = curve;
  var utils = utils$b;
  var assert = utils.assert;
  function PresetCurve(options) {
    if (options.type === 'short') this.curve = new curve$1["short"](options);else if (options.type === 'edwards') this.curve = new curve$1.edwards(options);else this.curve = new curve$1.mont(options);
    this.g = this.curve.g;
    this.n = this.curve.n;
    this.hash = options.hash;
    assert(this.g.validate(), 'Invalid curve');
    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
  }
  curves.PresetCurve = PresetCurve;
  function defineCurve(name, options) {
    Object.defineProperty(curves, name, {
      configurable: true,
      enumerable: true,
      get: function get() {
        var curve = new PresetCurve(options);
        Object.defineProperty(curves, name, {
          configurable: true,
          enumerable: true,
          value: curve
        });
        return curve;
      }
    });
  }
  defineCurve('p192', {
    type: 'short',
    prime: 'p192',
    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
    hash: hash.sha256,
    gRed: false,
    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']
  });
  defineCurve('p224', {
    type: 'short',
    prime: 'p224',
    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
    hash: hash.sha256,
    gRed: false,
    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']
  });
  defineCurve('p256', {
    type: 'short',
    prime: null,
    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
    hash: hash.sha256,
    gRed: false,
    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']
  });
  defineCurve('p384', {
    type: 'short',
    prime: null,
    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',
    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',
    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
    hash: hash.sha384,
    gRed: false,
    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']
  });
  defineCurve('p521', {
    type: 'short',
    prime: null,
    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',
    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',
    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
    hash: hash.sha512,
    gRed: false,
    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']
  });
  defineCurve('curve25519', {
    type: 'mont',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '76d06',
    b: '1',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash.sha256,
    gRed: false,
    g: ['9']
  });
  defineCurve('ed25519', {
    type: 'edwards',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '-1',
    c: '1',
    // -121665 * (121666^(-1)) (mod P)
    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash.sha256,
    gRed: false,
    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',
    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658']
  });
  var pre;
  try {
    pre = requireSecp256k1();
  } catch (e) {
    pre = undefined;
  }
  defineCurve('secp256k1', {
    type: 'short',
    prime: 'k256',
    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
    a: '0',
    b: '7',
    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
    h: '1',
    hash: hash.sha256,
    // Precomputed endomorphism
    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
    basis: [{
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    }, {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }],
    gRed: false,
    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]
  });
})(curves$3);
var curves$2 = /*@__PURE__*/getDefaultExportFromCjs$1(curves$3);

'use strict';
var BN$3 = bnExports;
var utils$5 = utils$b;
var assert$5 = utils$5.assert;
function KeyPair$3(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv) this._importPrivate(options.priv, options.privEnc);
  if (options.pub) this._importPublic(options.pub, options.pubEnc);
}
var key$2 = KeyPair$3;
KeyPair$3.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair$3) return pub;
  return new KeyPair$3(ec, {
    pub: pub,
    pubEnc: enc
  });
};
KeyPair$3.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair$3) return priv;
  return new KeyPair$3(ec, {
    priv: priv,
    privEnc: enc
  });
};
KeyPair$3.prototype.validate = function validate() {
  var pub = this.getPublic();
  if (pub.isInfinity()) return {
    result: false,
    reason: 'Invalid public key'
  };
  if (!pub.validate()) return {
    result: false,
    reason: 'Public key is not a point'
  };
  if (!pub.mul(this.ec.curve.n).isInfinity()) return {
    result: false,
    reason: 'Public key * N != O'
  };
  return {
    result: true,
    reason: null
  };
};
KeyPair$3.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }
  if (!this.pub) this.pub = this.ec.g.mul(this.priv);
  if (!enc) return this.pub;
  return this.pub.encode(enc, compact);
};
KeyPair$3.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;
};
KeyPair$3.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN$3(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};
KeyPair$3.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert$5(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {
      assert$5(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair$3.prototype.derive = function derive(pub) {
  if (!pub.validate()) {
    assert$5(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair$3.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};
KeyPair$3.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};
KeyPair$3.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};
var key$3 = /*@__PURE__*/getDefaultExportFromCjs$1(key$2);

'use strict';
var BN$2 = bnExports;
var utils$4 = utils$b;
var assert$4 = utils$4.assert;
function Signature$3(options, enc) {
  if (options instanceof Signature$3) return options;
  if (this._importDER(options, enc)) return;
  assert$4(options.r && options.s, 'Signature without r or s');
  this.r = new BN$2(options.r, 16);
  this.s = new BN$2(options.s, 16);
  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;
}
var signature$2 = Signature$3;
function Position() {
  this.place = 0;
}
function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }
  if (buf[p.place] === 0x00) {
    return false;
  }
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }
  p.place = off;
  return val;
}
function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}
Signature$3.prototype._importDER = function _importDER(data, enc) {
  data = utils$4.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if (len + p.place !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  if ((data[p.place] & 128) !== 0) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  if ((data[p.place] & 128) !== 0) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  this.r = new BN$2(r);
  this.s = new BN$2(s);
  this.recoveryParam = null;
  return true;
};
function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push(len >>> (octets << 3) & 0xff);
  }
  arr.push(len);
}
Signature$3.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80) r = [0].concat(r);
  // Pad values
  if (s[0] & 0x80) s = [0].concat(s);
  r = rmPadding(r);
  s = rmPadding(s);
  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [0x02];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [0x30];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils$4.encode(res, enc);
};
var signature$3 = /*@__PURE__*/getDefaultExportFromCjs$1(signature$2);

'use strict';
var BN$1 = bnExports;
var HmacDRBG = hmacDrbg;
var utils$3 = utils$b;
var curves$1 = curves$3;
var rand = brorandExports;
var assert$3 = utils$3.assert;
var KeyPair$2 = key$2;
var Signature$2 = signature$2;
function EC(options) {
  if (!(this instanceof EC)) return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert$3(Object.prototype.hasOwnProperty.call(curves$1, options), 'Unknown curve ' + options);
    options = curves$1[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves$1.PresetCurve) options = {
    curve: options
  };
  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
var ec = EC;
EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair$2(this, options);
};
EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair$2.fromPrivate(this, priv, enc);
};
EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair$2.fromPublic(this, pub, enc);
};
EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options) options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });
  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN$1(2));
  for (;;) {
    var priv = new BN$1(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0) continue;
    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};
EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0) msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;
};
EC.prototype.sign = function sign(msg, key, enc, options) {
  if (_typeof(enc) === 'object') {
    options = enc;
    enc = null;
  }
  if (!options) options = {};
  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN$1(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN$1(1));
  for (var iter = 0;; iter++) {
    var k = options.k ? options.k(iter) : new BN$1(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;
    var kp = this.g.mul(k);
    if (kp.isInfinity()) continue;
    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0) continue;
    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0) continue;
    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }
    return new Signature$2({
      r: r,
      s: s,
      recoveryParam: recoveryParam
    });
  }
};
EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN$1(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature$2(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;
  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity()) return false;
    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity()) return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};
EC.prototype.recoverPubKey = function (msg, signature, j, enc) {
  assert$3((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature$2(signature, enc);
  var n = this.n;
  var e = new BN$1(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);
  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};
EC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {
  signature = new Signature$2(signature, enc);
  if (signature.recoveryParam !== null) return signature.recoveryParam;
  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }
    if (Qprime.eq(Q)) return i;
  }
  throw new Error('Unable to find valid recovery factor');
};
var index$1 = /*@__PURE__*/getDefaultExportFromCjs$1(ec);

'use strict';
var utils$2 = utils$b;
var assert$2 = utils$2.assert;
var parseBytes$2 = utils$2.parseBytes;
var cachedProperty$1 = utils$2.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair$1(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes$2(params.secret);
  if (eddsa.isPoint(params.pub)) this._pub = params.pub;else this._pubBytes = parseBytes$2(params.pub);
}
KeyPair$1.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair$1) return pub;
  return new KeyPair$1(eddsa, {
    pub: pub
  });
};
KeyPair$1.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair$1) return secret;
  return new KeyPair$1(eddsa, {
    secret: secret
  });
};
KeyPair$1.prototype.secret = function secret() {
  return this._secret;
};
cachedProperty$1(KeyPair$1, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});
cachedProperty$1(KeyPair$1, 'pub', function pub() {
  if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});
cachedProperty$1(KeyPair$1, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;
  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;
  return a;
});
cachedProperty$1(KeyPair$1, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});
cachedProperty$1(KeyPair$1, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});
cachedProperty$1(KeyPair$1, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});
KeyPair$1.prototype.sign = function sign(message) {
  assert$2(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};
KeyPair$1.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};
KeyPair$1.prototype.getSecret = function getSecret(enc) {
  assert$2(this._secret, 'KeyPair is public only');
  return utils$2.encode(this.secret(), enc);
};
KeyPair$1.prototype.getPublic = function getPublic(enc) {
  return utils$2.encode(this.pubBytes(), enc);
};
var key = KeyPair$1;
var key$1 = /*@__PURE__*/getDefaultExportFromCjs$1(key);

'use strict';
var BN = bnExports;
var utils$1 = utils$b;
var assert$1 = utils$1.assert;
var cachedProperty = utils$1.cachedProperty;
var parseBytes$1 = utils$1.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature$1(eddsa, sig) {
  this.eddsa = eddsa;
  if (_typeof(sig) !== 'object') sig = parseBytes$1(sig);
  if (Array.isArray(sig)) {
    assert$1(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }
  assert$1(sig.R && sig.S, 'Signature without R or S');
  if (eddsa.isPoint(sig.R)) this._R = sig.R;
  if (sig.S instanceof BN) this._S = sig.S;
  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}
cachedProperty(Signature$1, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});
cachedProperty(Signature$1, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});
cachedProperty(Signature$1, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});
cachedProperty(Signature$1, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});
Signature$1.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};
Signature$1.prototype.toHex = function toHex() {
  return utils$1.encode(this.toBytes(), 'hex').toUpperCase();
};
var signature = Signature$1;
var signature$1 = /*@__PURE__*/getDefaultExportFromCjs$1(signature);

'use strict';
var hash = hash$5;
var curves = curves$3;
var utils = utils$b;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = key;
var Signature = signature;
function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');
  if (!(this instanceof EDDSA)) return new EDDSA(curve);
  curve = curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);
  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}
var eddsa = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({
    R: R,
    S: S,
    Rencoded: Rencoded
  });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {
    return false;
  }
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};
EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++) hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};
EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};
EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};
EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature) return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};
EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);
  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;
  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};
EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};
EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};
EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};
var index = /*@__PURE__*/getDefaultExportFromCjs$1(eddsa);

(function (exports) {
  'use strict';

  var elliptic = exports;
  elliptic.version = require$$0.version;
  elliptic.utils = utils$b;
  elliptic.rand = brorandExports;
  elliptic.curve = curve;
  elliptic.curves = curves$3;

  // Protocols
  elliptic.ec = ec;
  elliptic.eddsa = eddsa;
})(elliptic$1);
var elliptic = /*@__PURE__*/getDefaultExportFromCjs$1(elliptic$1);

var H$1 = ":";
function re$1(e) {
  var _e$split = e.split(H$1),
    _e$split2 = _slicedToArray(_e$split, 2),
    n = _e$split2[0],
    t = _e$split2[1];
  return {
    namespace: n,
    reference: t
  };
}
function ke(e) {
  var n = e.namespace,
    t = e.reference;
  return [n, t].join(H$1);
}
function oe$1(e) {
  var _e$split3 = e.split(H$1),
    _e$split4 = _slicedToArray(_e$split3, 3),
    n = _e$split4[0],
    t = _e$split4[1],
    r = _e$split4[2];
  return {
    namespace: n,
    reference: t,
    address: r
  };
}
function De$1(e) {
  var n = e.namespace,
    t = e.reference,
    r = e.address;
  return [n, t, r].join(H$1);
}
function se$2(e, n) {
  var t = [];
  return e.forEach(function (r) {
    var o = n(r);
    t.includes(o) || t.push(o);
  }), t;
}
function xe$1(e) {
  var _oe = oe$1(e),
    n = _oe.address;
  return n;
}
function Ve(e) {
  var _oe2 = oe$1(e),
    n = _oe2.namespace,
    t = _oe2.reference;
  return ke({
    namespace: n,
    reference: t
  });
}
function ft$1(e, n) {
  var _re = re$1(n),
    t = _re.namespace,
    r = _re.reference;
  return De$1({
    namespace: t,
    reference: r,
    address: e
  });
}
function pt$2(e) {
  return se$2(e, xe$1);
}
function Me(e) {
  return se$2(e, Ve);
}
function mt$1(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var t = [];
  return Object.keys(e).forEach(function (r) {
    if (n.length && !n.includes(r)) return;
    var o = e[r];
    t.push.apply(t, _toConsumableArray(o.accounts));
  }), t;
}
function ht$2(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var t = [];
  return Object.keys(e).forEach(function (r) {
    if (n.length && !n.includes(r)) return;
    var o = e[r];
    t.push.apply(t, _toConsumableArray(Me(o.accounts)));
  }), t;
}
function yt$2(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var t = [];
  return Object.keys(e).forEach(function (r) {
    if (n.length && !n.includes(r)) return;
    var o = e[r];
    t.push.apply(t, _toConsumableArray(W$1(r, o)));
  }), t;
}
function W$1(e, n) {
  return e.includes(":") ? [e] : n.chains || [];
}
var gt$2 = Object.defineProperty,
  Ke = Object.getOwnPropertySymbols,
  vt$1 = Object.prototype.hasOwnProperty,
  bt$1 = Object.prototype.propertyIsEnumerable,
  Le$1 = function Le(e, n, t) {
    return n in e ? gt$2(e, n, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : e[n] = t;
  },
  Fe = function Fe(e, n) {
    for (var t in n || (n = {})) vt$1.call(n, t) && Le$1(e, t, n[t]);
    if (Ke) {
      var _iterator = _createForOfIteratorHelper(Ke(n)),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var t = _step.value;
          bt$1.call(n, t) && Le$1(e, t, n[t]);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return e;
  };
var qe = "ReactNative",
  y$1 = {
    reactNative: "react-native",
    node: "node",
    browser: "browser",
    unknown: "unknown"
  },
  J$2 = " ",
  Et$1 = ":",
  Be = "/",
  ie$2 = 2,
  wt$1 = 1e3,
  He = "js";
function ce() {
  return (typeof process === "undefined" ? "undefined" : _typeof(process)) < "u" && _typeof(process.versions) < "u" && _typeof(process.versions.node) < "u";
}
function _$1() {
  return !getDocument_1() && !!getNavigator_1() && navigator.product === qe;
}
function V$2() {
  return !ce() && !!getNavigator_1() && !!getDocument_1();
}
function P$2() {
  return _$1() ? y$1.reactNative : ce() ? y$1.node : V$2() ? y$1.browser : y$1.unknown;
}
function Ot$1() {
  var e;
  try {
    return _$1() && (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && _typeof(global == null ? void 0 : global.Application) < "u" ? (e = global.Application) == null ? void 0 : e.applicationId : void 0;
  } catch (_unused) {
    return;
  }
}
function We$1(e, n) {
  var t = queryString.parse(e);
  return t = Fe(Fe({}, t), n), e = queryString.stringify(t), e;
}
function Nt$1() {
  return getWindowMetadata_1() || {
    name: "",
    description: "",
    url: "",
    icons: [""]
  };
}
function St$1(e, n) {
  var t;
  var r = P$2(),
    o = {
      protocol: e,
      version: n,
      env: r
    };
  return r === "browser" && (o.host = ((t = getLocation_1()) == null ? void 0 : t.host) || "unknown"), o;
}
function Je$1() {
  if (P$2() === y$1.reactNative && (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && _typeof(global == null ? void 0 : global.Platform) < "u") {
    var _global$Platform = global.Platform,
      t = _global$Platform.OS,
      r = _global$Platform.Version;
    return [t, r].join("-");
  }
  var e = detect();
  if (e === null) return "unknown";
  var n = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
  return e.type === "browser" ? [n, e.name, e.version].join("-") : [n, e.version].join("-");
}
function ze() {
  var e;
  var n = P$2();
  return n === y$1.browser ? [n, ((e = getLocation_1()) == null ? void 0 : e.host) || "unknown"].join(":") : n;
}
function Ge(e, n, t) {
  var r = Je$1(),
    o = ze();
  return [[e, n].join("-"), [He, t].join("-"), r, o].join("/");
}
function $t$1(_ref) {
  var e = _ref.protocol,
    n = _ref.version,
    t = _ref.relayUrl,
    r = _ref.sdkVersion,
    o = _ref.auth,
    s = _ref.projectId,
    i = _ref.useOnCloseEvent,
    u = _ref.bundleId;
  var l = t.split("?"),
    c = Ge(e, n, r),
    d = {
      auth: o,
      ua: c,
      projectId: s,
      useOnCloseEvent: i || void 0,
      origin: u || void 0
    },
    a = We$1(l[1] || "", d);
  return l[0] + "?" + a;
}
function Rt$1(e) {
  var n = (e.match(/^[^:]+(?=:\/\/)/gi) || [])[0];
  var t = _typeof(n) < "u" ? e.split("://")[1] : e;
  return n = n === "wss" ? "https" : "http", [n, t].join("://");
}
function It$1(e, n, t) {
  if (!e[n] || _typeof(e[n]) !== t) throw new Error("Missing or invalid \"".concat(n, "\" param"));
}
function Ye$1(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ie$2;
  return Qe$1(e.split(Be), n);
}
function jt$1(e) {
  return Ye$1(e).join(J$2);
}
function $$2(e, n) {
  return e.filter(function (t) {
    return n.includes(t);
  }).length === e.length;
}
function Qe$1(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ie$2;
  return e.slice(Math.max(e.length - n, 0));
}
function Tt$1(e) {
  return Object.fromEntries(e.entries());
}
function Pt$1(e) {
  return new Map(Object.entries(e));
}
function At$1(e, n) {
  var t = {};
  return Object.keys(e).forEach(function (r) {
    t[r] = n(e[r]);
  }), t;
}
var Ct$1 = function Ct(e) {
  return e;
};
function Ze$1(e) {
  return e.trim().replace(/^\w/, function (n) {
    return n.toUpperCase();
  });
}
function Ut$1(e) {
  return e.split(J$2).map(function (n) {
    return Ze$1(n);
  }).join(J$2);
}
function _t$1() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cjs$3.FIVE_MINUTES;
  var n = arguments.length > 1 ? arguments[1] : undefined;
  var t = cjs$3.toMiliseconds(e || cjs$3.FIVE_MINUTES);
  var r, o, s;
  return {
    resolve: function resolve(i) {
      s && r && (clearTimeout(s), r(i));
    },
    reject: function reject(i) {
      s && o && (clearTimeout(s), o(i));
    },
    done: function done() {
      return new Promise(function (i, u) {
        s = setTimeout(function () {
          u(new Error(n));
        }, t), r = i, o = u;
      });
    }
  };
}
function kt$1(e, n, t) {
  return new Promise(/*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(r, o) {
      var s, i;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            s = setTimeout(function () {
              return o(new Error(t));
            }, n);
            _context.prev = 1;
            _context.next = 4;
            return e;
          case 4:
            i = _context.sent;
            r(i);
            _context.next = 11;
            break;
          case 8:
            _context.prev = 8;
            _context.t0 = _context["catch"](1);
            o(_context.t0);
          case 11:
            clearTimeout(s);
          case 12:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[1, 8]]);
    }));
    return function (_x, _x2) {
      return _ref2.apply(this, arguments);
    };
  }());
}
function ae$1(e, n) {
  if (typeof n == "string" && n.startsWith("".concat(e, ":"))) return n;
  if (e.toLowerCase() === "topic") {
    if (typeof n != "string") throw new Error('Value must be "string" for expirer target type: topic');
    return "topic:".concat(n);
  } else if (e.toLowerCase() === "id") {
    if (typeof n != "number") throw new Error('Value must be "number" for expirer target type: id');
    return "id:".concat(n);
  }
  throw new Error("Unknown expirer target type: ".concat(e));
}
function Dt$1(e) {
  return ae$1("topic", e);
}
function xt$1(e) {
  return ae$1("id", e);
}
function Vt$1(e) {
  var _e$split5 = e.split(":"),
    _e$split6 = _slicedToArray(_e$split5, 2),
    n = _e$split6[0],
    t = _e$split6[1],
    r = {
      id: void 0,
      topic: void 0
    };
  if (n === "topic" && typeof t == "string") r.topic = t;else if (n === "id" && Number.isInteger(Number(t))) r.id = Number(t);else throw new Error("Invalid target, expected id:number or topic:string, got ".concat(n, ":").concat(t));
  return r;
}
function Mt$1(e, n) {
  return cjs$3.fromMiliseconds((n || Date.now()) + cjs$3.toMiliseconds(e));
}
function Kt$1(e) {
  return Date.now() >= cjs$3.toMiliseconds(e);
}
function Lt$1(e, n) {
  return "".concat(e).concat(n ? ":".concat(n) : "");
}
function N() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return _toConsumableArray(new Set([].concat(_toConsumableArray(e), _toConsumableArray(n))));
}
function Ft$1(_x3) {
  return _Ft.apply(this, arguments);
}
function _Ft() {
  _Ft = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3) {
    var e, n, t, r, o, s, i, u;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          e = _ref3.id, n = _ref3.topic, t = _ref3.wcDeepLink;
          _context2.prev = 1;
          if (t) {
            _context2.next = 4;
            break;
          }
          return _context2.abrupt("return");
        case 4:
          o = typeof t == "string" ? JSON.parse(t) : t, s = o === null || o === void 0 ? void 0 : o.href;
          if (!(typeof s != "string")) {
            _context2.next = 7;
            break;
          }
          return _context2.abrupt("return");
        case 7:
          i = Xe$1(s, e, n), u = P$2();
          if (!(u === y$1.browser)) {
            _context2.next = 15;
            break;
          }
          if ((r = getDocument_1()) != null && r.hasFocus()) {
            _context2.next = 12;
            break;
          }
          console.warn("Document does not have focus, skipping deeplink.");
          return _context2.abrupt("return");
        case 12:
          i.startsWith("https://") || i.startsWith("http://") ? window.open(i, "_blank", "noreferrer noopener") : window.open(i, en$1() ? "_blank" : "_self", "noreferrer noopener");
          _context2.next = 19;
          break;
        case 15:
          _context2.t0 = u === y$1.reactNative && _typeof(global == null ? void 0 : global.Linking) < "u";
          if (!_context2.t0) {
            _context2.next = 19;
            break;
          }
          _context2.next = 19;
          return global.Linking.openURL(i);
        case 19:
          _context2.next = 24;
          break;
        case 21:
          _context2.prev = 21;
          _context2.t1 = _context2["catch"](1);
          console.error(_context2.t1);
        case 24:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[1, 21]]);
  }));
  return _Ft.apply(this, arguments);
}
function Xe$1(e, n, t) {
  var r = "requestId=".concat(n, "&sessionTopic=").concat(t);
  e.endsWith("/") && (e = e.slice(0, -1));
  var o = "".concat(e);
  if (e.startsWith("https://t.me")) {
    var s = e.includes("?") ? "&startapp=" : "?startapp=";
    o = "".concat(o).concat(s).concat(nn$1(r, !0));
  } else o = "".concat(o, "/wc?").concat(r);
  return o;
}
function qt$1(_x4, _x5) {
  return _qt.apply(this, arguments);
}
function _qt() {
  _qt = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e, n) {
    var t;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          t = "";
          _context3.prev = 1;
          if (!(V$2() && (t = localStorage.getItem(n), t))) {
            _context3.next = 4;
            break;
          }
          return _context3.abrupt("return", t);
        case 4:
          _context3.next = 6;
          return e.getItem(n);
        case 6:
          t = _context3.sent;
          _context3.next = 12;
          break;
        case 9:
          _context3.prev = 9;
          _context3.t0 = _context3["catch"](1);
          console.error(_context3.t0);
        case 12:
          return _context3.abrupt("return", t);
        case 13:
        case "end":
          return _context3.stop();
      }
    }, _callee3, null, [[1, 9]]);
  }));
  return _qt.apply(this, arguments);
}
function ue(e, n) {
  return e.filter(function (t) {
    return n.includes(t);
  });
}
function Bt$1(e, n) {
  if (!e.includes(n)) return null;
  var t = e.split(/([&,?,=])/),
    r = t.indexOf(n);
  return t[r + 2];
}
function Ht$1() {
  return (typeof crypto === "undefined" ? "undefined" : _typeof(crypto)) < "u" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) {
    var n = Math.random() * 16 | 0;
    return (e === "x" ? n : n & 3 | 8).toString(16);
  });
}
function Wt$1() {
  return (typeof process === "undefined" ? "undefined" : _typeof(process)) < "u" && process.env.IS_VITEST === "true";
}
function en$1() {
  return (typeof window === "undefined" ? "undefined" : _typeof(window)) < "u" && (!!window.TelegramWebviewProxy || !!window.Telegram || !!window.TelegramWebviewProxyProto);
}
function nn$1(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
  var t = Buffer.from(e).toString("base64");
  return n ? t.replace(/[=]/g, "") : t;
}
function le(e) {
  return Buffer.from(e, "base64").toString("utf-8");
}
var Jt$1 = "https://rpc.walletconnect.org/v1";
function tn$1(_x6, _x7, _x8, _x9, _x10, _x11) {
  return _tn.apply(this, arguments);
}
function _tn() {
  _tn = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e, n, t, r, o, s) {
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          _context4.t0 = t.t;
          _context4.next = _context4.t0 === "eip191" ? 3 : _context4.t0 === "eip1271" ? 4 : 7;
          break;
        case 3:
          return _context4.abrupt("return", rn$1(e, n, t.s));
        case 4:
          _context4.next = 6;
          return on$1(e, n, t.s, r, o, s);
        case 6:
          return _context4.abrupt("return", _context4.sent);
        case 7:
          throw new Error("verifySignature failed: Attempted to verify CacaoSignature with unknown type: ".concat(t.t));
        case 8:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return _tn.apply(this, arguments);
}
function rn$1(e, n, t) {
  return recoverAddress(hashMessage(n), t).toLowerCase() === e.toLowerCase();
}
function on$1(_x12, _x13, _x14, _x15, _x16, _x17) {
  return _on.apply(this, arguments);
}
function _on() {
  _on = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e, n, t, r, o, s) {
    var i, u, l, c, d, a, f, h, _yield$h$json, p;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          i = re$1(r);
          if (!(!i.namespace || !i.reference)) {
            _context5.next = 3;
            break;
          }
          throw new Error("isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ".concat(r));
        case 3:
          _context5.prev = 3;
          u = "0x1626ba7e";
          l = "0000000000000000000000000000000000000000000000000000000000000040";
          c = "0000000000000000000000000000000000000000000000000000000000000041";
          d = t.substring(2);
          a = hashMessage(n).substring(2);
          f = u + a + l + c + d;
          _context5.next = 12;
          return fetch("".concat(s || Jt$1, "/?chainId=").concat(r, "&projectId=").concat(o), {
            method: "POST",
            body: JSON.stringify({
              id: zt$1(),
              jsonrpc: "2.0",
              method: "eth_call",
              params: [{
                to: e,
                data: f
              }, "latest"]
            })
          });
        case 12:
          h = _context5.sent;
          _context5.next = 15;
          return h.json();
        case 15:
          _yield$h$json = _context5.sent;
          p = _yield$h$json.result;
          return _context5.abrupt("return", p ? p.slice(0, u.length).toLowerCase() === u.toLowerCase() : !1);
        case 20:
          _context5.prev = 20;
          _context5.t0 = _context5["catch"](3);
          return _context5.abrupt("return", (console.error("isValidEip1271Signature: ", _context5.t0), !1));
        case 23:
        case "end":
          return _context5.stop();
      }
    }, _callee5, null, [[3, 20]]);
  }));
  return _on.apply(this, arguments);
}
function zt$1() {
  return Date.now() + Math.floor(Math.random() * 1e3);
}
var Gt$1 = Object.defineProperty,
  Yt$1 = Object.defineProperties,
  Qt$1 = Object.getOwnPropertyDescriptors,
  sn$1 = Object.getOwnPropertySymbols,
  Zt$1 = Object.prototype.hasOwnProperty,
  Xt$1 = Object.prototype.propertyIsEnumerable,
  cn$1 = function cn(e, n, t) {
    return n in e ? Gt$1(e, n, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : e[n] = t;
  },
  de = function de(e, n) {
    for (var t in n || (n = {})) Zt$1.call(n, t) && cn$1(e, t, n[t]);
    if (sn$1) {
      var _iterator2 = _createForOfIteratorHelper(sn$1(n)),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var t = _step2.value;
          Xt$1.call(n, t) && cn$1(e, t, n[t]);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    return e;
  },
  an$1 = function an(e, n) {
    return Yt$1(e, Qt$1(n));
  };
var er$1 = "did:pkh:",
  z$3 = function z(e) {
    return e === null || e === void 0 ? void 0 : e.split(":");
  },
  un$1 = function un(e) {
    var n = e && z$3(e);
    if (n) return e.includes(er$1) ? n[3] : n[1];
  },
  ln$1 = function ln(e) {
    var n = e && z$3(e);
    if (n) return n[2] + ":" + n[3];
  },
  fe$1 = function fe(e) {
    var n = e && z$3(e);
    if (n) return n.pop();
  };
function nr$1(_x18) {
  return _nr.apply(this, arguments);
}
function _nr() {
  _nr = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(e) {
    var n, t, r, o, s, i;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          n = e.cacao, t = e.projectId, r = n.s, o = n.p, s = dn$1(o, o.iss), i = fe$1(o.iss);
          _context6.next = 3;
          return tn$1(i, s, r, ln$1(o.iss), t);
        case 3:
          return _context6.abrupt("return", _context6.sent);
        case 4:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return _nr.apply(this, arguments);
}
var dn$1 = function dn(e, n) {
  var t = "".concat(e.domain, " wants you to sign in with your Ethereum account:"),
    r = fe$1(n);
  if (!e.aud && !e.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
  var o = e.statement || void 0;
  var s = "URI: ".concat(e.aud || e.uri),
    i = "Version: ".concat(e.version),
    u = "Chain ID: ".concat(un$1(n)),
    l = "Nonce: ".concat(e.nonce),
    c = "Issued At: ".concat(e.iat),
    d = e.exp ? "Expiration Time: ".concat(e.exp) : void 0,
    a = e.nbf ? "Not Before: ".concat(e.nbf) : void 0,
    f = e.requestId ? "Request ID: ".concat(e.requestId) : void 0,
    h = e.resources ? "Resources:".concat(e.resources.map(function (m) {
      return "\n- ".concat(m);
    }).join("")) : void 0,
    p = Y$1(e.resources);
  if (p) {
    var m = R$1(p);
    o = he(o, m);
  }
  return [t, r, "", o, "", s, i, u, l, c, d, a, f, h].filter(function (m) {
    return m != null;
  }).join("\n");
};
function tr$1(e, n, t) {
  return t.includes("did:pkh:") || (t = "did:pkh:".concat(t)), {
    h: {
      t: "caip122"
    },
    p: {
      iss: t,
      domain: e.domain,
      aud: e.aud,
      version: e.version,
      nonce: e.nonce,
      iat: e.iat,
      statement: e.statement,
      requestId: e.requestId,
      resources: e.resources,
      nbf: e.nbf,
      exp: e.exp
    },
    s: n
  };
}
function rr$1(e) {
  var n;
  var t = e.authPayload,
    r = e.chains,
    o = e.methods,
    s = t.statement || "";
  if (!(r != null && r.length)) return t;
  var i = t.chains,
    u = ue(i, r);
  if (!(u != null && u.length)) throw new Error("No supported chains");
  var l = fn(t.resources);
  if (!l) return t;
  O$2(l);
  var c = pn$1(l, "eip155");
  var d = (t === null || t === void 0 ? void 0 : t.resources) || [];
  if (c != null && c.length) {
    var a = mn$1(c),
      f = ue(a, o);
    if (!(f != null && f.length)) throw new Error("Supported methods don't satisfy the requested: ".concat(JSON.stringify(a), ", supported: ").concat(JSON.stringify(o)));
    var h = pe("request", f, {
        chains: u
      }),
      p = vn(l, "eip155", h);
    d = ((n = t === null || t === void 0 ? void 0 : t.resources) == null ? void 0 : n.slice(0, -1)) || [], d.push(G$1(p));
  }
  return an$1(de({}, t), {
    statement: En(s, Y$1(d)),
    chains: u,
    resources: t != null && t.resources || d.length > 0 ? d : void 0
  });
}
function fn(e) {
  var n = Y$1(e);
  if (n && me$2(n)) return R$1(n);
}
function or$1(e, n) {
  var t;
  return (t = e === null || e === void 0 ? void 0 : e.att) == null ? void 0 : t.hasOwnProperty(n);
}
function pn$1(e, n) {
  var t, r;
  return (t = e === null || e === void 0 ? void 0 : e.att) != null && t[n] ? Object.keys((r = e === null || e === void 0 ? void 0 : e.att) == null ? void 0 : r[n]) : [];
}
function sr$1(e) {
  return (e === null || e === void 0 ? void 0 : e.map(function (n) {
    return Object.keys(n);
  })) || [];
}
function mn$1(e) {
  return (e === null || e === void 0 ? void 0 : e.map(function (n) {
    var t;
    return (t = n.split("/")) == null ? void 0 : t[1];
  })) || [];
}
function hn$1(e) {
  return Buffer.from(JSON.stringify(e)).toString("base64");
}
function yn$1(e) {
  return JSON.parse(Buffer.from(e, "base64").toString("utf-8"));
}
function O$2(e) {
  if (!e) throw new Error("No recap provided, value is undefined");
  if (!e.att) throw new Error("No `att` property found");
  var n = Object.keys(e.att);
  if (!(n != null && n.length)) throw new Error("No resources found in `att` property");
  n.forEach(function (t) {
    var r = e.att[t];
    if (Array.isArray(r)) throw new Error("Resource must be an object: ".concat(t));
    if (_typeof(r) != "object") throw new Error("Resource must be an object: ".concat(t));
    if (!Object.keys(r).length) throw new Error("Resource object is empty: ".concat(t));
    Object.keys(r).forEach(function (o) {
      var s = r[o];
      if (!Array.isArray(s)) throw new Error("Ability limits ".concat(o, " must be an array of objects, found: ").concat(s));
      if (!s.length) throw new Error("Value of ".concat(o, " is empty array, must be an array with objects"));
      s.forEach(function (i) {
        if (_typeof(i) != "object") throw new Error("Ability limits (".concat(o, ") must be an array of objects, found: ").concat(i));
      });
    });
  });
}
function gn$1(e, n, t) {
  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  return t !== null && t !== void 0 && t.sort(function (o, s) {
    return o.localeCompare(s);
  }), {
    att: _defineProperty({}, e, pe(n, t, r))
  };
}
function vn(e, n, t) {
  var r;
  return e.att[n] = de({}, t), ((r = Object.keys(e.att)) == null ? void 0 : r.sort(function (o, s) {
    return o.localeCompare(s);
  })).reduce(function (o, s) {
    return o.att[s] = e.att[s], o;
  }, {
    att: {}
  });
}
function pe(e, n) {
  var _n2;
  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  n = (_n2 = n) === null || _n2 === void 0 ? void 0 : _n2.sort(function (o, s) {
    return o.localeCompare(s);
  });
  var r = n.map(function (o) {
    return _defineProperty({}, "".concat(e, "/").concat(o), [t]);
  });
  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(r)));
}
function G$1(e) {
  return O$2(e), "urn:recap:".concat(hn$1(e).replace(/=/g, ""));
}
function R$1(e) {
  var n = yn$1(e.replace("urn:recap:", ""));
  return O$2(n), n;
}
function ir$1(e, n, t) {
  var r = gn$1(e, n, t);
  return G$1(r);
}
function me$2(e) {
  return e && e.includes("urn:recap:");
}
function cr$1(e, n) {
  var t = R$1(e),
    r = R$1(n),
    o = bn$1(t, r);
  return G$1(o);
}
function bn$1(e, n) {
  O$2(e), O$2(n);
  var t = Object.keys(e.att).concat(Object.keys(n.att)).sort(function (o, s) {
      return o.localeCompare(s);
    }),
    r = {
      att: {}
    };
  return t.forEach(function (o) {
    var s, i;
    Object.keys(((s = e.att) == null ? void 0 : s[o]) || {}).concat(Object.keys(((i = n.att) == null ? void 0 : i[o]) || {})).sort(function (u, l) {
      return u.localeCompare(l);
    }).forEach(function (u) {
      var l, c;
      r.att[o] = an$1(de({}, r.att[o]), _defineProperty({}, u, ((l = e.att[o]) == null ? void 0 : l[u]) || ((c = n.att[o]) == null ? void 0 : c[u])));
    });
  }), r;
}
function he() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var n = arguments.length > 1 ? arguments[1] : undefined;
  O$2(n);
  var t = "I further authorize the stated URI to perform the following actions on my behalf: ";
  if (e.includes(t)) return e;
  var r = [];
  var o = 0;
  Object.keys(n.att).forEach(function (u) {
    var l = Object.keys(n.att[u]).map(function (a) {
      return {
        ability: a.split("/")[0],
        action: a.split("/")[1]
      };
    });
    l.sort(function (a, f) {
      return a.action.localeCompare(f.action);
    });
    var c = {};
    l.forEach(function (a) {
      c[a.ability] || (c[a.ability] = []), c[a.ability].push(a.action);
    });
    var d = Object.keys(c).map(function (a) {
      return o++, "(".concat(o, ") '").concat(a, "': '").concat(c[a].join("', '"), "' for '").concat(u, "'.");
    });
    r.push(d.join(", ").replace(".,", "."));
  });
  var s = r.join(" "),
    i = "".concat(t).concat(s);
  return "".concat(e ? e + " " : "").concat(i);
}
function ar$1(e) {
  var n;
  var t = R$1(e);
  O$2(t);
  var r = (n = t.att) == null ? void 0 : n.eip155;
  return r ? Object.keys(r).map(function (o) {
    return o.split("/")[1];
  }) : [];
}
function ur$1(e) {
  var n = R$1(e);
  O$2(n);
  var t = [];
  return Object.values(n.att).forEach(function (r) {
    Object.values(r).forEach(function (o) {
      var s;
      (s = o === null || o === void 0 ? void 0 : o[0]) != null && s.chains && t.push(o[0].chains);
    });
  }), _toConsumableArray(new Set(t.flat()));
}
function En(e, n) {
  if (!n) return e;
  var t = R$1(n);
  return O$2(t), he(e, t);
}
function Y$1(e) {
  if (!e) return;
  var n = e === null || e === void 0 ? void 0 : e[e.length - 1];
  return me$2(n) ? n : void 0;
}
var ye$2 = "base10",
  g$1 = "base16",
  ge = "base64pad",
  lr$1 = "base64url",
  k$1 = "utf8",
  ve$1 = 0,
  D$2 = 1,
  M$1 = 2,
  dr$1 = 0,
  wn = 1,
  K$1 = 12,
  be$2 = 32;
function fr$1() {
  var e = x25519$1.generateKeyPair();
  return {
    privateKey: toString(e.secretKey, g$1),
    publicKey: toString(e.publicKey, g$1)
  };
}
function pr$1() {
  var e = random$1.randomBytes(be$2);
  return toString(e, g$1);
}
function mr$1(e, n) {
  var t = x25519$1.sharedKey(fromString(e, g$1), fromString(n, g$1), !0),
    r = new HKDF_1(sha256$1.SHA256, t).expand(be$2);
  return toString(r, g$1);
}
function hr$1(e) {
  var n = sha256$1.hash(fromString(e, g$1));
  return toString(n, g$1);
}
function yr$1(e) {
  var n = sha256$1.hash(fromString(e, k$1));
  return toString(n, g$1);
}
function Ee$1(e) {
  return fromString("".concat(e), ye$2);
}
function A$1(e) {
  return Number(toString(e, ye$2));
}
function gr$1(e) {
  var n = Ee$1(_typeof(e.type) < "u" ? e.type : ve$1);
  if (A$1(n) === D$2 && _typeof(e.senderPublicKey) > "u") throw new Error("Missing sender public key for type 1 envelope");
  var t = _typeof(e.senderPublicKey) < "u" ? fromString(e.senderPublicKey, g$1) : void 0,
    r = _typeof(e.iv) < "u" ? fromString(e.iv, g$1) : random$1.randomBytes(K$1),
    o = new chacha20poly1305$1.ChaCha20Poly1305(fromString(e.symKey, g$1)).seal(r, fromString(e.message, k$1));
  return we$2({
    type: n,
    sealed: o,
    iv: r,
    senderPublicKey: t,
    encoding: e.encoding
  });
}
function vr$1(e, n) {
  var t = Ee$1(M$1),
    r = random$1.randomBytes(K$1),
    o = fromString(e, k$1);
  return we$2({
    type: t,
    sealed: o,
    iv: r,
    encoding: n
  });
}
function br$1(e) {
  var n = new chacha20poly1305$1.ChaCha20Poly1305(fromString(e.symKey, g$1)),
    _Q = Q$1({
      encoded: e.encoded,
      encoding: e === null || e === void 0 ? void 0 : e.encoding
    }),
    t = _Q.sealed,
    r = _Q.iv,
    o = n.open(r, t);
  if (o === null) throw new Error("Failed to decrypt");
  return toString(o, k$1);
}
function Er$1(e, n) {
  var _Q2 = Q$1({
      encoded: e,
      encoding: n
    }),
    t = _Q2.sealed;
  return toString(t, k$1);
}
function we$2(e) {
  var _e$encoding = e.encoding,
    n = _e$encoding === void 0 ? ge : _e$encoding;
  if (A$1(e.type) === M$1) return toString(concat([e.type, e.sealed]), n);
  if (A$1(e.type) === D$2) {
    if (_typeof(e.senderPublicKey) > "u") throw new Error("Missing sender public key for type 1 envelope");
    return toString(concat([e.type, e.senderPublicKey, e.iv, e.sealed]), n);
  }
  return toString(concat([e.type, e.iv, e.sealed]), n);
}
function Q$1(e) {
  var n = e.encoded,
    _e$encoding2 = e.encoding,
    t = _e$encoding2 === void 0 ? ge : _e$encoding2,
    r = fromString(n, t),
    o = r.slice(dr$1, wn),
    s = wn;
  if (A$1(o) === D$2) {
    var c = s + be$2,
      d = c + K$1,
      a = r.slice(s, c),
      f = r.slice(c, d),
      h = r.slice(d);
    return {
      type: o,
      sealed: h,
      iv: f,
      senderPublicKey: a
    };
  }
  if (A$1(o) === M$1) {
    var _c = r.slice(s),
      _d = random$1.randomBytes(K$1);
    return {
      type: o,
      sealed: _c,
      iv: _d
    };
  }
  var i = s + K$1,
    u = r.slice(s, i),
    l = r.slice(i);
  return {
    type: o,
    sealed: l,
    iv: u
  };
}
function wr$1(e, n) {
  var t = Q$1({
    encoded: e,
    encoding: n === null || n === void 0 ? void 0 : n.encoding
  });
  return On({
    type: A$1(t.type),
    senderPublicKey: _typeof(t.senderPublicKey) < "u" ? toString(t.senderPublicKey, g$1) : void 0,
    receiverPublicKey: n === null || n === void 0 ? void 0 : n.receiverPublicKey
  });
}
function On(e) {
  var n = (e === null || e === void 0 ? void 0 : e.type) || ve$1;
  if (n === D$2) {
    if (_typeof(e === null || e === void 0 ? void 0 : e.senderPublicKey) > "u") throw new Error("missing sender public key");
    if (_typeof(e === null || e === void 0 ? void 0 : e.receiverPublicKey) > "u") throw new Error("missing receiver public key");
  }
  return {
    type: n,
    senderPublicKey: e === null || e === void 0 ? void 0 : e.senderPublicKey,
    receiverPublicKey: e === null || e === void 0 ? void 0 : e.receiverPublicKey
  };
}
function Or$1(e) {
  return e.type === D$2 && typeof e.senderPublicKey == "string" && typeof e.receiverPublicKey == "string";
}
function Nr$1(e) {
  return e.type === M$1;
}
function Nn(e) {
  return new elliptic$1.ec("p256").keyFromPublic({
    x: Buffer.from(e.x, "base64").toString("hex"),
    y: Buffer.from(e.y, "base64").toString("hex")
  }, "hex");
}
function Sr$1(e) {
  var n = e.replace(/-/g, "+").replace(/_/g, "/");
  var t = n.length % 4;
  return t > 0 && (n += "=".repeat(4 - t)), n;
}
function $r$1(e) {
  return Buffer.from(Sr$1(e), "base64");
}
function Rr$1(e, n) {
  var _e$split7 = e.split("."),
    _e$split8 = _slicedToArray(_e$split7, 3),
    t = _e$split8[0],
    r = _e$split8[1],
    o = _e$split8[2],
    s = $r$1(o);
  if (s.length !== 64) throw new Error("Invalid signature length");
  var i = s.slice(0, 32).toString("hex"),
    u = s.slice(32, 64).toString("hex"),
    l = "".concat(t, ".").concat(r),
    c = new sha256$1.SHA256().update(Buffer.from(l)).digest(),
    d = Nn(n),
    a = Buffer.from(c).toString("hex");
  if (!d.verify(a, {
    r: i,
    s: u
  })) throw new Error("Invalid signature");
  return decodeJWT(e).payload;
}
var Sn = "irn";
function Ir$1(e) {
  return (e === null || e === void 0 ? void 0 : e.relay) || {
    protocol: Sn
  };
}
function jr$1(e) {
  var n = C$4[e];
  if (_typeof(n) > "u") throw new Error("Relay Protocol not supported: ".concat(e));
  return n;
}
var Tr$1 = Object.defineProperty,
  Pr$1 = Object.defineProperties,
  Ar$1 = Object.getOwnPropertyDescriptors,
  $n = Object.getOwnPropertySymbols,
  Cr$1 = Object.prototype.hasOwnProperty,
  Ur$1 = Object.prototype.propertyIsEnumerable,
  Rn = function Rn(e, n, t) {
    return n in e ? Tr$1(e, n, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : e[n] = t;
  },
  In = function In(e, n) {
    for (var t in n || (n = {})) Cr$1.call(n, t) && Rn(e, t, n[t]);
    if ($n) {
      var _iterator3 = _createForOfIteratorHelper($n(n)),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var t = _step3.value;
          Ur$1.call(n, t) && Rn(e, t, n[t]);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
    return e;
  },
  _r$1 = function _r(e, n) {
    return Pr$1(e, Ar$1(n));
  };
function jn(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "-";
  var t = {},
    r = "relay" + n;
  return Object.keys(e).forEach(function (o) {
    if (o.startsWith(r)) {
      var s = o.replace(r, ""),
        i = e[o];
      t[s] = i;
    }
  }), t;
}
function kr$1(e) {
  if (!e.includes("wc:")) {
    var l = le(e);
    l != null && l.includes("wc:") && (e = l);
  }
  e = e.includes("wc://") ? e.replace("wc://", "") : e, e = e.includes("wc:") ? e.replace("wc:", "") : e;
  var n = e.indexOf(":"),
    t = e.indexOf("?") !== -1 ? e.indexOf("?") : void 0,
    r = e.substring(0, n),
    o = e.substring(n + 1, t).split("@"),
    s = _typeof(t) < "u" ? e.substring(t) : "",
    i = queryString.parse(s),
    u = typeof i.methods == "string" ? i.methods.split(",") : void 0;
  return {
    protocol: r,
    topic: Tn(o[0]),
    version: parseInt(o[1], 10),
    symKey: i.symKey,
    relay: jn(i),
    methods: u,
    expiryTimestamp: i.expiryTimestamp ? parseInt(i.expiryTimestamp, 10) : void 0
  };
}
function Tn(e) {
  return e.startsWith("//") ? e.substring(2) : e;
}
function Pn(e) {
  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "-";
  var t = "relay",
    r = {};
  return Object.keys(e).forEach(function (o) {
    var s = t + n + o;
    e[o] && (r[s] = e[o]);
  }), r;
}
function Dr$1(e) {
  return "".concat(e.protocol, ":").concat(e.topic, "@").concat(e.version, "?") + queryString.stringify(In(_r$1(In({
    symKey: e.symKey
  }, Pn(e.relay)), {
    expiryTimestamp: e.expiryTimestamp
  }), e.methods ? {
    methods: e.methods.join(",")
  } : {}));
}
function xr$1(e, n, t) {
  return "".concat(e, "?wc_ev=").concat(t, "&topic=").concat(n);
}
var Vr$1 = Object.defineProperty,
  Mr$1 = Object.defineProperties,
  Kr$1 = Object.getOwnPropertyDescriptors,
  An = Object.getOwnPropertySymbols,
  Lr$1 = Object.prototype.hasOwnProperty,
  Fr$1 = Object.prototype.propertyIsEnumerable,
  Cn = function Cn(e, n, t) {
    return n in e ? Vr$1(e, n, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : e[n] = t;
  },
  qr$1 = function qr(e, n) {
    for (var t in n || (n = {})) Lr$1.call(n, t) && Cn(e, t, n[t]);
    if (An) {
      var _iterator4 = _createForOfIteratorHelper(An(n)),
        _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var t = _step4.value;
          Fr$1.call(n, t) && Cn(e, t, n[t]);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    return e;
  },
  Br$1 = function Br(e, n) {
    return Mr$1(e, Kr$1(n));
  };
function C$1(e) {
  var n = [];
  return e.forEach(function (t) {
    var _t$split = t.split(":"),
      _t$split2 = _slicedToArray(_t$split, 2),
      r = _t$split2[0],
      o = _t$split2[1];
    n.push("".concat(r, ":").concat(o));
  }), n;
}
function Un(e) {
  var n = [];
  return Object.values(e).forEach(function (t) {
    n.push.apply(n, _toConsumableArray(C$1(t.accounts)));
  }), n;
}
function _n(e, n) {
  var t = [];
  return Object.values(e).forEach(function (r) {
    C$1(r.accounts).includes(n) && t.push.apply(t, _toConsumableArray(r.methods));
  }), t;
}
function kn(e, n) {
  var t = [];
  return Object.values(e).forEach(function (r) {
    C$1(r.accounts).includes(n) && t.push.apply(t, _toConsumableArray(r.events));
  }), t;
}
function Hr$1(e, n) {
  var t = Wn(e, n);
  if (t) throw new Error(t.message);
  var r = {};
  for (var _i = 0, _Object$entries = Object.entries(e); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
      o = _Object$entries$_i[0],
      s = _Object$entries$_i[1];
    r[o] = {
      methods: s.methods,
      events: s.events,
      chains: s.accounts.map(function (i) {
        return "".concat(i.split(":")[0], ":").concat(i.split(":")[1]);
      })
    };
  }
  return r;
}
function Wr$1(e) {
  var _e$proposal = e.proposal,
    n = _e$proposal.requiredNamespaces,
    _e$proposal$optionalN = _e$proposal.optionalNamespaces,
    t = _e$proposal$optionalN === void 0 ? {} : _e$proposal$optionalN,
    r = e.supportedNamespaces,
    o = Ne(n),
    s = Ne(t),
    i = {};
  Object.keys(r).forEach(function (c) {
    var d = r[c].chains,
      a = r[c].methods,
      f = r[c].events,
      h = r[c].accounts;
    d.forEach(function (p) {
      if (!h.some(function (m) {
        return m.includes(p);
      })) throw new Error("No accounts provided for chain ".concat(p, " in namespace ").concat(c));
    }), i[c] = {
      chains: d,
      methods: a,
      events: f,
      accounts: h
    };
  });
  var u = zn(n, i, "approve()");
  if (u) throw new Error(u.message);
  var l = {};
  return !Object.keys(n).length && !Object.keys(t).length ? i : (Object.keys(o).forEach(function (c) {
    var d = r[c].chains.filter(function (p) {
        var m, E;
        return (E = (m = o[c]) == null ? void 0 : m.chains) == null ? void 0 : E.includes(p);
      }),
      a = r[c].methods.filter(function (p) {
        var m, E;
        return (E = (m = o[c]) == null ? void 0 : m.methods) == null ? void 0 : E.includes(p);
      }),
      f = r[c].events.filter(function (p) {
        var m, E;
        return (E = (m = o[c]) == null ? void 0 : m.events) == null ? void 0 : E.includes(p);
      }),
      h = d.map(function (p) {
        return r[c].accounts.filter(function (m) {
          return m.includes("".concat(p, ":"));
        });
      }).flat();
    l[c] = {
      chains: d,
      methods: a,
      events: f,
      accounts: h
    };
  }), Object.keys(s).forEach(function (c) {
    var d, a, f, h, p, m;
    if (!r[c]) return;
    var E = (a = (d = s[c]) == null ? void 0 : d.chains) == null ? void 0 : a.filter(function (j) {
        return r[c].chains.includes(j);
      }),
      nt = r[c].methods.filter(function (j) {
        var T, x;
        return (x = (T = s[c]) == null ? void 0 : T.methods) == null ? void 0 : x.includes(j);
      }),
      tt = r[c].events.filter(function (j) {
        var T, x;
        return (x = (T = s[c]) == null ? void 0 : T.events) == null ? void 0 : x.includes(j);
      }),
      rt = E === null || E === void 0 ? void 0 : E.map(function (j) {
        return r[c].accounts.filter(function (T) {
          return T.includes("".concat(j, ":"));
        });
      }).flat();
    l[c] = {
      chains: N((f = l[c]) == null ? void 0 : f.chains, E),
      methods: N((h = l[c]) == null ? void 0 : h.methods, nt),
      events: N((p = l[c]) == null ? void 0 : p.events, tt),
      accounts: N((m = l[c]) == null ? void 0 : m.accounts, rt)
    };
  }), l);
}
function Oe(e) {
  return e.includes(":");
}
function Dn$1(e) {
  return Oe(e) ? e.split(":")[0] : e;
}
function Ne(e) {
  var n, t, r;
  var o = {};
  if (!Z$2(e)) return o;
  for (var _i2 = 0, _Object$entries2 = Object.entries(e); _i2 < _Object$entries2.length; _i2++) {
    var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),
      s = _Object$entries2$_i[0],
      i = _Object$entries2$_i[1];
    var u = Oe(s) ? [s] : i.chains,
      l = i.methods || [],
      c = i.events || [],
      d = Dn$1(s);
    o[d] = Br$1(qr$1({}, o[d]), {
      chains: N(u, (n = o[d]) == null ? void 0 : n.chains),
      methods: N(l, (t = o[d]) == null ? void 0 : t.methods),
      events: N(c, (r = o[d]) == null ? void 0 : r.events)
    });
  }
  return o;
}
function xn(e) {
  var n = {};
  return e !== null && e !== void 0 && e.forEach(function (t) {
    var _t$split3 = t.split(":"),
      _t$split4 = _slicedToArray(_t$split3, 2),
      r = _t$split4[0],
      o = _t$split4[1];
    n[r] || (n[r] = {
      accounts: [],
      chains: [],
      events: []
    }), n[r].accounts.push(t), n[r].chains.push("".concat(r, ":").concat(o));
  }), n;
}
function Jr$1(e, n) {
  n = n.map(function (r) {
    return r.replace("did:pkh:", "");
  });
  var t = xn(n);
  for (var _i3 = 0, _Object$entries3 = Object.entries(t); _i3 < _Object$entries3.length; _i3++) {
    var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),
      r = _Object$entries3$_i[0],
      o = _Object$entries3$_i[1];
    o.methods ? o.methods = N(o.methods, e) : o.methods = e, o.events = ["chainChanged", "accountsChanged"];
  }
  return t;
}
var Vn = {
    INVALID_METHOD: {
      message: "Invalid method.",
      code: 1001
    },
    INVALID_EVENT: {
      message: "Invalid event.",
      code: 1002
    },
    INVALID_UPDATE_REQUEST: {
      message: "Invalid update request.",
      code: 1003
    },
    INVALID_EXTEND_REQUEST: {
      message: "Invalid extend request.",
      code: 1004
    },
    INVALID_SESSION_SETTLE_REQUEST: {
      message: "Invalid session settle request.",
      code: 1005
    },
    UNAUTHORIZED_METHOD: {
      message: "Unauthorized method.",
      code: 3001
    },
    UNAUTHORIZED_EVENT: {
      message: "Unauthorized event.",
      code: 3002
    },
    UNAUTHORIZED_UPDATE_REQUEST: {
      message: "Unauthorized update request.",
      code: 3003
    },
    UNAUTHORIZED_EXTEND_REQUEST: {
      message: "Unauthorized extend request.",
      code: 3004
    },
    USER_REJECTED: {
      message: "User rejected.",
      code: 5e3
    },
    USER_REJECTED_CHAINS: {
      message: "User rejected chains.",
      code: 5001
    },
    USER_REJECTED_METHODS: {
      message: "User rejected methods.",
      code: 5002
    },
    USER_REJECTED_EVENTS: {
      message: "User rejected events.",
      code: 5003
    },
    UNSUPPORTED_CHAINS: {
      message: "Unsupported chains.",
      code: 5100
    },
    UNSUPPORTED_METHODS: {
      message: "Unsupported methods.",
      code: 5101
    },
    UNSUPPORTED_EVENTS: {
      message: "Unsupported events.",
      code: 5102
    },
    UNSUPPORTED_ACCOUNTS: {
      message: "Unsupported accounts.",
      code: 5103
    },
    UNSUPPORTED_NAMESPACE_KEY: {
      message: "Unsupported namespace key.",
      code: 5104
    },
    USER_DISCONNECTED: {
      message: "User disconnected.",
      code: 6e3
    },
    SESSION_SETTLEMENT_FAILED: {
      message: "Session settlement failed.",
      code: 7e3
    },
    WC_METHOD_UNSUPPORTED: {
      message: "Unsupported wc_ method.",
      code: 10001
    }
  },
  Mn = {
    NOT_INITIALIZED: {
      message: "Not initialized.",
      code: 1
    },
    NO_MATCHING_KEY: {
      message: "No matching key.",
      code: 2
    },
    RESTORE_WILL_OVERRIDE: {
      message: "Restore will override.",
      code: 3
    },
    RESUBSCRIBED: {
      message: "Resubscribed.",
      code: 4
    },
    MISSING_OR_INVALID: {
      message: "Missing or invalid.",
      code: 5
    },
    EXPIRED: {
      message: "Expired.",
      code: 6
    },
    UNKNOWN_TYPE: {
      message: "Unknown type.",
      code: 7
    },
    MISMATCHED_TOPIC: {
      message: "Mismatched topic.",
      code: 8
    },
    NON_CONFORMING_NAMESPACES: {
      message: "Non conforming namespaces.",
      code: 9
    }
  };
function S$2(e, n) {
  var _Mn$e = Mn[e],
    t = _Mn$e.message,
    r = _Mn$e.code;
  return {
    message: n ? "".concat(t, " ").concat(n) : t,
    code: r
  };
}
function U$1(e, n) {
  var _Vn$e = Vn[e],
    t = _Vn$e.message,
    r = _Vn$e.code;
  return {
    message: n ? "".concat(t, " ").concat(n) : t,
    code: r
  };
}
function L$1(e, n) {
  return Array.isArray(e) ? _typeof(n) < "u" && e.length ? e.every(n) : !0 : !1;
}
function Z$2(e) {
  return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;
}
function I$2(e) {
  return _typeof(e) > "u";
}
function b$1(e, n) {
  return n && I$2(e) ? !0 : typeof e == "string" && !!e.trim().length;
}
function X$2(e, n) {
  return n && I$2(e) ? !0 : typeof e == "number" && !isNaN(e);
}
function zr$1(e, n) {
  var t = n.requiredNamespaces,
    r = Object.keys(e.namespaces),
    o = Object.keys(t);
  var s = !0;
  return $$2(o, r) ? (r.forEach(function (i) {
    var _e$namespaces$i = e.namespaces[i],
      u = _e$namespaces$i.accounts,
      l = _e$namespaces$i.methods,
      c = _e$namespaces$i.events,
      d = C$1(u),
      a = t[i];
    (!$$2(W$1(i, a), d) || !$$2(a.methods, l) || !$$2(a.events, c)) && (s = !1);
  }), s) : !1;
}
function F$1(e) {
  return b$1(e, !1) && e.includes(":") ? e.split(":").length === 2 : !1;
}
function Kn(e) {
  if (b$1(e, !1) && e.includes(":")) {
    var n = e.split(":");
    if (n.length === 3) {
      var t = n[0] + ":" + n[1];
      return !!n[2] && F$1(t);
    }
  }
  return !1;
}
function Gr$1(e) {
  function n(t) {
    try {
      return _typeof(new URL(t)) < "u";
    } catch (_unused2) {
      return !1;
    }
  }
  try {
    if (b$1(e, !1)) {
      if (n(e)) return !0;
      var t = le(e);
      return n(t);
    }
  } catch (_unused3) {}
  return !1;
}
function Yr$1(e) {
  var n;
  return (n = e === null || e === void 0 ? void 0 : e.proposer) == null ? void 0 : n.publicKey;
}
function Qr$1(e) {
  return e === null || e === void 0 ? void 0 : e.topic;
}
function Zr$1(e, n) {
  var t = null;
  return b$1(e === null || e === void 0 ? void 0 : e.publicKey, !1) || (t = S$2("MISSING_OR_INVALID", "".concat(n, " controller public key should be a string"))), t;
}
function Se(e) {
  var n = !0;
  return L$1(e) ? e.length && (n = e.every(function (t) {
    return b$1(t, !1);
  })) : n = !1, n;
}
function Ln(e, n, t) {
  var r = null;
  return L$1(n) && n.length ? n.forEach(function (o) {
    r || F$1(o) || (r = U$1("UNSUPPORTED_CHAINS", "".concat(t, ", chain ").concat(o, " should be a string and conform to \"namespace:chainId\" format")));
  }) : F$1(e) || (r = U$1("UNSUPPORTED_CHAINS", "".concat(t, ", chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }"))), r;
}
function Fn(e, n, t) {
  var r = null;
  return Object.entries(e).forEach(function (_ref5) {
    var _ref6 = _slicedToArray(_ref5, 2),
      o = _ref6[0],
      s = _ref6[1];
    if (r) return;
    var i = Ln(o, W$1(o, s), "".concat(n, " ").concat(t));
    i && (r = i);
  }), r;
}
function qn(e, n) {
  var t = null;
  return L$1(e) ? e.forEach(function (r) {
    t || Kn(r) || (t = U$1("UNSUPPORTED_ACCOUNTS", "".concat(n, ", account ").concat(r, " should be a string and conform to \"namespace:chainId:address\" format")));
  }) : t = U$1("UNSUPPORTED_ACCOUNTS", "".concat(n, ", accounts should be an array of strings conforming to \"namespace:chainId:address\" format")), t;
}
function Bn(e, n) {
  var t = null;
  return Object.values(e).forEach(function (r) {
    if (t) return;
    var o = qn(r === null || r === void 0 ? void 0 : r.accounts, "".concat(n, " namespace"));
    o && (t = o);
  }), t;
}
function Hn(e, n) {
  var t = null;
  return Se(e === null || e === void 0 ? void 0 : e.methods) ? Se(e === null || e === void 0 ? void 0 : e.events) || (t = U$1("UNSUPPORTED_EVENTS", "".concat(n, ", events should be an array of strings or empty array for no events"))) : t = U$1("UNSUPPORTED_METHODS", "".concat(n, ", methods should be an array of strings or empty array for no methods")), t;
}
function $e(e, n) {
  var t = null;
  return Object.values(e).forEach(function (r) {
    if (t) return;
    var o = Hn(r, "".concat(n, ", namespace"));
    o && (t = o);
  }), t;
}
function Xr$1(e, n, t) {
  var r = null;
  if (e && Z$2(e)) {
    var o = $e(e, n);
    o && (r = o);
    var s = Fn(e, n, t);
    s && (r = s);
  } else r = S$2("MISSING_OR_INVALID", "".concat(n, ", ").concat(t, " should be an object with data"));
  return r;
}
function Wn(e, n) {
  var t = null;
  if (e && Z$2(e)) {
    var r = $e(e, n);
    r && (t = r);
    var o = Bn(e, n);
    o && (t = o);
  } else t = S$2("MISSING_OR_INVALID", "".concat(n, ", namespaces should be an object with data"));
  return t;
}
function Jn(e) {
  return b$1(e.protocol, !0);
}
function eo(e, n) {
  var t = !1;
  return n && !e ? t = !0 : e && L$1(e) && e.length && e.forEach(function (r) {
    t = Jn(r);
  }), t;
}
function no(e) {
  return typeof e == "number";
}
function to(e) {
  return _typeof(e) < "u" && _typeof(e) !== null;
}
function ro(e) {
  return !(!e || _typeof(e) != "object" || !e.code || !X$2(e.code, !1) || !e.message || !b$1(e.message, !1));
}
function oo(e) {
  return !(I$2(e) || !b$1(e.method, !1));
}
function so(e) {
  return !(I$2(e) || I$2(e.result) && I$2(e.error) || !X$2(e.id, !1) || !b$1(e.jsonrpc, !1));
}
function io(e) {
  return !(I$2(e) || !b$1(e.name, !1));
}
function co(e, n) {
  return !(!F$1(n) || !Un(e).includes(n));
}
function ao(e, n, t) {
  return b$1(t, !1) ? _n(e, n).includes(t) : !1;
}
function uo(e, n, t) {
  return b$1(t, !1) ? kn(e, n).includes(t) : !1;
}
function zn(e, n, t) {
  var r = null;
  var o = lo(e),
    s = fo(n),
    i = Object.keys(o),
    u = Object.keys(s),
    l = Gn(Object.keys(e)),
    c = Gn(Object.keys(n)),
    d = l.filter(function (a) {
      return !c.includes(a);
    });
  return d.length && (r = S$2("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces keys don't satisfy requiredNamespaces.\n      Required: ").concat(d.toString(), "\n      Received: ").concat(Object.keys(n).toString()))), $$2(i, u) || (r = S$2("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces chains don't satisfy required namespaces.\n      Required: ").concat(i.toString(), "\n      Approved: ").concat(u.toString()))), Object.keys(n).forEach(function (a) {
    if (!a.includes(":") || r) return;
    var f = C$1(n[a].accounts);
    f.includes(a) || (r = S$2("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces accounts don't satisfy namespace accounts for ").concat(a, "\n        Required: ").concat(a, "\n        Approved: ").concat(f.toString())));
  }), i.forEach(function (a) {
    r || ($$2(o[a].methods, s[a].methods) ? $$2(o[a].events, s[a].events) || (r = S$2("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces events don't satisfy namespace events for ").concat(a))) : r = S$2("NON_CONFORMING_NAMESPACES", "".concat(t, " namespaces methods don't satisfy namespace methods for ").concat(a)));
  }), r;
}
function lo(e) {
  var n = {};
  return Object.keys(e).forEach(function (t) {
    var r;
    t.includes(":") ? n[t] = e[t] : (r = e[t].chains) == null || r.forEach(function (o) {
      n[o] = {
        methods: e[t].methods,
        events: e[t].events
      };
    });
  }), n;
}
function Gn(e) {
  return _toConsumableArray(new Set(e.map(function (n) {
    return n.includes(":") ? n.split(":")[0] : n;
  })));
}
function fo(e) {
  var n = {};
  return Object.keys(e).forEach(function (t) {
    if (t.includes(":")) n[t] = e[t];else {
      var r = C$1(e[t].accounts);
      r === null || r === void 0 || r.forEach(function (o) {
        n[o] = {
          accounts: e[t].accounts.filter(function (s) {
            return s.includes("".concat(o, ":"));
          }),
          methods: e[t].methods,
          events: e[t].events
        };
      });
    }
  }), n;
}
function po(e, n) {
  return X$2(e, !1) && e <= n.max && e >= n.min;
}
function mo() {
  var e = P$2();
  return new Promise(function (n) {
    switch (e) {
      case y$1.browser:
        n(Yn());
        break;
      case y$1.reactNative:
        n(Qn());
        break;
      case y$1.node:
        n(Zn());
        break;
      default:
        n(!0);
    }
  });
}
function Yn() {
  var _navigator;
  return V$2() && ((_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.onLine);
}
function Qn() {
  return _Qn.apply(this, arguments);
}
function _Qn() {
  _Qn = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
    var e;
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          if (!(_$1() && (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && global != null && global.NetInfo)) {
            _context7.next = 5;
            break;
          }
          _context7.next = 3;
          return global == null ? void 0 : global.NetInfo.fetch();
        case 3:
          e = _context7.sent;
          return _context7.abrupt("return", e === null || e === void 0 ? void 0 : e.isConnected);
        case 5:
          return _context7.abrupt("return", !0);
        case 6:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return _Qn.apply(this, arguments);
}
function Zn() {
  return !0;
}
function ho(e) {
  switch (P$2()) {
    case y$1.browser:
      Xn(e);
      break;
    case y$1.reactNative:
      et$1(e);
      break;
    case y$1.node:
      break;
  }
}
function Xn(e) {
  !_$1() && V$2() && (window.addEventListener("online", function () {
    return e(!0);
  }), window.addEventListener("offline", function () {
    return e(!1);
  }));
}
function et$1(e) {
  var _global;
  _$1() && (typeof global === "undefined" ? "undefined" : _typeof(global)) < "u" && global != null && global.NetInfo && ((_global = global) === null || _global === void 0 ? void 0 : _global.NetInfo.addEventListener(function (n) {
    return e(n === null || n === void 0 ? void 0 : n.isConnected);
  }));
}
var Re = {};
var yo = /*#__PURE__*/function () {
  function yo() {
    _classCallCheck(this, yo);
  }
  return _createClass(yo, null, [{
    key: "get",
    value: function get(n) {
      return Re[n];
    }
  }, {
    key: "set",
    value: function set(n, t) {
      Re[n] = t;
    }
  }, {
    key: "delete",
    value: function _delete(n) {
      delete Re[n];
    }
  }]);
}();

var ye$1 = "wc",
  De = 2,
  ie$1 = "core",
  x$2 = "".concat(ye$1, "@2:").concat(ie$1, ":"),
  Ye = {
    name: ie$1,
    logger: "error"
  },
  Je = {
    database: ":memory:"
  },
  Xe = "crypto",
  me$1 = "client_ed25519_seed",
  We = cjs$3.ONE_DAY,
  Ze = "keychain",
  Qe = "0.3",
  et = "messages",
  tt = "0.3",
  it$1 = cjs$3.SIX_HOURS,
  st$1 = "publisher",
  rt$1 = "irn",
  nt$1 = "error",
  be$1 = "wss://relay.walletconnect.org",
  ot$1 = "relayer",
  v$2 = {
    message: "relayer_message",
    message_ack: "relayer_message_ack",
    connect: "relayer_connect",
    disconnect: "relayer_disconnect",
    error: "relayer_error",
    connection_stalled: "relayer_connection_stalled",
    transport_closed: "relayer_transport_closed",
    publish: "relayer_publish"
  },
  at$1 = "_subscription",
  I$1 = {
    payload: "payload",
    connect: "connect",
    disconnect: "disconnect",
    error: "error"
  },
  ht$1 = .1,
  ms$1 = {
    database: ":memory:"
  },
  se$1 = "2.17.1",
  bs = 1e4,
  M = {
    link_mode: "link_mode",
    relay: "relay"
  },
  ct$1 = "0.3",
  lt$1 = "WALLETCONNECT_CLIENT_ID",
  fe = "WALLETCONNECT_LINK_MODE_APPS",
  O$1 = {
    created: "subscription_created",
    deleted: "subscription_deleted",
    expired: "subscription_expired",
    disabled: "subscription_disabled",
    sync: "subscription_sync",
    resubscribed: "subscription_resubscribed"
  },
  fs$1 = cjs$3.THIRTY_DAYS,
  ut$1 = "subscription",
  dt$1 = "0.3",
  pt$1 = cjs$3.FIVE_SECONDS * 1e3,
  gt$1 = "pairing",
  yt$1 = "0.3",
  _s$1 = cjs$3.THIRTY_DAYS,
  B$1 = {
    wc_pairingDelete: {
      req: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1e3
      },
      res: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1001
      }
    },
    wc_pairingPing: {
      req: {
        ttl: cjs$3.THIRTY_SECONDS,
        prompt: !1,
        tag: 1002
      },
      res: {
        ttl: cjs$3.THIRTY_SECONDS,
        prompt: !1,
        tag: 1003
      }
    },
    unregistered_method: {
      req: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 0
      },
      res: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 0
      }
    }
  },
  V$1 = {
    create: "pairing_create",
    expire: "pairing_expire",
    "delete": "pairing_delete",
    ping: "pairing_ping"
  },
  P$1 = {
    created: "history_created",
    updated: "history_updated",
    deleted: "history_deleted",
    sync: "history_sync"
  },
  Dt = "history",
  mt = "0.3",
  bt = "expirer",
  S$1 = {
    created: "expirer_created",
    deleted: "expirer_deleted",
    expired: "expirer_expired",
    sync: "expirer_sync"
  },
  ft = "0.3",
  Es$1 = cjs$3.ONE_DAY,
  _t = "verify-api",
  vs$1 = "https://verify.walletconnect.com",
  Et = "https://verify.walletconnect.org",
  J$1 = Et,
  vt = "".concat(J$1, "/v3"),
  wt = [vs$1, Et],
  It = "echo",
  Tt = "https://echo.walletconnect.com",
  ws$1 = "event-client",
  z$2 = {
    pairing_started: "pairing_started",
    pairing_uri_validation_success: "pairing_uri_validation_success",
    pairing_uri_not_expired: "pairing_uri_not_expired",
    store_new_pairing: "store_new_pairing",
    subscribing_pairing_topic: "subscribing_pairing_topic",
    subscribe_pairing_topic_success: "subscribe_pairing_topic_success",
    existing_pairing: "existing_pairing",
    pairing_not_expired: "pairing_not_expired",
    emit_inactive_pairing: "emit_inactive_pairing",
    emit_session_proposal: "emit_session_proposal",
    subscribing_to_pairing_topic: "subscribing_to_pairing_topic"
  },
  $$1 = {
    no_wss_connection: "no_wss_connection",
    no_internet_connection: "no_internet_connection",
    malformed_pairing_uri: "malformed_pairing_uri",
    active_pairing_already_exists: "active_pairing_already_exists",
    subscribe_pairing_topic_failure: "subscribe_pairing_topic_failure",
    pairing_expired: "pairing_expired",
    proposal_expired: "proposal_expired",
    proposal_listener_not_found: "proposal_listener_not_found"
  },
  Is$1 = {
    session_approve_started: "session_approve_started",
    proposal_not_expired: "proposal_not_expired",
    session_namespaces_validation_success: "session_namespaces_validation_success",
    create_session_topic: "create_session_topic",
    subscribing_session_topic: "subscribing_session_topic",
    subscribe_session_topic_success: "subscribe_session_topic_success",
    publishing_session_approve: "publishing_session_approve",
    session_approve_publish_success: "session_approve_publish_success",
    store_session: "store_session",
    publishing_session_settle: "publishing_session_settle",
    session_settle_publish_success: "session_settle_publish_success"
  },
  Ts$1 = {
    no_internet_connection: "no_internet_connection",
    no_wss_connection: "no_wss_connection",
    proposal_expired: "proposal_expired",
    subscribe_session_topic_failure: "subscribe_session_topic_failure",
    session_approve_publish_failure: "session_approve_publish_failure",
    session_settle_publish_failure: "session_settle_publish_failure",
    session_approve_namespace_validation_failure: "session_approve_namespace_validation_failure",
    proposal_not_found: "proposal_not_found"
  },
  Cs = {
    authenticated_session_approve_started: "authenticated_session_approve_started",
    authenticated_session_not_expired: "authenticated_session_not_expired",
    chains_caip2_compliant: "chains_caip2_compliant",
    chains_evm_compliant: "chains_evm_compliant",
    create_authenticated_session_topic: "create_authenticated_session_topic",
    cacaos_verified: "cacaos_verified",
    store_authenticated_session: "store_authenticated_session",
    subscribing_authenticated_session_topic: "subscribing_authenticated_session_topic",
    subscribe_authenticated_session_topic_success: "subscribe_authenticated_session_topic_success",
    publishing_authenticated_session_approve: "publishing_authenticated_session_approve",
    authenticated_session_approve_publish_success: "authenticated_session_approve_publish_success"
  },
  Ps$1 = {
    no_internet_connection: "no_internet_connection",
    no_wss_connection: "no_wss_connection",
    missing_session_authenticate_request: "missing_session_authenticate_request",
    session_authenticate_request_expired: "session_authenticate_request_expired",
    chains_caip2_compliant_failure: "chains_caip2_compliant_failure",
    chains_evm_compliant_failure: "chains_evm_compliant_failure",
    invalid_cacao: "invalid_cacao",
    subscribe_authenticated_session_topic_failure: "subscribe_authenticated_session_topic_failure",
    authenticated_session_approve_publish_failure: "authenticated_session_approve_publish_failure",
    authenticated_session_pending_request_not_found: "authenticated_session_pending_request_not_found"
  },
  Ct = .1,
  Pt = "event-client",
  St = 86400,
  Rt = "https://pulse.walletconnect.org/batch";
function Ss$1(o, e) {
  if (o.length >= 255) throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), s = 0; s < t.length; s++) t[s] = 255;
  for (var i = 0; i < o.length; i++) {
    var r = o.charAt(i),
      n = r.charCodeAt(0);
    if (t[n] !== 255) throw new TypeError(r + " is ambiguous");
    t[n] = i;
  }
  var a = o.length,
    h = o.charAt(0),
    c = Math.log(a) / Math.log(256),
    l = Math.log(256) / Math.log(a);
  function p(u) {
    if (u instanceof Uint8Array || (ArrayBuffer.isView(u) ? u = new Uint8Array(u.buffer, u.byteOffset, u.byteLength) : Array.isArray(u) && (u = Uint8Array.from(u))), !(u instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (u.length === 0) return "";
    for (var g = 0, _ = 0, y = 0, b = u.length; y !== b && u[y] === 0;) y++, g++;
    for (var A = (b - y) * l + 1 >>> 0, T = new Uint8Array(A); y !== b;) {
      for (var N = u[y], k = 0, R = A - 1; (N !== 0 || k < _) && R !== -1; R--, k++) N += 256 * T[R] >>> 0, T[R] = N % a >>> 0, N = N / a >>> 0;
      if (N !== 0) throw new Error("Non-zero carry");
      _ = k, y++;
    }
    for (var L = A - _; L !== A && T[L] === 0;) L++;
    for (var Q = h.repeat(g); L < A; ++L) Q += o.charAt(T[L]);
    return Q;
  }
  function D(u) {
    if (typeof u != "string") throw new TypeError("Expected String");
    if (u.length === 0) return new Uint8Array();
    var g = 0;
    if (u[g] !== " ") {
      for (var _ = 0, y = 0; u[g] === h;) _++, g++;
      for (var b = (u.length - g) * c + 1 >>> 0, A = new Uint8Array(b); u[g];) {
        var T = t[u.charCodeAt(g)];
        if (T === 255) return;
        for (var N = 0, k = b - 1; (T !== 0 || N < y) && k !== -1; k--, N++) T += a * A[k] >>> 0, A[k] = T % 256 >>> 0, T = T / 256 >>> 0;
        if (T !== 0) throw new Error("Non-zero carry");
        y = N, g++;
      }
      if (u[g] !== " ") {
        for (var R = b - y; R !== b && A[R] === 0;) R++;
        for (var L = new Uint8Array(_ + (b - R)), Q = _; R !== b;) L[Q++] = A[R++];
        return L;
      }
    }
  }
  function m(u) {
    var g = D(u);
    if (g) return g;
    throw new Error("Non-".concat(e, " character"));
  }
  return {
    encode: p,
    decodeUnsafe: D,
    decode: m
  };
}
var Rs$1 = Ss$1,
  xs = Rs$1;
var xt = function xt(o) {
    if (o instanceof Uint8Array && o.constructor.name === "Uint8Array") return o;
    if (o instanceof ArrayBuffer) return new Uint8Array(o);
    if (ArrayBuffer.isView(o)) return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
    throw new Error("Unknown type, must be binary type");
  },
  Os = function Os(o) {
    return new TextEncoder().encode(o);
  },
  As = function As(o) {
    return new TextDecoder().decode(o);
  };
var Ns$1 = /*#__PURE__*/function () {
  function Ns(e, t, s) {
    _classCallCheck(this, Ns);
    this.name = e, this.prefix = t, this.baseEncode = s;
  }
  return _createClass(Ns, [{
    key: "encode",
    value: function encode(e) {
      if (e instanceof Uint8Array) return "".concat(this.prefix).concat(this.baseEncode(e));
      throw Error("Unknown type, must be binary type");
    }
  }]);
}();
var zs = /*#__PURE__*/function () {
  function zs(e, t, s) {
    _classCallCheck(this, zs);
    if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = s;
  }
  return _createClass(zs, [{
    key: "decode",
    value: function decode(e) {
      if (typeof e == "string") {
        if (e.codePointAt(0) !== this.prefixCodePoint) throw Error("Unable to decode multibase string ".concat(JSON.stringify(e), ", ").concat(this.name, " decoder only supports inputs prefixed with ").concat(this.prefix));
        return this.baseDecode(e.slice(this.prefix.length));
      } else throw Error("Can only multibase decode strings");
    }
  }, {
    key: "or",
    value: function or(e) {
      return Ot(this, e);
    }
  }]);
}();
var Ls = /*#__PURE__*/function () {
  function Ls(e) {
    _classCallCheck(this, Ls);
    this.decoders = e;
  }
  return _createClass(Ls, [{
    key: "or",
    value: function or(e) {
      return Ot(this, e);
    }
  }, {
    key: "decode",
    value: function decode(e) {
      var t = e[0],
        s = this.decoders[t];
      if (s) return s.decode(e);
      throw RangeError("Unable to decode multibase string ".concat(JSON.stringify(e), ", only inputs prefixed with ").concat(Object.keys(this.decoders), " are supported"));
    }
  }]);
}();
var Ot = function Ot(o, e) {
  return new Ls(_objectSpread2(_objectSpread2({}, o.decoders || _defineProperty({}, o.prefix, o)), e.decoders || _defineProperty({}, e.prefix, e)));
};
var $s = /*#__PURE__*/function () {
  function $s(e, t, s, i) {
    _classCallCheck(this, $s);
    this.name = e, this.prefix = t, this.baseEncode = s, this.baseDecode = i, this.encoder = new Ns$1(e, t, s), this.decoder = new zs(e, t, i);
  }
  return _createClass($s, [{
    key: "encode",
    value: function encode(e) {
      return this.encoder.encode(e);
    }
  }, {
    key: "decode",
    value: function decode(e) {
      return this.decoder.decode(e);
    }
  }]);
}();
var re = function re(_ref3) {
    var o = _ref3.name,
      e = _ref3.prefix,
      t = _ref3.encode,
      s = _ref3.decode;
    return new $s(o, e, t, s);
  },
  X$1 = function X(_ref4) {
    var o = _ref4.prefix,
      e = _ref4.name,
      t = _ref4.alphabet;
    var _xs = xs(t, e),
      s = _xs.encode,
      i = _xs.decode;
    return re({
      prefix: o,
      name: e,
      encode: s,
      decode: function decode(r) {
        return xt(i(r));
      }
    });
  },
  ks = function ks(o, e, t, s) {
    var i = {};
    for (var l = 0; l < e.length; ++l) i[e[l]] = l;
    var r = o.length;
    for (; o[r - 1] === "=";) --r;
    var n = new Uint8Array(r * t / 8 | 0);
    var a = 0,
      h = 0,
      c = 0;
    for (var _l = 0; _l < r; ++_l) {
      var p = i[o[_l]];
      if (p === void 0) throw new SyntaxError("Non-".concat(s, " character"));
      h = h << t | p, a += t, a >= 8 && (a -= 8, n[c++] = 255 & h >> a);
    }
    if (a >= t || 255 & h << 8 - a) throw new SyntaxError("Unexpected end of data");
    return n;
  },
  Ms = function Ms(o, e, t) {
    var s = e[e.length - 1] === "=",
      i = (1 << t) - 1;
    var r = "",
      n = 0,
      a = 0;
    for (var h = 0; h < o.length; ++h) for (a = a << 8 | o[h], n += 8; n > t;) n -= t, r += e[i & a >> n];
    if (n && (r += e[i & a << t - n]), s) for (; r.length * t & 7;) r += "=";
    return r;
  },
  f$1 = function f(_ref5) {
    var o = _ref5.name,
      e = _ref5.prefix,
      t = _ref5.bitsPerChar,
      s = _ref5.alphabet;
    return re({
      prefix: e,
      name: o,
      encode: function encode(i) {
        return Ms(i, s, t);
      },
      decode: function decode(i) {
        return ks(i, s, t, o);
      }
    });
  },
  Us = re({
    prefix: "\0",
    name: "identity",
    encode: function encode(o) {
      return As(o);
    },
    decode: function decode(o) {
      return Os(o);
    }
  });
var Fs = Object.freeze({
  __proto__: null,
  identity: Us
});
var Ks = f$1({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});
var Bs = Object.freeze({
  __proto__: null,
  base2: Ks
});
var Vs = f$1({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});
var js = Object.freeze({
  __proto__: null,
  base8: Vs
});
var qs$1 = X$1({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});
var Gs = Object.freeze({
  __proto__: null,
  base10: qs$1
});
var Hs = f$1({
    prefix: "f",
    name: "base16",
    alphabet: "0123456789abcdef",
    bitsPerChar: 4
  }),
  Ys = f$1({
    prefix: "F",
    name: "base16upper",
    alphabet: "0123456789ABCDEF",
    bitsPerChar: 4
  });
var Js = Object.freeze({
  __proto__: null,
  base16: Hs,
  base16upper: Ys
});
var Xs = f$1({
    prefix: "b",
    name: "base32",
    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
    bitsPerChar: 5
  }),
  Ws = f$1({
    prefix: "B",
    name: "base32upper",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
    bitsPerChar: 5
  }),
  Zs = f$1({
    prefix: "c",
    name: "base32pad",
    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
    bitsPerChar: 5
  }),
  Qs = f$1({
    prefix: "C",
    name: "base32padupper",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
    bitsPerChar: 5
  }),
  er = f$1({
    prefix: "v",
    name: "base32hex",
    alphabet: "0123456789abcdefghijklmnopqrstuv",
    bitsPerChar: 5
  }),
  tr = f$1({
    prefix: "V",
    name: "base32hexupper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
    bitsPerChar: 5
  }),
  ir = f$1({
    prefix: "t",
    name: "base32hexpad",
    alphabet: "0123456789abcdefghijklmnopqrstuv=",
    bitsPerChar: 5
  }),
  sr = f$1({
    prefix: "T",
    name: "base32hexpadupper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
    bitsPerChar: 5
  }),
  rr = f$1({
    prefix: "h",
    name: "base32z",
    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
    bitsPerChar: 5
  });
var nr = Object.freeze({
  __proto__: null,
  base32: Xs,
  base32upper: Ws,
  base32pad: Zs,
  base32padupper: Qs,
  base32hex: er,
  base32hexupper: tr,
  base32hexpad: ir,
  base32hexpadupper: sr,
  base32z: rr
});
var or = X$1({
    prefix: "k",
    name: "base36",
    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
  }),
  ar = X$1({
    prefix: "K",
    name: "base36upper",
    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  });
var hr = Object.freeze({
  __proto__: null,
  base36: or,
  base36upper: ar
});
var cr = X$1({
    name: "base58btc",
    prefix: "z",
    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
  }),
  lr = X$1({
    name: "base58flickr",
    prefix: "Z",
    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
  });
var ur = Object.freeze({
  __proto__: null,
  base58btc: cr,
  base58flickr: lr
});
var dr = f$1({
    prefix: "m",
    name: "base64",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    bitsPerChar: 6
  }),
  pr = f$1({
    prefix: "M",
    name: "base64pad",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    bitsPerChar: 6
  }),
  gr = f$1({
    prefix: "u",
    name: "base64url",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
    bitsPerChar: 6
  }),
  yr = f$1({
    prefix: "U",
    name: "base64urlpad",
    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
    bitsPerChar: 6
  });
var Dr = Object.freeze({
  __proto__: null,
  base64: dr,
  base64pad: pr,
  base64url: gr,
  base64urlpad: yr
});
var At = Array.from("\uD83D\uDE80\uD83E\uDE90\u2604\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09\u2600\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02\u2764\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09\u263A\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E\u270C\u2728\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D\u2763\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33\u270B\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13\u2B50\u2705\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6\u2714\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90\u2639\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20\u261D\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B\u26BD\uD83E\uDD19\u2615\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81\u26A1\uD83C\uDF1E\uD83C\uDF88\u274C\u270A\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C\u2708\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74\u25B6\u27A1\u2753\uD83D\uDC8E\uD83D\uDCB8\u2B07\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A\u26A0\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37\u260E\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51\u2744\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"),
  mr = At.reduce(function (o, e, t) {
    return o[t] = e, o;
  }, []),
  br = At.reduce(function (o, e, t) {
    return o[e.codePointAt(0)] = t, o;
  }, []);
function fr(o) {
  return o.reduce(function (e, t) {
    return e += mr[t], e;
  }, "");
}
function _r(o) {
  var e = [];
  var _iterator = _createForOfIteratorHelper(o),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var t = _step.value;
      var s = br[t.codePointAt(0)];
      if (s === void 0) throw new Error("Non-base256emoji character: ".concat(t));
      e.push(s);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return new Uint8Array(e);
}
var Er = re({
  prefix: "\uD83D\uDE80",
  name: "base256emoji",
  encode: fr,
  decode: _r
});
var vr = Object.freeze({
    __proto__: null,
    base256emoji: Er
  }),
  wr = zt,
  Nt = 128,
  Ir = 127,
  Tr = ~Ir,
  Cr = Math.pow(2, 31);
function zt(o, e, t) {
  e = e || [], t = t || 0;
  for (var s = t; o >= Cr;) e[t++] = o & 255 | Nt, o /= 128;
  for (; o & Tr;) e[t++] = o & 255 | Nt, o >>>= 7;
  return e[t] = o | 0, zt.bytes = t - s + 1, e;
}
var Pr = _e$1,
  Sr = 128,
  Lt = 127;
function _e$1(o, s) {
  var t = 0,
    s = s || 0,
    i = 0,
    r = s,
    n,
    a = o.length;
  do {
    if (r >= a) throw _e$1.bytes = 0, new RangeError("Could not decode varint");
    n = o[r++], t += i < 28 ? (n & Lt) << i : (n & Lt) * Math.pow(2, i), i += 7;
  } while (n >= Sr);
  return _e$1.bytes = r - s, t;
}
var Rr = Math.pow(2, 7),
  xr = Math.pow(2, 14),
  Or = Math.pow(2, 21),
  Ar = Math.pow(2, 28),
  Nr = Math.pow(2, 35),
  zr = Math.pow(2, 42),
  Lr = Math.pow(2, 49),
  $r = Math.pow(2, 56),
  kr = Math.pow(2, 63),
  Mr = function Mr(o) {
    return o < Rr ? 1 : o < xr ? 2 : o < Or ? 3 : o < Ar ? 4 : o < Nr ? 5 : o < zr ? 6 : o < Lr ? 7 : o < $r ? 8 : o < kr ? 9 : 10;
  },
  Ur = {
    encode: wr,
    decode: Pr,
    encodingLength: Mr
  },
  $t = Ur;
var kt = function kt(o, e) {
    var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    return $t.encode(o, e, t), e;
  },
  Mt = function Mt(o) {
    return $t.encodingLength(o);
  },
  Ee = function Ee(o, e) {
    var t = e.byteLength,
      s = Mt(o),
      i = s + Mt(t),
      r = new Uint8Array(i + t);
    return kt(o, r, 0), kt(t, r, s), r.set(e, i), new Fr(o, t, e, r);
  };
var Fr = /*#__PURE__*/_createClass(function Fr(e, t, s, i) {
  _classCallCheck(this, Fr);
  this.code = e, this.size = t, this.digest = s, this.bytes = i;
});
var Ut = function Ut(_ref6) {
  var o = _ref6.name,
    e = _ref6.code,
    t = _ref6.encode;
  return new Kr(o, e, t);
};
var Kr = /*#__PURE__*/function () {
  function Kr(e, t, s) {
    _classCallCheck(this, Kr);
    this.name = e, this.code = t, this.encode = s;
  }
  return _createClass(Kr, [{
    key: "digest",
    value: function digest(e) {
      var _this = this;
      if (e instanceof Uint8Array) {
        var t = this.encode(e);
        return t instanceof Uint8Array ? Ee(this.code, t) : t.then(function (s) {
          return Ee(_this.code, s);
        });
      } else throw Error("Unknown type, must be binary type");
    }
  }]);
}();
var Ft = function Ft(o) {
    return /*#__PURE__*/function () {
      var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.t0 = Uint8Array;
              _context.next = 3;
              return crypto.subtle.digest(o, e);
            case 3:
              _context.t1 = _context.sent;
              return _context.abrupt("return", new _context.t0(_context.t1));
            case 5:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref7.apply(this, arguments);
      };
    }();
  },
  Br = Ut({
    name: "sha2-256",
    code: 18,
    encode: Ft("SHA-256")
  }),
  Vr = Ut({
    name: "sha2-512",
    code: 19,
    encode: Ft("SHA-512")
  });
var jr = Object.freeze({
  __proto__: null,
  sha256: Br,
  sha512: Vr
});
var Kt = 0,
  qr = "identity",
  Bt = xt,
  Gr = function Gr(o) {
    return Ee(Kt, Bt(o));
  },
  Hr = {
    code: Kt,
    name: qr,
    encode: Bt,
    digest: Gr
  };
var Yr = Object.freeze({
  __proto__: null,
  identity: Hr
});
new TextEncoder(), new TextDecoder();
var Vt = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, Fs), Bs), js), Gs), Js), nr), hr), ur), Dr), vr);
_objectSpread2(_objectSpread2({}, jr), Yr);
function Jr() {
  var o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(o) : new Uint8Array(o);
}
function jt(o, e, t, s) {
  return {
    name: o,
    prefix: e,
    encoder: {
      name: o,
      prefix: e,
      encode: t
    },
    decoder: {
      decode: s
    }
  };
}
var qt = jt("utf8", "u", function (o) {
    return "u" + new TextDecoder("utf8").decode(o);
  }, function (o) {
    return new TextEncoder().encode(o.substring(1));
  }),
  ve = jt("ascii", "a", function (o) {
    var e = "a";
    for (var t = 0; t < o.length; t++) e += String.fromCharCode(o[t]);
    return e;
  }, function (o) {
    o = o.substring(1);
    var e = Jr(o.length);
    for (var t = 0; t < o.length; t++) e[t] = o.charCodeAt(t);
    return e;
  }),
  Xr = _objectSpread2({
    utf8: qt,
    "utf-8": qt,
    hex: Vt.base16,
    latin1: ve,
    ascii: ve,
    binary: ve
  }, Vt);
function Wr(o) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "utf8";
  var t = Xr[e];
  if (!t) throw new Error("Unsupported encoding \"".concat(e, "\""));
  return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(o, "utf8") : t.decoder.decode("".concat(t.prefix).concat(o));
}
var Gt = /*#__PURE__*/function () {
  function Gt(e, t) {
    var _this2 = this;
    _classCallCheck(this, Gt);
    this.core = e, this.logger = t, this.keychain = new Map(), this.name = Ze, this.version = Qe, this.initialized = !1, this.storagePrefix = x$2, this.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      var s;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            if (_this2.initialized) {
              _context2.next = 5;
              break;
            }
            _context2.next = 3;
            return _this2.getKeyChain();
          case 3:
            s = _context2.sent;
            _typeof(s) < "u" && (_this2.keychain = s), _this2.initialized = !0;
          case 5:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    })), this.has = function (s) {
      return _this2.isInitialized(), _this2.keychain.has(s);
    }, this.set = /*#__PURE__*/function () {
      var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(s, i) {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _this2.isInitialized();
              _this2.keychain.set(s, i);
              _context3.next = 4;
              return _this2.persist();
            case 4:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      return function (_x2, _x3) {
        return _ref9.apply(this, arguments);
      };
    }(), this.get = function (s) {
      _this2.isInitialized();
      var i = _this2.keychain.get(s);
      if (_typeof(i) > "u") {
        var _d = S$2("NO_MATCHING_KEY", "".concat(_this2.name, ": ").concat(s)),
          r = _d.message;
        throw new Error(r);
      }
      return i;
    }, this.del = /*#__PURE__*/function () {
      var _ref10 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(s) {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _this2.isInitialized();
              _this2.keychain["delete"](s);
              _context4.next = 4;
              return _this2.persist();
            case 4:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
      return function (_x4) {
        return _ref10.apply(this, arguments);
      };
    }(), this.core = e, this.logger = E$4(t, this.name);
  }
  return _createClass(Gt, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "setKeyChain",
    value: function () {
      var _setKeyChain = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e) {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return this.core.storage.setItem(this.storageKey, Tt$1(e));
            case 2:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function setKeyChain(_x5) {
        return _setKeyChain.apply(this, arguments);
      }
      return setKeyChain;
    }()
  }, {
    key: "getKeyChain",
    value: function () {
      var _getKeyChain = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
        var e;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              e = _context6.sent;
              return _context6.abrupt("return", _typeof(e) < "u" ? Pt$1(e) : void 0);
            case 4:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function getKeyChain() {
        return _getKeyChain.apply(this, arguments);
      }
      return getKeyChain;
    }()
  }, {
    key: "persist",
    value: function () {
      var _persist = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return this.setKeyChain(this.keychain);
            case 2:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function persist() {
        return _persist.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d2 = S$2("NOT_INITIALIZED", this.name),
          e = _d2.message;
        throw new Error(e);
      }
    }
  }]);
}();
var Ht = /*#__PURE__*/function () {
  function Ht(e, t, s) {
    var _this3 = this;
    _classCallCheck(this, Ht);
    this.core = e, this.logger = t, this.name = Xe, this.randomSessionIdentifier = pr$1(), this.initialized = !1, this.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
      return _regeneratorRuntime().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            _context8.t0 = _this3.initialized;
            if (_context8.t0) {
              _context8.next = 5;
              break;
            }
            _context8.next = 4;
            return _this3.keychain.init();
          case 4:
            _this3.initialized = !0;
          case 5:
          case "end":
            return _context8.stop();
        }
      }, _callee8);
    })), this.hasKeys = function (i) {
      return _this3.isInitialized(), _this3.keychain.has(i);
    }, this.getClientId = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
      var i, r;
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            _this3.isInitialized();
            _context9.next = 3;
            return _this3.getClientSeed();
          case 3:
            i = _context9.sent;
            r = generateKeyPair(i);
            return _context9.abrupt("return", encodeIss(r.publicKey));
          case 6:
          case "end":
            return _context9.stop();
        }
      }, _callee9);
    })), this.generateKeyPair = function () {
      _this3.isInitialized();
      var i = fr$1();
      return _this3.setPrivateKey(i.publicKey, i.privateKey);
    }, this.signJWT = /*#__PURE__*/function () {
      var _ref13 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(i) {
        var r, n, a, h;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              _this3.isInitialized();
              _context10.next = 3;
              return _this3.getClientSeed();
            case 3:
              r = _context10.sent;
              n = generateKeyPair(r);
              a = _this3.randomSessionIdentifier;
              h = We;
              _context10.next = 9;
              return signJWT(a, i, h, n);
            case 9:
              return _context10.abrupt("return", _context10.sent);
            case 10:
            case "end":
              return _context10.stop();
          }
        }, _callee10);
      }));
      return function (_x6) {
        return _ref13.apply(this, arguments);
      };
    }(), this.generateSharedKey = function (i, r, n) {
      _this3.isInitialized();
      var a = _this3.getPrivateKey(i),
        h = mr$1(a, r);
      return _this3.setSymKey(h, n);
    }, this.setSymKey = /*#__PURE__*/function () {
      var _ref14 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(i, r) {
        var n;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              _this3.isInitialized();
              n = r || hr$1(i);
              _context11.next = 4;
              return _this3.keychain.set(n, i);
            case 4:
              return _context11.abrupt("return", n);
            case 5:
            case "end":
              return _context11.stop();
          }
        }, _callee11);
      }));
      return function (_x7, _x8) {
        return _ref14.apply(this, arguments);
      };
    }(), this.deleteKeyPair = /*#__PURE__*/function () {
      var _ref15 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(i) {
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              _this3.isInitialized();
              _context12.next = 3;
              return _this3.keychain.del(i);
            case 3:
            case "end":
              return _context12.stop();
          }
        }, _callee12);
      }));
      return function (_x9) {
        return _ref15.apply(this, arguments);
      };
    }(), this.deleteSymKey = /*#__PURE__*/function () {
      var _ref16 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(i) {
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              _this3.isInitialized();
              _context13.next = 3;
              return _this3.keychain.del(i);
            case 3:
            case "end":
              return _context13.stop();
          }
        }, _callee13);
      }));
      return function (_x10) {
        return _ref16.apply(this, arguments);
      };
    }(), this.encode = /*#__PURE__*/function () {
      var _ref17 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(i, r, n) {
        var a, h, D, m, c, l, p;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              _this3.isInitialized();
              a = On(n), h = safeJsonStringify(r);
              if (!Nr$1(a)) {
                _context14.next = 4;
                break;
              }
              return _context14.abrupt("return", vr$1(h, n === null || n === void 0 ? void 0 : n.encoding));
            case 4:
              if (!Or$1(a)) {
                _context14.next = 9;
                break;
              }
              D = a.senderPublicKey, m = a.receiverPublicKey;
              _context14.next = 8;
              return _this3.generateSharedKey(D, m);
            case 8:
              i = _context14.sent;
            case 9:
              c = _this3.getSymKey(i), l = a.type, p = a.senderPublicKey;
              return _context14.abrupt("return", gr$1({
                type: l,
                symKey: c,
                message: h,
                senderPublicKey: p,
                encoding: n === null || n === void 0 ? void 0 : n.encoding
              }));
            case 11:
            case "end":
              return _context14.stop();
          }
        }, _callee14);
      }));
      return function (_x11, _x12, _x13) {
        return _ref17.apply(this, arguments);
      };
    }(), this.decode = /*#__PURE__*/function () {
      var _ref18 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(i, r, n) {
        var a, h, _h, c, _h2, _c;
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              _this3.isInitialized();
              a = wr$1(r, n);
              if (!Nr$1(a)) {
                _context15.next = 5;
                break;
              }
              h = Er$1(r, n === null || n === void 0 ? void 0 : n.encoding);
              return _context15.abrupt("return", safeJsonParse(h));
            case 5:
              if (!Or$1(a)) {
                _context15.next = 10;
                break;
              }
              _h = a.receiverPublicKey, c = a.senderPublicKey;
              _context15.next = 9;
              return _this3.generateSharedKey(_h, c);
            case 9:
              i = _context15.sent;
            case 10:
              _context15.prev = 10;
              _h2 = _this3.getSymKey(i), _c = br$1({
                symKey: _h2,
                encoded: r,
                encoding: n === null || n === void 0 ? void 0 : n.encoding
              });
              return _context15.abrupt("return", safeJsonParse(_c));
            case 15:
              _context15.prev = 15;
              _context15.t0 = _context15["catch"](10);
              _context15.t1 = _this3.logger;
              _context15.t2 = "Failed to decode message from topic: '".concat(i, "', clientId: '");
              _context15.next = 21;
              return _this3.getClientId();
            case 21:
              _context15.t3 = _context15.sent;
              _context15.t4 = _context15.t2.concat.call(_context15.t2, _context15.t3, "'");
              _context15.t1.error.call(_context15.t1, _context15.t4);
              _this3.logger.error(_context15.t0);
            case 25:
            case "end":
              return _context15.stop();
          }
        }, _callee15, null, [[10, 15]]);
      }));
      return function (_x14, _x15, _x16) {
        return _ref18.apply(this, arguments);
      };
    }(), this.getPayloadType = function (i) {
      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ge;
      var n = Q$1({
        encoded: i,
        encoding: r
      });
      return A$1(n.type);
    }, this.getPayloadSenderPublicKey = function (i) {
      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ge;
      var n = Q$1({
        encoded: i,
        encoding: r
      });
      return n.senderPublicKey ? toString(n.senderPublicKey, g$1) : void 0;
    }, this.core = e, this.logger = E$4(t, this.name), this.keychain = s || new Gt(this.core, this.logger);
  }
  return _createClass(Ht, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "setPrivateKey",
    value: function () {
      var _setPrivateKey = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(e, t) {
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return this.keychain.set(e, t);
            case 2:
              return _context16.abrupt("return", e);
            case 3:
            case "end":
              return _context16.stop();
          }
        }, _callee16, this);
      }));
      function setPrivateKey(_x17, _x18) {
        return _setPrivateKey.apply(this, arguments);
      }
      return setPrivateKey;
    }()
  }, {
    key: "getPrivateKey",
    value: function getPrivateKey(e) {
      return this.keychain.get(e);
    }
  }, {
    key: "getClientSeed",
    value: function () {
      var _getClientSeed = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
        var e;
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              e = "";
              _context17.prev = 1;
              e = this.keychain.get(me$1);
              _context17.next = 10;
              break;
            case 5:
              _context17.prev = 5;
              _context17.t0 = _context17["catch"](1);
              e = pr$1();
              _context17.next = 10;
              return this.keychain.set(me$1, e);
            case 10:
              return _context17.abrupt("return", Wr(e, "base16"));
            case 11:
            case "end":
              return _context17.stop();
          }
        }, _callee17, this, [[1, 5]]);
      }));
      function getClientSeed() {
        return _getClientSeed.apply(this, arguments);
      }
      return getClientSeed;
    }()
  }, {
    key: "getSymKey",
    value: function getSymKey(e) {
      return this.keychain.get(e);
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d3 = S$2("NOT_INITIALIZED", this.name),
          e = _d3.message;
        throw new Error(e);
      }
    }
  }]);
}();
var Yt = /*#__PURE__*/function (_vi) {
  function Yt(e, t) {
    var _this4;
    _classCallCheck(this, Yt);
    _this4 = _callSuper(this, Yt, [e, t]), _this4.logger = e, _this4.core = t, _this4.messages = new Map(), _this4.name = et, _this4.version = tt, _this4.initialized = !1, _this4.storagePrefix = x$2, _this4.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {
      var s;
      return _regeneratorRuntime().wrap(function _callee18$(_context18) {
        while (1) switch (_context18.prev = _context18.next) {
          case 0:
            if (_this4.initialized) {
              _context18.next = 15;
              break;
            }
            _this4.logger.trace("Initialized");
            _context18.prev = 2;
            _context18.next = 5;
            return _this4.getRelayerMessages();
          case 5:
            s = _context18.sent;
            _typeof(s) < "u" && (_this4.messages = s), _this4.logger.debug("Successfully Restored records for ".concat(_this4.name)), _this4.logger.trace({
              type: "method",
              method: "restore",
              size: _this4.messages.size
            });
            _context18.next = 12;
            break;
          case 9:
            _context18.prev = 9;
            _context18.t0 = _context18["catch"](2);
            _this4.logger.debug("Failed to Restore records for ".concat(_this4.name)), _this4.logger.error(_context18.t0);
          case 12:
            _context18.prev = 12;
            _this4.initialized = !0;
            return _context18.finish(12);
          case 15:
          case "end":
            return _context18.stop();
        }
      }, _callee18, null, [[2, 9, 12, 15]]);
    })), _this4.set = /*#__PURE__*/function () {
      var _ref20 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(s, i) {
        var r, n;
        return _regeneratorRuntime().wrap(function _callee19$(_context19) {
          while (1) switch (_context19.prev = _context19.next) {
            case 0:
              _this4.isInitialized();
              r = yr$1(i);
              n = _this4.messages.get(s);
              _typeof(n) > "u" && (n = {});
              _context19.t0 = _typeof(n[r]) < "u";
              if (_context19.t0) {
                _context19.next = 10;
                break;
              }
              n[r] = i;
              _this4.messages.set(s, n);
              _context19.next = 10;
              return _this4.persist();
            case 10:
              return _context19.abrupt("return", r);
            case 11:
            case "end":
              return _context19.stop();
          }
        }, _callee19);
      }));
      return function (_x19, _x20) {
        return _ref20.apply(this, arguments);
      };
    }(), _this4.get = function (s) {
      _this4.isInitialized();
      var i = _this4.messages.get(s);
      return _typeof(i) > "u" && (i = {}), i;
    }, _this4.has = function (s, i) {
      _this4.isInitialized();
      var r = _this4.get(s),
        n = yr$1(i);
      return _typeof(r[n]) < "u";
    }, _this4.del = /*#__PURE__*/function () {
      var _ref21 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(s) {
        return _regeneratorRuntime().wrap(function _callee20$(_context20) {
          while (1) switch (_context20.prev = _context20.next) {
            case 0:
              _this4.isInitialized();
              _this4.messages["delete"](s);
              _context20.next = 4;
              return _this4.persist();
            case 4:
            case "end":
              return _context20.stop();
          }
        }, _callee20);
      }));
      return function (_x21) {
        return _ref21.apply(this, arguments);
      };
    }(), _this4.logger = E$4(e, _this4.name), _this4.core = t;
    return _this4;
  }
  _inherits(Yt, _vi);
  return _createClass(Yt, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "setRelayerMessages",
    value: function () {
      var _setRelayerMessages = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21(e) {
        return _regeneratorRuntime().wrap(function _callee21$(_context21) {
          while (1) switch (_context21.prev = _context21.next) {
            case 0:
              _context21.next = 2;
              return this.core.storage.setItem(this.storageKey, Tt$1(e));
            case 2:
            case "end":
              return _context21.stop();
          }
        }, _callee21, this);
      }));
      function setRelayerMessages(_x22) {
        return _setRelayerMessages.apply(this, arguments);
      }
      return setRelayerMessages;
    }()
  }, {
    key: "getRelayerMessages",
    value: function () {
      var _getRelayerMessages = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {
        var e;
        return _regeneratorRuntime().wrap(function _callee22$(_context22) {
          while (1) switch (_context22.prev = _context22.next) {
            case 0:
              _context22.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              e = _context22.sent;
              return _context22.abrupt("return", _typeof(e) < "u" ? Pt$1(e) : void 0);
            case 4:
            case "end":
              return _context22.stop();
          }
        }, _callee22, this);
      }));
      function getRelayerMessages() {
        return _getRelayerMessages.apply(this, arguments);
      }
      return getRelayerMessages;
    }()
  }, {
    key: "persist",
    value: function () {
      var _persist2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {
        return _regeneratorRuntime().wrap(function _callee23$(_context23) {
          while (1) switch (_context23.prev = _context23.next) {
            case 0:
              _context23.next = 2;
              return this.setRelayerMessages(this.messages);
            case 2:
            case "end":
              return _context23.stop();
          }
        }, _callee23, this);
      }));
      function persist() {
        return _persist2.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d4 = S$2("NOT_INITIALIZED", this.name),
          e = _d4.message;
        throw new Error(e);
      }
    }
  }]);
}(a);
var Zr = /*#__PURE__*/function (_wi) {
  function Zr(e, t) {
    var _this5;
    _classCallCheck(this, Zr);
    _this5 = _callSuper(this, Zr, [e, t]), _this5.relayer = e, _this5.logger = t, _this5.events = new eventsExports.EventEmitter(), _this5.name = st$1, _this5.queue = new Map(), _this5.publishTimeout = cjs$3.toMiliseconds(cjs$3.ONE_MINUTE), _this5.failedPublishTimeout = cjs$3.toMiliseconds(cjs$3.ONE_SECOND), _this5.needsTransportRestart = !1, _this5.publish = /*#__PURE__*/function () {
      var _ref22 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee24(s, i, r) {
        var n, a, h, c, l, p, D, m, u, g, _;
        return _regeneratorRuntime().wrap(function _callee24$(_context24) {
          while (1) switch (_context24.prev = _context24.next) {
            case 0:
              _this5.logger.debug("Publishing Payload"), _this5.logger.trace({
                type: "method",
                method: "publish",
                params: {
                  topic: s,
                  message: i,
                  opts: r
                }
              });
              a = (r === null || r === void 0 ? void 0 : r.ttl) || it$1, h = Ir$1(r), c = (r === null || r === void 0 ? void 0 : r.prompt) || !1, l = (r === null || r === void 0 ? void 0 : r.tag) || 0, p = (r === null || r === void 0 ? void 0 : r.id) || getBigIntRpcId().toString(), D = {
                topic: s,
                message: i,
                opts: {
                  ttl: a,
                  relay: h,
                  prompt: c,
                  tag: l,
                  id: p,
                  attestation: r === null || r === void 0 ? void 0 : r.attestation
                }
              }, m = "Failed to publish payload, please try again. id:".concat(p, " tag:").concat(l), u = Date.now();
              _ = 1;
              _context24.prev = 3;
            case 4:
              if (!(g === void 0)) {
                _context24.next = 20;
                break;
              }
              if (!(Date.now() - u > _this5.publishTimeout)) {
                _context24.next = 7;
                break;
              }
              throw new Error(m);
            case 7:
              _this5.logger.trace({
                id: p,
                attempts: _
              }, "publisher.publish - attempt ".concat(_));
              _context24.next = 10;
              return kt$1(_this5.rpcPublish(s, i, a, h, c, l, p, r === null || r === void 0 ? void 0 : r.attestation)["catch"](function (y) {
                return _this5.logger.warn(y);
              }), _this5.publishTimeout, m);
            case 10:
              _context24.next = 12;
              return _context24.sent;
            case 12:
              g = _context24.sent;
              _++;
              _context24.t0 = g;
              if (_context24.t0) {
                _context24.next = 18;
                break;
              }
              _context24.next = 18;
              return new Promise(function (y) {
                return setTimeout(y, _this5.failedPublishTimeout);
              });
            case 18:
              _context24.next = 4;
              break;
            case 20:
              _this5.relayer.events.emit(v$2.publish, D), _this5.logger.debug("Successfully Published Payload"), _this5.logger.trace({
                type: "method",
                method: "publish",
                params: {
                  id: p,
                  topic: s,
                  message: i,
                  opts: r
                }
              });
              _context24.next = 28;
              break;
            case 23:
              _context24.prev = 23;
              _context24.t1 = _context24["catch"](3);
              if (!(_this5.logger.debug("Failed to Publish Payload"), _this5.logger.error(_context24.t1), (n = r === null || r === void 0 ? void 0 : r.internal) != null && n.throwOnFailedPublish)) {
                _context24.next = 27;
                break;
              }
              throw _context24.t1;
            case 27:
              _this5.queue.set(p, D);
            case 28:
            case "end":
              return _context24.stop();
          }
        }, _callee24, null, [[3, 23]]);
      }));
      return function (_x23, _x24, _x25) {
        return _ref22.apply(this, arguments);
      };
    }(), _this5.on = function (s, i) {
      _this5.events.on(s, i);
    }, _this5.once = function (s, i) {
      _this5.events.once(s, i);
    }, _this5.off = function (s, i) {
      _this5.events.off(s, i);
    }, _this5.removeListener = function (s, i) {
      _this5.events.removeListener(s, i);
    }, _this5.relayer = e, _this5.logger = E$4(t, _this5.name), _this5.registerEventListeners();
    return _this5;
  }
  _inherits(Zr, _wi);
  return _createClass(Zr, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "rpcPublish",
    value: function rpcPublish(e, t, s, i, r, n, a, h) {
      var c, l, p, D;
      var m = {
        method: jr$1(i.protocol).publish,
        params: {
          topic: e,
          message: t,
          ttl: s,
          prompt: r,
          tag: n,
          attestation: h
        },
        id: a
      };
      return I$2((c = m.params) == null ? void 0 : c.prompt) && ((l = m.params) == null || delete l.prompt), I$2((p = m.params) == null ? void 0 : p.tag) && ((D = m.params) == null || delete D.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
        type: "message",
        direction: "outgoing",
        request: m
      }), this.relayer.request(m);
    }
  }, {
    key: "removeRequestFromQueue",
    value: function removeRequestFromQueue(e) {
      this.queue["delete"](e);
    }
  }, {
    key: "checkQueue",
    value: function checkQueue() {
      var _this6 = this;
      this.queue.forEach(/*#__PURE__*/function () {
        var _ref23 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee25(e) {
          var t, s, i;
          return _regeneratorRuntime().wrap(function _callee25$(_context25) {
            while (1) switch (_context25.prev = _context25.next) {
              case 0:
                t = e.topic, s = e.message, i = e.opts;
                _context25.next = 3;
                return _this6.publish(t, s, i);
              case 3:
              case "end":
                return _context25.stop();
            }
          }, _callee25);
        }));
        return function (_x26) {
          return _ref23.apply(this, arguments);
        };
      }());
    }
  }, {
    key: "registerEventListeners",
    value: function registerEventListeners() {
      var _this7 = this;
      this.relayer.core.heartbeat.on(r$4.pulse, function () {
        if (_this7.needsTransportRestart) {
          _this7.needsTransportRestart = !1, _this7.relayer.events.emit(v$2.connection_stalled);
          return;
        }
        _this7.checkQueue();
      }), this.relayer.on(v$2.message_ack, function (e) {
        _this7.removeRequestFromQueue(e.id.toString());
      });
    }
  }]);
}(g$2);
var Qr = /*#__PURE__*/function () {
  function Qr() {
    var _this8 = this;
    _classCallCheck(this, Qr);
    this.map = new Map(), this.set = function (e, t) {
      var s = _this8.get(e);
      _this8.exists(e, t) || _this8.map.set(e, [].concat(_toConsumableArray(s), [t]));
    }, this.get = function (e) {
      return _this8.map.get(e) || [];
    }, this.exists = function (e, t) {
      return _this8.get(e).includes(t);
    }, this["delete"] = function (e, t) {
      if (_typeof(t) > "u") {
        _this8.map["delete"](e);
        return;
      }
      if (!_this8.map.has(e)) return;
      var s = _this8.get(e);
      if (!_this8.exists(e, t)) return;
      var i = s.filter(function (r) {
        return r !== t;
      });
      if (!i.length) {
        _this8.map["delete"](e);
        return;
      }
      _this8.map.set(e, i);
    }, this.clear = function () {
      _this8.map.clear();
    };
  }
  return _createClass(Qr, [{
    key: "topics",
    get: function get() {
      return Array.from(this.map.keys());
    }
  }]);
}();
var en = Object.defineProperty,
  tn = Object.defineProperties,
  sn = Object.getOwnPropertyDescriptors,
  Jt = Object.getOwnPropertySymbols,
  rn = Object.prototype.hasOwnProperty,
  nn = Object.prototype.propertyIsEnumerable,
  Xt = function Xt(o, e, t) {
    return e in o ? en(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  W = function W(o, e) {
    for (var t in e || (e = {})) rn.call(e, t) && Xt(o, t, e[t]);
    if (Jt) {
      var _iterator2 = _createForOfIteratorHelper(Jt(e)),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var t = _step2.value;
          nn.call(e, t) && Xt(o, t, e[t]);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    return o;
  },
  we$1 = function we(o, e) {
    return tn(o, sn(e));
  };
var Wt = /*#__PURE__*/function (_Ii) {
  function Wt(e, t) {
    var _this9;
    _classCallCheck(this, Wt);
    _this9 = _callSuper(this, Wt, [e, t]), _this9.relayer = e, _this9.logger = t, _this9.subscriptions = new Map(), _this9.topicMap = new Qr(), _this9.events = new eventsExports.EventEmitter(), _this9.name = ut$1, _this9.version = dt$1, _this9.pending = new Map(), _this9.cached = [], _this9.initialized = !1, _this9.pendingSubscriptionWatchLabel = "pending_sub_watch_label", _this9.pollingInterval = 20, _this9.storagePrefix = x$2, _this9.subscribeTimeout = cjs$3.toMiliseconds(cjs$3.ONE_MINUTE), _this9.restartInProgress = !1, _this9.batchSubscribeTopicsLimit = 500, _this9.pendingBatchMessages = [], _this9.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {
      return _regeneratorRuntime().wrap(function _callee26$(_context26) {
        while (1) switch (_context26.prev = _context26.next) {
          case 0:
            _context26.t0 = _this9.initialized;
            if (_context26.t0) {
              _context26.next = 9;
              break;
            }
            _this9.logger.trace("Initialized");
            _this9.registerEventListeners();
            _context26.next = 6;
            return _this9.relayer.core.crypto.getClientId();
          case 6:
            _this9.clientId = _context26.sent;
            _context26.next = 9;
            return _this9.restore();
          case 9:
            _this9.initialized = !0;
          case 10:
          case "end":
            return _context26.stop();
        }
      }, _callee26);
    })), _this9.subscribe = /*#__PURE__*/function () {
      var _ref25 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee27(s, i) {
        var r, n, a;
        return _regeneratorRuntime().wrap(function _callee27$(_context27) {
          while (1) switch (_context27.prev = _context27.next) {
            case 0:
              _this9.isInitialized(), _this9.logger.debug("Subscribing Topic"), _this9.logger.trace({
                type: "method",
                method: "subscribe",
                params: {
                  topic: s,
                  opts: i
                }
              });
              _context27.prev = 1;
              r = Ir$1(i), n = {
                topic: s,
                relay: r,
                transportType: i === null || i === void 0 ? void 0 : i.transportType
              };
              _this9.pending.set(s, n);
              _context27.next = 6;
              return _this9.rpcSubscribe(s, r, i);
            case 6:
              a = _context27.sent;
              return _context27.abrupt("return", (typeof a == "string" && (_this9.onSubscribe(a, n), _this9.logger.debug("Successfully Subscribed Topic"), _this9.logger.trace({
                type: "method",
                method: "subscribe",
                params: {
                  topic: s,
                  opts: i
                }
              })), a));
            case 10:
              _context27.prev = 10;
              _context27.t0 = _context27["catch"](1);
              throw _this9.logger.debug("Failed to Subscribe Topic"), _this9.logger.error(_context27.t0), _context27.t0;
            case 13:
            case "end":
              return _context27.stop();
          }
        }, _callee27, null, [[1, 10]]);
      }));
      return function (_x27, _x28) {
        return _ref25.apply(this, arguments);
      };
    }(), _this9.unsubscribe = /*#__PURE__*/function () {
      var _ref26 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee28(s, i) {
        return _regeneratorRuntime().wrap(function _callee28$(_context28) {
          while (1) switch (_context28.prev = _context28.next) {
            case 0:
              _context28.next = 2;
              return _this9.restartToComplete();
            case 2:
              _this9.isInitialized();
              if (!(_typeof(i === null || i === void 0 ? void 0 : i.id) < "u")) {
                _context28.next = 8;
                break;
              }
              _context28.next = 6;
              return _this9.unsubscribeById(s, i.id, i);
            case 6:
              _context28.next = 10;
              break;
            case 8:
              _context28.next = 10;
              return _this9.unsubscribeByTopic(s, i);
            case 10:
            case "end":
              return _context28.stop();
          }
        }, _callee28);
      }));
      return function (_x29, _x30) {
        return _ref26.apply(this, arguments);
      };
    }(), _this9.isSubscribed = /*#__PURE__*/function () {
      var _ref27 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee29(s) {
        var i;
        return _regeneratorRuntime().wrap(function _callee29$(_context29) {
          while (1) switch (_context29.prev = _context29.next) {
            case 0:
              if (!_this9.topics.includes(s)) {
                _context29.next = 2;
                break;
              }
              return _context29.abrupt("return", !0);
            case 2:
              i = "".concat(_this9.pendingSubscriptionWatchLabel, "_").concat(s);
              _context29.next = 5;
              return new Promise(function (r, n) {
                var a = new cjs$3.Watch();
                a.start(i);
                var h = setInterval(function () {
                  !_this9.pending.has(s) && _this9.topics.includes(s) && (clearInterval(h), a.stop(i), r(!0)), a.elapsed(i) >= pt$1 && (clearInterval(h), a.stop(i), n(new Error("Subscription resolution timeout")));
                }, _this9.pollingInterval);
              })["catch"](function () {
                return !1;
              });
            case 5:
              return _context29.abrupt("return", _context29.sent);
            case 6:
            case "end":
              return _context29.stop();
          }
        }, _callee29);
      }));
      return function (_x31) {
        return _ref27.apply(this, arguments);
      };
    }(), _this9.on = function (s, i) {
      _this9.events.on(s, i);
    }, _this9.once = function (s, i) {
      _this9.events.once(s, i);
    }, _this9.off = function (s, i) {
      _this9.events.off(s, i);
    }, _this9.removeListener = function (s, i) {
      _this9.events.removeListener(s, i);
    }, _this9.start = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee30() {
      return _regeneratorRuntime().wrap(function _callee30$(_context30) {
        while (1) switch (_context30.prev = _context30.next) {
          case 0:
            _context30.next = 2;
            return _this9.onConnect();
          case 2:
          case "end":
            return _context30.stop();
        }
      }, _callee30);
    })), _this9.stop = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee31() {
      return _regeneratorRuntime().wrap(function _callee31$(_context31) {
        while (1) switch (_context31.prev = _context31.next) {
          case 0:
            _context31.next = 2;
            return _this9.onDisconnect();
          case 2:
          case "end":
            return _context31.stop();
        }
      }, _callee31);
    })), _this9.restart = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {
      return _regeneratorRuntime().wrap(function _callee32$(_context32) {
        while (1) switch (_context32.prev = _context32.next) {
          case 0:
            _this9.restartInProgress = !0;
            _context32.next = 3;
            return _this9.restore();
          case 3:
            _context32.next = 5;
            return _this9.reset();
          case 5:
            _this9.restartInProgress = !1;
          case 6:
          case "end":
            return _context32.stop();
        }
      }, _callee32);
    })), _this9.relayer = e, _this9.logger = E$4(t, _this9.name), _this9.clientId = "";
    return _this9;
  }
  _inherits(Wt, _Ii);
  return _createClass(Wt, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "length",
    get: function get() {
      return this.subscriptions.size;
    }
  }, {
    key: "ids",
    get: function get() {
      return Array.from(this.subscriptions.keys());
    }
  }, {
    key: "values",
    get: function get() {
      return Array.from(this.subscriptions.values());
    }
  }, {
    key: "topics",
    get: function get() {
      return this.topicMap.topics;
    }
  }, {
    key: "hasSubscription",
    value: function hasSubscription(e, t) {
      var s = !1;
      try {
        s = this.getSubscription(e).topic === t;
      } catch (_unused2) {}
      return s;
    }
  }, {
    key: "onEnable",
    value: function onEnable() {
      this.cached = [], this.initialized = !0;
    }
  }, {
    key: "onDisable",
    value: function onDisable() {
      this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
    }
  }, {
    key: "unsubscribeByTopic",
    value: function () {
      var _unsubscribeByTopic = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee34(e, t) {
        var _this10 = this;
        var s;
        return _regeneratorRuntime().wrap(function _callee34$(_context34) {
          while (1) switch (_context34.prev = _context34.next) {
            case 0:
              s = this.topicMap.get(e);
              _context34.next = 3;
              return Promise.all(s.map(/*#__PURE__*/function () {
                var _ref31 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee33(i) {
                  return _regeneratorRuntime().wrap(function _callee33$(_context33) {
                    while (1) switch (_context33.prev = _context33.next) {
                      case 0:
                        _context33.next = 2;
                        return _this10.unsubscribeById(e, i, t);
                      case 2:
                        return _context33.abrupt("return", _context33.sent);
                      case 3:
                      case "end":
                        return _context33.stop();
                    }
                  }, _callee33);
                }));
                return function (_x34) {
                  return _ref31.apply(this, arguments);
                };
              }()));
            case 3:
            case "end":
              return _context34.stop();
          }
        }, _callee34, this);
      }));
      function unsubscribeByTopic(_x32, _x33) {
        return _unsubscribeByTopic.apply(this, arguments);
      }
      return unsubscribeByTopic;
    }()
  }, {
    key: "unsubscribeById",
    value: function () {
      var _unsubscribeById = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee35(e, t, s) {
        var i, r;
        return _regeneratorRuntime().wrap(function _callee35$(_context35) {
          while (1) switch (_context35.prev = _context35.next) {
            case 0:
              this.logger.debug("Unsubscribing Topic"), this.logger.trace({
                type: "method",
                method: "unsubscribe",
                params: {
                  topic: e,
                  id: t,
                  opts: s
                }
              });
              _context35.prev = 1;
              i = Ir$1(s);
              _context35.next = 5;
              return this.rpcUnsubscribe(e, t, i);
            case 5:
              r = U$1("USER_DISCONNECTED", "".concat(this.name, ", ").concat(e));
              _context35.next = 8;
              return this.onUnsubscribe(e, t, r);
            case 8:
              this.logger.debug("Successfully Unsubscribed Topic");
              this.logger.trace({
                type: "method",
                method: "unsubscribe",
                params: {
                  topic: e,
                  id: t,
                  opts: s
                }
              });
              _context35.next = 15;
              break;
            case 12:
              _context35.prev = 12;
              _context35.t0 = _context35["catch"](1);
              throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(_context35.t0), _context35.t0;
            case 15:
            case "end":
              return _context35.stop();
          }
        }, _callee35, this, [[1, 12]]);
      }));
      function unsubscribeById(_x35, _x36, _x37) {
        return _unsubscribeById.apply(this, arguments);
      }
      return unsubscribeById;
    }()
  }, {
    key: "rpcSubscribe",
    value: function () {
      var _rpcSubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee36(e, t, s) {
        var _this11 = this;
        var i, r, n, a, h;
        return _regeneratorRuntime().wrap(function _callee36$(_context36) {
          while (1) switch (_context36.prev = _context36.next) {
            case 0:
              _context36.t0 = (s === null || s === void 0 ? void 0 : s.transportType) === M.relay;
              if (!_context36.t0) {
                _context36.next = 4;
                break;
              }
              _context36.next = 4;
              return this.restartToComplete();
            case 4:
              r = {
                method: jr$1(t.protocol).subscribe,
                params: {
                  topic: e
                }
              };
              this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                type: "payload",
                direction: "outgoing",
                request: r
              });
              n = (i = s === null || s === void 0 ? void 0 : s.internal) == null ? void 0 : i.throwOnFailedPublish;
              _context36.prev = 7;
              a = yr$1(e + this.clientId);
              if (!((s === null || s === void 0 ? void 0 : s.transportType) === M.link_mode)) {
                _context36.next = 11;
                break;
              }
              return _context36.abrupt("return", (setTimeout(function () {
                (_this11.relayer.connected || _this11.relayer.connecting) && _this11.relayer.request(r)["catch"](function (c) {
                  return _this11.logger.warn(c);
                });
              }, cjs$3.toMiliseconds(cjs$3.ONE_SECOND)), a));
            case 11:
              _context36.next = 13;
              return kt$1(this.relayer.request(r)["catch"](function (c) {
                return _this11.logger.warn(c);
              }), this.subscribeTimeout, "Subscribing to ".concat(e, " failed, please try again"));
            case 13:
              h = _context36.sent;
              if (!(!h && n)) {
                _context36.next = 16;
                break;
              }
              throw new Error("Subscribing to ".concat(e, " failed, please try again"));
            case 16:
              return _context36.abrupt("return", h ? a : null);
            case 19:
              _context36.prev = 19;
              _context36.t1 = _context36["catch"](7);
              if (!(this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(v$2.connection_stalled), n)) {
                _context36.next = 23;
                break;
              }
              throw _context36.t1;
            case 23:
              return _context36.abrupt("return", null);
            case 24:
            case "end":
              return _context36.stop();
          }
        }, _callee36, this, [[7, 19]]);
      }));
      function rpcSubscribe(_x38, _x39, _x40) {
        return _rpcSubscribe.apply(this, arguments);
      }
      return rpcSubscribe;
    }()
  }, {
    key: "rpcBatchSubscribe",
    value: function () {
      var _rpcBatchSubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee37(e) {
        var _this12 = this;
        var t, s;
        return _regeneratorRuntime().wrap(function _callee37$(_context37) {
          while (1) switch (_context37.prev = _context37.next) {
            case 0:
              if (e.length) {
                _context37.next = 2;
                break;
              }
              return _context37.abrupt("return");
            case 2:
              t = e[0].relay, s = {
                method: jr$1(t.protocol).batchSubscribe,
                params: {
                  topics: e.map(function (i) {
                    return i.topic;
                  })
                }
              };
              this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                type: "payload",
                direction: "outgoing",
                request: s
              });
              _context37.prev = 4;
              _context37.next = 7;
              return kt$1(this.relayer.request(s)["catch"](function (i) {
                return _this12.logger.warn(i);
              }), this.subscribeTimeout);
            case 7:
              _context37.next = 9;
              return _context37.sent;
            case 9:
              return _context37.abrupt("return", _context37.sent);
            case 12:
              _context37.prev = 12;
              _context37.t0 = _context37["catch"](4);
              this.relayer.events.emit(v$2.connection_stalled);
            case 15:
            case "end":
              return _context37.stop();
          }
        }, _callee37, this, [[4, 12]]);
      }));
      function rpcBatchSubscribe(_x41) {
        return _rpcBatchSubscribe.apply(this, arguments);
      }
      return rpcBatchSubscribe;
    }()
  }, {
    key: "rpcBatchFetchMessages",
    value: function () {
      var _rpcBatchFetchMessages = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee38(e) {
        var _this13 = this;
        var t, s, i;
        return _regeneratorRuntime().wrap(function _callee38$(_context38) {
          while (1) switch (_context38.prev = _context38.next) {
            case 0:
              if (e.length) {
                _context38.next = 2;
                break;
              }
              return _context38.abrupt("return");
            case 2:
              t = e[0].relay, s = {
                method: jr$1(t.protocol).batchFetchMessages,
                params: {
                  topics: e.map(function (r) {
                    return r.topic;
                  })
                }
              };
              this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                type: "payload",
                direction: "outgoing",
                request: s
              });
              _context38.prev = 4;
              _context38.next = 7;
              return kt$1(this.relayer.request(s)["catch"](function (r) {
                return _this13.logger.warn(r);
              }), this.subscribeTimeout);
            case 7:
              _context38.next = 9;
              return _context38.sent;
            case 9:
              i = _context38.sent;
              _context38.next = 15;
              break;
            case 12:
              _context38.prev = 12;
              _context38.t0 = _context38["catch"](4);
              this.relayer.events.emit(v$2.connection_stalled);
            case 15:
              return _context38.abrupt("return", i);
            case 16:
            case "end":
              return _context38.stop();
          }
        }, _callee38, this, [[4, 12]]);
      }));
      function rpcBatchFetchMessages(_x42) {
        return _rpcBatchFetchMessages.apply(this, arguments);
      }
      return rpcBatchFetchMessages;
    }()
  }, {
    key: "rpcUnsubscribe",
    value: function rpcUnsubscribe(e, t, s) {
      var i = {
        method: jr$1(s.protocol).unsubscribe,
        params: {
          topic: e,
          id: t
        }
      };
      return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
        type: "payload",
        direction: "outgoing",
        request: i
      }), this.relayer.request(i);
    }
  }, {
    key: "onSubscribe",
    value: function onSubscribe(e, t) {
      this.setSubscription(e, we$1(W({}, t), {
        id: e
      })), this.pending["delete"](t.topic);
    }
  }, {
    key: "onBatchSubscribe",
    value: function onBatchSubscribe(e) {
      var _this14 = this;
      e.length && e.forEach(function (t) {
        _this14.setSubscription(t.id, W({}, t)), _this14.pending["delete"](t.topic);
      });
    }
  }, {
    key: "onUnsubscribe",
    value: function () {
      var _onUnsubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee39(e, t, s) {
        return _regeneratorRuntime().wrap(function _callee39$(_context39) {
          while (1) switch (_context39.prev = _context39.next) {
            case 0:
              this.events.removeAllListeners(t);
              this.hasSubscription(t, e) && this.deleteSubscription(t, s);
              _context39.next = 4;
              return this.relayer.messages.del(e);
            case 4:
            case "end":
              return _context39.stop();
          }
        }, _callee39, this);
      }));
      function onUnsubscribe(_x43, _x44, _x45) {
        return _onUnsubscribe.apply(this, arguments);
      }
      return onUnsubscribe;
    }()
  }, {
    key: "setRelayerSubscriptions",
    value: function () {
      var _setRelayerSubscriptions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee40(e) {
        return _regeneratorRuntime().wrap(function _callee40$(_context40) {
          while (1) switch (_context40.prev = _context40.next) {
            case 0:
              _context40.next = 2;
              return this.relayer.core.storage.setItem(this.storageKey, e);
            case 2:
            case "end":
              return _context40.stop();
          }
        }, _callee40, this);
      }));
      function setRelayerSubscriptions(_x46) {
        return _setRelayerSubscriptions.apply(this, arguments);
      }
      return setRelayerSubscriptions;
    }()
  }, {
    key: "getRelayerSubscriptions",
    value: function () {
      var _getRelayerSubscriptions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee41() {
        return _regeneratorRuntime().wrap(function _callee41$(_context41) {
          while (1) switch (_context41.prev = _context41.next) {
            case 0:
              _context41.next = 2;
              return this.relayer.core.storage.getItem(this.storageKey);
            case 2:
              return _context41.abrupt("return", _context41.sent);
            case 3:
            case "end":
              return _context41.stop();
          }
        }, _callee41, this);
      }));
      function getRelayerSubscriptions() {
        return _getRelayerSubscriptions.apply(this, arguments);
      }
      return getRelayerSubscriptions;
    }()
  }, {
    key: "setSubscription",
    value: function setSubscription(e, t) {
      this.logger.debug("Setting subscription"), this.logger.trace({
        type: "method",
        method: "setSubscription",
        id: e,
        subscription: t
      }), this.addSubscription(e, t);
    }
  }, {
    key: "addSubscription",
    value: function addSubscription(e, t) {
      this.subscriptions.set(e, W({}, t)), this.topicMap.set(t.topic, e), this.events.emit(O$1.created, t);
    }
  }, {
    key: "getSubscription",
    value: function getSubscription(e) {
      this.logger.debug("Getting subscription"), this.logger.trace({
        type: "method",
        method: "getSubscription",
        id: e
      });
      var t = this.subscriptions.get(e);
      if (!t) {
        var _d5 = S$2("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)),
          s = _d5.message;
        throw new Error(s);
      }
      return t;
    }
  }, {
    key: "deleteSubscription",
    value: function deleteSubscription(e, t) {
      this.logger.debug("Deleting subscription"), this.logger.trace({
        type: "method",
        method: "deleteSubscription",
        id: e,
        reason: t
      });
      var s = this.getSubscription(e);
      this.subscriptions["delete"](e), this.topicMap["delete"](s.topic, e), this.events.emit(O$1.deleted, we$1(W({}, s), {
        reason: t
      }));
    }
  }, {
    key: "persist",
    value: function () {
      var _persist3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee42() {
        return _regeneratorRuntime().wrap(function _callee42$(_context42) {
          while (1) switch (_context42.prev = _context42.next) {
            case 0:
              _context42.next = 2;
              return this.setRelayerSubscriptions(this.values);
            case 2:
              this.events.emit(O$1.sync);
            case 3:
            case "end":
              return _context42.stop();
          }
        }, _callee42, this);
      }));
      function persist() {
        return _persist3.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "reset",
    value: function () {
      var _reset = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {
        var e, t, s;
        return _regeneratorRuntime().wrap(function _callee43$(_context43) {
          while (1) switch (_context43.prev = _context43.next) {
            case 0:
              if (!this.cached.length) {
                _context43.next = 12;
                break;
              }
              e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
              t = 0;
            case 3:
              if (!(t < e)) {
                _context43.next = 12;
                break;
              }
              s = this.cached.splice(0, this.batchSubscribeTopicsLimit);
              _context43.next = 7;
              return this.batchFetchMessages(s);
            case 7:
              _context43.next = 9;
              return this.batchSubscribe(s);
            case 9:
              t++;
              _context43.next = 3;
              break;
            case 12:
              this.events.emit(O$1.resubscribed);
            case 13:
            case "end":
              return _context43.stop();
          }
        }, _callee43, this);
      }));
      function reset() {
        return _reset.apply(this, arguments);
      }
      return reset;
    }()
  }, {
    key: "restore",
    value: function () {
      var _restore = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee44() {
        var e, _d6, t;
        return _regeneratorRuntime().wrap(function _callee44$(_context44) {
          while (1) switch (_context44.prev = _context44.next) {
            case 0:
              _context44.prev = 0;
              _context44.next = 3;
              return this.getRelayerSubscriptions();
            case 3:
              e = _context44.sent;
              if (!(_typeof(e) > "u" || !e.length)) {
                _context44.next = 6;
                break;
              }
              return _context44.abrupt("return");
            case 6:
              if (!this.subscriptions.size) {
                _context44.next = 9;
                break;
              }
              _d6 = S$2("RESTORE_WILL_OVERRIDE", this.name), t = _d6.message;
              throw this.logger.error(t), this.logger.error("".concat(this.name, ": ").concat(JSON.stringify(this.values))), new Error(t);
            case 9:
              this.cached = e, this.logger.debug("Successfully Restored subscriptions for ".concat(this.name)), this.logger.trace({
                type: "method",
                method: "restore",
                subscriptions: this.values
              });
              _context44.next = 15;
              break;
            case 12:
              _context44.prev = 12;
              _context44.t0 = _context44["catch"](0);
              this.logger.debug("Failed to Restore subscriptions for ".concat(this.name)), this.logger.error(_context44.t0);
            case 15:
            case "end":
              return _context44.stop();
          }
        }, _callee44, this, [[0, 12]]);
      }));
      function restore() {
        return _restore.apply(this, arguments);
      }
      return restore;
    }()
  }, {
    key: "batchSubscribe",
    value: function () {
      var _batchSubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee45(e) {
        var t;
        return _regeneratorRuntime().wrap(function _callee45$(_context45) {
          while (1) switch (_context45.prev = _context45.next) {
            case 0:
              if (e.length) {
                _context45.next = 2;
                break;
              }
              return _context45.abrupt("return");
            case 2:
              _context45.next = 4;
              return this.rpcBatchSubscribe(e);
            case 4:
              t = _context45.sent;
              L$1(t) && this.onBatchSubscribe(t.map(function (s, i) {
                return we$1(W({}, e[i]), {
                  id: s
                });
              }));
            case 6:
            case "end":
              return _context45.stop();
          }
        }, _callee45, this);
      }));
      function batchSubscribe(_x47) {
        return _batchSubscribe.apply(this, arguments);
      }
      return batchSubscribe;
    }()
  }, {
    key: "batchFetchMessages",
    value: function () {
      var _batchFetchMessages = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee46(e) {
        var t;
        return _regeneratorRuntime().wrap(function _callee46$(_context46) {
          while (1) switch (_context46.prev = _context46.next) {
            case 0:
              if (e.length) {
                _context46.next = 2;
                break;
              }
              return _context46.abrupt("return");
            case 2:
              this.logger.trace("Fetching batch messages for ".concat(e.length, " subscriptions"));
              _context46.next = 5;
              return this.rpcBatchFetchMessages(e);
            case 5:
              t = _context46.sent;
              t && t.messages && (this.pendingBatchMessages = this.pendingBatchMessages.concat(t.messages));
            case 7:
            case "end":
              return _context46.stop();
          }
        }, _callee46, this);
      }));
      function batchFetchMessages(_x48) {
        return _batchFetchMessages.apply(this, arguments);
      }
      return batchFetchMessages;
    }()
  }, {
    key: "onConnect",
    value: function () {
      var _onConnect = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee47() {
        return _regeneratorRuntime().wrap(function _callee47$(_context47) {
          while (1) switch (_context47.prev = _context47.next) {
            case 0:
              _context47.next = 2;
              return this.restart();
            case 2:
              this.onEnable();
            case 3:
            case "end":
              return _context47.stop();
          }
        }, _callee47, this);
      }));
      function onConnect() {
        return _onConnect.apply(this, arguments);
      }
      return onConnect;
    }()
  }, {
    key: "onDisconnect",
    value: function onDisconnect() {
      this.onDisable();
    }
  }, {
    key: "checkPending",
    value: function () {
      var _checkPending = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee48() {
        var e;
        return _regeneratorRuntime().wrap(function _callee48$(_context48) {
          while (1) switch (_context48.prev = _context48.next) {
            case 0:
              if (!(!this.initialized || !this.relayer.connected)) {
                _context48.next = 2;
                break;
              }
              return _context48.abrupt("return");
            case 2:
              e = [];
              this.pending.forEach(function (t) {
                e.push(t);
              });
              _context48.next = 6;
              return this.batchSubscribe(e);
            case 6:
              _context48.t0 = this.pendingBatchMessages.length;
              if (!_context48.t0) {
                _context48.next = 11;
                break;
              }
              _context48.next = 10;
              return this.relayer.handleBatchMessageEvents(this.pendingBatchMessages);
            case 10:
              this.pendingBatchMessages = [];
            case 11:
            case "end":
              return _context48.stop();
          }
        }, _callee48, this);
      }));
      function checkPending() {
        return _checkPending.apply(this, arguments);
      }
      return checkPending;
    }()
  }, {
    key: "registerEventListeners",
    value: function registerEventListeners() {
      var _this15 = this;
      this.relayer.core.heartbeat.on(r$4.pulse, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee49() {
        return _regeneratorRuntime().wrap(function _callee49$(_context49) {
          while (1) switch (_context49.prev = _context49.next) {
            case 0:
              _context49.next = 2;
              return _this15.checkPending();
            case 2:
            case "end":
              return _context49.stop();
          }
        }, _callee49);
      }))), this.events.on(O$1.created, /*#__PURE__*/function () {
        var _ref33 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee50(e) {
          var t;
          return _regeneratorRuntime().wrap(function _callee50$(_context50) {
            while (1) switch (_context50.prev = _context50.next) {
              case 0:
                t = O$1.created;
                _this15.logger.info("Emitting ".concat(t));
                _this15.logger.debug({
                  type: "event",
                  event: t,
                  data: e
                });
                _context50.next = 5;
                return _this15.persist();
              case 5:
              case "end":
                return _context50.stop();
            }
          }, _callee50);
        }));
        return function (_x49) {
          return _ref33.apply(this, arguments);
        };
      }()), this.events.on(O$1.deleted, /*#__PURE__*/function () {
        var _ref34 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee51(e) {
          var t;
          return _regeneratorRuntime().wrap(function _callee51$(_context51) {
            while (1) switch (_context51.prev = _context51.next) {
              case 0:
                t = O$1.deleted;
                _this15.logger.info("Emitting ".concat(t));
                _this15.logger.debug({
                  type: "event",
                  event: t,
                  data: e
                });
                _context51.next = 5;
                return _this15.persist();
              case 5:
              case "end":
                return _context51.stop();
            }
          }, _callee51);
        }));
        return function (_x50) {
          return _ref34.apply(this, arguments);
        };
      }());
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d7 = S$2("NOT_INITIALIZED", this.name),
          e = _d7.message;
        throw new Error(e);
      }
    }
  }, {
    key: "restartToComplete",
    value: function () {
      var _restartToComplete = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee52() {
        var _this16 = this;
        return _regeneratorRuntime().wrap(function _callee52$(_context52) {
          while (1) switch (_context52.prev = _context52.next) {
            case 0:
              _context52.t0 = !this.relayer.connected && !this.relayer.connecting;
              if (!_context52.t0) {
                _context52.next = 4;
                break;
              }
              _context52.next = 4;
              return this.relayer.transportOpen();
            case 4:
              _context52.t1 = this.restartInProgress;
              if (!_context52.t1) {
                _context52.next = 8;
                break;
              }
              _context52.next = 8;
              return new Promise(function (e) {
                var t = setInterval(function () {
                  _this16.restartInProgress || (clearInterval(t), e());
                }, _this16.pollingInterval);
              });
            case 8:
            case "end":
              return _context52.stop();
          }
        }, _callee52, this);
      }));
      function restartToComplete() {
        return _restartToComplete.apply(this, arguments);
      }
      return restartToComplete;
    }()
  }]);
}(d);
var on = Object.defineProperty,
  Zt = Object.getOwnPropertySymbols,
  an = Object.prototype.hasOwnProperty,
  hn = Object.prototype.propertyIsEnumerable,
  Qt = function Qt(o, e, t) {
    return e in o ? on(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  ei = function ei(o, e) {
    for (var t in e || (e = {})) an.call(e, t) && Qt(o, t, e[t]);
    if (Zt) {
      var _iterator3 = _createForOfIteratorHelper(Zt(e)),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var t = _step3.value;
          hn.call(e, t) && Qt(o, t, e[t]);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
    return o;
  };
var ti = /*#__PURE__*/function (_Ti) {
  function ti(e) {
    var _this17;
    _classCallCheck(this, ti);
    _this17 = _callSuper(this, ti, [e]), _this17.protocol = "wc", _this17.version = 2, _this17.events = new eventsExports.EventEmitter(), _this17.name = ot$1, _this17.transportExplicitlyClosed = !1, _this17.initialized = !1, _this17.connectionAttemptInProgress = !1, _this17.connectionStatusPollingInterval = 20, _this17.staleConnectionErrors = ["socket hang up", "stalled", "interrupted"], _this17.hasExperiencedNetworkDisruption = !1, _this17.requestsInFlight = new Map(), _this17.heartBeatTimeout = cjs$3.toMiliseconds(cjs$3.THIRTY_SECONDS + cjs$3.ONE_SECOND), _this17.request = /*#__PURE__*/function () {
      var _ref35 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee54(t) {
        var s, i, r, n, a;
        return _regeneratorRuntime().wrap(function _callee54$(_context54) {
          while (1) switch (_context54.prev = _context54.next) {
            case 0:
              _this17.logger.debug("Publishing Request Payload");
              r = t.id || getBigIntRpcId().toString();
              _context54.next = 4;
              return _this17.toEstablishConnection();
            case 4:
              _context54.prev = 4;
              n = _this17.provider.request(t);
              _this17.requestsInFlight.set(r, {
                promise: n,
                request: t
              }), _this17.logger.trace({
                id: r,
                method: t.method,
                topic: (s = t.params) == null ? void 0 : s.topic
              }, "relayer.request - attempt to publish...");
              _context54.next = 9;
              return new Promise(/*#__PURE__*/function () {
                var _ref36 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee53(h, c) {
                  var l, p;
                  return _regeneratorRuntime().wrap(function _callee53$(_context53) {
                    while (1) switch (_context53.prev = _context53.next) {
                      case 0:
                        l = function l() {
                          c(new Error("relayer.request - publish interrupted, id: ".concat(r)));
                        };
                        _this17.provider.on(I$1.disconnect, l);
                        _context53.next = 4;
                        return n;
                      case 4:
                        p = _context53.sent;
                        _this17.provider.off(I$1.disconnect, l), h(p);
                      case 6:
                      case "end":
                        return _context53.stop();
                    }
                  }, _callee53);
                }));
                return function (_x52, _x53) {
                  return _ref36.apply(this, arguments);
                };
              }());
            case 9:
              a = _context54.sent;
              return _context54.abrupt("return", (_this17.logger.trace({
                id: r,
                method: t.method,
                topic: (i = t.params) == null ? void 0 : i.topic
              }, "relayer.request - published"), a));
            case 13:
              _context54.prev = 13;
              _context54.t0 = _context54["catch"](4);
              throw _this17.logger.debug("Failed to Publish Request: ".concat(r)), _context54.t0;
            case 16:
              _context54.prev = 16;
              _this17.requestsInFlight["delete"](r);
              return _context54.finish(16);
            case 19:
            case "end":
              return _context54.stop();
          }
        }, _callee54, null, [[4, 13, 16, 19]]);
      }));
      return function (_x51) {
        return _ref35.apply(this, arguments);
      };
    }(), _this17.resetPingTimeout = function () {
      if (ce()) try {
        clearTimeout(_this17.pingTimeout), _this17.pingTimeout = setTimeout(function () {
          var t, s, i;
          (i = (s = (t = _this17.provider) == null ? void 0 : t.connection) == null ? void 0 : s.socket) == null || i.terminate();
        }, _this17.heartBeatTimeout);
      } catch (t) {
        _this17.logger.warn(t);
      }
    }, _this17.onPayloadHandler = function (t) {
      _this17.onProviderPayload(t), _this17.resetPingTimeout();
    }, _this17.onConnectHandler = function () {
      _this17.logger.trace("relayer connected"), _this17.startPingTimeout(), _this17.events.emit(v$2.connect);
    }, _this17.onDisconnectHandler = function () {
      _this17.logger.trace("relayer disconnected"), _this17.onProviderDisconnect();
    }, _this17.onProviderErrorHandler = function (t) {
      _this17.logger.error(t), _this17.events.emit(v$2.error, t), _this17.logger.info("Fatal socket error received, closing transport"), _this17.transportClose();
    }, _this17.registerProviderListeners = function () {
      _this17.provider.on(I$1.payload, _this17.onPayloadHandler), _this17.provider.on(I$1.connect, _this17.onConnectHandler), _this17.provider.on(I$1.disconnect, _this17.onDisconnectHandler), _this17.provider.on(I$1.error, _this17.onProviderErrorHandler);
    }, _this17.core = e.core, _this17.logger = _typeof(e.logger) < "u" && typeof e.logger != "string" ? E$4(e.logger, _this17.name) : qt$5(k$4({
      level: e.logger || nt$1
    })), _this17.messages = new Yt(_this17.logger, e.core), _this17.subscriber = new Wt(_assertThisInitialized(_this17), _this17.logger), _this17.publisher = new Zr(_assertThisInitialized(_this17), _this17.logger), _this17.relayUrl = (e === null || e === void 0 ? void 0 : e.relayUrl) || be$1, _this17.projectId = e.projectId, _this17.bundleId = Ot$1(), _this17.provider = {};
    return _this17;
  }
  _inherits(ti, _Ti);
  return _createClass(ti, [{
    key: "init",
    value: function () {
      var _init = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee55() {
        return _regeneratorRuntime().wrap(function _callee55$(_context55) {
          while (1) switch (_context55.prev = _context55.next) {
            case 0:
              this.logger.trace("Initialized");
              this.registerEventListeners();
              _context55.next = 4;
              return Promise.all([this.messages.init(), this.subscriber.init()]);
            case 4:
              this.initialized = !0;
              if (!(this.subscriber.cached.length > 0)) {
                _context55.next = 14;
                break;
              }
              _context55.prev = 6;
              _context55.next = 9;
              return this.transportOpen();
            case 9:
              _context55.next = 14;
              break;
            case 11:
              _context55.prev = 11;
              _context55.t0 = _context55["catch"](6);
              this.logger.warn(_context55.t0);
            case 14:
            case "end":
              return _context55.stop();
          }
        }, _callee55, this, [[6, 11]]);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "connected",
    get: function get() {
      var e, t, s;
      return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 1;
    }
  }, {
    key: "connecting",
    get: function get() {
      var e, t, s;
      return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 0;
    }
  }, {
    key: "publish",
    value: function () {
      var _publish = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee56(e, t, s) {
        return _regeneratorRuntime().wrap(function _callee56$(_context56) {
          while (1) switch (_context56.prev = _context56.next) {
            case 0:
              this.isInitialized();
              _context56.next = 3;
              return this.publisher.publish(e, t, s);
            case 3:
              _context56.next = 5;
              return this.recordMessageEvent({
                topic: e,
                message: t,
                publishedAt: Date.now(),
                transportType: M.relay
              });
            case 5:
            case "end":
              return _context56.stop();
          }
        }, _callee56, this);
      }));
      function publish(_x54, _x55, _x56) {
        return _publish.apply(this, arguments);
      }
      return publish;
    }()
  }, {
    key: "subscribe",
    value: function () {
      var _subscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee58(e, t) {
        var _this18 = this;
        var s, i, r, n, a, h, _c2;
        return _regeneratorRuntime().wrap(function _callee58$(_context58) {
          while (1) switch (_context58.prev = _context58.next) {
            case 0:
              this.isInitialized();
              _context58.t0 = (t === null || t === void 0 ? void 0 : t.transportType) === "relay";
              if (!_context58.t0) {
                _context58.next = 5;
                break;
              }
              _context58.next = 5;
              return this.toEstablishConnection();
            case 5:
              n = _typeof((s = t === null || t === void 0 ? void 0 : t.internal) == null ? void 0 : s.throwOnFailedPublish) > "u" ? !0 : (i = t === null || t === void 0 ? void 0 : t.internal) == null ? void 0 : i.throwOnFailedPublish;
              a = ((r = this.subscriber.topicMap.get(e)) == null ? void 0 : r[0]) || "";
              _c2 = function c(l) {
                l.topic === e && (_this18.subscriber.off(O$1.created, _c2), h());
              };
              _context58.next = 10;
              return Promise.all([new Promise(function (l) {
                h = l, _this18.subscriber.on(O$1.created, _c2);
              }), new Promise(/*#__PURE__*/function () {
                var _ref37 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee57(l, p) {
                  return _regeneratorRuntime().wrap(function _callee57$(_context57) {
                    while (1) switch (_context57.prev = _context57.next) {
                      case 0:
                        _context57.next = 2;
                        return _this18.subscriber.subscribe(e, ei({
                          internal: {
                            throwOnFailedPublish: n
                          }
                        }, t))["catch"](function (D) {
                          n && p(D);
                        });
                      case 2:
                        _context57.t0 = _context57.sent;
                        if (_context57.t0) {
                          _context57.next = 5;
                          break;
                        }
                        _context57.t0 = a;
                      case 5:
                        a = _context57.t0;
                        l();
                      case 7:
                      case "end":
                        return _context57.stop();
                    }
                  }, _callee57);
                }));
                return function (_x59, _x60) {
                  return _ref37.apply(this, arguments);
                };
              }())]);
            case 10:
              return _context58.abrupt("return", a);
            case 11:
            case "end":
              return _context58.stop();
          }
        }, _callee58, this);
      }));
      function subscribe(_x57, _x58) {
        return _subscribe.apply(this, arguments);
      }
      return subscribe;
    }()
  }, {
    key: "unsubscribe",
    value: function () {
      var _unsubscribe = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee59(e, t) {
        return _regeneratorRuntime().wrap(function _callee59$(_context59) {
          while (1) switch (_context59.prev = _context59.next) {
            case 0:
              this.isInitialized();
              _context59.next = 3;
              return this.subscriber.unsubscribe(e, t);
            case 3:
            case "end":
              return _context59.stop();
          }
        }, _callee59, this);
      }));
      function unsubscribe(_x61, _x62) {
        return _unsubscribe.apply(this, arguments);
      }
      return unsubscribe;
    }()
  }, {
    key: "on",
    value: function on(e, t) {
      this.events.on(e, t);
    }
  }, {
    key: "once",
    value: function once(e, t) {
      this.events.once(e, t);
    }
  }, {
    key: "off",
    value: function off(e, t) {
      this.events.off(e, t);
    }
  }, {
    key: "removeListener",
    value: function removeListener(e, t) {
      this.events.removeListener(e, t);
    }
  }, {
    key: "transportDisconnect",
    value: function () {
      var _transportDisconnect = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee60() {
        var _this19 = this;
        return _regeneratorRuntime().wrap(function _callee60$(_context60) {
          while (1) switch (_context60.prev = _context60.next) {
            case 0:
              if (!(!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0)) {
                _context60.next = 9;
                break;
              }
              _context60.prev = 1;
              _context60.next = 4;
              return Promise.all(Array.from(this.requestsInFlight.values()).map(function (e) {
                return e.promise;
              }));
            case 4:
              _context60.next = 9;
              break;
            case 6:
              _context60.prev = 6;
              _context60.t0 = _context60["catch"](1);
              this.logger.warn(_context60.t0);
            case 9:
              if (!(this.hasExperiencedNetworkDisruption || this.connected)) {
                _context60.next = 14;
                break;
              }
              _context60.next = 12;
              return kt$1(this.provider.disconnect(), 2e3, "provider.disconnect()")["catch"](function () {
                return _this19.onProviderDisconnect();
              });
            case 12:
              _context60.next = 15;
              break;
            case 14:
              this.onProviderDisconnect();
            case 15:
            case "end":
              return _context60.stop();
          }
        }, _callee60, this, [[1, 6]]);
      }));
      function transportDisconnect() {
        return _transportDisconnect.apply(this, arguments);
      }
      return transportDisconnect;
    }()
  }, {
    key: "transportClose",
    value: function () {
      var _transportClose = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {
        return _regeneratorRuntime().wrap(function _callee61$(_context61) {
          while (1) switch (_context61.prev = _context61.next) {
            case 0:
              this.transportExplicitlyClosed = !0;
              _context61.next = 3;
              return this.transportDisconnect();
            case 3:
            case "end":
              return _context61.stop();
          }
        }, _callee61, this);
      }));
      function transportClose() {
        return _transportClose.apply(this, arguments);
      }
      return transportClose;
    }()
  }, {
    key: "transportOpen",
    value: function () {
      var _transportOpen = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee63(e) {
        var _this20 = this;
        var s;
        return _regeneratorRuntime().wrap(function _callee63$(_context63) {
          while (1) switch (_context63.prev = _context63.next) {
            case 0:
              _context63.next = 2;
              return this.confirmOnlineStateOrThrow();
            case 2:
              _context63.t0 = e && e !== this.relayUrl;
              if (!_context63.t0) {
                _context63.next = 7;
                break;
              }
              this.relayUrl = e;
              _context63.next = 7;
              return this.transportDisconnect();
            case 7:
              _context63.next = 9;
              return this.createProvider();
            case 9:
              this.connectionAttemptInProgress = !0;
              this.transportExplicitlyClosed = !1;
              _context63.prev = 11;
              _context63.next = 14;
              return new Promise(/*#__PURE__*/function () {
                var _ref38 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee62(t, s) {
                  var _i2;
                  return _regeneratorRuntime().wrap(function _callee62$(_context62) {
                    while (1) switch (_context62.prev = _context62.next) {
                      case 0:
                        _i2 = function i() {
                          _this20.provider.off(I$1.disconnect, _i2), s(new Error("Connection interrupted while trying to subscribe"));
                        };
                        _this20.provider.on(I$1.disconnect, _i2);
                        _context62.next = 4;
                        return kt$1(_this20.provider.connect(), cjs$3.toMiliseconds(cjs$3.ONE_MINUTE), "Socket stalled when trying to connect to ".concat(_this20.relayUrl))["catch"](function (r) {
                          s(r);
                        })["finally"](function () {
                          clearTimeout(_this20.reconnectTimeout), _this20.reconnectTimeout = void 0;
                        });
                      case 4:
                        _this20.subscriber.start()["catch"](function (r) {
                          _this20.logger.error(r), _this20.onDisconnectHandler();
                        });
                        _this20.hasExperiencedNetworkDisruption = !1;
                        t();
                      case 7:
                      case "end":
                        return _context62.stop();
                    }
                  }, _callee62);
                }));
                return function (_x64, _x65) {
                  return _ref38.apply(this, arguments);
                };
              }());
            case 14:
              _context63.next = 22;
              break;
            case 16:
              _context63.prev = 16;
              _context63.t1 = _context63["catch"](11);
              this.logger.error(_context63.t1);
              s = _context63.t1;
              if (!(this.hasExperiencedNetworkDisruption = !0, !this.isConnectionStalled(s.message))) {
                _context63.next = 22;
                break;
              }
              throw _context63.t1;
            case 22:
              _context63.prev = 22;
              this.connectionAttemptInProgress = !1;
              return _context63.finish(22);
            case 25:
            case "end":
              return _context63.stop();
          }
        }, _callee63, this, [[11, 16, 22, 25]]);
      }));
      function transportOpen(_x63) {
        return _transportOpen.apply(this, arguments);
      }
      return transportOpen;
    }()
  }, {
    key: "restartTransport",
    value: function () {
      var _restartTransport = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee64(e) {
        return _regeneratorRuntime().wrap(function _callee64$(_context64) {
          while (1) switch (_context64.prev = _context64.next) {
            case 0:
              _context64.t0 = this.connectionAttemptInProgress;
              if (_context64.t0) {
                _context64.next = 9;
                break;
              }
              this.relayUrl = e || this.relayUrl;
              _context64.next = 5;
              return this.confirmOnlineStateOrThrow();
            case 5:
              _context64.next = 7;
              return this.transportClose();
            case 7:
              _context64.next = 9;
              return this.transportOpen();
            case 9:
            case "end":
              return _context64.stop();
          }
        }, _callee64, this);
      }));
      function restartTransport(_x66) {
        return _restartTransport.apply(this, arguments);
      }
      return restartTransport;
    }()
  }, {
    key: "confirmOnlineStateOrThrow",
    value: function () {
      var _confirmOnlineStateOrThrow = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee65() {
        return _regeneratorRuntime().wrap(function _callee65$(_context65) {
          while (1) switch (_context65.prev = _context65.next) {
            case 0:
              _context65.next = 2;
              return mo();
            case 2:
              if (_context65.sent) {
                _context65.next = 4;
                break;
              }
              throw new Error("No internet connection detected. Please restart your network and try again.");
            case 4:
            case "end":
              return _context65.stop();
          }
        }, _callee65);
      }));
      function confirmOnlineStateOrThrow() {
        return _confirmOnlineStateOrThrow.apply(this, arguments);
      }
      return confirmOnlineStateOrThrow;
    }()
  }, {
    key: "handleBatchMessageEvents",
    value: function () {
      var _handleBatchMessageEvents = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee66(e) {
        var t, _iterator4, _step4, s;
        return _regeneratorRuntime().wrap(function _callee66$(_context66) {
          while (1) switch (_context66.prev = _context66.next) {
            case 0:
              if (!((e === null || e === void 0 ? void 0 : e.length) === 0)) {
                _context66.next = 3;
                break;
              }
              this.logger.trace("Batch message events is empty. Ignoring...");
              return _context66.abrupt("return");
            case 3:
              t = e.sort(function (s, i) {
                return s.publishedAt - i.publishedAt;
              });
              this.logger.trace("Batch of ".concat(t.length, " message events sorted"));
              _iterator4 = _createForOfIteratorHelper(t);
              _context66.prev = 6;
              _iterator4.s();
            case 8:
              if ((_step4 = _iterator4.n()).done) {
                _context66.next = 20;
                break;
              }
              s = _step4.value;
              _context66.prev = 10;
              _context66.next = 13;
              return this.onMessageEvent(s);
            case 13:
              _context66.next = 18;
              break;
            case 15:
              _context66.prev = 15;
              _context66.t0 = _context66["catch"](10);
              this.logger.warn(_context66.t0);
            case 18:
              _context66.next = 8;
              break;
            case 20:
              _context66.next = 25;
              break;
            case 22:
              _context66.prev = 22;
              _context66.t1 = _context66["catch"](6);
              _iterator4.e(_context66.t1);
            case 25:
              _context66.prev = 25;
              _iterator4.f();
              return _context66.finish(25);
            case 28:
              this.logger.trace("Batch of ".concat(t.length, " message events processed"));
            case 29:
            case "end":
              return _context66.stop();
          }
        }, _callee66, this, [[6, 22, 25, 28], [10, 15]]);
      }));
      function handleBatchMessageEvents(_x67) {
        return _handleBatchMessageEvents.apply(this, arguments);
      }
      return handleBatchMessageEvents;
    }()
  }, {
    key: "onLinkMessageEvent",
    value: function () {
      var _onLinkMessageEvent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee67(e, t) {
        var s, i, r;
        return _regeneratorRuntime().wrap(function _callee67$(_context67) {
          while (1) switch (_context67.prev = _context67.next) {
            case 0:
              s = e.topic;
              if (t.sessionExists) {
                _context67.next = 5;
                break;
              }
              i = Mt$1(cjs$3.FIVE_MINUTES), r = {
                topic: s,
                expiry: i,
                relay: {
                  protocol: "irn"
                },
                active: !1
              };
              _context67.next = 5;
              return this.core.pairing.pairings.set(s, r);
            case 5:
              this.events.emit(v$2.message, e);
              _context67.next = 8;
              return this.recordMessageEvent(e);
            case 8:
            case "end":
              return _context67.stop();
          }
        }, _callee67, this);
      }));
      function onLinkMessageEvent(_x68, _x69) {
        return _onLinkMessageEvent.apply(this, arguments);
      }
      return onLinkMessageEvent;
    }()
  }, {
    key: "startPingTimeout",
    value: function startPingTimeout() {
      var _this21 = this;
      var e, t, s, i, r;
      if (ce()) try {
        (t = (e = this.provider) == null ? void 0 : e.connection) != null && t.socket && ((r = (i = (s = this.provider) == null ? void 0 : s.connection) == null ? void 0 : i.socket) == null || r.once("ping", function () {
          _this21.resetPingTimeout();
        })), this.resetPingTimeout();
      } catch (n) {
        this.logger.warn(n);
      }
    }
  }, {
    key: "isConnectionStalled",
    value: function isConnectionStalled(e) {
      return this.staleConnectionErrors.some(function (t) {
        return e.includes(t);
      });
    }
  }, {
    key: "createProvider",
    value: function () {
      var _createProvider = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee68() {
        var e;
        return _regeneratorRuntime().wrap(function _callee68$(_context68) {
          while (1) switch (_context68.prev = _context68.next) {
            case 0:
              this.provider.connection && this.unregisterProviderListeners();
              _context68.next = 3;
              return this.core.crypto.signJWT(this.relayUrl);
            case 3:
              e = _context68.sent;
              this.provider = new o$1(new f$3($t$1({
                sdkVersion: se$1,
                protocol: this.protocol,
                version: this.version,
                relayUrl: this.relayUrl,
                projectId: this.projectId,
                auth: e,
                useOnCloseEvent: !0,
                bundleId: this.bundleId
              }))), this.registerProviderListeners();
            case 5:
            case "end":
              return _context68.stop();
          }
        }, _callee68, this);
      }));
      function createProvider() {
        return _createProvider.apply(this, arguments);
      }
      return createProvider;
    }()
  }, {
    key: "recordMessageEvent",
    value: function () {
      var _recordMessageEvent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee69(e) {
        var t, s;
        return _regeneratorRuntime().wrap(function _callee69$(_context69) {
          while (1) switch (_context69.prev = _context69.next) {
            case 0:
              t = e.topic, s = e.message;
              _context69.next = 3;
              return this.messages.set(t, s);
            case 3:
            case "end":
              return _context69.stop();
          }
        }, _callee69, this);
      }));
      function recordMessageEvent(_x70) {
        return _recordMessageEvent.apply(this, arguments);
      }
      return recordMessageEvent;
    }()
  }, {
    key: "shouldIgnoreMessageEvent",
    value: function () {
      var _shouldIgnoreMessageEvent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee70(e) {
        var t, s, i;
        return _regeneratorRuntime().wrap(function _callee70$(_context70) {
          while (1) switch (_context70.prev = _context70.next) {
            case 0:
              t = e.topic, s = e.message;
              if (!(!s || s.length === 0)) {
                _context70.next = 3;
                break;
              }
              return _context70.abrupt("return", (this.logger.debug("Ignoring invalid/empty message: ".concat(s)), !0));
            case 3:
              _context70.next = 5;
              return this.subscriber.isSubscribed(t);
            case 5:
              if (_context70.sent) {
                _context70.next = 7;
                break;
              }
              return _context70.abrupt("return", (this.logger.debug("Ignoring message for non-subscribed topic ".concat(t)), !0));
            case 7:
              i = this.messages.has(t, s);
              return _context70.abrupt("return", (i && this.logger.debug("Ignoring duplicate message: ".concat(s)), i));
            case 9:
            case "end":
              return _context70.stop();
          }
        }, _callee70, this);
      }));
      function shouldIgnoreMessageEvent(_x71) {
        return _shouldIgnoreMessageEvent.apply(this, arguments);
      }
      return shouldIgnoreMessageEvent;
    }()
  }, {
    key: "onProviderPayload",
    value: function () {
      var _onProviderPayload = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee71(e) {
        var t, _t$data, s, i, r, n, a;
        return _regeneratorRuntime().wrap(function _callee71$(_context71) {
          while (1) switch (_context71.prev = _context71.next) {
            case 0:
              if (!(this.logger.debug("Incoming Relay Payload"), this.logger.trace({
                type: "payload",
                direction: "incoming",
                payload: e
              }), isJsonRpcRequest(e))) {
                _context71.next = 13;
                break;
              }
              if (e.method.endsWith(at$1)) {
                _context71.next = 3;
                break;
              }
              return _context71.abrupt("return");
            case 3:
              t = e.params, _t$data = t.data, s = _t$data.topic, i = _t$data.message, r = _t$data.publishedAt, n = _t$data.attestation, a = {
                topic: s,
                message: i,
                publishedAt: r,
                transportType: M.relay,
                attestation: n
              };
              this.logger.debug("Emitting Relayer Payload");
              this.logger.trace(ei({
                type: "event",
                event: t.id
              }, a));
              this.events.emit(t.id, a);
              _context71.next = 9;
              return this.acknowledgePayload(e);
            case 9:
              _context71.next = 11;
              return this.onMessageEvent(a);
            case 11:
              _context71.next = 14;
              break;
            case 13:
              isJsonRpcResponse(e) && this.events.emit(v$2.message_ack, e);
            case 14:
            case "end":
              return _context71.stop();
          }
        }, _callee71, this);
      }));
      function onProviderPayload(_x72) {
        return _onProviderPayload.apply(this, arguments);
      }
      return onProviderPayload;
    }()
  }, {
    key: "onMessageEvent",
    value: function () {
      var _onMessageEvent = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee72(e) {
        return _regeneratorRuntime().wrap(function _callee72$(_context72) {
          while (1) switch (_context72.prev = _context72.next) {
            case 0:
              _context72.next = 2;
              return this.shouldIgnoreMessageEvent(e);
            case 2:
              _context72.t0 = _context72.sent;
              if (_context72.t0) {
                _context72.next = 7;
                break;
              }
              this.events.emit(v$2.message, e);
              _context72.next = 7;
              return this.recordMessageEvent(e);
            case 7:
            case "end":
              return _context72.stop();
          }
        }, _callee72, this);
      }));
      function onMessageEvent(_x73) {
        return _onMessageEvent.apply(this, arguments);
      }
      return onMessageEvent;
    }()
  }, {
    key: "acknowledgePayload",
    value: function () {
      var _acknowledgePayload = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee73(e) {
        var t;
        return _regeneratorRuntime().wrap(function _callee73$(_context73) {
          while (1) switch (_context73.prev = _context73.next) {
            case 0:
              t = formatJsonRpcResult(e.id, !0);
              _context73.next = 3;
              return this.provider.connection.send(t);
            case 3:
            case "end":
              return _context73.stop();
          }
        }, _callee73, this);
      }));
      function acknowledgePayload(_x74) {
        return _acknowledgePayload.apply(this, arguments);
      }
      return acknowledgePayload;
    }()
  }, {
    key: "unregisterProviderListeners",
    value: function unregisterProviderListeners() {
      this.provider.off(I$1.payload, this.onPayloadHandler), this.provider.off(I$1.connect, this.onConnectHandler), this.provider.off(I$1.disconnect, this.onDisconnectHandler), this.provider.off(I$1.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);
    }
  }, {
    key: "registerEventListeners",
    value: function () {
      var _registerEventListeners = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee75() {
        var _this22 = this;
        var e;
        return _regeneratorRuntime().wrap(function _callee75$(_context75) {
          while (1) switch (_context75.prev = _context75.next) {
            case 0:
              _context75.next = 2;
              return mo();
            case 2:
              e = _context75.sent;
              ho(/*#__PURE__*/function () {
                var _ref39 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee74(t) {
                  return _regeneratorRuntime().wrap(function _callee74$(_context74) {
                    while (1) switch (_context74.prev = _context74.next) {
                      case 0:
                        _context74.t0 = e !== t;
                        if (!_context74.t0) {
                          _context74.next = 12;
                          break;
                        }
                        e = t;
                        if (!t) {
                          _context74.next = 8;
                          break;
                        }
                        _context74.next = 6;
                        return _this22.restartTransport()["catch"](function (s) {
                          return _this22.logger.error(s);
                        });
                      case 6:
                        _context74.next = 12;
                        break;
                      case 8:
                        _this22.hasExperiencedNetworkDisruption = !0;
                        _context74.next = 11;
                        return _this22.transportDisconnect();
                      case 11:
                        _this22.transportExplicitlyClosed = !1;
                      case 12:
                      case "end":
                        return _context74.stop();
                    }
                  }, _callee74);
                }));
                return function (_x75) {
                  return _ref39.apply(this, arguments);
                };
              }());
            case 4:
            case "end":
              return _context75.stop();
          }
        }, _callee75);
      }));
      function registerEventListeners() {
        return _registerEventListeners.apply(this, arguments);
      }
      return registerEventListeners;
    }()
  }, {
    key: "onProviderDisconnect",
    value: function () {
      var _onProviderDisconnect = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee77() {
        var _this23 = this;
        return _regeneratorRuntime().wrap(function _callee77$(_context77) {
          while (1) switch (_context77.prev = _context77.next) {
            case 0:
              _context77.next = 2;
              return this.subscriber.stop();
            case 2:
              this.requestsInFlight.clear();
              clearTimeout(this.pingTimeout);
              this.events.emit(v$2.disconnect);
              this.connectionAttemptInProgress = !1;
              !this.transportExplicitlyClosed && (this.reconnectTimeout || (this.reconnectTimeout = setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee76() {
                return _regeneratorRuntime().wrap(function _callee76$(_context76) {
                  while (1) switch (_context76.prev = _context76.next) {
                    case 0:
                      _context76.next = 2;
                      return _this23.transportOpen()["catch"](function (e) {
                        return _this23.logger.error(e);
                      });
                    case 2:
                    case "end":
                      return _context76.stop();
                  }
                }, _callee76);
              })), cjs$3.toMiliseconds(ht$1))));
            case 7:
            case "end":
              return _context77.stop();
          }
        }, _callee77, this);
      }));
      function onProviderDisconnect() {
        return _onProviderDisconnect.apply(this, arguments);
      }
      return onProviderDisconnect;
    }()
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d8 = S$2("NOT_INITIALIZED", this.name),
          e = _d8.message;
        throw new Error(e);
      }
    }
  }, {
    key: "toEstablishConnection",
    value: function () {
      var _toEstablishConnection = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee78() {
        var _this24 = this;
        return _regeneratorRuntime().wrap(function _callee78$(_context78) {
          while (1) switch (_context78.prev = _context78.next) {
            case 0:
              _context78.next = 2;
              return this.confirmOnlineStateOrThrow();
            case 2:
              _context78.t0 = !this.connected;
              if (!_context78.t0) {
                _context78.next = 10;
                break;
              }
              _context78.t1 = this.connectionAttemptInProgress;
              if (!_context78.t1) {
                _context78.next = 8;
                break;
              }
              _context78.next = 8;
              return new Promise(function (e) {
                var t = setInterval(function () {
                  _this24.connected && (clearInterval(t), e());
                }, _this24.connectionStatusPollingInterval);
              });
            case 8:
              _context78.next = 10;
              return this.transportOpen();
            case 10:
            case "end":
              return _context78.stop();
          }
        }, _callee78, this);
      }));
      function toEstablishConnection() {
        return _toEstablishConnection.apply(this, arguments);
      }
      return toEstablishConnection;
    }()
  }]);
}(u);
var cn = Object.defineProperty,
  ii = Object.getOwnPropertySymbols,
  ln = Object.prototype.hasOwnProperty,
  un = Object.prototype.propertyIsEnumerable,
  si = function si(o, e, t) {
    return e in o ? cn(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  ri = function ri(o, e) {
    for (var t in e || (e = {})) ln.call(e, t) && si(o, t, e[t]);
    if (ii) {
      var _iterator5 = _createForOfIteratorHelper(ii(e)),
        _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var t = _step5.value;
          un.call(e, t) && si(o, t, e[t]);
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
    }
    return o;
  };
var ni = /*#__PURE__*/function (_Ci) {
  function ni(e, t, s) {
    var _this25;
    var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : x$2;
    var r = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : void 0;
    _classCallCheck(this, ni);
    _this25 = _callSuper(this, ni, [e, t, s, i]), _this25.core = e, _this25.logger = t, _this25.name = s, _this25.map = new Map(), _this25.version = ct$1, _this25.cached = [], _this25.initialized = !1, _this25.storagePrefix = x$2, _this25.recentlyDeleted = [], _this25.recentlyDeletedLimit = 200, _this25.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee79() {
      return _regeneratorRuntime().wrap(function _callee79$(_context79) {
        while (1) switch (_context79.prev = _context79.next) {
          case 0:
            _context79.t0 = _this25.initialized;
            if (_context79.t0) {
              _context79.next = 8;
              break;
            }
            _this25.logger.trace("Initialized");
            _context79.next = 5;
            return _this25.restore();
          case 5:
            _this25.cached.forEach(function (n) {
              _this25.getKey && n !== null && !I$2(n) ? _this25.map.set(_this25.getKey(n), n) : Yr$1(n) ? _this25.map.set(n.id, n) : Qr$1(n) && _this25.map.set(n.topic, n);
            });
            _this25.cached = [];
            _this25.initialized = !0;
          case 8:
          case "end":
            return _context79.stop();
        }
      }, _callee79);
    })), _this25.set = /*#__PURE__*/function () {
      var _ref42 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee80(n, a) {
        return _regeneratorRuntime().wrap(function _callee80$(_context80) {
          while (1) switch (_context80.prev = _context80.next) {
            case 0:
              _this25.isInitialized();
              if (!_this25.map.has(n)) {
                _context80.next = 6;
                break;
              }
              _context80.next = 4;
              return _this25.update(n, a);
            case 4:
              _context80.next = 11;
              break;
            case 6:
              _this25.logger.debug("Setting value");
              _this25.logger.trace({
                type: "method",
                method: "set",
                key: n,
                value: a
              });
              _this25.map.set(n, a);
              _context80.next = 11;
              return _this25.persist();
            case 11:
            case "end":
              return _context80.stop();
          }
        }, _callee80);
      }));
      return function (_x76, _x77) {
        return _ref42.apply(this, arguments);
      };
    }(), _this25.get = function (n) {
      return _this25.isInitialized(), _this25.logger.debug("Getting value"), _this25.logger.trace({
        type: "method",
        method: "get",
        key: n
      }), _this25.getData(n);
    }, _this25.getAll = function (n) {
      return _this25.isInitialized(), n ? _this25.values.filter(function (a) {
        return Object.keys(n).every(function (h) {
          return ys$1(a[h], n[h]);
        });
      }) : _this25.values;
    }, _this25.update = /*#__PURE__*/function () {
      var _ref43 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee81(n, a) {
        var h;
        return _regeneratorRuntime().wrap(function _callee81$(_context81) {
          while (1) switch (_context81.prev = _context81.next) {
            case 0:
              _this25.isInitialized(), _this25.logger.debug("Updating value"), _this25.logger.trace({
                type: "method",
                method: "update",
                key: n,
                update: a
              });
              h = ri(ri({}, _this25.getData(n)), a);
              _this25.map.set(n, h);
              _context81.next = 5;
              return _this25.persist();
            case 5:
            case "end":
              return _context81.stop();
          }
        }, _callee81);
      }));
      return function (_x78, _x79) {
        return _ref43.apply(this, arguments);
      };
    }(), _this25["delete"] = /*#__PURE__*/function () {
      var _ref44 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee82(n, a) {
        return _regeneratorRuntime().wrap(function _callee82$(_context82) {
          while (1) switch (_context82.prev = _context82.next) {
            case 0:
              _this25.isInitialized();
              _context82.t0 = _this25.map.has(n);
              if (!_context82.t0) {
                _context82.next = 9;
                break;
              }
              _this25.logger.debug("Deleting value");
              _this25.logger.trace({
                type: "method",
                method: "delete",
                key: n,
                reason: a
              });
              _this25.map["delete"](n);
              _this25.addToRecentlyDeleted(n);
              _context82.next = 9;
              return _this25.persist();
            case 9:
            case "end":
              return _context82.stop();
          }
        }, _callee82);
      }));
      return function (_x80, _x81) {
        return _ref44.apply(this, arguments);
      };
    }(), _this25.logger = E$4(t, _this25.name), _this25.storagePrefix = i, _this25.getKey = r;
    return _this25;
  }
  _inherits(ni, _Ci);
  return _createClass(ni, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "length",
    get: function get() {
      return this.map.size;
    }
  }, {
    key: "keys",
    get: function get() {
      return Array.from(this.map.keys());
    }
  }, {
    key: "values",
    get: function get() {
      return Array.from(this.map.values());
    }
  }, {
    key: "addToRecentlyDeleted",
    value: function addToRecentlyDeleted(e) {
      this.recentlyDeleted.push(e), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
    }
  }, {
    key: "setDataStore",
    value: function () {
      var _setDataStore = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee83(e) {
        return _regeneratorRuntime().wrap(function _callee83$(_context83) {
          while (1) switch (_context83.prev = _context83.next) {
            case 0:
              _context83.next = 2;
              return this.core.storage.setItem(this.storageKey, e);
            case 2:
            case "end":
              return _context83.stop();
          }
        }, _callee83, this);
      }));
      function setDataStore(_x82) {
        return _setDataStore.apply(this, arguments);
      }
      return setDataStore;
    }()
  }, {
    key: "getDataStore",
    value: function () {
      var _getDataStore = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee84() {
        return _regeneratorRuntime().wrap(function _callee84$(_context84) {
          while (1) switch (_context84.prev = _context84.next) {
            case 0:
              _context84.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              return _context84.abrupt("return", _context84.sent);
            case 3:
            case "end":
              return _context84.stop();
          }
        }, _callee84, this);
      }));
      function getDataStore() {
        return _getDataStore.apply(this, arguments);
      }
      return getDataStore;
    }()
  }, {
    key: "getData",
    value: function getData(e) {
      var t = this.map.get(e);
      if (!t) {
        if (this.recentlyDeleted.includes(e)) {
          var _d9 = S$2("MISSING_OR_INVALID", "Record was recently deleted - ".concat(this.name, ": ").concat(e)),
            i = _d9.message;
          throw this.logger.error(i), new Error(i);
        }
        var _d10 = S$2("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)),
          s = _d10.message;
        throw this.logger.error(s), new Error(s);
      }
      return t;
    }
  }, {
    key: "persist",
    value: function () {
      var _persist4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee85() {
        return _regeneratorRuntime().wrap(function _callee85$(_context85) {
          while (1) switch (_context85.prev = _context85.next) {
            case 0:
              _context85.next = 2;
              return this.setDataStore(this.values);
            case 2:
            case "end":
              return _context85.stop();
          }
        }, _callee85, this);
      }));
      function persist() {
        return _persist4.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "restore",
    value: function () {
      var _restore2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee86() {
        var e, _d11, t;
        return _regeneratorRuntime().wrap(function _callee86$(_context86) {
          while (1) switch (_context86.prev = _context86.next) {
            case 0:
              _context86.prev = 0;
              _context86.next = 3;
              return this.getDataStore();
            case 3:
              e = _context86.sent;
              if (!(_typeof(e) > "u" || !e.length)) {
                _context86.next = 6;
                break;
              }
              return _context86.abrupt("return");
            case 6:
              if (!this.map.size) {
                _context86.next = 9;
                break;
              }
              _d11 = S$2("RESTORE_WILL_OVERRIDE", this.name), t = _d11.message;
              throw this.logger.error(t), new Error(t);
            case 9:
              this.cached = e, this.logger.debug("Successfully Restored value for ".concat(this.name)), this.logger.trace({
                type: "method",
                method: "restore",
                value: this.values
              });
              _context86.next = 15;
              break;
            case 12:
              _context86.prev = 12;
              _context86.t0 = _context86["catch"](0);
              this.logger.debug("Failed to Restore value for ".concat(this.name)), this.logger.error(_context86.t0);
            case 15:
            case "end":
              return _context86.stop();
          }
        }, _callee86, this, [[0, 12]]);
      }));
      function restore() {
        return _restore2.apply(this, arguments);
      }
      return restore;
    }()
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d12 = S$2("NOT_INITIALIZED", this.name),
          e = _d12.message;
        throw new Error(e);
      }
    }
  }]);
}(p$1);
var oi = /*#__PURE__*/function () {
  function oi(e, t) {
    var _this26 = this;
    _classCallCheck(this, oi);
    this.core = e, this.logger = t, this.name = gt$1, this.version = yt$1, this.events = new es(), this.initialized = !1, this.storagePrefix = x$2, this.ignoredPayloadTypes = [D$2], this.registeredMethods = [], this.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee87() {
      return _regeneratorRuntime().wrap(function _callee87$(_context87) {
        while (1) switch (_context87.prev = _context87.next) {
          case 0:
            _context87.t0 = _this26.initialized;
            if (_context87.t0) {
              _context87.next = 10;
              break;
            }
            _context87.next = 4;
            return _this26.pairings.init();
          case 4:
            _context87.next = 6;
            return _this26.cleanup();
          case 6:
            _this26.registerRelayerEvents();
            _this26.registerExpirerEvents();
            _this26.initialized = !0;
            _this26.logger.trace("Initialized");
          case 10:
          case "end":
            return _context87.stop();
        }
      }, _callee87);
    })), this.register = function (_ref46) {
      var s = _ref46.methods;
      _this26.isInitialized(), _this26.registeredMethods = _toConsumableArray(new Set([].concat(_toConsumableArray(_this26.registeredMethods), _toConsumableArray(s))));
    }, this.create = /*#__PURE__*/function () {
      var _ref47 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee88(s) {
        var i, r, n, a, h, c;
        return _regeneratorRuntime().wrap(function _callee88$(_context88) {
          while (1) switch (_context88.prev = _context88.next) {
            case 0:
              _this26.isInitialized();
              i = pr$1();
              _context88.next = 4;
              return _this26.core.crypto.setSymKey(i);
            case 4:
              r = _context88.sent;
              n = Mt$1(cjs$3.FIVE_MINUTES);
              a = {
                protocol: rt$1
              };
              h = {
                topic: r,
                expiry: n,
                relay: a,
                active: !1,
                methods: s === null || s === void 0 ? void 0 : s.methods
              };
              c = Dr$1({
                protocol: _this26.core.protocol,
                version: _this26.core.version,
                topic: r,
                symKey: i,
                relay: a,
                expiryTimestamp: n,
                methods: s === null || s === void 0 ? void 0 : s.methods
              });
              _this26.events.emit(V$1.create, h);
              _this26.core.expirer.set(r, n);
              _context88.next = 13;
              return _this26.pairings.set(r, h);
            case 13:
              _context88.next = 15;
              return _this26.core.relayer.subscribe(r, {
                transportType: s === null || s === void 0 ? void 0 : s.transportType
              });
            case 15:
              return _context88.abrupt("return", {
                topic: r,
                uri: c
              });
            case 16:
            case "end":
              return _context88.stop();
          }
        }, _callee88);
      }));
      return function (_x83) {
        return _ref47.apply(this, arguments);
      };
    }(), this.pair = /*#__PURE__*/function () {
      var _ref48 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee89(s) {
        var i, _Me, r, n, a, h, c, l, p, D;
        return _regeneratorRuntime().wrap(function _callee89$(_context89) {
          while (1) switch (_context89.prev = _context89.next) {
            case 0:
              _this26.isInitialized();
              i = _this26.core.eventClient.createEvent({
                properties: {
                  topic: s === null || s === void 0 ? void 0 : s.uri,
                  trace: [z$2.pairing_started]
                }
              });
              _this26.isValidPair(s, i);
              _Me = kr$1(s.uri), r = _Me.topic, n = _Me.symKey, a = _Me.relay, h = _Me.expiryTimestamp, c = _Me.methods;
              i.props.properties.topic = r, i.addTrace(z$2.pairing_uri_validation_success), i.addTrace(z$2.pairing_uri_not_expired);
              if (!_this26.pairings.keys.includes(r)) {
                _context89.next = 9;
                break;
              }
              if (!(l = _this26.pairings.get(r), i.addTrace(z$2.existing_pairing), l.active)) {
                _context89.next = 8;
                break;
              }
              throw i.setError($$1.active_pairing_already_exists), new Error("Pairing already exists: ".concat(r, ". Please try again with a new connection URI."));
            case 8:
              i.addTrace(z$2.pairing_not_expired);
            case 9:
              p = h || Mt$1(cjs$3.FIVE_MINUTES), D = {
                topic: r,
                relay: a,
                expiry: p,
                active: !1,
                methods: c
              };
              _this26.core.expirer.set(r, p);
              _context89.next = 13;
              return _this26.pairings.set(r, D);
            case 13:
              i.addTrace(z$2.store_new_pairing);
              _context89.t0 = s.activatePairing;
              if (!_context89.t0) {
                _context89.next = 18;
                break;
              }
              _context89.next = 18;
              return _this26.activate({
                topic: r
              });
            case 18:
              _this26.events.emit(V$1.create, D);
              i.addTrace(z$2.emit_inactive_pairing);
              _context89.t1 = _this26.core.crypto.keychain.has(r);
              if (_context89.t1) {
                _context89.next = 24;
                break;
              }
              _context89.next = 24;
              return _this26.core.crypto.setSymKey(n, r);
            case 24:
              i.addTrace(z$2.subscribing_pairing_topic);
              _context89.prev = 25;
              _context89.next = 28;
              return _this26.core.relayer.confirmOnlineStateOrThrow();
            case 28:
              _context89.next = 33;
              break;
            case 30:
              _context89.prev = 30;
              _context89.t2 = _context89["catch"](25);
              i.setError($$1.no_internet_connection);
            case 33:
              _context89.prev = 33;
              _context89.next = 36;
              return _this26.core.relayer.subscribe(r, {
                relay: a
              });
            case 36:
              _context89.next = 41;
              break;
            case 38:
              _context89.prev = 38;
              _context89.t3 = _context89["catch"](33);
              throw i.setError($$1.subscribe_pairing_topic_failure), _context89.t3;
            case 41:
              return _context89.abrupt("return", (i.addTrace(z$2.subscribe_pairing_topic_success), D));
            case 42:
            case "end":
              return _context89.stop();
          }
        }, _callee89, null, [[25, 30], [33, 38]]);
      }));
      return function (_x84) {
        return _ref48.apply(this, arguments);
      };
    }(), this.activate = /*#__PURE__*/function () {
      var _ref50 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee90(_ref49) {
        var s, i;
        return _regeneratorRuntime().wrap(function _callee90$(_context90) {
          while (1) switch (_context90.prev = _context90.next) {
            case 0:
              s = _ref49.topic;
              _this26.isInitialized();
              i = Mt$1(cjs$3.THIRTY_DAYS);
              _this26.core.expirer.set(s, i);
              _context90.next = 6;
              return _this26.pairings.update(s, {
                active: !0,
                expiry: i
              });
            case 6:
            case "end":
              return _context90.stop();
          }
        }, _callee90);
      }));
      return function (_x85) {
        return _ref50.apply(this, arguments);
      };
    }(), this.ping = /*#__PURE__*/function () {
      var _ref51 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee91(s) {
        var i, r, _es, n, a, _h3;
        return _regeneratorRuntime().wrap(function _callee91$(_context91) {
          while (1) switch (_context91.prev = _context91.next) {
            case 0:
              _this26.isInitialized();
              _context91.next = 3;
              return _this26.isValidPing(s);
            case 3:
              i = s.topic;
              if (!_this26.pairings.keys.includes(i)) {
                _context91.next = 15;
                break;
              }
              _context91.next = 7;
              return _this26.sendRequest(i, "wc_pairingPing", {});
            case 7:
              r = _context91.sent;
              _es = _t$1();
              n = _es.done;
              a = _es.resolve;
              _h3 = _es.reject;
              _this26.events.once(Lt$1("pairing_ping", r), function (_ref52) {
                var c = _ref52.error;
                c ? _h3(c) : a();
              });
              _context91.next = 15;
              return n();
            case 15:
            case "end":
              return _context91.stop();
          }
        }, _callee91);
      }));
      return function (_x86) {
        return _ref51.apply(this, arguments);
      };
    }(), this.updateExpiry = /*#__PURE__*/function () {
      var _ref54 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee92(_ref53) {
        var s, i;
        return _regeneratorRuntime().wrap(function _callee92$(_context92) {
          while (1) switch (_context92.prev = _context92.next) {
            case 0:
              s = _ref53.topic, i = _ref53.expiry;
              _this26.isInitialized();
              _context92.next = 4;
              return _this26.pairings.update(s, {
                expiry: i
              });
            case 4:
            case "end":
              return _context92.stop();
          }
        }, _callee92);
      }));
      return function (_x87) {
        return _ref54.apply(this, arguments);
      };
    }(), this.updateMetadata = /*#__PURE__*/function () {
      var _ref56 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee93(_ref55) {
        var s, i;
        return _regeneratorRuntime().wrap(function _callee93$(_context93) {
          while (1) switch (_context93.prev = _context93.next) {
            case 0:
              s = _ref55.topic, i = _ref55.metadata;
              _this26.isInitialized();
              _context93.next = 4;
              return _this26.pairings.update(s, {
                peerMetadata: i
              });
            case 4:
            case "end":
              return _context93.stop();
          }
        }, _callee93);
      }));
      return function (_x88) {
        return _ref56.apply(this, arguments);
      };
    }(), this.getPairings = function () {
      return _this26.isInitialized(), _this26.pairings.values;
    }, this.disconnect = /*#__PURE__*/function () {
      var _ref57 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee94(s) {
        var i;
        return _regeneratorRuntime().wrap(function _callee94$(_context94) {
          while (1) switch (_context94.prev = _context94.next) {
            case 0:
              _this26.isInitialized();
              _context94.next = 3;
              return _this26.isValidDisconnect(s);
            case 3:
              i = s.topic;
              _context94.t0 = _this26.pairings.keys.includes(i);
              if (!_context94.t0) {
                _context94.next = 10;
                break;
              }
              _context94.next = 8;
              return _this26.sendRequest(i, "wc_pairingDelete", U$1("USER_DISCONNECTED"));
            case 8:
              _context94.next = 10;
              return _this26.deletePairing(i);
            case 10:
            case "end":
              return _context94.stop();
          }
        }, _callee94);
      }));
      return function (_x89) {
        return _ref57.apply(this, arguments);
      };
    }(), this.formatUriFromPairing = function (s) {
      _this26.isInitialized();
      var i = s.topic,
        r = s.relay,
        n = s.expiry,
        a = s.methods,
        h = _this26.core.crypto.keychain.get(i);
      return Dr$1({
        protocol: _this26.core.protocol,
        version: _this26.core.version,
        topic: i,
        symKey: h,
        relay: r,
        expiryTimestamp: n,
        methods: a
      });
    }, this.sendRequest = /*#__PURE__*/function () {
      var _ref58 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee95(s, i, r) {
        var n, a, h;
        return _regeneratorRuntime().wrap(function _callee95$(_context95) {
          while (1) switch (_context95.prev = _context95.next) {
            case 0:
              n = formatJsonRpcRequest(i, r);
              _context95.next = 3;
              return _this26.core.crypto.encode(s, n);
            case 3:
              a = _context95.sent;
              h = B$1[i].req;
              return _context95.abrupt("return", (_this26.core.history.set(s, n), _this26.core.relayer.publish(s, a, h), n.id));
            case 6:
            case "end":
              return _context95.stop();
          }
        }, _callee95);
      }));
      return function (_x90, _x91, _x92) {
        return _ref58.apply(this, arguments);
      };
    }(), this.sendResult = /*#__PURE__*/function () {
      var _ref59 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee96(s, i, r) {
        var n, a, h, c;
        return _regeneratorRuntime().wrap(function _callee96$(_context96) {
          while (1) switch (_context96.prev = _context96.next) {
            case 0:
              n = formatJsonRpcResult(s, r);
              _context96.next = 3;
              return _this26.core.crypto.encode(i, n);
            case 3:
              a = _context96.sent;
              _context96.next = 6;
              return _this26.core.history.get(i, s);
            case 6:
              h = _context96.sent;
              c = B$1[h.request.method].res;
              _context96.next = 10;
              return _this26.core.relayer.publish(i, a, c);
            case 10:
              _context96.next = 12;
              return _this26.core.history.resolve(n);
            case 12:
            case "end":
              return _context96.stop();
          }
        }, _callee96);
      }));
      return function (_x93, _x94, _x95) {
        return _ref59.apply(this, arguments);
      };
    }(), this.sendError = /*#__PURE__*/function () {
      var _ref60 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee97(s, i, r) {
        var n, a, h, c;
        return _regeneratorRuntime().wrap(function _callee97$(_context97) {
          while (1) switch (_context97.prev = _context97.next) {
            case 0:
              n = formatJsonRpcError(s, r);
              _context97.next = 3;
              return _this26.core.crypto.encode(i, n);
            case 3:
              a = _context97.sent;
              _context97.next = 6;
              return _this26.core.history.get(i, s);
            case 6:
              h = _context97.sent;
              c = B$1[h.request.method] ? B$1[h.request.method].res : B$1.unregistered_method.res;
              _context97.next = 10;
              return _this26.core.relayer.publish(i, a, c);
            case 10:
              _context97.next = 12;
              return _this26.core.history.resolve(n);
            case 12:
            case "end":
              return _context97.stop();
          }
        }, _callee97);
      }));
      return function (_x96, _x97, _x98) {
        return _ref60.apply(this, arguments);
      };
    }(), this.deletePairing = /*#__PURE__*/function () {
      var _ref61 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee98(s, i) {
        return _regeneratorRuntime().wrap(function _callee98$(_context98) {
          while (1) switch (_context98.prev = _context98.next) {
            case 0:
              _context98.next = 2;
              return _this26.core.relayer.unsubscribe(s);
            case 2:
              _context98.next = 4;
              return Promise.all([_this26.pairings["delete"](s, U$1("USER_DISCONNECTED")), _this26.core.crypto.deleteSymKey(s), i ? Promise.resolve() : _this26.core.expirer.del(s)]);
            case 4:
            case "end":
              return _context98.stop();
          }
        }, _callee98);
      }));
      return function (_x99, _x100) {
        return _ref61.apply(this, arguments);
      };
    }(), this.cleanup = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee99() {
      var s;
      return _regeneratorRuntime().wrap(function _callee99$(_context99) {
        while (1) switch (_context99.prev = _context99.next) {
          case 0:
            s = _this26.pairings.getAll().filter(function (i) {
              return Kt$1(i.expiry);
            });
            _context99.next = 3;
            return Promise.all(s.map(function (i) {
              return _this26.deletePairing(i.topic);
            }));
          case 3:
          case "end":
            return _context99.stop();
        }
      }, _callee99);
    })), this.onRelayEventRequest = function (s) {
      var i = s.topic,
        r = s.payload;
      switch (r.method) {
        case "wc_pairingPing":
          return _this26.onPairingPingRequest(i, r);
        case "wc_pairingDelete":
          return _this26.onPairingDeleteRequest(i, r);
        default:
          return _this26.onUnknownRpcMethodRequest(i, r);
      }
    }, this.onRelayEventResponse = /*#__PURE__*/function () {
      var _ref63 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee100(s) {
        var i, r, n;
        return _regeneratorRuntime().wrap(function _callee100$(_context100) {
          while (1) switch (_context100.prev = _context100.next) {
            case 0:
              i = s.topic;
              r = s.payload;
              _context100.next = 4;
              return _this26.core.history.get(i, r.id);
            case 4:
              n = _context100.sent.request.method;
              _context100.t0 = n;
              _context100.next = _context100.t0 === "wc_pairingPing" ? 8 : 9;
              break;
            case 8:
              return _context100.abrupt("return", _this26.onPairingPingResponse(i, r));
            case 9:
              return _context100.abrupt("return", _this26.onUnknownRpcMethodResponse(n));
            case 10:
            case "end":
              return _context100.stop();
          }
        }, _callee100);
      }));
      return function (_x101) {
        return _ref63.apply(this, arguments);
      };
    }(), this.onPairingPingRequest = /*#__PURE__*/function () {
      var _ref64 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee101(s, i) {
        var r;
        return _regeneratorRuntime().wrap(function _callee101$(_context101) {
          while (1) switch (_context101.prev = _context101.next) {
            case 0:
              r = i.id;
              _context101.prev = 1;
              _this26.isValidPing({
                topic: s
              });
              _context101.next = 5;
              return _this26.sendResult(r, s, !0);
            case 5:
              _this26.events.emit(V$1.ping, {
                id: r,
                topic: s
              });
              _context101.next = 13;
              break;
            case 8:
              _context101.prev = 8;
              _context101.t0 = _context101["catch"](1);
              _context101.next = 12;
              return _this26.sendError(r, s, _context101.t0);
            case 12:
              _this26.logger.error(_context101.t0);
            case 13:
            case "end":
              return _context101.stop();
          }
        }, _callee101, null, [[1, 8]]);
      }));
      return function (_x102, _x103) {
        return _ref64.apply(this, arguments);
      };
    }(), this.onPairingPingResponse = function (s, i) {
      var r = i.id;
      setTimeout(function () {
        isJsonRpcResult(i) ? _this26.events.emit(Lt$1("pairing_ping", r), {}) : isJsonRpcError(i) && _this26.events.emit(Lt$1("pairing_ping", r), {
          error: i.error
        });
      }, 500);
    }, this.onPairingDeleteRequest = /*#__PURE__*/function () {
      var _ref65 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee102(s, i) {
        var r;
        return _regeneratorRuntime().wrap(function _callee102$(_context102) {
          while (1) switch (_context102.prev = _context102.next) {
            case 0:
              r = i.id;
              _context102.prev = 1;
              _this26.isValidDisconnect({
                topic: s
              });
              _context102.next = 5;
              return _this26.deletePairing(s);
            case 5:
              _this26.events.emit(V$1["delete"], {
                id: r,
                topic: s
              });
              _context102.next = 13;
              break;
            case 8:
              _context102.prev = 8;
              _context102.t0 = _context102["catch"](1);
              _context102.next = 12;
              return _this26.sendError(r, s, _context102.t0);
            case 12:
              _this26.logger.error(_context102.t0);
            case 13:
            case "end":
              return _context102.stop();
          }
        }, _callee102, null, [[1, 8]]);
      }));
      return function (_x104, _x105) {
        return _ref65.apply(this, arguments);
      };
    }(), this.onUnknownRpcMethodRequest = /*#__PURE__*/function () {
      var _ref66 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee103(s, i) {
        var r, n, a;
        return _regeneratorRuntime().wrap(function _callee103$(_context103) {
          while (1) switch (_context103.prev = _context103.next) {
            case 0:
              r = i.id, n = i.method;
              _context103.prev = 1;
              if (!_this26.registeredMethods.includes(n)) {
                _context103.next = 4;
                break;
              }
              return _context103.abrupt("return");
            case 4:
              a = U$1("WC_METHOD_UNSUPPORTED", n);
              _context103.next = 7;
              return _this26.sendError(r, s, a);
            case 7:
              _this26.logger.error(a);
              _context103.next = 15;
              break;
            case 10:
              _context103.prev = 10;
              _context103.t0 = _context103["catch"](1);
              _context103.next = 14;
              return _this26.sendError(r, s, _context103.t0);
            case 14:
              _this26.logger.error(_context103.t0);
            case 15:
            case "end":
              return _context103.stop();
          }
        }, _callee103, null, [[1, 10]]);
      }));
      return function (_x106, _x107) {
        return _ref66.apply(this, arguments);
      };
    }(), this.onUnknownRpcMethodResponse = function (s) {
      _this26.registeredMethods.includes(s) || _this26.logger.error(U$1("WC_METHOD_UNSUPPORTED", s));
    }, this.isValidPair = function (s, i) {
      var r;
      if (!to(s)) {
        var _d13 = S$2("MISSING_OR_INVALID", "pair() params: ".concat(s)),
          a = _d13.message;
        throw i.setError($$1.malformed_pairing_uri), new Error(a);
      }
      if (!Gr$1(s.uri)) {
        var _d14 = S$2("MISSING_OR_INVALID", "pair() uri: ".concat(s.uri)),
          _a = _d14.message;
        throw i.setError($$1.malformed_pairing_uri), new Error(_a);
      }
      var n = kr$1(s === null || s === void 0 ? void 0 : s.uri);
      if (!((r = n === null || n === void 0 ? void 0 : n.relay) != null && r.protocol)) {
        var _d15 = S$2("MISSING_OR_INVALID", "pair() uri#relay-protocol"),
          _a2 = _d15.message;
        throw i.setError($$1.malformed_pairing_uri), new Error(_a2);
      }
      if (!(n != null && n.symKey)) {
        var _d16 = S$2("MISSING_OR_INVALID", "pair() uri#symKey"),
          _a3 = _d16.message;
        throw i.setError($$1.malformed_pairing_uri), new Error(_a3);
      }
      if (n != null && n.expiryTimestamp && cjs$3.toMiliseconds(n === null || n === void 0 ? void 0 : n.expiryTimestamp) < Date.now()) {
        i.setError($$1.pairing_expired);
        var _d17 = S$2("EXPIRED", "pair() URI has expired. Please try again with a new connection URI."),
          _a4 = _d17.message;
        throw new Error(_a4);
      }
    }, this.isValidPing = /*#__PURE__*/function () {
      var _ref67 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee104(s) {
        var _d18, r, i;
        return _regeneratorRuntime().wrap(function _callee104$(_context104) {
          while (1) switch (_context104.prev = _context104.next) {
            case 0:
              if (to(s)) {
                _context104.next = 3;
                break;
              }
              _d18 = S$2("MISSING_OR_INVALID", "ping() params: ".concat(s)), r = _d18.message;
              throw new Error(r);
            case 3:
              i = s.topic;
              _context104.next = 6;
              return _this26.isValidPairingTopic(i);
            case 6:
            case "end":
              return _context104.stop();
          }
        }, _callee104);
      }));
      return function (_x108) {
        return _ref67.apply(this, arguments);
      };
    }(), this.isValidDisconnect = /*#__PURE__*/function () {
      var _ref68 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee105(s) {
        var _d19, r, i;
        return _regeneratorRuntime().wrap(function _callee105$(_context105) {
          while (1) switch (_context105.prev = _context105.next) {
            case 0:
              if (to(s)) {
                _context105.next = 3;
                break;
              }
              _d19 = S$2("MISSING_OR_INVALID", "disconnect() params: ".concat(s)), r = _d19.message;
              throw new Error(r);
            case 3:
              i = s.topic;
              _context105.next = 6;
              return _this26.isValidPairingTopic(i);
            case 6:
            case "end":
              return _context105.stop();
          }
        }, _callee105);
      }));
      return function (_x109) {
        return _ref68.apply(this, arguments);
      };
    }(), this.isValidPairingTopic = /*#__PURE__*/function () {
      var _ref69 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee106(s) {
        var _d20, i, _d21, _i3, _d22, _i4;
        return _regeneratorRuntime().wrap(function _callee106$(_context106) {
          while (1) switch (_context106.prev = _context106.next) {
            case 0:
              if (b$1(s, !1)) {
                _context106.next = 3;
                break;
              }
              _d20 = S$2("MISSING_OR_INVALID", "pairing topic should be a string: ".concat(s)), i = _d20.message;
              throw new Error(i);
            case 3:
              if (_this26.pairings.keys.includes(s)) {
                _context106.next = 6;
                break;
              }
              _d21 = S$2("NO_MATCHING_KEY", "pairing topic doesn't exist: ".concat(s)), _i3 = _d21.message;
              throw new Error(_i3);
            case 6:
              if (!Kt$1(_this26.pairings.get(s).expiry)) {
                _context106.next = 11;
                break;
              }
              _context106.next = 9;
              return _this26.deletePairing(s);
            case 9:
              _d22 = S$2("EXPIRED", "pairing topic: ".concat(s)), _i4 = _d22.message;
              throw new Error(_i4);
            case 11:
            case "end":
              return _context106.stop();
          }
        }, _callee106);
      }));
      return function (_x110) {
        return _ref69.apply(this, arguments);
      };
    }(), this.core = e, this.logger = E$4(t, this.name), this.pairings = new ni(this.core, this.logger, this.name, this.storagePrefix);
  }
  return _createClass(oi, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d23 = S$2("NOT_INITIALIZED", this.name),
          e = _d23.message;
        throw new Error(e);
      }
    }
  }, {
    key: "registerRelayerEvents",
    value: function registerRelayerEvents() {
      var _this27 = this;
      this.core.relayer.on(v$2.message, /*#__PURE__*/function () {
        var _ref70 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee107(e) {
          var t, s, i, r;
          return _regeneratorRuntime().wrap(function _callee107$(_context107) {
            while (1) switch (_context107.prev = _context107.next) {
              case 0:
                t = e.topic, s = e.message, i = e.transportType;
                if (!(!_this27.pairings.keys.includes(t) || i === M.link_mode || _this27.ignoredPayloadTypes.includes(_this27.core.crypto.getPayloadType(s)))) {
                  _context107.next = 3;
                  break;
                }
                return _context107.abrupt("return");
              case 3:
                _context107.next = 5;
                return _this27.core.crypto.decode(t, s);
              case 5:
                r = _context107.sent;
                _context107.prev = 6;
                if (!isJsonRpcRequest(r)) {
                  _context107.next = 11;
                  break;
                }
                _this27.core.history.set(t, r), _this27.onRelayEventRequest({
                  topic: t,
                  payload: r
                });
                _context107.next = 18;
                break;
              case 11:
                _context107.t0 = isJsonRpcResponse(r);
                if (!_context107.t0) {
                  _context107.next = 18;
                  break;
                }
                _context107.next = 15;
                return _this27.core.history.resolve(r);
              case 15:
                _context107.next = 17;
                return _this27.onRelayEventResponse({
                  topic: t,
                  payload: r
                });
              case 17:
                _this27.core.history["delete"](t, r.id);
              case 18:
                _context107.next = 23;
                break;
              case 20:
                _context107.prev = 20;
                _context107.t1 = _context107["catch"](6);
                _this27.logger.error(_context107.t1);
              case 23:
              case "end":
                return _context107.stop();
            }
          }, _callee107, null, [[6, 20]]);
        }));
        return function (_x111) {
          return _ref70.apply(this, arguments);
        };
      }());
    }
  }, {
    key: "registerExpirerEvents",
    value: function registerExpirerEvents() {
      var _this28 = this;
      this.core.expirer.on(S$1.expired, /*#__PURE__*/function () {
        var _ref71 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee108(e) {
          var _ss, t;
          return _regeneratorRuntime().wrap(function _callee108$(_context108) {
            while (1) switch (_context108.prev = _context108.next) {
              case 0:
                _ss = Vt$1(e.target), t = _ss.topic;
                _context108.t0 = t && _this28.pairings.keys.includes(t);
                if (!_context108.t0) {
                  _context108.next = 6;
                  break;
                }
                _context108.next = 5;
                return _this28.deletePairing(t, !0);
              case 5:
                _this28.events.emit(V$1.expire, {
                  topic: t
                });
              case 6:
              case "end":
                return _context108.stop();
            }
          }, _callee108);
        }));
        return function (_x112) {
          return _ref71.apply(this, arguments);
        };
      }());
    }
  }]);
}();
var ai = /*#__PURE__*/function (_Pi) {
  function ai(e, t) {
    var _this29;
    _classCallCheck(this, ai);
    _this29 = _callSuper(this, ai, [e, t]), _this29.core = e, _this29.logger = t, _this29.records = new Map(), _this29.events = new eventsExports.EventEmitter(), _this29.name = Dt, _this29.version = mt, _this29.cached = [], _this29.initialized = !1, _this29.storagePrefix = x$2, _this29.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee109() {
      return _regeneratorRuntime().wrap(function _callee109$(_context109) {
        while (1) switch (_context109.prev = _context109.next) {
          case 0:
            _context109.t0 = _this29.initialized;
            if (_context109.t0) {
              _context109.next = 9;
              break;
            }
            _this29.logger.trace("Initialized");
            _context109.next = 5;
            return _this29.restore();
          case 5:
            _this29.cached.forEach(function (s) {
              return _this29.records.set(s.id, s);
            });
            _this29.cached = [];
            _this29.registerEventListeners();
            _this29.initialized = !0;
          case 9:
          case "end":
            return _context109.stop();
        }
      }, _callee109);
    })), _this29.set = function (s, i, r) {
      if (_this29.isInitialized(), _this29.logger.debug("Setting JSON-RPC request history record"), _this29.logger.trace({
        type: "method",
        method: "set",
        topic: s,
        request: i,
        chainId: r
      }), _this29.records.has(i.id)) return;
      var n = {
        id: i.id,
        topic: s,
        request: {
          method: i.method,
          params: i.params || null
        },
        chainId: r,
        expiry: Mt$1(cjs$3.THIRTY_DAYS)
      };
      _this29.records.set(n.id, n), _this29.persist(), _this29.events.emit(P$1.created, n);
    }, _this29.resolve = /*#__PURE__*/function () {
      var _ref73 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee110(s) {
        var i;
        return _regeneratorRuntime().wrap(function _callee110$(_context110) {
          while (1) switch (_context110.prev = _context110.next) {
            case 0:
              if (!(_this29.isInitialized(), _this29.logger.debug("Updating JSON-RPC response history record"), _this29.logger.trace({
                type: "method",
                method: "update",
                response: s
              }), !_this29.records.has(s.id))) {
                _context110.next = 2;
                break;
              }
              return _context110.abrupt("return");
            case 2:
              _context110.next = 4;
              return _this29.getRecord(s.id);
            case 4:
              i = _context110.sent;
              _typeof(i.response) > "u" && (i.response = isJsonRpcError(s) ? {
                error: s.error
              } : {
                result: s.result
              }, _this29.records.set(i.id, i), _this29.persist(), _this29.events.emit(P$1.updated, i));
            case 6:
            case "end":
              return _context110.stop();
          }
        }, _callee110);
      }));
      return function (_x113) {
        return _ref73.apply(this, arguments);
      };
    }(), _this29.get = /*#__PURE__*/function () {
      var _ref74 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee111(s, i) {
        return _regeneratorRuntime().wrap(function _callee111$(_context111) {
          while (1) switch (_context111.prev = _context111.next) {
            case 0:
              _this29.isInitialized();
              _this29.logger.debug("Getting record");
              _this29.logger.trace({
                type: "method",
                method: "get",
                topic: s,
                id: i
              });
              _context111.next = 5;
              return _this29.getRecord(i);
            case 5:
              return _context111.abrupt("return", _context111.sent);
            case 6:
            case "end":
              return _context111.stop();
          }
        }, _callee111);
      }));
      return function (_x114, _x115) {
        return _ref74.apply(this, arguments);
      };
    }(), _this29["delete"] = function (s, i) {
      _this29.isInitialized(), _this29.logger.debug("Deleting record"), _this29.logger.trace({
        type: "method",
        method: "delete",
        id: i
      }), _this29.values.forEach(function (r) {
        if (r.topic === s) {
          if (_typeof(i) < "u" && r.id !== i) return;
          _this29.records["delete"](r.id), _this29.events.emit(P$1.deleted, r);
        }
      }), _this29.persist();
    }, _this29.exists = /*#__PURE__*/function () {
      var _ref75 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee112(s, i) {
        return _regeneratorRuntime().wrap(function _callee112$(_context112) {
          while (1) switch (_context112.prev = _context112.next) {
            case 0:
              _this29.isInitialized();
              if (!_this29.records.has(i)) {
                _context112.next = 9;
                break;
              }
              _context112.next = 4;
              return _this29.getRecord(i);
            case 4:
              _context112.t1 = _context112.sent.topic;
              _context112.t2 = s;
              _context112.t0 = _context112.t1 === _context112.t2;
              _context112.next = 10;
              break;
            case 9:
              _context112.t0 = !1;
            case 10:
              return _context112.abrupt("return", _context112.t0);
            case 11:
            case "end":
              return _context112.stop();
          }
        }, _callee112);
      }));
      return function (_x116, _x117) {
        return _ref75.apply(this, arguments);
      };
    }(), _this29.on = function (s, i) {
      _this29.events.on(s, i);
    }, _this29.once = function (s, i) {
      _this29.events.once(s, i);
    }, _this29.off = function (s, i) {
      _this29.events.off(s, i);
    }, _this29.removeListener = function (s, i) {
      _this29.events.removeListener(s, i);
    }, _this29.logger = E$4(t, _this29.name);
    return _this29;
  }
  _inherits(ai, _Pi);
  return _createClass(ai, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "size",
    get: function get() {
      return this.records.size;
    }
  }, {
    key: "keys",
    get: function get() {
      return Array.from(this.records.keys());
    }
  }, {
    key: "values",
    get: function get() {
      return Array.from(this.records.values());
    }
  }, {
    key: "pending",
    get: function get() {
      var e = [];
      return this.values.forEach(function (t) {
        if (_typeof(t.response) < "u") return;
        var s = {
          topic: t.topic,
          request: formatJsonRpcRequest(t.request.method, t.request.params, t.id),
          chainId: t.chainId
        };
        return e.push(s);
      }), e;
    }
  }, {
    key: "setJsonRpcRecords",
    value: function () {
      var _setJsonRpcRecords = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee113(e) {
        return _regeneratorRuntime().wrap(function _callee113$(_context113) {
          while (1) switch (_context113.prev = _context113.next) {
            case 0:
              _context113.next = 2;
              return this.core.storage.setItem(this.storageKey, e);
            case 2:
            case "end":
              return _context113.stop();
          }
        }, _callee113, this);
      }));
      function setJsonRpcRecords(_x118) {
        return _setJsonRpcRecords.apply(this, arguments);
      }
      return setJsonRpcRecords;
    }()
  }, {
    key: "getJsonRpcRecords",
    value: function () {
      var _getJsonRpcRecords = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee114() {
        return _regeneratorRuntime().wrap(function _callee114$(_context114) {
          while (1) switch (_context114.prev = _context114.next) {
            case 0:
              _context114.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              return _context114.abrupt("return", _context114.sent);
            case 3:
            case "end":
              return _context114.stop();
          }
        }, _callee114, this);
      }));
      function getJsonRpcRecords() {
        return _getJsonRpcRecords.apply(this, arguments);
      }
      return getJsonRpcRecords;
    }()
  }, {
    key: "getRecord",
    value: function getRecord(e) {
      this.isInitialized();
      var t = this.records.get(e);
      if (!t) {
        var _d24 = S$2("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)),
          s = _d24.message;
        throw new Error(s);
      }
      return t;
    }
  }, {
    key: "persist",
    value: function () {
      var _persist5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee115() {
        return _regeneratorRuntime().wrap(function _callee115$(_context115) {
          while (1) switch (_context115.prev = _context115.next) {
            case 0:
              _context115.next = 2;
              return this.setJsonRpcRecords(this.values);
            case 2:
              this.events.emit(P$1.sync);
            case 3:
            case "end":
              return _context115.stop();
          }
        }, _callee115, this);
      }));
      function persist() {
        return _persist5.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "restore",
    value: function () {
      var _restore3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee116() {
        var e, _d25, t;
        return _regeneratorRuntime().wrap(function _callee116$(_context116) {
          while (1) switch (_context116.prev = _context116.next) {
            case 0:
              _context116.prev = 0;
              _context116.next = 3;
              return this.getJsonRpcRecords();
            case 3:
              e = _context116.sent;
              if (!(_typeof(e) > "u" || !e.length)) {
                _context116.next = 6;
                break;
              }
              return _context116.abrupt("return");
            case 6:
              if (!this.records.size) {
                _context116.next = 9;
                break;
              }
              _d25 = S$2("RESTORE_WILL_OVERRIDE", this.name), t = _d25.message;
              throw this.logger.error(t), new Error(t);
            case 9:
              this.cached = e, this.logger.debug("Successfully Restored records for ".concat(this.name)), this.logger.trace({
                type: "method",
                method: "restore",
                records: this.values
              });
              _context116.next = 15;
              break;
            case 12:
              _context116.prev = 12;
              _context116.t0 = _context116["catch"](0);
              this.logger.debug("Failed to Restore records for ".concat(this.name)), this.logger.error(_context116.t0);
            case 15:
            case "end":
              return _context116.stop();
          }
        }, _callee116, this, [[0, 12]]);
      }));
      function restore() {
        return _restore3.apply(this, arguments);
      }
      return restore;
    }()
  }, {
    key: "registerEventListeners",
    value: function registerEventListeners() {
      var _this30 = this;
      this.events.on(P$1.created, function (e) {
        var t = P$1.created;
        _this30.logger.info("Emitting ".concat(t)), _this30.logger.debug({
          type: "event",
          event: t,
          record: e
        });
      }), this.events.on(P$1.updated, function (e) {
        var t = P$1.updated;
        _this30.logger.info("Emitting ".concat(t)), _this30.logger.debug({
          type: "event",
          event: t,
          record: e
        });
      }), this.events.on(P$1.deleted, function (e) {
        var t = P$1.deleted;
        _this30.logger.info("Emitting ".concat(t)), _this30.logger.debug({
          type: "event",
          event: t,
          record: e
        });
      }), this.core.heartbeat.on(r$4.pulse, function () {
        _this30.cleanup();
      });
    }
  }, {
    key: "cleanup",
    value: function cleanup() {
      var _this31 = this;
      try {
        this.isInitialized();
        var e = !1;
        this.records.forEach(function (t) {
          cjs$3.toMiliseconds(t.expiry || 0) - Date.now() <= 0 && (_this31.logger.info("Deleting expired history log: ".concat(t.id)), _this31.records["delete"](t.id), _this31.events.emit(P$1.deleted, t, !1), e = !0);
        }), e && this.persist();
      } catch (e) {
        this.logger.warn(e);
      }
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d26 = S$2("NOT_INITIALIZED", this.name),
          e = _d26.message;
        throw new Error(e);
      }
    }
  }]);
}(h);
var hi = /*#__PURE__*/function (_Si) {
  function hi(e, t) {
    var _this32;
    _classCallCheck(this, hi);
    _this32 = _callSuper(this, hi, [e, t]), _this32.core = e, _this32.logger = t, _this32.expirations = new Map(), _this32.events = new eventsExports.EventEmitter(), _this32.name = bt, _this32.version = ft, _this32.cached = [], _this32.initialized = !1, _this32.storagePrefix = x$2, _this32.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee117() {
      return _regeneratorRuntime().wrap(function _callee117$(_context117) {
        while (1) switch (_context117.prev = _context117.next) {
          case 0:
            _context117.t0 = _this32.initialized;
            if (_context117.t0) {
              _context117.next = 9;
              break;
            }
            _this32.logger.trace("Initialized");
            _context117.next = 5;
            return _this32.restore();
          case 5:
            _this32.cached.forEach(function (s) {
              return _this32.expirations.set(s.target, s);
            });
            _this32.cached = [];
            _this32.registerEventListeners();
            _this32.initialized = !0;
          case 9:
          case "end":
            return _context117.stop();
        }
      }, _callee117);
    })), _this32.has = function (s) {
      try {
        var i = _this32.formatTarget(s);
        return _typeof(_this32.getExpiration(i)) < "u";
      } catch (_unused6) {
        return !1;
      }
    }, _this32.set = function (s, i) {
      _this32.isInitialized();
      var r = _this32.formatTarget(s),
        n = {
          target: r,
          expiry: i
        };
      _this32.expirations.set(r, n), _this32.checkExpiry(r, n), _this32.events.emit(S$1.created, {
        target: r,
        expiration: n
      });
    }, _this32.get = function (s) {
      _this32.isInitialized();
      var i = _this32.formatTarget(s);
      return _this32.getExpiration(i);
    }, _this32.del = function (s) {
      if (_this32.isInitialized(), _this32.has(s)) {
        var i = _this32.formatTarget(s),
          r = _this32.getExpiration(i);
        _this32.expirations["delete"](i), _this32.events.emit(S$1.deleted, {
          target: i,
          expiration: r
        });
      }
    }, _this32.on = function (s, i) {
      _this32.events.on(s, i);
    }, _this32.once = function (s, i) {
      _this32.events.once(s, i);
    }, _this32.off = function (s, i) {
      _this32.events.off(s, i);
    }, _this32.removeListener = function (s, i) {
      _this32.events.removeListener(s, i);
    }, _this32.logger = E$4(t, _this32.name);
    return _this32;
  }
  _inherits(hi, _Si);
  return _createClass(hi, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
    }
  }, {
    key: "length",
    get: function get() {
      return this.expirations.size;
    }
  }, {
    key: "keys",
    get: function get() {
      return Array.from(this.expirations.keys());
    }
  }, {
    key: "values",
    get: function get() {
      return Array.from(this.expirations.values());
    }
  }, {
    key: "formatTarget",
    value: function formatTarget(e) {
      if (typeof e == "string") return Dt$1(e);
      if (typeof e == "number") return xt$1(e);
      var _d27 = S$2("UNKNOWN_TYPE", "Target type: ".concat(_typeof(e))),
        t = _d27.message;
      throw new Error(t);
    }
  }, {
    key: "setExpirations",
    value: function () {
      var _setExpirations = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee118(e) {
        return _regeneratorRuntime().wrap(function _callee118$(_context118) {
          while (1) switch (_context118.prev = _context118.next) {
            case 0:
              _context118.next = 2;
              return this.core.storage.setItem(this.storageKey, e);
            case 2:
            case "end":
              return _context118.stop();
          }
        }, _callee118, this);
      }));
      function setExpirations(_x119) {
        return _setExpirations.apply(this, arguments);
      }
      return setExpirations;
    }()
  }, {
    key: "getExpirations",
    value: function () {
      var _getExpirations = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee119() {
        return _regeneratorRuntime().wrap(function _callee119$(_context119) {
          while (1) switch (_context119.prev = _context119.next) {
            case 0:
              _context119.next = 2;
              return this.core.storage.getItem(this.storageKey);
            case 2:
              return _context119.abrupt("return", _context119.sent);
            case 3:
            case "end":
              return _context119.stop();
          }
        }, _callee119, this);
      }));
      function getExpirations() {
        return _getExpirations.apply(this, arguments);
      }
      return getExpirations;
    }()
  }, {
    key: "persist",
    value: function () {
      var _persist6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee120() {
        return _regeneratorRuntime().wrap(function _callee120$(_context120) {
          while (1) switch (_context120.prev = _context120.next) {
            case 0:
              _context120.next = 2;
              return this.setExpirations(this.values);
            case 2:
              this.events.emit(S$1.sync);
            case 3:
            case "end":
              return _context120.stop();
          }
        }, _callee120, this);
      }));
      function persist() {
        return _persist6.apply(this, arguments);
      }
      return persist;
    }()
  }, {
    key: "restore",
    value: function () {
      var _restore4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee121() {
        var e, _d28, t;
        return _regeneratorRuntime().wrap(function _callee121$(_context121) {
          while (1) switch (_context121.prev = _context121.next) {
            case 0:
              _context121.prev = 0;
              _context121.next = 3;
              return this.getExpirations();
            case 3:
              e = _context121.sent;
              if (!(_typeof(e) > "u" || !e.length)) {
                _context121.next = 6;
                break;
              }
              return _context121.abrupt("return");
            case 6:
              if (!this.expirations.size) {
                _context121.next = 9;
                break;
              }
              _d28 = S$2("RESTORE_WILL_OVERRIDE", this.name), t = _d28.message;
              throw this.logger.error(t), new Error(t);
            case 9:
              this.cached = e, this.logger.debug("Successfully Restored expirations for ".concat(this.name)), this.logger.trace({
                type: "method",
                method: "restore",
                expirations: this.values
              });
              _context121.next = 15;
              break;
            case 12:
              _context121.prev = 12;
              _context121.t0 = _context121["catch"](0);
              this.logger.debug("Failed to Restore expirations for ".concat(this.name)), this.logger.error(_context121.t0);
            case 15:
            case "end":
              return _context121.stop();
          }
        }, _callee121, this, [[0, 12]]);
      }));
      function restore() {
        return _restore4.apply(this, arguments);
      }
      return restore;
    }()
  }, {
    key: "getExpiration",
    value: function getExpiration(e) {
      var t = this.expirations.get(e);
      if (!t) {
        var _d29 = S$2("NO_MATCHING_KEY", "".concat(this.name, ": ").concat(e)),
          s = _d29.message;
        throw this.logger.warn(s), new Error(s);
      }
      return t;
    }
  }, {
    key: "checkExpiry",
    value: function checkExpiry(e, t) {
      var s = t.expiry;
      cjs$3.toMiliseconds(s) - Date.now() <= 0 && this.expire(e, t);
    }
  }, {
    key: "expire",
    value: function expire(e, t) {
      this.expirations["delete"](e), this.events.emit(S$1.expired, {
        target: e,
        expiration: t
      });
    }
  }, {
    key: "checkExpirations",
    value: function checkExpirations() {
      var _this33 = this;
      this.core.relayer.connected && this.expirations.forEach(function (e, t) {
        return _this33.checkExpiry(t, e);
      });
    }
  }, {
    key: "registerEventListeners",
    value: function registerEventListeners() {
      var _this34 = this;
      this.core.heartbeat.on(r$4.pulse, function () {
        return _this34.checkExpirations();
      }), this.events.on(S$1.created, function (e) {
        var t = S$1.created;
        _this34.logger.info("Emitting ".concat(t)), _this34.logger.debug({
          type: "event",
          event: t,
          data: e
        }), _this34.persist();
      }), this.events.on(S$1.expired, function (e) {
        var t = S$1.expired;
        _this34.logger.info("Emitting ".concat(t)), _this34.logger.debug({
          type: "event",
          event: t,
          data: e
        }), _this34.persist();
      }), this.events.on(S$1.deleted, function (e) {
        var t = S$1.deleted;
        _this34.logger.info("Emitting ".concat(t)), _this34.logger.debug({
          type: "event",
          event: t,
          data: e
        }), _this34.persist();
      });
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _d30 = S$2("NOT_INITIALIZED", this.name),
          e = _d30.message;
        throw new Error(e);
      }
    }
  }]);
}(x$3);
var ci = /*#__PURE__*/function (_Ri) {
  function ci(e, t, s) {
    var _this35;
    _classCallCheck(this, ci);
    _this35 = _callSuper(this, ci, [e, t, s]), _this35.core = e, _this35.logger = t, _this35.store = s, _this35.name = _t, _this35.verifyUrlV3 = vt, _this35.storagePrefix = x$2, _this35.version = De, _this35.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee122() {
      var i;
      return _regeneratorRuntime().wrap(function _callee122$(_context122) {
        while (1) switch (_context122.prev = _context122.next) {
          case 0:
            _context122.t0 = _this35.isDevEnv;
            if (_context122.t0) {
              _context122.next = 10;
              break;
            }
            _context122.next = 4;
            return _this35.store.getItem(_this35.storeKey);
          case 4:
            _this35.publicKey = _context122.sent;
            _context122.t1 = _this35.publicKey && cjs$3.toMiliseconds((i = _this35.publicKey) == null ? void 0 : i.expiresAt) < Date.now();
            if (!_context122.t1) {
              _context122.next = 10;
              break;
            }
            _this35.logger.debug("verify v2 public key expired");
            _context122.next = 10;
            return _this35.removePublicKey();
          case 10:
          case "end":
            return _context122.stop();
        }
      }, _callee122);
    })), _this35.register = /*#__PURE__*/function () {
      var _ref78 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee123(i) {
        var r, n, a, h, c, l, p;
        return _regeneratorRuntime().wrap(function _callee123$(_context123) {
          while (1) switch (_context123.prev = _context123.next) {
            case 0:
              if (!(!V$2() || _this35.isDevEnv)) {
                _context123.next = 2;
                break;
              }
              return _context123.abrupt("return");
            case 2:
              r = window.location.origin, n = i.id, a = i.decryptedId, h = "".concat(_this35.verifyUrlV3, "/attestation?projectId=").concat(_this35.core.projectId, "&origin=").concat(r, "&id=").concat(n, "&decryptedId=").concat(a);
              _context123.prev = 3;
              c = getDocument_1();
              l = _this35.startAbortTimer(cjs$3.ONE_SECOND * 5);
              _context123.next = 8;
              return new Promise(function (D, m) {
                var u = function u() {
                  window.removeEventListener("message", _2), c.body.removeChild(g), m("attestation aborted");
                };
                _this35.abortController.signal.addEventListener("abort", u);
                var g = c.createElement("iframe");
                g.src = h, g.style.display = "none", g.addEventListener("error", u, {
                  signal: _this35.abortController.signal
                });
                var _2 = function _(y) {
                  if (y.data && typeof y.data == "string") try {
                    var b = JSON.parse(y.data);
                    if (b.type === "verify_attestation") {
                      if (decodeJWT(b.attestation).payload.id !== n) return;
                      clearInterval(l), c.body.removeChild(g), _this35.abortController.signal.removeEventListener("abort", u), window.removeEventListener("message", _2), D(b.attestation === null ? "" : b.attestation);
                    }
                  } catch (b) {
                    _this35.logger.warn(b);
                  }
                };
                c.body.appendChild(g), window.addEventListener("message", _2, {
                  signal: _this35.abortController.signal
                });
              });
            case 8:
              p = _context123.sent;
              return _context123.abrupt("return", (_this35.logger.debug("jwt attestation", p), p));
            case 12:
              _context123.prev = 12;
              _context123.t0 = _context123["catch"](3);
              _this35.logger.warn(_context123.t0);
            case 15:
              return _context123.abrupt("return", "");
            case 16:
            case "end":
              return _context123.stop();
          }
        }, _callee123, null, [[3, 12]]);
      }));
      return function (_x120) {
        return _ref78.apply(this, arguments);
      };
    }(), _this35.resolve = /*#__PURE__*/function () {
      var _ref79 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee124(i) {
        var r, n, a, c, h;
        return _regeneratorRuntime().wrap(function _callee124$(_context124) {
          while (1) switch (_context124.prev = _context124.next) {
            case 0:
              if (!_this35.isDevEnv) {
                _context124.next = 2;
                break;
              }
              return _context124.abrupt("return", "");
            case 2:
              r = i.attestationId, n = i.hash, a = i.encryptedId;
              if (!(r === "")) {
                _context124.next = 6;
                break;
              }
              _this35.logger.debug("resolve: attestationId is empty, skipping");
              return _context124.abrupt("return");
            case 6:
              if (!r) {
                _context124.next = 17;
                break;
              }
              if (!(decodeJWT(r).payload.id !== a)) {
                _context124.next = 9;
                break;
              }
              return _context124.abrupt("return");
            case 9:
              _context124.next = 11;
              return _this35.isValidJwtAttestation(r);
            case 11:
              c = _context124.sent;
              if (!c) {
                _context124.next = 17;
                break;
              }
              if (c.isVerified) {
                _context124.next = 16;
                break;
              }
              _this35.logger.warn("resolve: jwt attestation: origin url not verified");
              return _context124.abrupt("return");
            case 16:
              return _context124.abrupt("return", c);
            case 17:
              if (n) {
                _context124.next = 19;
                break;
              }
              return _context124.abrupt("return");
            case 19:
              h = _this35.getVerifyUrl(i === null || i === void 0 ? void 0 : i.verifyUrl);
              return _context124.abrupt("return", _this35.fetchAttestation(n, h));
            case 21:
            case "end":
              return _context124.stop();
          }
        }, _callee124);
      }));
      return function (_x121) {
        return _ref79.apply(this, arguments);
      };
    }(), _this35.fetchAttestation = /*#__PURE__*/function () {
      var _ref80 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee125(i, r) {
        var n, a;
        return _regeneratorRuntime().wrap(function _callee125$(_context125) {
          while (1) switch (_context125.prev = _context125.next) {
            case 0:
              _this35.logger.debug("resolving attestation: ".concat(i, " from url: ").concat(r));
              n = _this35.startAbortTimer(cjs$3.ONE_SECOND * 5);
              _context125.next = 4;
              return fetch("".concat(r, "/attestation/").concat(i, "?v2Supported=true"), {
                signal: _this35.abortController.signal
              });
            case 4:
              a = _context125.sent;
              clearTimeout(n);
              if (!(a.status === 200)) {
                _context125.next = 12;
                break;
              }
              _context125.next = 9;
              return a.json();
            case 9:
              _context125.t0 = _context125.sent;
              _context125.next = 13;
              break;
            case 12:
              _context125.t0 = void 0;
            case 13:
              return _context125.abrupt("return", _context125.t0);
            case 14:
            case "end":
              return _context125.stop();
          }
        }, _callee125);
      }));
      return function (_x122, _x123) {
        return _ref80.apply(this, arguments);
      };
    }(), _this35.getVerifyUrl = function (i) {
      var r = i || J$1;
      return wt.includes(r) || (_this35.logger.info("verify url: ".concat(r, ", not included in trusted list, assigning default: ").concat(J$1)), r = J$1), r;
    }, _this35.fetchPublicKey = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee126() {
      var i, r;
      return _regeneratorRuntime().wrap(function _callee126$(_context126) {
        while (1) switch (_context126.prev = _context126.next) {
          case 0:
            _context126.prev = 0;
            _this35.logger.debug("fetching public key from: ".concat(_this35.verifyUrlV3));
            i = _this35.startAbortTimer(cjs$3.FIVE_SECONDS);
            _context126.next = 5;
            return fetch("".concat(_this35.verifyUrlV3, "/public-key"), {
              signal: _this35.abortController.signal
            });
          case 5:
            r = _context126.sent;
            clearTimeout(i);
            _context126.next = 9;
            return r.json();
          case 9:
            return _context126.abrupt("return", _context126.sent);
          case 12:
            _context126.prev = 12;
            _context126.t0 = _context126["catch"](0);
            _this35.logger.warn(_context126.t0);
          case 15:
          case "end":
            return _context126.stop();
        }
      }, _callee126, null, [[0, 12]]);
    })), _this35.persistPublicKey = /*#__PURE__*/function () {
      var _ref82 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee127(i) {
        return _regeneratorRuntime().wrap(function _callee127$(_context127) {
          while (1) switch (_context127.prev = _context127.next) {
            case 0:
              _this35.logger.debug("persisting public key to local storage", i);
              _context127.next = 3;
              return _this35.store.setItem(_this35.storeKey, i);
            case 3:
              _this35.publicKey = i;
            case 4:
            case "end":
              return _context127.stop();
          }
        }, _callee127);
      }));
      return function (_x124) {
        return _ref82.apply(this, arguments);
      };
    }(), _this35.removePublicKey = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee128() {
      return _regeneratorRuntime().wrap(function _callee128$(_context128) {
        while (1) switch (_context128.prev = _context128.next) {
          case 0:
            _this35.logger.debug("removing verify v2 public key from storage");
            _context128.next = 3;
            return _this35.store.removeItem(_this35.storeKey);
          case 3:
            _this35.publicKey = void 0;
          case 4:
          case "end":
            return _context128.stop();
        }
      }, _callee128);
    })), _this35.isValidJwtAttestation = /*#__PURE__*/function () {
      var _ref84 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee129(i) {
        var r, n;
        return _regeneratorRuntime().wrap(function _callee129$(_context129) {
          while (1) switch (_context129.prev = _context129.next) {
            case 0:
              _context129.next = 2;
              return _this35.getPublicKey();
            case 2:
              r = _context129.sent;
              _context129.prev = 3;
              if (!r) {
                _context129.next = 6;
                break;
              }
              return _context129.abrupt("return", _this35.validateAttestation(i, r));
            case 6:
              _context129.next = 11;
              break;
            case 8:
              _context129.prev = 8;
              _context129.t0 = _context129["catch"](3);
              _this35.logger.error(_context129.t0), _this35.logger.warn("error validating attestation");
            case 11:
              _context129.next = 13;
              return _this35.fetchAndPersistPublicKey();
            case 13:
              n = _context129.sent;
              _context129.prev = 14;
              if (!n) {
                _context129.next = 17;
                break;
              }
              return _context129.abrupt("return", _this35.validateAttestation(i, n));
            case 17:
              _context129.next = 22;
              break;
            case 19:
              _context129.prev = 19;
              _context129.t1 = _context129["catch"](14);
              _this35.logger.error(_context129.t1), _this35.logger.warn("error validating attestation");
            case 22:
            case "end":
              return _context129.stop();
          }
        }, _callee129, null, [[3, 8], [14, 19]]);
      }));
      return function (_x125) {
        return _ref84.apply(this, arguments);
      };
    }(), _this35.getPublicKey = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee130() {
      return _regeneratorRuntime().wrap(function _callee130$(_context130) {
        while (1) switch (_context130.prev = _context130.next) {
          case 0:
            if (!_this35.publicKey) {
              _context130.next = 4;
              break;
            }
            _context130.t0 = _this35.publicKey;
            _context130.next = 7;
            break;
          case 4:
            _context130.next = 6;
            return _this35.fetchAndPersistPublicKey();
          case 6:
            _context130.t0 = _context130.sent;
          case 7:
            return _context130.abrupt("return", _context130.t0);
          case 8:
          case "end":
            return _context130.stop();
        }
      }, _callee130);
    })), _this35.fetchAndPersistPublicKey = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee132() {
      var i;
      return _regeneratorRuntime().wrap(function _callee132$(_context132) {
        while (1) switch (_context132.prev = _context132.next) {
          case 0:
            if (!_this35.fetchPromise) {
              _context132.next = 4;
              break;
            }
            _context132.next = 3;
            return _this35.fetchPromise;
          case 3:
            return _context132.abrupt("return", _this35.publicKey);
          case 4:
            _this35.fetchPromise = new Promise(/*#__PURE__*/function () {
              var _ref87 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee131(r) {
                var n;
                return _regeneratorRuntime().wrap(function _callee131$(_context131) {
                  while (1) switch (_context131.prev = _context131.next) {
                    case 0:
                      _context131.next = 2;
                      return _this35.fetchPublicKey();
                    case 2:
                      n = _context131.sent;
                      _context131.t0 = n;
                      if (!_context131.t0) {
                        _context131.next = 8;
                        break;
                      }
                      _context131.next = 7;
                      return _this35.persistPublicKey(n);
                    case 7:
                      r(n);
                    case 8:
                    case "end":
                      return _context131.stop();
                  }
                }, _callee131);
              }));
              return function (_x126) {
                return _ref87.apply(this, arguments);
              };
            }());
            _context132.next = 7;
            return _this35.fetchPromise;
          case 7:
            i = _context132.sent;
            return _context132.abrupt("return", (_this35.fetchPromise = void 0, i));
          case 9:
          case "end":
            return _context132.stop();
        }
      }, _callee132);
    })), _this35.validateAttestation = function (i, r) {
      var n = Rr$1(i, r.publicKey),
        a = {
          hasExpired: cjs$3.toMiliseconds(n.exp) < Date.now(),
          payload: n
        };
      if (a.hasExpired) throw _this35.logger.warn("resolve: jwt attestation expired"), new Error("JWT attestation expired");
      return {
        origin: a.payload.origin,
        isScam: a.payload.isScam,
        isVerified: a.payload.isVerified
      };
    }, _this35.logger = E$4(t, _this35.name), _this35.abortController = new AbortController(), _this35.isDevEnv = Wt$1(), _this35.init();
    return _this35;
  }
  _inherits(ci, _Ri);
  return _createClass(ci, [{
    key: "storeKey",
    get: function get() {
      return this.storagePrefix + this.version + this.core.customStoragePrefix + "//verify:public:key";
    }
  }, {
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "startAbortTimer",
    value: function startAbortTimer(e) {
      var _this36 = this;
      return this.abortController = new AbortController(), setTimeout(function () {
        return _this36.abortController.abort();
      }, cjs$3.toMiliseconds(e));
    }
  }]);
}(y$2);
var li = /*#__PURE__*/function (_xi) {
  function li(e, t) {
    var _this37;
    _classCallCheck(this, li);
    _this37 = _callSuper(this, li, [e, t]), _this37.projectId = e, _this37.logger = t, _this37.context = It, _this37.registerDeviceToken = /*#__PURE__*/function () {
      var _ref88 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee133(s) {
        var i, r, n, _s$enableEncrypted, a, h;
        return _regeneratorRuntime().wrap(function _callee133$(_context133) {
          while (1) switch (_context133.prev = _context133.next) {
            case 0:
              i = s.clientId, r = s.token, n = s.notificationType, _s$enableEncrypted = s.enableEncrypted, a = _s$enableEncrypted === void 0 ? !1 : _s$enableEncrypted, h = "".concat(Tt, "/").concat(_this37.projectId, "/clients");
              _context133.next = 3;
              return fetch(h, {
                method: "POST",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({
                  client_id: i,
                  type: n,
                  token: r,
                  always_raw: a
                })
              });
            case 3:
            case "end":
              return _context133.stop();
          }
        }, _callee133);
      }));
      return function (_x127) {
        return _ref88.apply(this, arguments);
      };
    }(), _this37.logger = E$4(t, _this37.context);
    return _this37;
  }
  _inherits(li, _xi);
  return _createClass(li);
}(v$3);
var dn = Object.defineProperty,
  ui = Object.getOwnPropertySymbols,
  pn = Object.prototype.hasOwnProperty,
  gn = Object.prototype.propertyIsEnumerable,
  di = function di(o, e, t) {
    return e in o ? dn(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  Z$1 = function Z(o, e) {
    for (var t in e || (e = {})) pn.call(e, t) && di(o, t, e[t]);
    if (ui) {
      var _iterator6 = _createForOfIteratorHelper(ui(e)),
        _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var t = _step6.value;
          gn.call(e, t) && di(o, t, e[t]);
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
    }
    return o;
  };
var pi = /*#__PURE__*/function (_Oi) {
  function pi(e, t) {
    var _this38;
    var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
    _classCallCheck(this, pi);
    _this38 = _callSuper(this, pi, [e, t, s]), _this38.core = e, _this38.logger = t, _this38.context = Pt, _this38.storagePrefix = x$2, _this38.storageVersion = Ct, _this38.events = new Map(), _this38.shouldPersist = !1, _this38.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee134() {
      var i;
      return _regeneratorRuntime().wrap(function _callee134$(_context134) {
        while (1) switch (_context134.prev = _context134.next) {
          case 0:
            if (Wt$1()) {
              _context134.next = 19;
              break;
            }
            _context134.prev = 1;
            _context134.t0 = Ht$1();
            _context134.t1 = Date.now();
            _context134.t2 = _this38.getAppDomain();
            _context134.next = 7;
            return _this38.core.crypto.getClientId();
          case 7:
            _context134.t3 = _context134.sent;
            _context134.t4 = Ge(_this38.core.relayer.protocol, _this38.core.relayer.version, se$1);
            _context134.t5 = {
              client_id: _context134.t3,
              user_agent: _context134.t4
            };
            _context134.t6 = {
              event: "INIT",
              type: "",
              properties: _context134.t5
            };
            i = {
              eventId: _context134.t0,
              timestamp: _context134.t1,
              domain: _context134.t2,
              props: _context134.t6
            };
            _context134.next = 14;
            return _this38.sendEvent([i]);
          case 14:
            _context134.next = 19;
            break;
          case 16:
            _context134.prev = 16;
            _context134.t7 = _context134["catch"](1);
            _this38.logger.warn(_context134.t7);
          case 19:
          case "end":
            return _context134.stop();
        }
      }, _callee134, null, [[1, 16]]);
    })), _this38.createEvent = function (i) {
      var _i$event = i.event,
        r = _i$event === void 0 ? "ERROR" : _i$event,
        _i$type = i.type,
        n = _i$type === void 0 ? "" : _i$type,
        _i$properties = i.properties,
        a = _i$properties.topic,
        h = _i$properties.trace,
        c = Ht$1(),
        l = _this38.core.projectId || "",
        p = Date.now(),
        D = Z$1({
          eventId: c,
          timestamp: p,
          props: {
            event: r,
            type: n,
            properties: {
              topic: a,
              trace: h
            }
          },
          bundleId: l,
          domain: _this38.getAppDomain()
        }, _this38.setMethods(c));
      return _this38.telemetryEnabled && (_this38.events.set(c, D), _this38.shouldPersist = !0), D;
    }, _this38.getEvent = function (i) {
      var r = i.eventId,
        n = i.topic;
      if (r) return _this38.events.get(r);
      var a = Array.from(_this38.events.values()).find(function (h) {
        return h.props.properties.topic === n;
      });
      if (a) return Z$1(Z$1({}, a), _this38.setMethods(a.eventId));
    }, _this38.deleteEvent = function (i) {
      var r = i.eventId;
      _this38.events["delete"](r), _this38.shouldPersist = !0;
    }, _this38.setEventListeners = function () {
      _this38.core.heartbeat.on(r$4.pulse, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee135() {
        return _regeneratorRuntime().wrap(function _callee135$(_context135) {
          while (1) switch (_context135.prev = _context135.next) {
            case 0:
              _context135.t0 = _this38.shouldPersist;
              if (!_context135.t0) {
                _context135.next = 4;
                break;
              }
              _context135.next = 4;
              return _this38.persist();
            case 4:
              _this38.events.forEach(function (i) {
                cjs$3.fromMiliseconds(Date.now()) - cjs$3.fromMiliseconds(i.timestamp) > St && (_this38.events["delete"](i.eventId), _this38.shouldPersist = !0);
              });
            case 5:
            case "end":
              return _context135.stop();
          }
        }, _callee135);
      })));
    }, _this38.setMethods = function (i) {
      return {
        addTrace: function addTrace(r) {
          return _this38.addTrace(i, r);
        },
        setError: function setError(r) {
          return _this38.setError(i, r);
        }
      };
    }, _this38.addTrace = function (i, r) {
      var n = _this38.events.get(i);
      n && (n.props.properties.trace.push(r), _this38.events.set(i, n), _this38.shouldPersist = !0);
    }, _this38.setError = function (i, r) {
      var n = _this38.events.get(i);
      n && (n.props.type = r, n.timestamp = Date.now(), _this38.events.set(i, n), _this38.shouldPersist = !0);
    }, _this38.persist = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee136() {
      return _regeneratorRuntime().wrap(function _callee136$(_context136) {
        while (1) switch (_context136.prev = _context136.next) {
          case 0:
            _context136.next = 2;
            return _this38.core.storage.setItem(_this38.storageKey, Array.from(_this38.events.values()));
          case 2:
            _this38.shouldPersist = !1;
          case 3:
          case "end":
            return _context136.stop();
        }
      }, _callee136);
    })), _this38.restore = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee137() {
      var i;
      return _regeneratorRuntime().wrap(function _callee137$(_context137) {
        while (1) switch (_context137.prev = _context137.next) {
          case 0:
            _context137.prev = 0;
            _context137.next = 3;
            return _this38.core.storage.getItem(_this38.storageKey);
          case 3:
            _context137.t0 = _context137.sent;
            if (_context137.t0) {
              _context137.next = 6;
              break;
            }
            _context137.t0 = [];
          case 6:
            i = _context137.t0;
            if (i.length) {
              _context137.next = 9;
              break;
            }
            return _context137.abrupt("return");
          case 9:
            i.forEach(function (r) {
              _this38.events.set(r.eventId, Z$1(Z$1({}, r), _this38.setMethods(r.eventId)));
            });
            _context137.next = 15;
            break;
          case 12:
            _context137.prev = 12;
            _context137.t1 = _context137["catch"](0);
            _this38.logger.warn(_context137.t1);
          case 15:
          case "end":
            return _context137.stop();
        }
      }, _callee137, null, [[0, 12]]);
    })), _this38.submit = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee138() {
      var i, _iterator7, _step7, _step7$value, _r2, n, _iterator8, _step8, r;
      return _regeneratorRuntime().wrap(function _callee138$(_context138) {
        while (1) switch (_context138.prev = _context138.next) {
          case 0:
            if (!(!_this38.telemetryEnabled || _this38.events.size === 0)) {
              _context138.next = 2;
              break;
            }
            return _context138.abrupt("return");
          case 2:
            i = [];
            _iterator7 = _createForOfIteratorHelper(_this38.events);
            try {
              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                _step7$value = _slicedToArray(_step7.value, 2), _r2 = _step7$value[0], n = _step7$value[1];
                n.props.type && i.push(n);
              }
            } catch (err) {
              _iterator7.e(err);
            } finally {
              _iterator7.f();
            }
            if (!(i.length !== 0)) {
              _context138.next = 17;
              break;
            }
            _context138.prev = 6;
            _context138.next = 9;
            return _this38.sendEvent(i);
          case 9:
            if (!_context138.sent.ok) {
              _context138.next = 12;
              break;
            }
            _iterator8 = _createForOfIteratorHelper(i);
            try {
              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                r = _step8.value;
                _this38.events["delete"](r.eventId), _this38.shouldPersist = !0;
              }
            } catch (err) {
              _iterator8.e(err);
            } finally {
              _iterator8.f();
            }
          case 12:
            _context138.next = 17;
            break;
          case 14:
            _context138.prev = 14;
            _context138.t0 = _context138["catch"](6);
            _this38.logger.warn(_context138.t0);
          case 17:
          case "end":
            return _context138.stop();
        }
      }, _callee138, null, [[6, 14]]);
    })), _this38.sendEvent = /*#__PURE__*/function () {
      var _ref94 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee139(i) {
        var r;
        return _regeneratorRuntime().wrap(function _callee139$(_context139) {
          while (1) switch (_context139.prev = _context139.next) {
            case 0:
              r = _this38.getAppDomain() ? "" : "&sp=desktop";
              _context139.next = 3;
              return fetch("".concat(Rt, "?projectId=").concat(_this38.core.projectId, "&st=events_sdk&sv=js-").concat(se$1).concat(r), {
                method: "POST",
                body: JSON.stringify(i)
              });
            case 3:
              return _context139.abrupt("return", _context139.sent);
            case 4:
            case "end":
              return _context139.stop();
          }
        }, _callee139);
      }));
      return function (_x128) {
        return _ref94.apply(this, arguments);
      };
    }(), _this38.getAppDomain = function () {
      return Nt$1().url;
    }, _this38.logger = E$4(t, _this38.context), _this38.telemetryEnabled = s, s ? _this38.restore().then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee140() {
      return _regeneratorRuntime().wrap(function _callee140$(_context140) {
        while (1) switch (_context140.prev = _context140.next) {
          case 0:
            _context140.next = 2;
            return _this38.submit();
          case 2:
            _this38.setEventListeners();
          case 3:
          case "end":
            return _context140.stop();
        }
      }, _callee140);
    }))) : _this38.persist();
    return _this38;
  }
  _inherits(pi, _Oi);
  return _createClass(pi, [{
    key: "storageKey",
    get: function get() {
      return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + "//" + this.context;
    }
  }]);
}(C$2);
var yn = Object.defineProperty,
  gi = Object.getOwnPropertySymbols,
  Dn = Object.prototype.hasOwnProperty,
  mn = Object.prototype.propertyIsEnumerable,
  yi = function yi(o, e, t) {
    return e in o ? yn(o, e, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: t
    }) : o[e] = t;
  },
  Di = function Di(o, e) {
    for (var t in e || (e = {})) Dn.call(e, t) && yi(o, t, e[t]);
    if (gi) {
      var _iterator9 = _createForOfIteratorHelper(gi(e)),
        _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
          var t = _step9.value;
          mn.call(e, t) && yi(o, t, e[t]);
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
    }
    return o;
  };
var ne$1 = /*#__PURE__*/function (_Ai) {
  function ne(e) {
    var _this39;
    _classCallCheck(this, ne);
    var t;
    _this39 = _callSuper(this, ne, [e]), _this39.protocol = ye$1, _this39.version = De, _this39.name = ie$1, _this39.events = new eventsExports.EventEmitter(), _this39.initialized = !1, _this39.on = function (n, a) {
      return _this39.events.on(n, a);
    }, _this39.once = function (n, a) {
      return _this39.events.once(n, a);
    }, _this39.off = function (n, a) {
      return _this39.events.off(n, a);
    }, _this39.removeListener = function (n, a) {
      return _this39.events.removeListener(n, a);
    }, _this39.dispatchEnvelope = function (_ref96) {
      var n = _ref96.topic,
        a = _ref96.message,
        h = _ref96.sessionExists;
      if (!n || !a) return;
      var c = {
        topic: n,
        message: a,
        publishedAt: Date.now(),
        transportType: M.link_mode
      };
      _this39.relayer.onLinkMessageEvent(c, {
        sessionExists: h
      });
    }, _this39.projectId = e === null || e === void 0 ? void 0 : e.projectId, _this39.relayUrl = (e === null || e === void 0 ? void 0 : e.relayUrl) || be$1, _this39.customStoragePrefix = e != null && e.customStoragePrefix ? ":".concat(e.customStoragePrefix) : "";
    var s = k$4({
        level: typeof (e === null || e === void 0 ? void 0 : e.logger) == "string" && e.logger ? e.logger : Ye.logger
      }),
      _Ei = A$3({
        opts: s,
        maxSizeInBytes: e === null || e === void 0 ? void 0 : e.maxLogBlobSizeInBytes,
        loggerOverride: e === null || e === void 0 ? void 0 : e.logger
      }),
      i = _Ei.logger,
      r = _Ei.chunkLoggerController;
    _this39.logChunkController = r, (t = _this39.logChunkController) != null && t.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee141() {
      var n, a;
      return _regeneratorRuntime().wrap(function _callee141$(_context141) {
        while (1) switch (_context141.prev = _context141.next) {
          case 0:
            _context141.t0 = (n = _this39.logChunkController) != null && n.downloadLogsBlobInBrowser;
            if (!_context141.t0) {
              _context141.next = 10;
              break;
            }
            _context141.t1 = (a = _this39.logChunkController) == null;
            if (_context141.t1) {
              _context141.next = 10;
              break;
            }
            _context141.t2 = a;
            _context141.next = 7;
            return _this39.crypto.getClientId();
          case 7:
            _context141.t3 = _context141.sent;
            _context141.t4 = {
              clientId: _context141.t3
            };
            _context141.t2.downloadLogsBlobInBrowser.call(_context141.t2, _context141.t4);
          case 10:
          case "end":
            return _context141.stop();
        }
      }, _callee141);
    }))), _this39.logger = E$4(i, _this39.name), _this39.heartbeat = new i$2(), _this39.crypto = new Ht(_this39, _this39.logger, e === null || e === void 0 ? void 0 : e.keychain), _this39.history = new ai(_this39, _this39.logger), _this39.expirer = new hi(_this39, _this39.logger), _this39.storage = e != null && e.storage ? e.storage : new h$4(Di(Di({}, Je), e === null || e === void 0 ? void 0 : e.storageOptions)), _this39.relayer = new ti({
      core: _this39,
      logger: _this39.logger,
      relayUrl: _this39.relayUrl,
      projectId: _this39.projectId
    }), _this39.pairing = new oi(_this39, _this39.logger), _this39.verify = new ci(_this39, _this39.logger, _this39.storage), _this39.echoClient = new li(_this39.projectId || "", _this39.logger), _this39.linkModeSupportedApps = [], _this39.eventClient = new pi(_this39, _this39.logger, e === null || e === void 0 ? void 0 : e.telemetryEnabled);
    return _this39;
  }
  _inherits(ne, _Ai);
  return _createClass(ne, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "start",
    value: function () {
      var _start = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee142() {
        return _regeneratorRuntime().wrap(function _callee142$(_context142) {
          while (1) switch (_context142.prev = _context142.next) {
            case 0:
              _context142.t0 = this.initialized;
              if (_context142.t0) {
                _context142.next = 4;
                break;
              }
              _context142.next = 4;
              return this.initialize();
            case 4:
            case "end":
              return _context142.stop();
          }
        }, _callee142, this);
      }));
      function start() {
        return _start.apply(this, arguments);
      }
      return start;
    }()
  }, {
    key: "getLogsBlob",
    value: function () {
      var _getLogsBlob = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee143() {
        var e;
        return _regeneratorRuntime().wrap(function _callee143$(_context143) {
          while (1) switch (_context143.prev = _context143.next) {
            case 0:
              if (!((e = this.logChunkController) == null)) {
                _context143.next = 4;
                break;
              }
              _context143.t0 = void 0;
              _context143.next = 10;
              break;
            case 4:
              _context143.t1 = e;
              _context143.next = 7;
              return this.crypto.getClientId();
            case 7:
              _context143.t2 = _context143.sent;
              _context143.t3 = {
                clientId: _context143.t2
              };
              _context143.t0 = _context143.t1.logsToBlob.call(_context143.t1, _context143.t3);
            case 10:
              return _context143.abrupt("return", _context143.t0);
            case 11:
            case "end":
              return _context143.stop();
          }
        }, _callee143, this);
      }));
      function getLogsBlob() {
        return _getLogsBlob.apply(this, arguments);
      }
      return getLogsBlob;
    }()
  }, {
    key: "addLinkModeSupportedApp",
    value: function () {
      var _addLinkModeSupportedApp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee144(e) {
        return _regeneratorRuntime().wrap(function _callee144$(_context144) {
          while (1) switch (_context144.prev = _context144.next) {
            case 0:
              _context144.t0 = this.linkModeSupportedApps.includes(e);
              if (_context144.t0) {
                _context144.next = 5;
                break;
              }
              this.linkModeSupportedApps.push(e);
              _context144.next = 5;
              return this.storage.setItem(fe, this.linkModeSupportedApps);
            case 5:
            case "end":
              return _context144.stop();
          }
        }, _callee144, this);
      }));
      function addLinkModeSupportedApp(_x129) {
        return _addLinkModeSupportedApp.apply(this, arguments);
      }
      return addLinkModeSupportedApp;
    }()
  }, {
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee145() {
        return _regeneratorRuntime().wrap(function _callee145$(_context145) {
          while (1) switch (_context145.prev = _context145.next) {
            case 0:
              this.logger.trace("Initialized");
              _context145.prev = 1;
              _context145.next = 4;
              return this.crypto.init();
            case 4:
              _context145.next = 6;
              return this.history.init();
            case 6:
              _context145.next = 8;
              return this.expirer.init();
            case 8:
              _context145.next = 10;
              return this.relayer.init();
            case 10:
              _context145.next = 12;
              return this.heartbeat.init();
            case 12:
              _context145.next = 14;
              return this.pairing.init();
            case 14:
              this.eventClient.init();
              _context145.next = 17;
              return this.storage.getItem(fe);
            case 17:
              _context145.t0 = _context145.sent;
              if (_context145.t0) {
                _context145.next = 20;
                break;
              }
              _context145.t0 = [];
            case 20:
              this.linkModeSupportedApps = _context145.t0;
              this.initialized = !0;
              this.logger.info("Core Initialization Success");
              _context145.next = 28;
              break;
            case 25:
              _context145.prev = 25;
              _context145.t1 = _context145["catch"](1);
              throw this.logger.warn("Core Initialization Failure at epoch ".concat(Date.now()), _context145.t1), this.logger.error(_context145.t1.message), _context145.t1;
            case 28:
            case "end":
              return _context145.stop();
          }
        }, _callee145, this, [[1, 25]]);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
  }], [{
    key: "init",
    value: function () {
      var _init2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee146(e) {
        var t, s;
        return _regeneratorRuntime().wrap(function _callee146$(_context146) {
          while (1) switch (_context146.prev = _context146.next) {
            case 0:
              t = new ne(e);
              _context146.next = 3;
              return t.initialize();
            case 3:
              _context146.next = 5;
              return t.crypto.getClientId();
            case 5:
              s = _context146.sent;
              _context146.next = 8;
              return t.storage.setItem(lt$1, s);
            case 8:
              return _context146.abrupt("return", t);
            case 9:
            case "end":
              return _context146.stop();
          }
        }, _callee146);
      }));
      function init(_x130) {
        return _init2.apply(this, arguments);
      }
      return init;
    }()
  }]);
}(n);
var bn = ne$1;

var be = "wc",
  Ce = 2,
  Le = "client",
  ye = "".concat(be, "@").concat(Ce, ":").concat(Le, ":"),
  we = {
    name: Le,
    logger: "error",
    controller: !1,
    relayUrl: "wss://relay.walletconnect.org"
  },
  cs = {
    session_proposal: "session_proposal",
    session_update: "session_update",
    session_extend: "session_extend",
    session_ping: "session_ping",
    session_delete: "session_delete",
    session_expire: "session_expire",
    session_request: "session_request",
    session_request_sent: "session_request_sent",
    session_event: "session_event",
    proposal_expire: "proposal_expire",
    session_authenticate: "session_authenticate",
    session_request_expire: "session_request_expire"
  },
  ls = {
    database: ":memory:"
  },
  xe = "WALLETCONNECT_DEEPLINK_CHOICE",
  ps = {
    created: "history_created",
    updated: "history_updated",
    deleted: "history_deleted",
    sync: "history_sync"
  },
  hs = "history",
  ds = "0.3",
  st = "proposal",
  us = cjs$3.THIRTY_DAYS,
  it = "Proposal expired",
  rt = "session",
  z$1 = cjs$3.SEVEN_DAYS,
  nt = "engine",
  v$1 = {
    wc_sessionPropose: {
      req: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !0,
        tag: 1100
      },
      res: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !1,
        tag: 1101
      },
      reject: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !1,
        tag: 1120
      },
      autoReject: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !1,
        tag: 1121
      }
    },
    wc_sessionSettle: {
      req: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !1,
        tag: 1102
      },
      res: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !1,
        tag: 1103
      }
    },
    wc_sessionUpdate: {
      req: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1104
      },
      res: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1105
      }
    },
    wc_sessionExtend: {
      req: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1106
      },
      res: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1107
      }
    },
    wc_sessionRequest: {
      req: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !0,
        tag: 1108
      },
      res: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !1,
        tag: 1109
      }
    },
    wc_sessionEvent: {
      req: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !0,
        tag: 1110
      },
      res: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !1,
        tag: 1111
      }
    },
    wc_sessionDelete: {
      req: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1112
      },
      res: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1113
      }
    },
    wc_sessionPing: {
      req: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1114
      },
      res: {
        ttl: cjs$3.ONE_DAY,
        prompt: !1,
        tag: 1115
      }
    },
    wc_sessionAuthenticate: {
      req: {
        ttl: cjs$3.ONE_HOUR,
        prompt: !0,
        tag: 1116
      },
      res: {
        ttl: cjs$3.ONE_HOUR,
        prompt: !1,
        tag: 1117
      },
      reject: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !1,
        tag: 1118
      },
      autoReject: {
        ttl: cjs$3.FIVE_MINUTES,
        prompt: !1,
        tag: 1119
      }
    }
  },
  me = {
    min: cjs$3.FIVE_MINUTES,
    max: cjs$3.SEVEN_DAYS
  },
  x$1 = {
    idle: "IDLE",
    active: "ACTIVE"
  },
  ot = "request",
  at = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest", "wc_sessionAuthenticate"],
  ct = "wc",
  gs = 1.5,
  lt = "auth",
  pt = "authKeys",
  ht = "pairingTopics",
  dt = "requests",
  oe = "".concat(ct, "@", 1.5, ":").concat(lt, ":"),
  ae = "".concat(oe, ":PUB_KEY");
var ys = Object.defineProperty,
  ws = Object.defineProperties,
  ms = Object.getOwnPropertyDescriptors,
  ut = Object.getOwnPropertySymbols,
  _s = Object.prototype.hasOwnProperty,
  Es = Object.prototype.propertyIsEnumerable,
  gt = function gt(q, o, e) {
    return o in q ? ys(q, o, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: e
    }) : q[o] = e;
  },
  I = function I(q, o) {
    for (var e in o || (o = {})) _s.call(o, e) && gt(q, e, o[e]);
    if (ut) {
      var _iterator = _createForOfIteratorHelper(ut(o)),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var e = _step.value;
          Es.call(o, e) && gt(q, e, o[e]);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return q;
  },
  D$1 = function D(q, o) {
    return ws(q, ms(o));
  };
var Rs = /*#__PURE__*/function (_Ot) {
  function Rs(o) {
    var _this;
    _classCallCheck(this, Rs);
    _this = _callSuper(this, Rs, [o]), _this.name = nt, _this.events = new es(), _this.initialized = !1, _this.requestQueue = {
      state: x$1.idle,
      queue: []
    }, _this.sessionRequestQueue = {
      state: x$1.idle,
      queue: []
    }, _this.requestQueueDelay = cjs$3.ONE_SECOND, _this.expectedPairingMethodMap = new Map(), _this.recentlyDeletedMap = new Map(), _this.recentlyDeletedLimit = 200, _this.relayMessageCache = [], _this.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = _this.initialized;
            if (_context.t0) {
              _context.next = 12;
              break;
            }
            _context.next = 4;
            return _this.cleanup();
          case 4:
            _this.registerRelayerEvents();
            _this.registerExpirerEvents();
            _this.registerPairingEvents();
            _context.next = 9;
            return _this.registerLinkModeListeners();
          case 9:
            _this.client.core.pairing.register({
              methods: Object.keys(v$1)
            });
            _this.initialized = !0;
            setTimeout(function () {
              _this.sessionRequestQueue.queue = _this.getPendingSessionRequests(), _this.processSessionRequestQueue();
            }, cjs$3.toMiliseconds(_this.requestQueueDelay));
          case 12:
          case "end":
            return _context.stop();
        }
      }, _callee);
    })), _this.connect = /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {
        var t, s, i, r, n, a, c, h, p, _yield$_this$client$c, E, S, _u, _E, d, l, w, m, _Y, y, _, R, V;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _this.isInitialized();
              _context3.next = 3;
              return _this.confirmOnlineStateOrThrow();
            case 3:
              t = D$1(I({}, e), {
                requiredNamespaces: e.requiredNamespaces || {},
                optionalNamespaces: e.optionalNamespaces || {}
              });
              _context3.next = 6;
              return _this.isValidConnect(t);
            case 6:
              s = t.pairingTopic, i = t.requiredNamespaces, r = t.optionalNamespaces, n = t.sessionProperties, a = t.relays;
              c = s, p = !1;
              _context3.prev = 8;
              c && (p = _this.client.core.pairing.pairings.get(c).active);
              _context3.next = 15;
              break;
            case 12:
              _context3.prev = 12;
              _context3.t0 = _context3["catch"](8);
              throw _this.client.logger.error("connect() -> pairing.get(".concat(c, ") failed")), _context3.t0;
            case 15:
              if (!(!c || !p)) {
                _context3.next = 22;
                break;
              }
              _context3.next = 18;
              return _this.client.core.pairing.create();
            case 18:
              _yield$_this$client$c = _context3.sent;
              E = _yield$_this$client$c.topic;
              S = _yield$_this$client$c.uri;
              c = E, h = S;
            case 22:
              if (c) {
                _context3.next = 25;
                break;
              }
              _u = S$2("NO_MATCHING_KEY", "connect() pairing topic: ".concat(c)), _E = _u.message;
              throw new Error(_E);
            case 25:
              _context3.next = 27;
              return _this.client.core.crypto.generateKeyPair();
            case 27:
              d = _context3.sent;
              l = v$1.wc_sessionPropose.req.ttl || cjs$3.FIVE_MINUTES;
              w = Mt$1(l);
              m = I({
                requiredNamespaces: i,
                optionalNamespaces: r,
                relays: a !== null && a !== void 0 ? a : [{
                  protocol: rt$1
                }],
                proposer: {
                  publicKey: d,
                  metadata: _this.client.metadata
                },
                expiryTimestamp: w,
                pairingTopic: c
              }, n && {
                sessionProperties: n
              });
              _Y = _t$1(l, it);
              y = _Y.reject;
              _ = _Y.resolve;
              R = _Y.done;
              _this.events.once(Lt$1("session_connect"), /*#__PURE__*/function () {
                var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3) {
                  var E, S, M$1;
                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                    while (1) switch (_context2.prev = _context2.next) {
                      case 0:
                        E = _ref3.error, S = _ref3.session;
                        if (!E) {
                          _context2.next = 5;
                          break;
                        }
                        y(E);
                        _context2.next = 18;
                        break;
                      case 5:
                        if (!S) {
                          _context2.next = 18;
                          break;
                        }
                        S.self.publicKey = d;
                        M$1 = D$1(I({}, S), {
                          pairingTopic: m.pairingTopic,
                          requiredNamespaces: m.requiredNamespaces,
                          optionalNamespaces: m.optionalNamespaces,
                          transportType: M.relay
                        });
                        _context2.next = 10;
                        return _this.client.session.set(S.topic, M$1);
                      case 10:
                        _context2.next = 12;
                        return _this.setExpiry(S.topic, S.expiry);
                      case 12:
                        _context2.t0 = c;
                        if (!_context2.t0) {
                          _context2.next = 16;
                          break;
                        }
                        _context2.next = 16;
                        return _this.client.core.pairing.updateMetadata({
                          topic: c,
                          metadata: S.peer.metadata
                        });
                      case 16:
                        _this.cleanupDuplicatePairings(M$1);
                        _(M$1);
                      case 18:
                      case "end":
                        return _context2.stop();
                    }
                  }, _callee2);
                }));
                return function (_x2) {
                  return _ref4.apply(this, arguments);
                };
              }());
              _context3.next = 38;
              return _this.sendRequest({
                topic: c,
                method: "wc_sessionPropose",
                params: m,
                throwOnFailedPublish: !0
              });
            case 38:
              V = _context3.sent;
              _context3.next = 41;
              return _this.setProposal(V, I({
                id: V
              }, m));
            case 41:
              return _context3.abrupt("return", {
                uri: h,
                approval: R
              });
            case 42:
            case "end":
              return _context3.stop();
          }
        }, _callee3, null, [[8, 12]]);
      }));
      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }(), _this.pair = /*#__PURE__*/function () {
      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _this.isInitialized();
              _context4.next = 3;
              return _this.confirmOnlineStateOrThrow();
            case 3:
              _context4.prev = 3;
              _context4.next = 6;
              return _this.client.core.pairing.pair(e);
            case 6:
              return _context4.abrupt("return", _context4.sent);
            case 9:
              _context4.prev = 9;
              _context4.t0 = _context4["catch"](3);
              throw _this.client.logger.error("pair() failed"), _context4.t0;
            case 12:
            case "end":
              return _context4.stop();
          }
        }, _callee4, null, [[3, 9]]);
      }));
      return function (_x3) {
        return _ref5.apply(this, arguments);
      };
    }(), _this.approve = /*#__PURE__*/function () {
      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e) {
        var t, s, i, r, n, a, c, h, p, d, l, w, m, y, _, R, V, E, S, M$1, W;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              r = _this.client.core.eventClient.createEvent({
                properties: {
                  topic: (t = e === null || e === void 0 ? void 0 : e.id) == null ? void 0 : t.toString(),
                  trace: [Is$1.session_approve_started]
                }
              });
              _context5.prev = 1;
              _this.isInitialized();
              _context5.next = 5;
              return _this.confirmOnlineStateOrThrow();
            case 5:
              _context5.next = 10;
              break;
            case 7:
              _context5.prev = 7;
              _context5.t0 = _context5["catch"](1);
              throw r.setError(Ts$1.no_internet_connection), _context5.t0;
            case 10:
              _context5.prev = 10;
              _context5.next = 13;
              return _this.isValidProposalId(e === null || e === void 0 ? void 0 : e.id);
            case 13:
              _context5.next = 18;
              break;
            case 15:
              _context5.prev = 15;
              _context5.t1 = _context5["catch"](10);
              throw _this.client.logger.error("approve() -> proposal.get(".concat(e === null || e === void 0 ? void 0 : e.id, ") failed")), r.setError(Ts$1.proposal_not_found), _context5.t1;
            case 18:
              _context5.prev = 18;
              _context5.next = 21;
              return _this.isValidApprove(e);
            case 21:
              _context5.next = 26;
              break;
            case 23:
              _context5.prev = 23;
              _context5.t2 = _context5["catch"](18);
              throw _this.client.logger.error("approve() -> isValidApprove() failed"), r.setError(Ts$1.session_approve_namespace_validation_failure), _context5.t2;
            case 26:
              n = e.id, a = e.relayProtocol, c = e.namespaces, h = e.sessionProperties, p = e.sessionConfig, d = _this.client.proposal.get(n);
              _this.client.core.eventClient.deleteEvent({
                eventId: r.eventId
              });
              l = d.pairingTopic, w = d.proposer, m = d.requiredNamespaces, y = d.optionalNamespaces;
              _ = (s = _this.client.core.eventClient) == null ? void 0 : s.getEvent({
                topic: l
              });
              _ || (_ = (i = _this.client.core.eventClient) == null ? void 0 : i.createEvent({
                type: Is$1.session_approve_started,
                properties: {
                  topic: l,
                  trace: [Is$1.session_approve_started, Is$1.session_namespaces_validation_success]
                }
              }));
              _context5.next = 33;
              return _this.client.core.crypto.generateKeyPair();
            case 33:
              R = _context5.sent;
              V = w.publicKey;
              _context5.next = 37;
              return _this.client.core.crypto.generateSharedKey(R, V);
            case 37:
              E = _context5.sent;
              S = I(I({
                relay: {
                  protocol: a !== null && a !== void 0 ? a : "irn"
                },
                namespaces: c,
                controller: {
                  publicKey: R,
                  metadata: _this.client.metadata
                },
                expiry: Mt$1(z$1)
              }, h && {
                sessionProperties: h
              }), p && {
                sessionConfig: p
              });
              M$1 = M.relay;
              _.addTrace(Is$1.subscribing_session_topic);
              _context5.prev = 41;
              _context5.next = 44;
              return _this.client.core.relayer.subscribe(E, {
                transportType: M$1
              });
            case 44:
              _context5.next = 49;
              break;
            case 46:
              _context5.prev = 46;
              _context5.t3 = _context5["catch"](41);
              throw _.setError(Ts$1.subscribe_session_topic_failure), _context5.t3;
            case 49:
              _.addTrace(Is$1.subscribe_session_topic_success);
              W = D$1(I({}, S), {
                topic: E,
                requiredNamespaces: m,
                optionalNamespaces: y,
                pairingTopic: l,
                acknowledged: !1,
                self: S.controller,
                peer: {
                  publicKey: w.publicKey,
                  metadata: w.metadata
                },
                controller: R,
                transportType: M.relay
              });
              _context5.next = 53;
              return _this.client.session.set(E, W);
            case 53:
              _.addTrace(Is$1.store_session);
              _context5.prev = 54;
              _.addTrace(Is$1.publishing_session_settle);
              _context5.next = 58;
              return _this.sendRequest({
                topic: E,
                method: "wc_sessionSettle",
                params: S,
                throwOnFailedPublish: !0
              })["catch"](function (N) {
                var _ref7;
                throw (_ref7 = _) !== null && _ref7 !== void 0 && _ref7.setError(Ts$1.session_settle_publish_failure), N;
              });
            case 58:
              _.addTrace(Is$1.session_settle_publish_success);
              _.addTrace(Is$1.publishing_session_approve);
              _context5.next = 62;
              return _this.sendResult({
                id: n,
                topic: l,
                result: {
                  relay: {
                    protocol: a !== null && a !== void 0 ? a : "irn"
                  },
                  responderPublicKey: R
                },
                throwOnFailedPublish: !0
              })["catch"](function (N) {
                var _ref8;
                throw (_ref8 = _) !== null && _ref8 !== void 0 && _ref8.setError(Ts$1.session_approve_publish_failure), N;
              });
            case 62:
              _.addTrace(Is$1.session_approve_publish_success);
              _context5.next = 72;
              break;
            case 65:
              _context5.prev = 65;
              _context5.t4 = _context5["catch"](54);
              _this.client.logger.error(_context5.t4);
              _this.client.session["delete"](E, U$1("USER_DISCONNECTED"));
              _context5.next = 71;
              return _this.client.core.relayer.unsubscribe(E);
            case 71:
              throw _context5.t4;
            case 72:
              _this.client.core.eventClient.deleteEvent({
                eventId: _.eventId
              });
              _context5.next = 75;
              return _this.client.core.pairing.updateMetadata({
                topic: l,
                metadata: w.metadata
              });
            case 75:
              _context5.next = 77;
              return _this.client.proposal["delete"](n, U$1("USER_DISCONNECTED"));
            case 77:
              _context5.next = 79;
              return _this.client.core.pairing.activate({
                topic: l
              });
            case 79:
              _context5.next = 81;
              return _this.setExpiry(E, Mt$1(z$1));
            case 81:
              return _context5.abrupt("return", {
                topic: E,
                acknowledged: function acknowledged() {
                  return Promise.resolve(_this.client.session.get(E));
                }
              });
            case 82:
            case "end":
              return _context5.stop();
          }
        }, _callee5, null, [[1, 7], [10, 15], [18, 23], [41, 46], [54, 65]]);
      }));
      return function (_x4) {
        return _ref6.apply(this, arguments);
      };
    }(), _this.reject = /*#__PURE__*/function () {
      var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(e) {
        var t, s, i;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _this.isInitialized();
              _context6.next = 3;
              return _this.confirmOnlineStateOrThrow();
            case 3:
              _context6.prev = 3;
              _context6.next = 6;
              return _this.isValidReject(e);
            case 6:
              _context6.next = 11;
              break;
            case 8:
              _context6.prev = 8;
              _context6.t0 = _context6["catch"](3);
              throw _this.client.logger.error("reject() -> isValidReject() failed"), _context6.t0;
            case 11:
              t = e.id, s = e.reason;
              _context6.prev = 12;
              i = _this.client.proposal.get(t).pairingTopic;
              _context6.next = 19;
              break;
            case 16:
              _context6.prev = 16;
              _context6.t1 = _context6["catch"](12);
              throw _this.client.logger.error("reject() -> proposal.get(".concat(t, ") failed")), _context6.t1;
            case 19:
              _context6.t2 = i;
              if (!_context6.t2) {
                _context6.next = 25;
                break;
              }
              _context6.next = 23;
              return _this.sendError({
                id: t,
                topic: i,
                error: s,
                rpcOpts: v$1.wc_sessionPropose.reject
              });
            case 23:
              _context6.next = 25;
              return _this.client.proposal["delete"](t, U$1("USER_DISCONNECTED"));
            case 25:
            case "end":
              return _context6.stop();
          }
        }, _callee6, null, [[3, 8], [12, 16]]);
      }));
      return function (_x5) {
        return _ref9.apply(this, arguments);
      };
    }(), _this.update = /*#__PURE__*/function () {
      var _ref10 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(e) {
        var t, s, _Y2, i, r, n, a, c, h;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _this.isInitialized();
              _context7.next = 3;
              return _this.confirmOnlineStateOrThrow();
            case 3:
              _context7.prev = 3;
              _context7.next = 6;
              return _this.isValidUpdate(e);
            case 6:
              _context7.next = 11;
              break;
            case 8:
              _context7.prev = 8;
              _context7.t0 = _context7["catch"](3);
              throw _this.client.logger.error("update() -> isValidUpdate() failed"), _context7.t0;
            case 11:
              t = e.topic, s = e.namespaces, _Y2 = _t$1(), i = _Y2.done, r = _Y2.resolve, n = _Y2.reject, a = payloadId(), c = getBigIntRpcId().toString(), h = _this.client.session.get(t).namespaces;
              _this.events.once(Lt$1("session_update", a), function (_ref11) {
                var p = _ref11.error;
                p ? n(p) : r();
              });
              _context7.next = 15;
              return _this.client.session.update(t, {
                namespaces: s
              });
            case 15:
              _context7.next = 17;
              return _this.sendRequest({
                topic: t,
                method: "wc_sessionUpdate",
                params: {
                  namespaces: s
                },
                throwOnFailedPublish: !0,
                clientRpcId: a,
                relayRpcId: c
              })["catch"](function (p) {
                _this.client.logger.error(p), _this.client.session.update(t, {
                  namespaces: h
                }), n(p);
              });
            case 17:
              return _context7.abrupt("return", {
                acknowledged: i
              });
            case 18:
            case "end":
              return _context7.stop();
          }
        }, _callee7, null, [[3, 8]]);
      }));
      return function (_x6) {
        return _ref10.apply(this, arguments);
      };
    }(), _this.extend = /*#__PURE__*/function () {
      var _ref12 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e) {
        var t, s, _Y3, i, r, n;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _this.isInitialized();
              _context8.next = 3;
              return _this.confirmOnlineStateOrThrow();
            case 3:
              _context8.prev = 3;
              _context8.next = 6;
              return _this.isValidExtend(e);
            case 6:
              _context8.next = 11;
              break;
            case 8:
              _context8.prev = 8;
              _context8.t0 = _context8["catch"](3);
              throw _this.client.logger.error("extend() -> isValidExtend() failed"), _context8.t0;
            case 11:
              t = e.topic, s = payloadId(), _Y3 = _t$1(), i = _Y3.done, r = _Y3.resolve, n = _Y3.reject;
              _this.events.once(Lt$1("session_extend", s), function (_ref13) {
                var a = _ref13.error;
                a ? n(a) : r();
              });
              _context8.next = 15;
              return _this.setExpiry(t, Mt$1(z$1));
            case 15:
              _this.sendRequest({
                topic: t,
                method: "wc_sessionExtend",
                params: {},
                clientRpcId: s,
                throwOnFailedPublish: !0
              })["catch"](function (a) {
                n(a);
              });
              return _context8.abrupt("return", {
                acknowledged: i
              });
            case 17:
            case "end":
              return _context8.stop();
          }
        }, _callee8, null, [[3, 8]]);
      }));
      return function (_x7) {
        return _ref12.apply(this, arguments);
      };
    }(), _this.request = /*#__PURE__*/function () {
      var _ref14 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(e) {
        var t, s, i, _e$expiry, r, n, a, c, _Y4, h, p, d, l;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              _this.isInitialized();
              _context11.prev = 1;
              _context11.next = 4;
              return _this.isValidRequest(e);
            case 4:
              _context11.next = 9;
              break;
            case 6:
              _context11.prev = 6;
              _context11.t0 = _context11["catch"](1);
              throw _this.client.logger.error("request() -> isValidRequest() failed"), _context11.t0;
            case 9:
              t = e.chainId, s = e.request, i = e.topic, _e$expiry = e.expiry, r = _e$expiry === void 0 ? v$1.wc_sessionRequest.req.ttl : _e$expiry, n = _this.client.session.get(i);
              _context11.t1 = (n === null || n === void 0 ? void 0 : n.transportType) === M.relay;
              if (!_context11.t1) {
                _context11.next = 14;
                break;
              }
              _context11.next = 14;
              return _this.confirmOnlineStateOrThrow();
            case 14:
              a = payloadId(), c = getBigIntRpcId().toString(), _Y4 = _t$1(r, "Request expired. Please try again."), h = _Y4.done, p = _Y4.resolve, d = _Y4.reject;
              _this.events.once(Lt$1("session_request", a), function (_ref15) {
                var w = _ref15.error,
                  m = _ref15.result;
                w ? d(w) : p(m);
              });
              l = _this.getAppLinkIfEnabled(n.peer.metadata, n.transportType);
              if (!l) {
                _context11.next = 26;
                break;
              }
              _context11.next = 20;
              return _this.sendRequest({
                clientRpcId: a,
                relayRpcId: c,
                topic: i,
                method: "wc_sessionRequest",
                params: {
                  request: D$1(I({}, s), {
                    expiryTimestamp: Mt$1(r)
                  }),
                  chainId: t
                },
                expiry: r,
                throwOnFailedPublish: !0,
                appLink: l
              })["catch"](function (w) {
                return d(w);
              });
            case 20:
              _this.client.events.emit("session_request_sent", {
                topic: i,
                request: s,
                chainId: t,
                id: a
              });
              _context11.next = 23;
              return h();
            case 23:
              _context11.t2 = _context11.sent;
              _context11.next = 29;
              break;
            case 26:
              _context11.next = 28;
              return Promise.all([new Promise(/*#__PURE__*/function () {
                var _ref16 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(w) {
                  return _regeneratorRuntime().wrap(function _callee9$(_context9) {
                    while (1) switch (_context9.prev = _context9.next) {
                      case 0:
                        _context9.next = 2;
                        return _this.sendRequest({
                          clientRpcId: a,
                          relayRpcId: c,
                          topic: i,
                          method: "wc_sessionRequest",
                          params: {
                            request: D$1(I({}, s), {
                              expiryTimestamp: Mt$1(r)
                            }),
                            chainId: t
                          },
                          expiry: r,
                          throwOnFailedPublish: !0
                        })["catch"](function (m) {
                          return d(m);
                        });
                      case 2:
                        _this.client.events.emit("session_request_sent", {
                          topic: i,
                          request: s,
                          chainId: t,
                          id: a
                        });
                        w();
                      case 4:
                      case "end":
                        return _context9.stop();
                    }
                  }, _callee9);
                }));
                return function (_x9) {
                  return _ref16.apply(this, arguments);
                };
              }()), new Promise(/*#__PURE__*/function () {
                var _ref17 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(w) {
                  var m, y;
                  return _regeneratorRuntime().wrap(function _callee10$(_context10) {
                    while (1) switch (_context10.prev = _context10.next) {
                      case 0:
                        if ((m = n.sessionConfig) != null && m.disableDeepLink) {
                          _context10.next = 6;
                          break;
                        }
                        _context10.next = 3;
                        return qt$1(_this.client.core.storage, xe);
                      case 3:
                        y = _context10.sent;
                        _context10.next = 6;
                        return Ft$1({
                          id: a,
                          topic: i,
                          wcDeepLink: y
                        });
                      case 6:
                        w();
                      case 7:
                      case "end":
                        return _context10.stop();
                    }
                  }, _callee10);
                }));
                return function (_x10) {
                  return _ref17.apply(this, arguments);
                };
              }()), h()]).then(function (w) {
                return w[2];
              });
            case 28:
              _context11.t2 = _context11.sent;
            case 29:
              return _context11.abrupt("return", _context11.t2);
            case 30:
            case "end":
              return _context11.stop();
          }
        }, _callee11, null, [[1, 6]]);
      }));
      return function (_x8) {
        return _ref14.apply(this, arguments);
      };
    }(), _this.respond = /*#__PURE__*/function () {
      var _ref18 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(e) {
        var t, s, i, r, n;
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              _this.isInitialized();
              _context12.next = 3;
              return _this.isValidRespond(e);
            case 3:
              t = e.topic, s = e.response, i = s.id, r = _this.client.session.get(t);
              _context12.t0 = r.transportType === M.relay;
              if (!_context12.t0) {
                _context12.next = 8;
                break;
              }
              _context12.next = 8;
              return _this.confirmOnlineStateOrThrow();
            case 8:
              n = _this.getAppLinkIfEnabled(r.peer.metadata, r.transportType);
              if (!isJsonRpcResult(s)) {
                _context12.next = 14;
                break;
              }
              _context12.next = 12;
              return _this.sendResult({
                id: i,
                topic: t,
                result: s.result,
                throwOnFailedPublish: !0,
                appLink: n
              });
            case 12:
              _context12.next = 18;
              break;
            case 14:
              _context12.t1 = isJsonRpcError(s);
              if (!_context12.t1) {
                _context12.next = 18;
                break;
              }
              _context12.next = 18;
              return _this.sendError({
                id: i,
                topic: t,
                error: s.error,
                appLink: n
              });
            case 18:
              _this.cleanupAfterResponse(e);
            case 19:
            case "end":
              return _context12.stop();
          }
        }, _callee12);
      }));
      return function (_x11) {
        return _ref18.apply(this, arguments);
      };
    }(), _this.ping = /*#__PURE__*/function () {
      var _ref19 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(e) {
        var t, s, i, _Y5, r, n, a;
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              _this.isInitialized();
              _context13.next = 3;
              return _this.confirmOnlineStateOrThrow();
            case 3:
              _context13.prev = 3;
              _context13.next = 6;
              return _this.isValidPing(e);
            case 6:
              _context13.next = 11;
              break;
            case 8:
              _context13.prev = 8;
              _context13.t0 = _context13["catch"](3);
              throw _this.client.logger.error("ping() -> isValidPing() failed"), _context13.t0;
            case 11:
              t = e.topic;
              if (!_this.client.session.keys.includes(t)) {
                _context13.next = 19;
                break;
              }
              s = payloadId(), i = getBigIntRpcId().toString(), _Y5 = _t$1(), r = _Y5.done, n = _Y5.resolve, a = _Y5.reject;
              _this.events.once(Lt$1("session_ping", s), function (_ref20) {
                var c = _ref20.error;
                c ? a(c) : n();
              });
              _context13.next = 17;
              return Promise.all([_this.sendRequest({
                topic: t,
                method: "wc_sessionPing",
                params: {},
                throwOnFailedPublish: !0,
                clientRpcId: s,
                relayRpcId: i
              }), r()]);
            case 17:
              _context13.next = 23;
              break;
            case 19:
              _context13.t1 = _this.client.core.pairing.pairings.keys.includes(t);
              if (!_context13.t1) {
                _context13.next = 23;
                break;
              }
              _context13.next = 23;
              return _this.client.core.pairing.ping({
                topic: t
              });
            case 23:
            case "end":
              return _context13.stop();
          }
        }, _callee13, null, [[3, 8]]);
      }));
      return function (_x12) {
        return _ref19.apply(this, arguments);
      };
    }(), _this.emit = /*#__PURE__*/function () {
      var _ref21 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(e) {
        var t, s, i, r;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              _this.isInitialized();
              _context14.next = 3;
              return _this.confirmOnlineStateOrThrow();
            case 3:
              _context14.next = 5;
              return _this.isValidEmit(e);
            case 5:
              t = e.topic, s = e.event, i = e.chainId, r = getBigIntRpcId().toString();
              _context14.next = 8;
              return _this.sendRequest({
                topic: t,
                method: "wc_sessionEvent",
                params: {
                  event: s,
                  chainId: i
                },
                throwOnFailedPublish: !0,
                relayRpcId: r
              });
            case 8:
            case "end":
              return _context14.stop();
          }
        }, _callee14);
      }));
      return function (_x13) {
        return _ref21.apply(this, arguments);
      };
    }(), _this.disconnect = /*#__PURE__*/function () {
      var _ref22 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(e) {
        var t, _u2, s;
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              _this.isInitialized();
              _context15.next = 3;
              return _this.confirmOnlineStateOrThrow();
            case 3:
              _context15.next = 5;
              return _this.isValidDisconnect(e);
            case 5:
              t = e.topic;
              if (!_this.client.session.keys.includes(t)) {
                _context15.next = 13;
                break;
              }
              _context15.next = 9;
              return _this.sendRequest({
                topic: t,
                method: "wc_sessionDelete",
                params: U$1("USER_DISCONNECTED"),
                throwOnFailedPublish: !0
              });
            case 9:
              _context15.next = 11;
              return _this.deleteSession({
                topic: t,
                emitEvent: !1
              });
            case 11:
              _context15.next = 20;
              break;
            case 13:
              if (!_this.client.core.pairing.pairings.keys.includes(t)) {
                _context15.next = 18;
                break;
              }
              _context15.next = 16;
              return _this.client.core.pairing.disconnect({
                topic: t
              });
            case 16:
              _context15.next = 20;
              break;
            case 18:
              _u2 = S$2("MISMATCHED_TOPIC", "Session or pairing topic not found: ".concat(t)), s = _u2.message;
              throw new Error(s);
            case 20:
            case "end":
              return _context15.stop();
          }
        }, _callee15);
      }));
      return function (_x14) {
        return _ref22.apply(this, arguments);
      };
    }(), _this.find = function (e) {
      return _this.isInitialized(), _this.client.session.getAll().filter(function (t) {
        return zr$1(t, e);
      });
    }, _this.getPendingSessionRequests = function () {
      return _this.client.pendingRequest.getAll();
    }, _this.authenticate = /*#__PURE__*/function () {
      var _ref23 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(e, t) {
        var _Se;
        var s, i, r, n, _e$statement, a, c, h, p, d, l, w, _e$methods, m, y, _, _yield$_this$client$c2, R, V, E, S, _Ne, O, T, M$2, W, N, De, _Y6, wt, Ve, Ee, ce, Re, G, Z, Se, _O;
        return _regeneratorRuntime().wrap(function _callee18$(_context18) {
          while (1) switch (_context18.prev = _context18.next) {
            case 0:
              _this.isInitialized(), _this.isValidAuthenticate(e);
              i = t && _this.client.core.linkModeSupportedApps.includes(t) && ((s = _this.client.metadata.redirect) == null ? void 0 : s.linkMode), r = i ? M.link_mode : M.relay;
              _context18.t0 = r === M.relay;
              if (!_context18.t0) {
                _context18.next = 6;
                break;
              }
              _context18.next = 6;
              return _this.confirmOnlineStateOrThrow();
            case 6:
              n = e.chains;
              _e$statement = e.statement;
              a = _e$statement === void 0 ? "" : _e$statement;
              c = e.uri;
              h = e.domain;
              p = e.nonce;
              d = e.type;
              l = e.exp;
              w = e.nbf;
              _e$methods = e.methods;
              m = _e$methods === void 0 ? [] : _e$methods;
              y = e.expiry;
              _ = _toConsumableArray(e.resources || []);
              _context18.next = 21;
              return _this.client.core.pairing.create({
                methods: ["wc_sessionAuthenticate"],
                transportType: r
              });
            case 21:
              _yield$_this$client$c2 = _context18.sent;
              R = _yield$_this$client$c2.topic;
              V = _yield$_this$client$c2.uri;
              _this.client.logger.info({
                message: "Generated new pairing",
                pairing: {
                  topic: R,
                  uri: V
                }
              });
              _context18.next = 27;
              return _this.client.core.crypto.generateKeyPair();
            case 27:
              E = _context18.sent;
              S = hr$1(E);
              _context18.next = 31;
              return Promise.all([_this.client.auth.authKeys.set(ae, {
                responseTopic: S,
                publicKey: E
              }), _this.client.auth.pairingTopics.set(S, {
                topic: S,
                pairingTopic: R
              })]);
            case 31:
              _context18.next = 33;
              return _this.client.core.relayer.subscribe(S, {
                transportType: r
              });
            case 33:
              _this.client.logger.info("sending request to new pairing topic: ".concat(R));
              if (!(m.length > 0)) {
                _context18.next = 38;
                break;
              }
              _Ne = re$1(n[0]), O = _Ne.namespace;
              T = ir$1(O, "request", m);
              Y$1(_) && (T = cr$1(T, _.pop())), _.push(T);
            case 38:
              M$2 = y && y > v$1.wc_sessionAuthenticate.req.ttl ? y : v$1.wc_sessionAuthenticate.req.ttl, W = {
                authPayload: {
                  type: d !== null && d !== void 0 ? d : "caip122",
                  chains: n,
                  statement: a,
                  aud: c,
                  domain: h,
                  version: "1",
                  nonce: p,
                  iat: new Date().toISOString(),
                  exp: l,
                  nbf: w,
                  resources: _
                },
                requester: {
                  publicKey: E,
                  metadata: _this.client.metadata
                },
                expiryTimestamp: Mt$1(M$2)
              }, N = {
                eip155: {
                  chains: n,
                  methods: _toConsumableArray(new Set(["personal_sign"].concat(_toConsumableArray(m)))),
                  events: ["chainChanged", "accountsChanged"]
                }
              }, De = {
                requiredNamespaces: {},
                optionalNamespaces: N,
                relays: [{
                  protocol: "irn"
                }],
                pairingTopic: R,
                proposer: {
                  publicKey: E,
                  metadata: _this.client.metadata
                },
                expiryTimestamp: Mt$1(v$1.wc_sessionPropose.req.ttl)
              }, _Y6 = _t$1(M$2, "Request expired"), wt = _Y6.done, Ve = _Y6.resolve, Ee = _Y6.reject, ce = /*#__PURE__*/function () {
                var _ref25 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(_ref24) {
                  var O, T, le;
                  return _regeneratorRuntime().wrap(function _callee16$(_context16) {
                    while (1) switch (_context16.prev = _context16.next) {
                      case 0:
                        O = _ref24.error, T = _ref24.session;
                        if (!(_this.events.off(Lt$1("session_request", G), Re), O)) {
                          _context16.next = 5;
                          break;
                        }
                        Ee(O);
                        _context16.next = 19;
                        break;
                      case 5:
                        if (!T) {
                          _context16.next = 19;
                          break;
                        }
                        T.self.publicKey = E;
                        _context16.next = 9;
                        return _this.client.session.set(T.topic, T);
                      case 9:
                        _context16.next = 11;
                        return _this.setExpiry(T.topic, T.expiry);
                      case 11:
                        _context16.t0 = R;
                        if (!_context16.t0) {
                          _context16.next = 15;
                          break;
                        }
                        _context16.next = 15;
                        return _this.client.core.pairing.updateMetadata({
                          topic: R,
                          metadata: T.peer.metadata
                        });
                      case 15:
                        le = _this.client.session.get(T.topic);
                        _context16.next = 18;
                        return _this.deleteProposal(Z);
                      case 18:
                        Ve({
                          session: le
                        });
                      case 19:
                      case "end":
                        return _context16.stop();
                    }
                  }, _callee16);
                }));
                return function ce(_x17) {
                  return _ref25.apply(this, arguments);
                };
              }(), Re = /*#__PURE__*/function () {
                var _ref26 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(O) {
                  var T, le, Me, te, _O$result, ke, j, Ie, $e, _iterator2, _step2, _te, fe, ve, Ke, mt, qe, _t, _i, _Ke, _qe, ee, pe;
                  return _regeneratorRuntime().wrap(function _callee17$(_context17) {
                    while (1) switch (_context17.prev = _context17.next) {
                      case 0:
                        _context17.next = 2;
                        return _this.deletePendingAuthRequest(G, {
                          message: "fulfilled",
                          code: 0
                        });
                      case 2:
                        if (!O.error) {
                          _context17.next = 5;
                          break;
                        }
                        te = U$1("WC_METHOD_UNSUPPORTED", "wc_sessionAuthenticate");
                        return _context17.abrupt("return", O.error.code === te.code ? void 0 : (_this.events.off(Lt$1("session_connect"), ce), Ee(O.error.message)));
                      case 5:
                        _context17.next = 7;
                        return _this.deleteProposal(Z);
                      case 7:
                        _this.events.off(Lt$1("session_connect"), ce);
                        _O$result = O.result, ke = _O$result.cacaos, j = _O$result.responder, Ie = [], $e = [];
                        _iterator2 = _createForOfIteratorHelper(ke);
                        _context17.prev = 10;
                        _iterator2.s();
                      case 12:
                        if ((_step2 = _iterator2.n()).done) {
                          _context17.next = 24;
                          break;
                        }
                        _te = _step2.value;
                        _context17.next = 16;
                        return nr$1({
                          cacao: _te,
                          projectId: _this.client.core.projectId
                        });
                      case 16:
                        _context17.t0 = _context17.sent;
                        if (_context17.t0) {
                          _context17.next = 19;
                          break;
                        }
                        _this.client.logger.error(_te, "Signature verification failed"), Ee(U$1("SESSION_SETTLEMENT_FAILED", "Signature verification failed"));
                      case 19:
                        fe = _te.p, ve = Y$1(fe.resources), Ke = [ln$1(fe.iss)], mt = fe$1(fe.iss);
                        if (ve) {
                          qe = ar$1(ve), _t = ur$1(ve);
                          Ie.push.apply(Ie, _toConsumableArray(qe)), Ke.push.apply(Ke, _toConsumableArray(_t));
                        }
                        for (_i = 0, _Ke = Ke; _i < _Ke.length; _i++) {
                          _qe = _Ke[_i];
                          $e.push("".concat(_qe, ":").concat(mt));
                        }
                      case 22:
                        _context17.next = 12;
                        break;
                      case 24:
                        _context17.next = 29;
                        break;
                      case 26:
                        _context17.prev = 26;
                        _context17.t1 = _context17["catch"](10);
                        _iterator2.e(_context17.t1);
                      case 29:
                        _context17.prev = 29;
                        _iterator2.f();
                        return _context17.finish(29);
                      case 32:
                        _context17.next = 34;
                        return _this.client.core.crypto.generateSharedKey(E, j.publicKey);
                      case 34:
                        ee = _context17.sent;
                        _context17.t2 = Ie.length > 0;
                        if (!_context17.t2) {
                          _context17.next = 47;
                          break;
                        }
                        pe = {
                          topic: ee,
                          acknowledged: !0,
                          self: {
                            publicKey: E,
                            metadata: _this.client.metadata
                          },
                          peer: j,
                          controller: j.publicKey,
                          expiry: Mt$1(z$1),
                          requiredNamespaces: {},
                          optionalNamespaces: {},
                          relay: {
                            protocol: "irn"
                          },
                          pairingTopic: R,
                          namespaces: Jr$1(_toConsumableArray(new Set(Ie)), _toConsumableArray(new Set($e))),
                          transportType: r
                        };
                        _context17.next = 40;
                        return _this.client.core.relayer.subscribe(ee, {
                          transportType: r
                        });
                      case 40:
                        _context17.next = 42;
                        return _this.client.session.set(ee, pe);
                      case 42:
                        _context17.t3 = R;
                        if (!_context17.t3) {
                          _context17.next = 46;
                          break;
                        }
                        _context17.next = 46;
                        return _this.client.core.pairing.updateMetadata({
                          topic: R,
                          metadata: j.metadata
                        });
                      case 46:
                        pe = _this.client.session.get(ee);
                      case 47:
                        (T = _this.client.metadata.redirect) != null && T.linkMode && (le = j.metadata.redirect) != null && le.linkMode && (Me = j.metadata.redirect) != null && Me.universal && t && (_this.client.core.addLinkModeSupportedApp(j.metadata.redirect.universal), _this.client.session.update(ee, {
                          transportType: M.link_mode
                        }));
                        Ve({
                          auths: ke,
                          session: pe
                        });
                      case 49:
                      case "end":
                        return _context17.stop();
                    }
                  }, _callee17, null, [[10, 26, 29, 32]]);
                }));
                return function Re(_x18) {
                  return _ref26.apply(this, arguments);
                };
              }(), G = payloadId(), Z = payloadId();
              _this.events.once(Lt$1("session_connect"), ce), _this.events.once(Lt$1("session_request", G), Re);
              _context18.prev = 40;
              if (!i) {
                _context18.next = 50;
                break;
              }
              _O = formatJsonRpcRequest("wc_sessionAuthenticate", W, G);
              _this.client.core.history.set(R, _O);
              _context18.next = 46;
              return _this.client.core.crypto.encode("", _O, {
                type: M$1,
                encoding: lr$1
              });
            case 46:
              T = _context18.sent;
              Se = xr$1(t, R, T);
              _context18.next = 52;
              break;
            case 50:
              _context18.next = 52;
              return Promise.all([_this.sendRequest({
                topic: R,
                method: "wc_sessionAuthenticate",
                params: W,
                expiry: e.expiry,
                throwOnFailedPublish: !0,
                clientRpcId: G
              }), _this.sendRequest({
                topic: R,
                method: "wc_sessionPropose",
                params: De,
                expiry: v$1.wc_sessionPropose.req.ttl,
                throwOnFailedPublish: !0,
                clientRpcId: Z
              })]);
            case 52:
              _context18.next = 57;
              break;
            case 54:
              _context18.prev = 54;
              _context18.t1 = _context18["catch"](40);
              throw _this.events.off(Lt$1("session_connect"), ce), _this.events.off(Lt$1("session_request", G), Re), _context18.t1;
            case 57:
              _context18.next = 59;
              return _this.setProposal(Z, I({
                id: Z
              }, De));
            case 59:
              _context18.next = 61;
              return _this.setAuthRequest(G, {
                request: D$1(I({}, W), {
                  verifyContext: {}
                }),
                pairingTopic: R,
                transportType: r
              });
            case 61:
              return _context18.abrupt("return", {
                uri: (_Se = Se) !== null && _Se !== void 0 ? _Se : V,
                response: wt
              });
            case 62:
            case "end":
              return _context18.stop();
          }
        }, _callee18, null, [[40, 54]]);
      }));
      return function (_x15, _x16) {
        return _ref23.apply(this, arguments);
      };
    }(), _this.approveSessionAuthenticate = /*#__PURE__*/function () {
      var _ref27 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(e) {
        var t, s, i, r, n, a, c, h, p, d, l, _iterator3, _step3, y, S, _, R, V, E, _S, M$1, _i2, _V, _S2, w, m;
        return _regeneratorRuntime().wrap(function _callee19$(_context19) {
          while (1) switch (_context19.prev = _context19.next) {
            case 0:
              t = e.id, s = e.auths, i = _this.client.core.eventClient.createEvent({
                properties: {
                  topic: t.toString(),
                  trace: [Cs.authenticated_session_approve_started]
                }
              });
              _context19.prev = 1;
              _this.isInitialized();
              _context19.next = 8;
              break;
            case 5:
              _context19.prev = 5;
              _context19.t0 = _context19["catch"](1);
              throw i.setError(Ps$1.no_internet_connection), _context19.t0;
            case 8:
              r = _this.getPendingAuthRequest(t);
              if (r) {
                _context19.next = 11;
                break;
              }
              throw i.setError(Ps$1.authenticated_session_pending_request_not_found), new Error("Could not find pending auth request with id ".concat(t));
            case 11:
              n = r.transportType || M.relay;
              _context19.t1 = n === M.relay;
              if (!_context19.t1) {
                _context19.next = 16;
                break;
              }
              _context19.next = 16;
              return _this.confirmOnlineStateOrThrow();
            case 16:
              a = r.requester.publicKey;
              _context19.next = 19;
              return _this.client.core.crypto.generateKeyPair();
            case 19:
              c = _context19.sent;
              h = hr$1(a);
              p = {
                type: D$2,
                receiverPublicKey: a,
                senderPublicKey: c
              };
              d = [];
              l = [];
              _iterator3 = _createForOfIteratorHelper(s);
              _context19.prev = 25;
              _iterator3.s();
            case 27:
              if ((_step3 = _iterator3.n()).done) {
                _context19.next = 43;
                break;
              }
              y = _step3.value;
              _context19.next = 31;
              return nr$1({
                cacao: y,
                projectId: _this.client.core.projectId
              });
            case 31:
              if (_context19.sent) {
                _context19.next = 37;
                break;
              }
              i.setError(Ps$1.invalid_cacao);
              S = U$1("SESSION_SETTLEMENT_FAILED", "Signature verification failed");
              _context19.next = 36;
              return _this.sendError({
                id: t,
                topic: h,
                error: S,
                encodeOpts: p
              });
            case 36:
              throw new Error(S.message);
            case 37:
              i.addTrace(Cs.cacaos_verified);
              _ = y.p, R = Y$1(_.resources), V = [ln$1(_.iss)], E = fe$1(_.iss);
              if (R) {
                _S = ar$1(R), M$1 = ur$1(R);
                d.push.apply(d, _toConsumableArray(_S)), V.push.apply(V, _toConsumableArray(M$1));
              }
              for (_i2 = 0, _V = V; _i2 < _V.length; _i2++) {
                _S2 = _V[_i2];
                l.push("".concat(_S2, ":").concat(E));
              }
            case 41:
              _context19.next = 27;
              break;
            case 43:
              _context19.next = 48;
              break;
            case 45:
              _context19.prev = 45;
              _context19.t2 = _context19["catch"](25);
              _iterator3.e(_context19.t2);
            case 48:
              _context19.prev = 48;
              _iterator3.f();
              return _context19.finish(48);
            case 51:
              _context19.next = 53;
              return _this.client.core.crypto.generateSharedKey(c, a);
            case 53:
              w = _context19.sent;
              i.addTrace(Cs.create_authenticated_session_topic);
              if (!((d === null || d === void 0 ? void 0 : d.length) > 0)) {
                _context19.next = 71;
                break;
              }
              m = {
                topic: w,
                acknowledged: !0,
                self: {
                  publicKey: c,
                  metadata: _this.client.metadata
                },
                peer: {
                  publicKey: a,
                  metadata: r.requester.metadata
                },
                controller: a,
                expiry: Mt$1(z$1),
                authentication: s,
                requiredNamespaces: {},
                optionalNamespaces: {},
                relay: {
                  protocol: "irn"
                },
                pairingTopic: r.pairingTopic,
                namespaces: Jr$1(_toConsumableArray(new Set(d)), _toConsumableArray(new Set(l))),
                transportType: n
              }, i.addTrace(Cs.subscribing_authenticated_session_topic);
              _context19.prev = 57;
              _context19.next = 60;
              return _this.client.core.relayer.subscribe(w, {
                transportType: n
              });
            case 60:
              _context19.next = 65;
              break;
            case 62:
              _context19.prev = 62;
              _context19.t3 = _context19["catch"](57);
              throw i.setError(Ps$1.subscribe_authenticated_session_topic_failure), _context19.t3;
            case 65:
              i.addTrace(Cs.subscribe_authenticated_session_topic_success);
              _context19.next = 68;
              return _this.client.session.set(w, m);
            case 68:
              i.addTrace(Cs.store_authenticated_session);
              _context19.next = 71;
              return _this.client.core.pairing.updateMetadata({
                topic: r.pairingTopic,
                metadata: r.requester.metadata
              });
            case 71:
              i.addTrace(Cs.publishing_authenticated_session_approve);
              _context19.prev = 72;
              _context19.next = 75;
              return _this.sendResult({
                topic: h,
                id: t,
                result: {
                  cacaos: s,
                  responder: {
                    publicKey: c,
                    metadata: _this.client.metadata
                  }
                },
                encodeOpts: p,
                throwOnFailedPublish: !0,
                appLink: _this.getAppLinkIfEnabled(r.requester.metadata, n)
              });
            case 75:
              _context19.next = 80;
              break;
            case 77:
              _context19.prev = 77;
              _context19.t4 = _context19["catch"](72);
              throw i.setError(Ps$1.authenticated_session_approve_publish_failure), _context19.t4;
            case 80:
              _context19.next = 82;
              return _this.client.auth.requests["delete"](t, {
                message: "fulfilled",
                code: 0
              });
            case 82:
              _context19.next = 84;
              return _this.client.core.pairing.activate({
                topic: r.pairingTopic
              });
            case 84:
              _this.client.core.eventClient.deleteEvent({
                eventId: i.eventId
              });
              return _context19.abrupt("return", {
                session: m
              });
            case 86:
            case "end":
              return _context19.stop();
          }
        }, _callee19, null, [[1, 5], [25, 45, 48, 51], [57, 62], [72, 77]]);
      }));
      return function (_x19) {
        return _ref27.apply(this, arguments);
      };
    }(), _this.rejectSessionAuthenticate = /*#__PURE__*/function () {
      var _ref28 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(e) {
        var t, s, i, r, n, a, c;
        return _regeneratorRuntime().wrap(function _callee20$(_context20) {
          while (1) switch (_context20.prev = _context20.next) {
            case 0:
              _this.isInitialized();
              t = e.id, s = e.reason, i = _this.getPendingAuthRequest(t);
              if (i) {
                _context20.next = 4;
                break;
              }
              throw new Error("Could not find pending auth request with id ".concat(t));
            case 4:
              _context20.t0 = i.transportType === M.relay;
              if (!_context20.t0) {
                _context20.next = 8;
                break;
              }
              _context20.next = 8;
              return _this.confirmOnlineStateOrThrow();
            case 8:
              r = i.requester.publicKey;
              _context20.next = 11;
              return _this.client.core.crypto.generateKeyPair();
            case 11:
              n = _context20.sent;
              a = hr$1(r);
              c = {
                type: D$2,
                receiverPublicKey: r,
                senderPublicKey: n
              };
              _context20.next = 16;
              return _this.sendError({
                id: t,
                topic: a,
                error: s,
                encodeOpts: c,
                rpcOpts: v$1.wc_sessionAuthenticate.reject,
                appLink: _this.getAppLinkIfEnabled(i.requester.metadata, i.transportType)
              });
            case 16:
              _context20.next = 18;
              return _this.client.auth.requests["delete"](t, {
                message: "rejected",
                code: 0
              });
            case 18:
              _context20.next = 20;
              return _this.client.proposal["delete"](t, U$1("USER_DISCONNECTED"));
            case 20:
            case "end":
              return _context20.stop();
          }
        }, _callee20);
      }));
      return function (_x20) {
        return _ref28.apply(this, arguments);
      };
    }(), _this.formatAuthMessage = function (e) {
      _this.isInitialized();
      var t = e.request,
        s = e.iss;
      return dn$1(t, s);
    }, _this.processRelayMessageCache = function () {
      setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {
        var e;
        return _regeneratorRuntime().wrap(function _callee21$(_context21) {
          while (1) switch (_context21.prev = _context21.next) {
            case 0:
              if (!(_this.relayMessageCache.length !== 0)) {
                _context21.next = 15;
                break;
              }
            case 1:
              if (!(_this.relayMessageCache.length > 0)) {
                _context21.next = 15;
                break;
              }
              _context21.prev = 2;
              e = _this.relayMessageCache.shift();
              _context21.t0 = e;
              if (!_context21.t0) {
                _context21.next = 8;
                break;
              }
              _context21.next = 8;
              return _this.onRelayMessage(e);
            case 8:
              _context21.next = 13;
              break;
            case 10:
              _context21.prev = 10;
              _context21.t1 = _context21["catch"](2);
              _this.client.logger.error(_context21.t1);
            case 13:
              _context21.next = 1;
              break;
            case 15:
            case "end":
              return _context21.stop();
          }
        }, _callee21, null, [[2, 10]]);
      })), 50);
    }, _this.cleanupDuplicatePairings = /*#__PURE__*/function () {
      var _ref30 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee22(e) {
        var t, s;
        return _regeneratorRuntime().wrap(function _callee22$(_context22) {
          while (1) switch (_context22.prev = _context22.next) {
            case 0:
              if (!e.pairingTopic) {
                _context22.next = 14;
                break;
              }
              _context22.prev = 1;
              t = _this.client.core.pairing.pairings.get(e.pairingTopic), s = _this.client.core.pairing.pairings.getAll().filter(function (i) {
                var r, n;
                return ((r = i.peerMetadata) == null ? void 0 : r.url) && ((n = i.peerMetadata) == null ? void 0 : n.url) === e.peer.metadata.url && i.topic && i.topic !== t.topic;
              });
              if (!(s.length === 0)) {
                _context22.next = 5;
                break;
              }
              return _context22.abrupt("return");
            case 5:
              _this.client.logger.info("Cleaning up ".concat(s.length, " duplicate pairing(s)"));
              _context22.next = 8;
              return Promise.all(s.map(function (i) {
                return _this.client.core.pairing.disconnect({
                  topic: i.topic
                });
              }));
            case 8:
              _this.client.logger.info("Duplicate pairings clean up finished");
              _context22.next = 14;
              break;
            case 11:
              _context22.prev = 11;
              _context22.t0 = _context22["catch"](1);
              _this.client.logger.error(_context22.t0);
            case 14:
            case "end":
              return _context22.stop();
          }
        }, _callee22, null, [[1, 11]]);
      }));
      return function (_x21) {
        return _ref30.apply(this, arguments);
      };
    }(), _this.deleteSession = /*#__PURE__*/function () {
      var _ref31 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee23(e) {
        var t, s, _e$expirerHasDeleted, i, _e$emitEvent, r, _e$id, n, _this$client$session$, a;
        return _regeneratorRuntime().wrap(function _callee23$(_context23) {
          while (1) switch (_context23.prev = _context23.next) {
            case 0:
              s = e.topic, _e$expirerHasDeleted = e.expirerHasDeleted, i = _e$expirerHasDeleted === void 0 ? !1 : _e$expirerHasDeleted, _e$emitEvent = e.emitEvent, r = _e$emitEvent === void 0 ? !0 : _e$emitEvent, _e$id = e.id, n = _e$id === void 0 ? 0 : _e$id, _this$client$session$ = _this.client.session.get(s), a = _this$client$session$.self;
              _context23.next = 3;
              return _this.client.core.relayer.unsubscribe(s);
            case 3:
              _context23.next = 5;
              return _this.client.session["delete"](s, U$1("USER_DISCONNECTED"));
            case 5:
              _this.addToRecentlyDeleted(s, "session");
              _context23.t0 = _this.client.core.crypto.keychain.has(a.publicKey);
              if (!_context23.t0) {
                _context23.next = 10;
                break;
              }
              _context23.next = 10;
              return _this.client.core.crypto.deleteKeyPair(a.publicKey);
            case 10:
              _context23.t1 = _this.client.core.crypto.keychain.has(s);
              if (!_context23.t1) {
                _context23.next = 14;
                break;
              }
              _context23.next = 14;
              return _this.client.core.crypto.deleteSymKey(s);
            case 14:
              i || _this.client.core.expirer.del(s);
              _this.client.core.storage.removeItem(xe)["catch"](function (c) {
                return _this.client.logger.warn(c);
              });
              _this.getPendingSessionRequests().forEach(function (c) {
                c.topic === s && _this.deletePendingSessionRequest(c.id, U$1("USER_DISCONNECTED"));
              });
              s === ((t = _this.sessionRequestQueue.queue[0]) == null ? void 0 : t.topic) && (_this.sessionRequestQueue.state = x$1.idle);
              r && _this.client.events.emit("session_delete", {
                id: n,
                topic: s
              });
            case 19:
            case "end":
              return _context23.stop();
          }
        }, _callee23);
      }));
      return function (_x22) {
        return _ref31.apply(this, arguments);
      };
    }(), _this.deleteProposal = /*#__PURE__*/function () {
      var _ref32 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee24(e, t) {
        var s, i;
        return _regeneratorRuntime().wrap(function _callee24$(_context24) {
          while (1) switch (_context24.prev = _context24.next) {
            case 0:
              if (t) try {
                s = _this.client.proposal.get(e), i = _this.client.core.eventClient.getEvent({
                  topic: s.pairingTopic
                });
                i === null || i === void 0 || i.setError(Ts$1.proposal_expired);
              } catch (_unused) {}
              _context24.next = 3;
              return Promise.all([_this.client.proposal["delete"](e, U$1("USER_DISCONNECTED")), t ? Promise.resolve() : _this.client.core.expirer.del(e)]);
            case 3:
              _this.addToRecentlyDeleted(e, "proposal");
            case 4:
            case "end":
              return _context24.stop();
          }
        }, _callee24);
      }));
      return function (_x23, _x24) {
        return _ref32.apply(this, arguments);
      };
    }(), _this.deletePendingSessionRequest = /*#__PURE__*/function () {
      var _ref33 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee25(e, t) {
        var s,
          _args25 = arguments;
        return _regeneratorRuntime().wrap(function _callee25$(_context25) {
          while (1) switch (_context25.prev = _context25.next) {
            case 0:
              s = _args25.length > 2 && _args25[2] !== undefined ? _args25[2] : !1;
              _context25.next = 3;
              return Promise.all([_this.client.pendingRequest["delete"](e, t), s ? Promise.resolve() : _this.client.core.expirer.del(e)]);
            case 3:
              _this.addToRecentlyDeleted(e, "request");
              _this.sessionRequestQueue.queue = _this.sessionRequestQueue.queue.filter(function (i) {
                return i.id !== e;
              });
              s && (_this.sessionRequestQueue.state = x$1.idle, _this.client.events.emit("session_request_expire", {
                id: e
              }));
            case 6:
            case "end":
              return _context25.stop();
          }
        }, _callee25);
      }));
      return function (_x25, _x26) {
        return _ref33.apply(this, arguments);
      };
    }(), _this.deletePendingAuthRequest = /*#__PURE__*/function () {
      var _ref34 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee26(e, t) {
        var s,
          _args26 = arguments;
        return _regeneratorRuntime().wrap(function _callee26$(_context26) {
          while (1) switch (_context26.prev = _context26.next) {
            case 0:
              s = _args26.length > 2 && _args26[2] !== undefined ? _args26[2] : !1;
              _context26.next = 3;
              return Promise.all([_this.client.auth.requests["delete"](e, t), s ? Promise.resolve() : _this.client.core.expirer.del(e)]);
            case 3:
            case "end":
              return _context26.stop();
          }
        }, _callee26);
      }));
      return function (_x27, _x28) {
        return _ref34.apply(this, arguments);
      };
    }(), _this.setExpiry = /*#__PURE__*/function () {
      var _ref35 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee27(e, t) {
        return _regeneratorRuntime().wrap(function _callee27$(_context27) {
          while (1) switch (_context27.prev = _context27.next) {
            case 0:
              _context27.t0 = _this.client.session.keys.includes(e);
              if (!_context27.t0) {
                _context27.next = 5;
                break;
              }
              _this.client.core.expirer.set(e, t);
              _context27.next = 5;
              return _this.client.session.update(e, {
                expiry: t
              });
            case 5:
            case "end":
              return _context27.stop();
          }
        }, _callee27);
      }));
      return function (_x29, _x30) {
        return _ref35.apply(this, arguments);
      };
    }(), _this.setProposal = /*#__PURE__*/function () {
      var _ref36 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee28(e, t) {
        return _regeneratorRuntime().wrap(function _callee28$(_context28) {
          while (1) switch (_context28.prev = _context28.next) {
            case 0:
              _this.client.core.expirer.set(e, Mt$1(v$1.wc_sessionPropose.req.ttl));
              _context28.next = 3;
              return _this.client.proposal.set(e, t);
            case 3:
            case "end":
              return _context28.stop();
          }
        }, _callee28);
      }));
      return function (_x31, _x32) {
        return _ref36.apply(this, arguments);
      };
    }(), _this.setAuthRequest = /*#__PURE__*/function () {
      var _ref37 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee29(e, t) {
        var s, i, _t$transportType, r;
        return _regeneratorRuntime().wrap(function _callee29$(_context29) {
          while (1) switch (_context29.prev = _context29.next) {
            case 0:
              s = t.request, i = t.pairingTopic, _t$transportType = t.transportType, r = _t$transportType === void 0 ? M.relay : _t$transportType;
              _this.client.core.expirer.set(e, s.expiryTimestamp);
              _context29.next = 4;
              return _this.client.auth.requests.set(e, {
                authPayload: s.authPayload,
                requester: s.requester,
                expiryTimestamp: s.expiryTimestamp,
                id: e,
                pairingTopic: i,
                verifyContext: s.verifyContext,
                transportType: r
              });
            case 4:
            case "end":
              return _context29.stop();
          }
        }, _callee29);
      }));
      return function (_x33, _x34) {
        return _ref37.apply(this, arguments);
      };
    }(), _this.setPendingSessionRequest = /*#__PURE__*/function () {
      var _ref38 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee30(e) {
        var t, s, i, r, n;
        return _regeneratorRuntime().wrap(function _callee30$(_context30) {
          while (1) switch (_context30.prev = _context30.next) {
            case 0:
              t = e.id, s = e.topic, i = e.params, r = e.verifyContext, n = i.request.expiryTimestamp || Mt$1(v$1.wc_sessionRequest.req.ttl);
              _this.client.core.expirer.set(t, n);
              _context30.next = 4;
              return _this.client.pendingRequest.set(t, {
                id: t,
                topic: s,
                params: i,
                verifyContext: r
              });
            case 4:
            case "end":
              return _context30.stop();
          }
        }, _callee30);
      }));
      return function (_x35) {
        return _ref38.apply(this, arguments);
      };
    }(), _this.sendRequest = /*#__PURE__*/function () {
      var _ref39 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee31(e) {
        var t, s, i, r, n, a, c, h, p, d, l, y, w, _y, _, m, _y2, _y3;
        return _regeneratorRuntime().wrap(function _callee31$(_context31) {
          while (1) switch (_context31.prev = _context31.next) {
            case 0:
              t = e.topic, s = e.method, i = e.params, r = e.expiry, n = e.relayRpcId, a = e.clientRpcId, c = e.throwOnFailedPublish, h = e.appLink, p = formatJsonRpcRequest(s, i, a);
              l = !!h;
              _context31.prev = 2;
              y = l ? lr$1 : ge;
              _context31.next = 6;
              return _this.client.core.crypto.encode(t, p, {
                encoding: y
              });
            case 6:
              d = _context31.sent;
              _context31.next = 15;
              break;
            case 9:
              _context31.prev = 9;
              _context31.t0 = _context31["catch"](2);
              _context31.next = 13;
              return _this.cleanup();
            case 13:
              _this.client.logger.error("sendRequest() -> core.crypto.encode() for topic ".concat(t, " failed"));
              throw _context31.t0;
            case 15:
              if (!at.includes(s)) {
                _context31.next = 20;
                break;
              }
              _y = yr$1(JSON.stringify(p)), _ = yr$1(d);
              _context31.next = 19;
              return _this.client.core.verify.register({
                id: _,
                decryptedId: _y
              });
            case 19:
              w = _context31.sent;
            case 20:
              m = v$1[s].req;
              if (!(m.attestation = w, r && (m.ttl = r), n && (m.id = n), _this.client.core.history.set(t, p), l)) {
                _context31.next = 27;
                break;
              }
              _y2 = xr$1(h, t, d);
              _context31.next = 25;
              return global.Linking.openURL(_y2, _this.client.name);
            case 25:
              _context31.next = 37;
              break;
            case 27:
              _y3 = v$1[s].req;
              r && (_y3.ttl = r);
              n && (_y3.id = n);
              if (!c) {
                _context31.next = 36;
                break;
              }
              _y3.internal = D$1(I({}, _y3.internal), {
                throwOnFailedPublish: !0
              });
              _context31.next = 34;
              return _this.client.core.relayer.publish(t, d, _y3);
            case 34:
              _context31.next = 37;
              break;
            case 36:
              _this.client.core.relayer.publish(t, d, _y3)["catch"](function (_) {
                return _this.client.logger.error(_);
              });
            case 37:
              return _context31.abrupt("return", p.id);
            case 38:
            case "end":
              return _context31.stop();
          }
        }, _callee31, null, [[2, 9]]);
      }));
      return function (_x36) {
        return _ref39.apply(this, arguments);
      };
    }(), _this.sendResult = /*#__PURE__*/function () {
      var _ref40 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee32(e) {
        var t, s, i, r, n, a, c, h, p, l, d, _l, _l2;
        return _regeneratorRuntime().wrap(function _callee32$(_context32) {
          while (1) switch (_context32.prev = _context32.next) {
            case 0:
              t = e.id, s = e.topic, i = e.result, r = e.throwOnFailedPublish, n = e.encodeOpts, a = e.appLink, c = formatJsonRpcResult(t, i);
              p = a && _typeof(global == null ? void 0 : global.Linking) < "u";
              _context32.prev = 2;
              l = p ? lr$1 : ge;
              _context32.next = 6;
              return _this.client.core.crypto.encode(s, c, D$1(I({}, n || {}), {
                encoding: l
              }));
            case 6:
              h = _context32.sent;
              _context32.next = 15;
              break;
            case 9:
              _context32.prev = 9;
              _context32.t0 = _context32["catch"](2);
              _context32.next = 13;
              return _this.cleanup();
            case 13:
              _this.client.logger.error("sendResult() -> core.crypto.encode() for topic ".concat(s, " failed"));
              throw _context32.t0;
            case 15:
              _context32.prev = 15;
              _context32.next = 18;
              return _this.client.core.history.get(s, t);
            case 18:
              d = _context32.sent;
              _context32.next = 24;
              break;
            case 21:
              _context32.prev = 21;
              _context32.t1 = _context32["catch"](15);
              throw _this.client.logger.error("sendResult() -> history.get(".concat(s, ", ").concat(t, ") failed")), _context32.t1;
            case 24:
              if (!p) {
                _context32.next = 30;
                break;
              }
              _l = xr$1(a, s, h);
              _context32.next = 28;
              return global.Linking.openURL(_l, _this.client.name);
            case 28:
              _context32.next = 38;
              break;
            case 30:
              _l2 = v$1[d.request.method].res;
              if (!r) {
                _context32.next = 37;
                break;
              }
              _l2.internal = D$1(I({}, _l2.internal), {
                throwOnFailedPublish: !0
              });
              _context32.next = 35;
              return _this.client.core.relayer.publish(s, h, _l2);
            case 35:
              _context32.next = 38;
              break;
            case 37:
              _this.client.core.relayer.publish(s, h, _l2)["catch"](function (w) {
                return _this.client.logger.error(w);
              });
            case 38:
              _context32.next = 40;
              return _this.client.core.history.resolve(c);
            case 40:
            case "end":
              return _context32.stop();
          }
        }, _callee32, null, [[2, 9], [15, 21]]);
      }));
      return function (_x37) {
        return _ref40.apply(this, arguments);
      };
    }(), _this.sendError = /*#__PURE__*/function () {
      var _ref41 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee33(e) {
        var t, s, i, r, n, a, c, h, p, l, d, _l3, _l4;
        return _regeneratorRuntime().wrap(function _callee33$(_context33) {
          while (1) switch (_context33.prev = _context33.next) {
            case 0:
              t = e.id, s = e.topic, i = e.error, r = e.encodeOpts, n = e.rpcOpts, a = e.appLink, c = formatJsonRpcError(t, i);
              p = a && _typeof(global == null ? void 0 : global.Linking) < "u";
              _context33.prev = 2;
              l = p ? lr$1 : ge;
              _context33.next = 6;
              return _this.client.core.crypto.encode(s, c, D$1(I({}, r || {}), {
                encoding: l
              }));
            case 6:
              h = _context33.sent;
              _context33.next = 15;
              break;
            case 9:
              _context33.prev = 9;
              _context33.t0 = _context33["catch"](2);
              _context33.next = 13;
              return _this.cleanup();
            case 13:
              _this.client.logger.error("sendError() -> core.crypto.encode() for topic ".concat(s, " failed"));
              throw _context33.t0;
            case 15:
              _context33.prev = 15;
              _context33.next = 18;
              return _this.client.core.history.get(s, t);
            case 18:
              d = _context33.sent;
              _context33.next = 24;
              break;
            case 21:
              _context33.prev = 21;
              _context33.t1 = _context33["catch"](15);
              throw _this.client.logger.error("sendError() -> history.get(".concat(s, ", ").concat(t, ") failed")), _context33.t1;
            case 24:
              if (!p) {
                _context33.next = 30;
                break;
              }
              _l3 = xr$1(a, s, h);
              _context33.next = 28;
              return global.Linking.openURL(_l3, _this.client.name);
            case 28:
              _context33.next = 32;
              break;
            case 30:
              _l4 = n || v$1[d.request.method].res;
              _this.client.core.relayer.publish(s, h, _l4);
            case 32:
              _context33.next = 34;
              return _this.client.core.history.resolve(c);
            case 34:
            case "end":
              return _context33.stop();
          }
        }, _callee33, null, [[2, 9], [15, 21]]);
      }));
      return function (_x38) {
        return _ref41.apply(this, arguments);
      };
    }(), _this.cleanup = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee34() {
      var e, t;
      return _regeneratorRuntime().wrap(function _callee34$(_context34) {
        while (1) switch (_context34.prev = _context34.next) {
          case 0:
            e = [], t = [];
            _this.client.session.getAll().forEach(function (s) {
              var i = !1;
              Kt$1(s.expiry) && (i = !0), _this.client.core.crypto.keychain.has(s.topic) || (i = !0), i && e.push(s.topic);
            });
            _this.client.proposal.getAll().forEach(function (s) {
              Kt$1(s.expiryTimestamp) && t.push(s.id);
            });
            _context34.next = 5;
            return Promise.all([].concat(_toConsumableArray(e.map(function (s) {
              return _this.deleteSession({
                topic: s
              });
            })), _toConsumableArray(t.map(function (s) {
              return _this.deleteProposal(s);
            }))));
          case 5:
          case "end":
            return _context34.stop();
        }
      }, _callee34);
    })), _this.onRelayEventRequest = /*#__PURE__*/function () {
      var _ref43 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee35(e) {
        return _regeneratorRuntime().wrap(function _callee35$(_context35) {
          while (1) switch (_context35.prev = _context35.next) {
            case 0:
              _this.requestQueue.queue.push(e);
              _context35.next = 3;
              return _this.processRequestsQueue();
            case 3:
            case "end":
              return _context35.stop();
          }
        }, _callee35);
      }));
      return function (_x39) {
        return _ref43.apply(this, arguments);
      };
    }(), _this.processRequestsQueue = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {
      var e;
      return _regeneratorRuntime().wrap(function _callee36$(_context36) {
        while (1) switch (_context36.prev = _context36.next) {
          case 0:
            if (!(_this.requestQueue.state === x$1.active)) {
              _context36.next = 3;
              break;
            }
            _this.client.logger.info("Request queue already active, skipping...");
            return _context36.abrupt("return");
          case 3:
            _this.client.logger.info("Request queue starting with ".concat(_this.requestQueue.queue.length, " requests"));
          case 4:
            if (!(_this.requestQueue.queue.length > 0)) {
              _context36.next = 18;
              break;
            }
            _this.requestQueue.state = x$1.active;
            e = _this.requestQueue.queue.shift();
            if (!e) {
              _context36.next = 16;
              break;
            }
            _context36.prev = 8;
            _context36.next = 11;
            return _this.processRequest(e);
          case 11:
            _context36.next = 16;
            break;
          case 13:
            _context36.prev = 13;
            _context36.t0 = _context36["catch"](8);
            _this.client.logger.warn(_context36.t0);
          case 16:
            _context36.next = 4;
            break;
          case 18:
            _this.requestQueue.state = x$1.idle;
          case 19:
          case "end":
            return _context36.stop();
        }
      }, _callee36, null, [[8, 13]]);
    })), _this.processRequest = /*#__PURE__*/function () {
      var _ref45 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee37(e) {
        var t, s, i, r, n, a;
        return _regeneratorRuntime().wrap(function _callee37$(_context37) {
          while (1) switch (_context37.prev = _context37.next) {
            case 0:
              t = e.topic, s = e.payload, i = e.attestation, r = e.transportType, n = e.encryptedId, a = s.method;
              if (_this.shouldIgnorePairingRequest({
                topic: t,
                requestMethod: a
              })) {
                _context37.next = 33;
                break;
              }
              _context37.t0 = a;
              _context37.next = _context37.t0 === "wc_sessionPropose" ? 5 : _context37.t0 === "wc_sessionSettle" ? 8 : _context37.t0 === "wc_sessionUpdate" ? 11 : _context37.t0 === "wc_sessionExtend" ? 14 : _context37.t0 === "wc_sessionPing" ? 17 : _context37.t0 === "wc_sessionDelete" ? 20 : _context37.t0 === "wc_sessionRequest" ? 23 : _context37.t0 === "wc_sessionEvent" ? 26 : _context37.t0 === "wc_sessionAuthenticate" ? 29 : 32;
              break;
            case 5:
              _context37.next = 7;
              return _this.onSessionProposeRequest({
                topic: t,
                payload: s,
                attestation: i,
                encryptedId: n
              });
            case 7:
              return _context37.abrupt("return", _context37.sent);
            case 8:
              _context37.next = 10;
              return _this.onSessionSettleRequest(t, s);
            case 10:
              return _context37.abrupt("return", _context37.sent);
            case 11:
              _context37.next = 13;
              return _this.onSessionUpdateRequest(t, s);
            case 13:
              return _context37.abrupt("return", _context37.sent);
            case 14:
              _context37.next = 16;
              return _this.onSessionExtendRequest(t, s);
            case 16:
              return _context37.abrupt("return", _context37.sent);
            case 17:
              _context37.next = 19;
              return _this.onSessionPingRequest(t, s);
            case 19:
              return _context37.abrupt("return", _context37.sent);
            case 20:
              _context37.next = 22;
              return _this.onSessionDeleteRequest(t, s);
            case 22:
              return _context37.abrupt("return", _context37.sent);
            case 23:
              _context37.next = 25;
              return _this.onSessionRequest({
                topic: t,
                payload: s,
                attestation: i,
                encryptedId: n,
                transportType: r
              });
            case 25:
              return _context37.abrupt("return", _context37.sent);
            case 26:
              _context37.next = 28;
              return _this.onSessionEventRequest(t, s);
            case 28:
              return _context37.abrupt("return", _context37.sent);
            case 29:
              _context37.next = 31;
              return _this.onSessionAuthenticateRequest({
                topic: t,
                payload: s,
                attestation: i,
                encryptedId: n,
                transportType: r
              });
            case 31:
              return _context37.abrupt("return", _context37.sent);
            case 32:
              return _context37.abrupt("return", _this.client.logger.info("Unsupported request method ".concat(a)));
            case 33:
            case "end":
              return _context37.stop();
          }
        }, _callee37);
      }));
      return function (_x40) {
        return _ref45.apply(this, arguments);
      };
    }(), _this.onRelayEventResponse = /*#__PURE__*/function () {
      var _ref46 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee38(e) {
        var t, s, i, r;
        return _regeneratorRuntime().wrap(function _callee38$(_context38) {
          while (1) switch (_context38.prev = _context38.next) {
            case 0:
              t = e.topic;
              s = e.payload;
              i = e.transportType;
              _context38.next = 5;
              return _this.client.core.history.get(t, s.id);
            case 5:
              r = _context38.sent.request.method;
              _context38.t0 = r;
              _context38.next = _context38.t0 === "wc_sessionPropose" ? 9 : _context38.t0 === "wc_sessionSettle" ? 10 : _context38.t0 === "wc_sessionUpdate" ? 11 : _context38.t0 === "wc_sessionExtend" ? 12 : _context38.t0 === "wc_sessionPing" ? 13 : _context38.t0 === "wc_sessionRequest" ? 14 : _context38.t0 === "wc_sessionAuthenticate" ? 15 : 16;
              break;
            case 9:
              return _context38.abrupt("return", _this.onSessionProposeResponse(t, s, i));
            case 10:
              return _context38.abrupt("return", _this.onSessionSettleResponse(t, s));
            case 11:
              return _context38.abrupt("return", _this.onSessionUpdateResponse(t, s));
            case 12:
              return _context38.abrupt("return", _this.onSessionExtendResponse(t, s));
            case 13:
              return _context38.abrupt("return", _this.onSessionPingResponse(t, s));
            case 14:
              return _context38.abrupt("return", _this.onSessionRequestResponse(t, s));
            case 15:
              return _context38.abrupt("return", _this.onSessionAuthenticateResponse(t, s));
            case 16:
              return _context38.abrupt("return", _this.client.logger.info("Unsupported response method ".concat(r)));
            case 17:
            case "end":
              return _context38.stop();
          }
        }, _callee38);
      }));
      return function (_x41) {
        return _ref46.apply(this, arguments);
      };
    }(), _this.onRelayEventUnknownPayload = function (e) {
      var t = e.topic,
        _u3 = S$2("MISSING_OR_INVALID", "Decoded payload on topic ".concat(t, " is not identifiable as a JSON-RPC request or a response.")),
        s = _u3.message;
      throw new Error(s);
    }, _this.shouldIgnorePairingRequest = function (e) {
      var t = e.topic,
        s = e.requestMethod,
        i = _this.expectedPairingMethodMap.get(t);
      return !i || i.includes(s) ? !1 : !!(i.includes("wc_sessionAuthenticate") && _this.client.events.listenerCount("session_authenticate") > 0);
    }, _this.onSessionProposeRequest = /*#__PURE__*/function () {
      var _ref47 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee39(e) {
        var t, s, i, r, n, a, c, h, p, d;
        return _regeneratorRuntime().wrap(function _callee39$(_context39) {
          while (1) switch (_context39.prev = _context39.next) {
            case 0:
              t = e.topic, s = e.payload, i = e.attestation, r = e.encryptedId, n = s.params, a = s.id;
              _context39.prev = 1;
              c = _this.client.core.eventClient.getEvent({
                topic: t
              });
              _this.isValidConnect(I({}, s.params));
              h = n.expiryTimestamp || Mt$1(v$1.wc_sessionPropose.req.ttl), p = I({
                id: a,
                pairingTopic: t,
                expiryTimestamp: h
              }, n);
              _context39.next = 7;
              return _this.setProposal(a, p);
            case 7:
              _context39.next = 9;
              return _this.getVerifyContext({
                attestationId: i,
                hash: yr$1(JSON.stringify(s)),
                encryptedId: r,
                metadata: p.proposer.metadata
              });
            case 9:
              d = _context39.sent;
              _this.client.events.listenerCount("session_proposal") === 0 && (console.warn("No listener for session_proposal event"), c !== null && c !== void 0 && c.setError($$1.proposal_listener_not_found)), c !== null && c !== void 0 && c.addTrace(z$2.emit_session_proposal), _this.client.events.emit("session_proposal", {
                id: a,
                params: p,
                verifyContext: d
              });
              _context39.next = 18;
              break;
            case 13:
              _context39.prev = 13;
              _context39.t0 = _context39["catch"](1);
              _context39.next = 17;
              return _this.sendError({
                id: a,
                topic: t,
                error: _context39.t0,
                rpcOpts: v$1.wc_sessionPropose.autoReject
              });
            case 17:
              _this.client.logger.error(_context39.t0);
            case 18:
            case "end":
              return _context39.stop();
          }
        }, _callee39, null, [[1, 13]]);
      }));
      return function (_x42) {
        return _ref47.apply(this, arguments);
      };
    }(), _this.onSessionProposeResponse = /*#__PURE__*/function () {
      var _ref48 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee40(e, t, s) {
        var i, r, n, a, c, h, p, _r;
        return _regeneratorRuntime().wrap(function _callee40$(_context40) {
          while (1) switch (_context40.prev = _context40.next) {
            case 0:
              i = t.id;
              if (!isJsonRpcResult(t)) {
                _context40.next = 22;
                break;
              }
              r = t.result;
              _this.client.logger.trace({
                type: "method",
                method: "onSessionProposeResponse",
                result: r
              });
              n = _this.client.proposal.get(i);
              _this.client.logger.trace({
                type: "method",
                method: "onSessionProposeResponse",
                proposal: n
              });
              a = n.proposer.publicKey;
              _this.client.logger.trace({
                type: "method",
                method: "onSessionProposeResponse",
                selfPublicKey: a
              });
              c = r.responderPublicKey;
              _this.client.logger.trace({
                type: "method",
                method: "onSessionProposeResponse",
                peerPublicKey: c
              });
              _context40.next = 12;
              return _this.client.core.crypto.generateSharedKey(a, c);
            case 12:
              h = _context40.sent;
              _this.client.logger.trace({
                type: "method",
                method: "onSessionProposeResponse",
                sessionTopic: h
              });
              _context40.next = 16;
              return _this.client.core.relayer.subscribe(h, {
                transportType: s
              });
            case 16:
              p = _context40.sent;
              _this.client.logger.trace({
                type: "method",
                method: "onSessionProposeResponse",
                subscriptionId: p
              });
              _context40.next = 20;
              return _this.client.core.pairing.activate({
                topic: e
              });
            case 20:
              _context40.next = 29;
              break;
            case 22:
              if (!isJsonRpcError(t)) {
                _context40.next = 29;
                break;
              }
              _context40.next = 25;
              return _this.client.proposal["delete"](i, U$1("USER_DISCONNECTED"));
            case 25:
              _r = Lt$1("session_connect");
              if (!(_this.events.listenerCount(_r) === 0)) {
                _context40.next = 28;
                break;
              }
              throw new Error("emitting ".concat(_r, " without any listeners, 954"));
            case 28:
              _this.events.emit(Lt$1("session_connect"), {
                error: t.error
              });
            case 29:
            case "end":
              return _context40.stop();
          }
        }, _callee40);
      }));
      return function (_x43, _x44, _x45) {
        return _ref48.apply(this, arguments);
      };
    }(), _this.onSessionSettleRequest = /*#__PURE__*/function () {
      var _ref49 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee41(e, t) {
        var s, i, _t$params, r, n, a, c, h, p, d, l;
        return _regeneratorRuntime().wrap(function _callee41$(_context41) {
          while (1) switch (_context41.prev = _context41.next) {
            case 0:
              s = t.id, i = t.params;
              _context41.prev = 1;
              _this.isValidSessionSettleRequest(i);
              _t$params = t.params, r = _t$params.relay, n = _t$params.controller, a = _t$params.expiry, c = _t$params.namespaces, h = _t$params.sessionProperties, p = _t$params.sessionConfig, d = D$1(I(I({
                topic: e,
                relay: r,
                expiry: a,
                namespaces: c,
                acknowledged: !0,
                pairingTopic: "",
                requiredNamespaces: {},
                optionalNamespaces: {},
                controller: n.publicKey,
                self: {
                  publicKey: "",
                  metadata: _this.client.metadata
                },
                peer: {
                  publicKey: n.publicKey,
                  metadata: n.metadata
                }
              }, h && {
                sessionProperties: h
              }), p && {
                sessionConfig: p
              }), {
                transportType: M.relay
              }), l = Lt$1("session_connect");
              if (!(_this.events.listenerCount(l) === 0)) {
                _context41.next = 6;
                break;
              }
              throw new Error("emitting ".concat(l, " without any listeners 997"));
            case 6:
              _this.events.emit(Lt$1("session_connect"), {
                session: d
              });
              _context41.next = 9;
              return _this.sendResult({
                id: t.id,
                topic: e,
                result: !0,
                throwOnFailedPublish: !0
              });
            case 9:
              _context41.next = 16;
              break;
            case 11:
              _context41.prev = 11;
              _context41.t0 = _context41["catch"](1);
              _context41.next = 15;
              return _this.sendError({
                id: s,
                topic: e,
                error: _context41.t0
              });
            case 15:
              _this.client.logger.error(_context41.t0);
            case 16:
            case "end":
              return _context41.stop();
          }
        }, _callee41, null, [[1, 11]]);
      }));
      return function (_x46, _x47) {
        return _ref49.apply(this, arguments);
      };
    }(), _this.onSessionSettleResponse = /*#__PURE__*/function () {
      var _ref50 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee42(e, t) {
        var s;
        return _regeneratorRuntime().wrap(function _callee42$(_context42) {
          while (1) switch (_context42.prev = _context42.next) {
            case 0:
              s = t.id;
              if (!isJsonRpcResult(t)) {
                _context42.next = 7;
                break;
              }
              _context42.next = 4;
              return _this.client.session.update(e, {
                acknowledged: !0
              });
            case 4:
              _this.events.emit(Lt$1("session_approve", s), {});
              _context42.next = 12;
              break;
            case 7:
              _context42.t0 = isJsonRpcError(t);
              if (!_context42.t0) {
                _context42.next = 12;
                break;
              }
              _context42.next = 11;
              return _this.client.session["delete"](e, U$1("USER_DISCONNECTED"));
            case 11:
              _this.events.emit(Lt$1("session_approve", s), {
                error: t.error
              });
            case 12:
            case "end":
              return _context42.stop();
          }
        }, _callee42);
      }));
      return function (_x48, _x49) {
        return _ref50.apply(this, arguments);
      };
    }(), _this.onSessionUpdateRequest = /*#__PURE__*/function () {
      var _ref51 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee43(e, t) {
        var s, i, r, n;
        return _regeneratorRuntime().wrap(function _callee43$(_context43) {
          while (1) switch (_context43.prev = _context43.next) {
            case 0:
              s = t.params, i = t.id;
              _context43.prev = 1;
              r = "".concat(e, "_session_update"), n = yo.get(r);
              if (!(n && _this.isRequestOutOfSync(n, i))) {
                _context43.next = 6;
                break;
              }
              _this.client.logger.info("Discarding out of sync request - ".concat(i)), _this.sendError({
                id: i,
                topic: e,
                error: U$1("INVALID_UPDATE_REQUEST")
              });
              return _context43.abrupt("return");
            case 6:
              _this.isValidUpdate(I({
                topic: e
              }, s));
              _context43.prev = 7;
              yo.set(r, i);
              _context43.next = 11;
              return _this.client.session.update(e, {
                namespaces: s.namespaces
              });
            case 11:
              _context43.next = 13;
              return _this.sendResult({
                id: i,
                topic: e,
                result: !0,
                throwOnFailedPublish: !0
              });
            case 13:
              _context43.next = 18;
              break;
            case 15:
              _context43.prev = 15;
              _context43.t0 = _context43["catch"](7);
              throw yo["delete"](r), _context43.t0;
            case 18:
              _this.client.events.emit("session_update", {
                id: i,
                topic: e,
                params: s
              });
              _context43.next = 26;
              break;
            case 21:
              _context43.prev = 21;
              _context43.t1 = _context43["catch"](1);
              _context43.next = 25;
              return _this.sendError({
                id: i,
                topic: e,
                error: _context43.t1
              });
            case 25:
              _this.client.logger.error(_context43.t1);
            case 26:
            case "end":
              return _context43.stop();
          }
        }, _callee43, null, [[1, 21], [7, 15]]);
      }));
      return function (_x50, _x51) {
        return _ref51.apply(this, arguments);
      };
    }(), _this.isRequestOutOfSync = function (e, t) {
      return parseInt(t.toString().slice(0, -3)) <= parseInt(e.toString().slice(0, -3));
    }, _this.onSessionUpdateResponse = function (e, t) {
      var s = t.id,
        i = Lt$1("session_update", s);
      if (_this.events.listenerCount(i) === 0) throw new Error("emitting ".concat(i, " without any listeners"));
      isJsonRpcResult(t) ? _this.events.emit(Lt$1("session_update", s), {}) : isJsonRpcError(t) && _this.events.emit(Lt$1("session_update", s), {
        error: t.error
      });
    }, _this.onSessionExtendRequest = /*#__PURE__*/function () {
      var _ref52 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee44(e, t) {
        var s;
        return _regeneratorRuntime().wrap(function _callee44$(_context44) {
          while (1) switch (_context44.prev = _context44.next) {
            case 0:
              s = t.id;
              _context44.prev = 1;
              _this.isValidExtend({
                topic: e
              });
              _context44.next = 5;
              return _this.setExpiry(e, Mt$1(z$1));
            case 5:
              _context44.next = 7;
              return _this.sendResult({
                id: s,
                topic: e,
                result: !0,
                throwOnFailedPublish: !0
              });
            case 7:
              _this.client.events.emit("session_extend", {
                id: s,
                topic: e
              });
              _context44.next = 15;
              break;
            case 10:
              _context44.prev = 10;
              _context44.t0 = _context44["catch"](1);
              _context44.next = 14;
              return _this.sendError({
                id: s,
                topic: e,
                error: _context44.t0
              });
            case 14:
              _this.client.logger.error(_context44.t0);
            case 15:
            case "end":
              return _context44.stop();
          }
        }, _callee44, null, [[1, 10]]);
      }));
      return function (_x52, _x53) {
        return _ref52.apply(this, arguments);
      };
    }(), _this.onSessionExtendResponse = function (e, t) {
      var s = t.id,
        i = Lt$1("session_extend", s);
      if (_this.events.listenerCount(i) === 0) throw new Error("emitting ".concat(i, " without any listeners"));
      isJsonRpcResult(t) ? _this.events.emit(Lt$1("session_extend", s), {}) : isJsonRpcError(t) && _this.events.emit(Lt$1("session_extend", s), {
        error: t.error
      });
    }, _this.onSessionPingRequest = /*#__PURE__*/function () {
      var _ref53 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee45(e, t) {
        var s;
        return _regeneratorRuntime().wrap(function _callee45$(_context45) {
          while (1) switch (_context45.prev = _context45.next) {
            case 0:
              s = t.id;
              _context45.prev = 1;
              _this.isValidPing({
                topic: e
              });
              _context45.next = 5;
              return _this.sendResult({
                id: s,
                topic: e,
                result: !0,
                throwOnFailedPublish: !0
              });
            case 5:
              _this.client.events.emit("session_ping", {
                id: s,
                topic: e
              });
              _context45.next = 13;
              break;
            case 8:
              _context45.prev = 8;
              _context45.t0 = _context45["catch"](1);
              _context45.next = 12;
              return _this.sendError({
                id: s,
                topic: e,
                error: _context45.t0
              });
            case 12:
              _this.client.logger.error(_context45.t0);
            case 13:
            case "end":
              return _context45.stop();
          }
        }, _callee45, null, [[1, 8]]);
      }));
      return function (_x54, _x55) {
        return _ref53.apply(this, arguments);
      };
    }(), _this.onSessionPingResponse = function (e, t) {
      var s = t.id,
        i = Lt$1("session_ping", s);
      if (_this.events.listenerCount(i) === 0) throw new Error("emitting ".concat(i, " without any listeners"));
      setTimeout(function () {
        isJsonRpcResult(t) ? _this.events.emit(Lt$1("session_ping", s), {}) : isJsonRpcError(t) && _this.events.emit(Lt$1("session_ping", s), {
          error: t.error
        });
      }, 500);
    }, _this.onSessionDeleteRequest = /*#__PURE__*/function () {
      var _ref54 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee47(e, t) {
        var s;
        return _regeneratorRuntime().wrap(function _callee47$(_context47) {
          while (1) switch (_context47.prev = _context47.next) {
            case 0:
              s = t.id;
              try {
                _this.isValidDisconnect({
                  topic: e,
                  reason: t.params
                }), Promise.all([new Promise(function (i) {
                  _this.client.core.relayer.once(v$2.publish, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee46() {
                    return _regeneratorRuntime().wrap(function _callee46$(_context46) {
                      while (1) switch (_context46.prev = _context46.next) {
                        case 0:
                          _context46.t0 = i;
                          _context46.next = 3;
                          return _this.deleteSession({
                            topic: e,
                            id: s
                          });
                        case 3:
                          _context46.t1 = _context46.sent;
                          (0, _context46.t0)(_context46.t1);
                        case 5:
                        case "end":
                          return _context46.stop();
                      }
                    }, _callee46);
                  })));
                }), _this.sendResult({
                  id: s,
                  topic: e,
                  result: !0,
                  throwOnFailedPublish: !0
                }), _this.cleanupPendingSentRequestsForTopic({
                  topic: e,
                  error: U$1("USER_DISCONNECTED")
                })])["catch"](function (i) {
                  return _this.client.logger.error(i);
                });
              } catch (i) {
                _this.client.logger.error(i);
              }
            case 2:
            case "end":
              return _context47.stop();
          }
        }, _callee47);
      }));
      return function (_x56, _x57) {
        return _ref54.apply(this, arguments);
      };
    }(), _this.onSessionRequest = /*#__PURE__*/function () {
      var _ref56 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee48(e) {
        var t, s, i, r, n, a, c, h, p, d, l, w, m;
        return _regeneratorRuntime().wrap(function _callee48$(_context48) {
          while (1) switch (_context48.prev = _context48.next) {
            case 0:
              r = e.topic, n = e.payload, a = e.attestation, c = e.encryptedId, h = e.transportType, p = n.id, d = n.params;
              _context48.prev = 1;
              _context48.next = 4;
              return _this.isValidRequest(I({
                topic: r
              }, d));
            case 4:
              l = _this.client.session.get(r);
              _context48.next = 7;
              return _this.getVerifyContext({
                attestationId: a,
                hash: yr$1(JSON.stringify(formatJsonRpcRequest("wc_sessionRequest", d, p))),
                encryptedId: c,
                metadata: l.peer.metadata,
                transportType: h
              });
            case 7:
              w = _context48.sent;
              m = {
                id: p,
                topic: r,
                params: d,
                verifyContext: w
              };
              _context48.next = 11;
              return _this.setPendingSessionRequest(m);
            case 11:
              h === M.link_mode && (t = l.peer.metadata.redirect) != null && t.universal && _this.client.core.addLinkModeSupportedApp((s = l.peer.metadata.redirect) == null ? void 0 : s.universal);
              (i = _this.client.signConfig) != null && i.disableRequestQueue ? _this.emitSessionRequest(m) : (_this.addSessionRequestToSessionRequestQueue(m), _this.processSessionRequestQueue());
              _context48.next = 20;
              break;
            case 15:
              _context48.prev = 15;
              _context48.t0 = _context48["catch"](1);
              _context48.next = 19;
              return _this.sendError({
                id: p,
                topic: r,
                error: _context48.t0
              });
            case 19:
              _this.client.logger.error(_context48.t0);
            case 20:
            case "end":
              return _context48.stop();
          }
        }, _callee48, null, [[1, 15]]);
      }));
      return function (_x58) {
        return _ref56.apply(this, arguments);
      };
    }(), _this.onSessionRequestResponse = function (e, t) {
      var s = t.id,
        i = Lt$1("session_request", s);
      if (_this.events.listenerCount(i) === 0) throw new Error("emitting ".concat(i, " without any listeners"));
      isJsonRpcResult(t) ? _this.events.emit(Lt$1("session_request", s), {
        result: t.result
      }) : isJsonRpcError(t) && _this.events.emit(Lt$1("session_request", s), {
        error: t.error
      });
    }, _this.onSessionEventRequest = /*#__PURE__*/function () {
      var _ref57 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee49(e, t) {
        var s, i, r, n;
        return _regeneratorRuntime().wrap(function _callee49$(_context49) {
          while (1) switch (_context49.prev = _context49.next) {
            case 0:
              s = t.id, i = t.params;
              _context49.prev = 1;
              r = "".concat(e, "_session_event_").concat(i.event.name), n = yo.get(r);
              if (!(n && _this.isRequestOutOfSync(n, s))) {
                _context49.next = 6;
                break;
              }
              _this.client.logger.info("Discarding out of sync request - ".concat(s));
              return _context49.abrupt("return");
            case 6:
              _this.isValidEmit(I({
                topic: e
              }, i)), _this.client.events.emit("session_event", {
                id: s,
                topic: e,
                params: i
              }), yo.set(r, s);
              _context49.next = 14;
              break;
            case 9:
              _context49.prev = 9;
              _context49.t0 = _context49["catch"](1);
              _context49.next = 13;
              return _this.sendError({
                id: s,
                topic: e,
                error: _context49.t0
              });
            case 13:
              _this.client.logger.error(_context49.t0);
            case 14:
            case "end":
              return _context49.stop();
          }
        }, _callee49, null, [[1, 9]]);
      }));
      return function (_x59, _x60) {
        return _ref57.apply(this, arguments);
      };
    }(), _this.onSessionAuthenticateResponse = function (e, t) {
      var s = t.id;
      _this.client.logger.trace({
        type: "method",
        method: "onSessionAuthenticateResponse",
        topic: e,
        payload: t
      }), isJsonRpcResult(t) ? _this.events.emit(Lt$1("session_request", s), {
        result: t.result
      }) : isJsonRpcError(t) && _this.events.emit(Lt$1("session_request", s), {
        error: t.error
      });
    }, _this.onSessionAuthenticateRequest = /*#__PURE__*/function () {
      var _ref58 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee50(e) {
        var t, s, i, r, n, a, _i$params, c, h, p, d, l, _h, _p, _d, _l5;
        return _regeneratorRuntime().wrap(function _callee50$(_context50) {
          while (1) switch (_context50.prev = _context50.next) {
            case 0:
              s = e.topic, i = e.payload, r = e.attestation, n = e.encryptedId, a = e.transportType;
              _context50.prev = 1;
              _i$params = i.params;
              c = _i$params.requester;
              h = _i$params.authPayload;
              p = _i$params.expiryTimestamp;
              _context50.next = 8;
              return _this.getVerifyContext({
                attestationId: r,
                hash: yr$1(JSON.stringify(i)),
                encryptedId: n,
                metadata: c.metadata,
                transportType: a
              });
            case 8:
              d = _context50.sent;
              l = {
                requester: c,
                pairingTopic: s,
                id: i.id,
                authPayload: h,
                verifyContext: d,
                expiryTimestamp: p
              };
              _context50.next = 12;
              return _this.setAuthRequest(i.id, {
                request: l,
                pairingTopic: s,
                transportType: a
              });
            case 12:
              a === M.link_mode && (t = c.metadata.redirect) != null && t.universal && _this.client.core.addLinkModeSupportedApp(c.metadata.redirect.universal);
              _this.client.events.emit("session_authenticate", {
                topic: s,
                params: i.params,
                id: i.id,
                verifyContext: d
              });
              _context50.next = 27;
              break;
            case 16:
              _context50.prev = 16;
              _context50.t0 = _context50["catch"](1);
              _this.client.logger.error(_context50.t0);
              _h = i.params.requester.publicKey;
              _context50.next = 22;
              return _this.client.core.crypto.generateKeyPair();
            case 22:
              _p = _context50.sent;
              _d = _this.getAppLinkIfEnabled(i.params.requester.metadata, a);
              _l5 = {
                type: D$2,
                receiverPublicKey: _h,
                senderPublicKey: _p
              };
              _context50.next = 27;
              return _this.sendError({
                id: i.id,
                topic: s,
                error: _context50.t0,
                encodeOpts: _l5,
                rpcOpts: v$1.wc_sessionAuthenticate.autoReject,
                appLink: _d
              });
            case 27:
            case "end":
              return _context50.stop();
          }
        }, _callee50, null, [[1, 16]]);
      }));
      return function (_x61) {
        return _ref58.apply(this, arguments);
      };
    }(), _this.addSessionRequestToSessionRequestQueue = function (e) {
      _this.sessionRequestQueue.queue.push(e);
    }, _this.cleanupAfterResponse = function (e) {
      _this.deletePendingSessionRequest(e.response.id, {
        message: "fulfilled",
        code: 0
      }), setTimeout(function () {
        _this.sessionRequestQueue.state = x$1.idle, _this.processSessionRequestQueue();
      }, cjs$3.toMiliseconds(_this.requestQueueDelay));
    }, _this.cleanupPendingSentRequestsForTopic = function (_ref59) {
      var e = _ref59.topic,
        t = _ref59.error;
      var s = _this.client.core.history.pending;
      s.length > 0 && s.filter(function (i) {
        return i.topic === e && i.request.method === "wc_sessionRequest";
      }).forEach(function (i) {
        var r = i.request.id,
          n = Lt$1("session_request", r);
        if (_this.events.listenerCount(n) === 0) throw new Error("emitting ".concat(n, " without any listeners"));
        _this.events.emit(Lt$1("session_request", i.request.id), {
          error: t
        });
      });
    }, _this.processSessionRequestQueue = function () {
      if (_this.sessionRequestQueue.state === x$1.active) {
        _this.client.logger.info("session request queue is already active.");
        return;
      }
      var e = _this.sessionRequestQueue.queue[0];
      if (!e) {
        _this.client.logger.info("session request queue is empty.");
        return;
      }
      try {
        _this.sessionRequestQueue.state = x$1.active, _this.emitSessionRequest(e);
      } catch (t) {
        _this.client.logger.error(t);
      }
    }, _this.emitSessionRequest = function (e) {
      _this.client.events.emit("session_request", e);
    }, _this.onPairingCreated = function (e) {
      if (e.methods && _this.expectedPairingMethodMap.set(e.topic, e.methods), e.active) return;
      var t = _this.client.proposal.getAll().find(function (s) {
        return s.pairingTopic === e.topic;
      });
      t && _this.onSessionProposeRequest({
        topic: e.topic,
        payload: formatJsonRpcRequest("wc_sessionPropose", {
          requiredNamespaces: t.requiredNamespaces,
          optionalNamespaces: t.optionalNamespaces,
          relays: t.relays,
          proposer: t.proposer,
          sessionProperties: t.sessionProperties
        }, t.id)
      });
    }, _this.isValidConnect = /*#__PURE__*/function () {
      var _ref60 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee51(e) {
        var _u4, a, t, s, i, r, n, _u5, _a;
        return _regeneratorRuntime().wrap(function _callee51$(_context51) {
          while (1) switch (_context51.prev = _context51.next) {
            case 0:
              if (to(e)) {
                _context51.next = 3;
                break;
              }
              _u4 = S$2("MISSING_OR_INVALID", "connect() params: ".concat(JSON.stringify(e))), a = _u4.message;
              throw new Error(a);
            case 3:
              t = e.pairingTopic, s = e.requiredNamespaces, i = e.optionalNamespaces, r = e.sessionProperties, n = e.relays;
              _context51.t0 = I$2(t);
              if (_context51.t0) {
                _context51.next = 8;
                break;
              }
              _context51.next = 8;
              return _this.isValidPairingTopic(t);
            case 8:
              if (eo(n, !0)) {
                _context51.next = 11;
                break;
              }
              _u5 = S$2("MISSING_OR_INVALID", "connect() relays: ".concat(n)), _a = _u5.message;
              throw new Error(_a);
            case 11:
              !I$2(s) && Z$2(s) !== 0 && _this.validateNamespaces(s, "requiredNamespaces"), !I$2(i) && Z$2(i) !== 0 && _this.validateNamespaces(i, "optionalNamespaces"), I$2(r) || _this.validateSessionProps(r, "sessionProperties");
            case 12:
            case "end":
              return _context51.stop();
          }
        }, _callee51);
      }));
      return function (_x62) {
        return _ref60.apply(this, arguments);
      };
    }(), _this.validateNamespaces = function (e, t) {
      var s = Xr$1(e, "connect()", t);
      if (s) throw new Error(s.message);
    }, _this.isValidApprove = /*#__PURE__*/function () {
      var _ref61 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee52(e) {
        var t, s, i, r, n, a, c, _u6, h;
        return _regeneratorRuntime().wrap(function _callee52$(_context52) {
          while (1) switch (_context52.prev = _context52.next) {
            case 0:
              if (to(e)) {
                _context52.next = 2;
                break;
              }
              throw new Error(S$2("MISSING_OR_INVALID", "approve() params: ".concat(e)).message);
            case 2:
              t = e.id, s = e.namespaces, i = e.relayProtocol, r = e.sessionProperties;
              _this.checkRecentlyDeleted(t);
              _context52.next = 6;
              return _this.isValidProposalId(t);
            case 6:
              n = _this.client.proposal.get(t), a = Wn(s, "approve()");
              if (!a) {
                _context52.next = 9;
                break;
              }
              throw new Error(a.message);
            case 9:
              c = zn(n.requiredNamespaces, s, "approve()");
              if (!c) {
                _context52.next = 12;
                break;
              }
              throw new Error(c.message);
            case 12:
              if (b$1(i, !0)) {
                _context52.next = 15;
                break;
              }
              _u6 = S$2("MISSING_OR_INVALID", "approve() relayProtocol: ".concat(i)), h = _u6.message;
              throw new Error(h);
            case 15:
              I$2(r) || _this.validateSessionProps(r, "sessionProperties");
            case 16:
            case "end":
              return _context52.stop();
          }
        }, _callee52);
      }));
      return function (_x63) {
        return _ref61.apply(this, arguments);
      };
    }(), _this.isValidReject = /*#__PURE__*/function () {
      var _ref62 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee53(e) {
        var _u7, i, t, s, _u8, _i3;
        return _regeneratorRuntime().wrap(function _callee53$(_context53) {
          while (1) switch (_context53.prev = _context53.next) {
            case 0:
              if (to(e)) {
                _context53.next = 3;
                break;
              }
              _u7 = S$2("MISSING_OR_INVALID", "reject() params: ".concat(e)), i = _u7.message;
              throw new Error(i);
            case 3:
              t = e.id, s = e.reason;
              _this.checkRecentlyDeleted(t);
              _context53.next = 7;
              return _this.isValidProposalId(t);
            case 7:
              if (ro(s)) {
                _context53.next = 10;
                break;
              }
              _u8 = S$2("MISSING_OR_INVALID", "reject() reason: ".concat(JSON.stringify(s))), _i3 = _u8.message;
              throw new Error(_i3);
            case 10:
            case "end":
              return _context53.stop();
          }
        }, _callee53);
      }));
      return function (_x64) {
        return _ref62.apply(this, arguments);
      };
    }(), _this.isValidSessionSettleRequest = function (e) {
      if (!to(e)) {
        var _u9 = S$2("MISSING_OR_INVALID", "onSessionSettleRequest() params: ".concat(e)),
          c = _u9.message;
        throw new Error(c);
      }
      var t = e.relay,
        s = e.controller,
        i = e.namespaces,
        r = e.expiry;
      if (!Jn(t)) {
        var _u10 = S$2("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string"),
          _c = _u10.message;
        throw new Error(_c);
      }
      var n = Zr$1(s, "onSessionSettleRequest()");
      if (n) throw new Error(n.message);
      var a = Wn(i, "onSessionSettleRequest()");
      if (a) throw new Error(a.message);
      if (Kt$1(r)) {
        var _u11 = S$2("EXPIRED", "onSessionSettleRequest()"),
          _c2 = _u11.message;
        throw new Error(_c2);
      }
    }, _this.isValidUpdate = /*#__PURE__*/function () {
      var _ref63 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee54(e) {
        var _u12, a, t, s, i, r, n;
        return _regeneratorRuntime().wrap(function _callee54$(_context54) {
          while (1) switch (_context54.prev = _context54.next) {
            case 0:
              if (to(e)) {
                _context54.next = 3;
                break;
              }
              _u12 = S$2("MISSING_OR_INVALID", "update() params: ".concat(e)), a = _u12.message;
              throw new Error(a);
            case 3:
              t = e.topic, s = e.namespaces;
              _this.checkRecentlyDeleted(t);
              _context54.next = 7;
              return _this.isValidSessionTopic(t);
            case 7:
              i = _this.client.session.get(t), r = Wn(s, "update()");
              if (!r) {
                _context54.next = 10;
                break;
              }
              throw new Error(r.message);
            case 10:
              n = zn(i.requiredNamespaces, s, "update()");
              if (!n) {
                _context54.next = 13;
                break;
              }
              throw new Error(n.message);
            case 13:
            case "end":
              return _context54.stop();
          }
        }, _callee54);
      }));
      return function (_x65) {
        return _ref63.apply(this, arguments);
      };
    }(), _this.isValidExtend = /*#__PURE__*/function () {
      var _ref64 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee55(e) {
        var _u13, s, t;
        return _regeneratorRuntime().wrap(function _callee55$(_context55) {
          while (1) switch (_context55.prev = _context55.next) {
            case 0:
              if (to(e)) {
                _context55.next = 3;
                break;
              }
              _u13 = S$2("MISSING_OR_INVALID", "extend() params: ".concat(e)), s = _u13.message;
              throw new Error(s);
            case 3:
              t = e.topic;
              _this.checkRecentlyDeleted(t);
              _context55.next = 7;
              return _this.isValidSessionTopic(t);
            case 7:
            case "end":
              return _context55.stop();
          }
        }, _callee55);
      }));
      return function (_x66) {
        return _ref64.apply(this, arguments);
      };
    }(), _this.isValidRequest = /*#__PURE__*/function () {
      var _ref65 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee56(e) {
        var _u14, a, t, s, i, r, _this$client$session$2, n, _u15, _a2, _u16, _a3, _u17, _a4, _u18, _a5;
        return _regeneratorRuntime().wrap(function _callee56$(_context56) {
          while (1) switch (_context56.prev = _context56.next) {
            case 0:
              if (to(e)) {
                _context56.next = 3;
                break;
              }
              _u14 = S$2("MISSING_OR_INVALID", "request() params: ".concat(e)), a = _u14.message;
              throw new Error(a);
            case 3:
              t = e.topic, s = e.request, i = e.chainId, r = e.expiry;
              _this.checkRecentlyDeleted(t);
              _context56.next = 7;
              return _this.isValidSessionTopic(t);
            case 7:
              _this$client$session$2 = _this.client.session.get(t), n = _this$client$session$2.namespaces;
              if (co(n, i)) {
                _context56.next = 11;
                break;
              }
              _u15 = S$2("MISSING_OR_INVALID", "request() chainId: ".concat(i)), _a2 = _u15.message;
              throw new Error(_a2);
            case 11:
              if (oo(s)) {
                _context56.next = 14;
                break;
              }
              _u16 = S$2("MISSING_OR_INVALID", "request() ".concat(JSON.stringify(s))), _a3 = _u16.message;
              throw new Error(_a3);
            case 14:
              if (ao(n, i, s.method)) {
                _context56.next = 17;
                break;
              }
              _u17 = S$2("MISSING_OR_INVALID", "request() method: ".concat(s.method)), _a4 = _u17.message;
              throw new Error(_a4);
            case 17:
              if (!(r && !po(r, me))) {
                _context56.next = 20;
                break;
              }
              _u18 = S$2("MISSING_OR_INVALID", "request() expiry: ".concat(r, ". Expiry must be a number (in seconds) between ").concat(me.min, " and ").concat(me.max)), _a5 = _u18.message;
              throw new Error(_a5);
            case 20:
            case "end":
              return _context56.stop();
          }
        }, _callee56);
      }));
      return function (_x67) {
        return _ref65.apply(this, arguments);
      };
    }(), _this.isValidRespond = /*#__PURE__*/function () {
      var _ref66 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee57(e) {
        var t, _u19, r, s, i, _u20, _r2;
        return _regeneratorRuntime().wrap(function _callee57$(_context57) {
          while (1) switch (_context57.prev = _context57.next) {
            case 0:
              if (to(e)) {
                _context57.next = 3;
                break;
              }
              _u19 = S$2("MISSING_OR_INVALID", "respond() params: ".concat(e)), r = _u19.message;
              throw new Error(r);
            case 3:
              s = e.topic, i = e.response;
              _context57.prev = 4;
              _context57.next = 7;
              return _this.isValidSessionTopic(s);
            case 7:
              _context57.next = 12;
              break;
            case 9:
              _context57.prev = 9;
              _context57.t0 = _context57["catch"](4);
              throw (t = e === null || e === void 0 ? void 0 : e.response) != null && t.id && _this.cleanupAfterResponse(e), _context57.t0;
            case 12:
              if (so(i)) {
                _context57.next = 15;
                break;
              }
              _u20 = S$2("MISSING_OR_INVALID", "respond() response: ".concat(JSON.stringify(i))), _r2 = _u20.message;
              throw new Error(_r2);
            case 15:
            case "end":
              return _context57.stop();
          }
        }, _callee57, null, [[4, 9]]);
      }));
      return function (_x68) {
        return _ref66.apply(this, arguments);
      };
    }(), _this.isValidPing = /*#__PURE__*/function () {
      var _ref67 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee58(e) {
        var _u21, s, t;
        return _regeneratorRuntime().wrap(function _callee58$(_context58) {
          while (1) switch (_context58.prev = _context58.next) {
            case 0:
              if (to(e)) {
                _context58.next = 3;
                break;
              }
              _u21 = S$2("MISSING_OR_INVALID", "ping() params: ".concat(e)), s = _u21.message;
              throw new Error(s);
            case 3:
              t = e.topic;
              _context58.next = 6;
              return _this.isValidSessionOrPairingTopic(t);
            case 6:
            case "end":
              return _context58.stop();
          }
        }, _callee58);
      }));
      return function (_x69) {
        return _ref67.apply(this, arguments);
      };
    }(), _this.isValidEmit = /*#__PURE__*/function () {
      var _ref68 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee59(e) {
        var _u22, n, t, s, i, _this$client$session$3, r, _u23, _n, _u24, _n2, _u25, _n3;
        return _regeneratorRuntime().wrap(function _callee59$(_context59) {
          while (1) switch (_context59.prev = _context59.next) {
            case 0:
              if (to(e)) {
                _context59.next = 3;
                break;
              }
              _u22 = S$2("MISSING_OR_INVALID", "emit() params: ".concat(e)), n = _u22.message;
              throw new Error(n);
            case 3:
              t = e.topic, s = e.event, i = e.chainId;
              _context59.next = 6;
              return _this.isValidSessionTopic(t);
            case 6:
              _this$client$session$3 = _this.client.session.get(t), r = _this$client$session$3.namespaces;
              if (co(r, i)) {
                _context59.next = 10;
                break;
              }
              _u23 = S$2("MISSING_OR_INVALID", "emit() chainId: ".concat(i)), _n = _u23.message;
              throw new Error(_n);
            case 10:
              if (io(s)) {
                _context59.next = 13;
                break;
              }
              _u24 = S$2("MISSING_OR_INVALID", "emit() event: ".concat(JSON.stringify(s))), _n2 = _u24.message;
              throw new Error(_n2);
            case 13:
              if (uo(r, i, s.name)) {
                _context59.next = 16;
                break;
              }
              _u25 = S$2("MISSING_OR_INVALID", "emit() event: ".concat(JSON.stringify(s))), _n3 = _u25.message;
              throw new Error(_n3);
            case 16:
            case "end":
              return _context59.stop();
          }
        }, _callee59);
      }));
      return function (_x70) {
        return _ref68.apply(this, arguments);
      };
    }(), _this.isValidDisconnect = /*#__PURE__*/function () {
      var _ref69 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee60(e) {
        var _u26, s, t;
        return _regeneratorRuntime().wrap(function _callee60$(_context60) {
          while (1) switch (_context60.prev = _context60.next) {
            case 0:
              if (to(e)) {
                _context60.next = 3;
                break;
              }
              _u26 = S$2("MISSING_OR_INVALID", "disconnect() params: ".concat(e)), s = _u26.message;
              throw new Error(s);
            case 3:
              t = e.topic;
              _context60.next = 6;
              return _this.isValidSessionOrPairingTopic(t);
            case 6:
            case "end":
              return _context60.stop();
          }
        }, _callee60);
      }));
      return function (_x71) {
        return _ref69.apply(this, arguments);
      };
    }(), _this.isValidAuthenticate = function (e) {
      var t = e.chains,
        s = e.uri,
        i = e.domain,
        r = e.nonce;
      if (!Array.isArray(t) || t.length === 0) throw new Error("chains is required and must be a non-empty array");
      if (!b$1(s, !1)) throw new Error("uri is required parameter");
      if (!b$1(i, !1)) throw new Error("domain is required parameter");
      if (!b$1(r, !1)) throw new Error("nonce is required parameter");
      if (_toConsumableArray(new Set(t.map(function (a) {
        return re$1(a).namespace;
      }))).length > 1) throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");
      var _Ne2 = re$1(t[0]),
        n = _Ne2.namespace;
      if (n !== "eip155") throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.");
    }, _this.getVerifyContext = /*#__PURE__*/function () {
      var _ref70 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee61(e) {
        var t, s, i, r, n, a, h, c;
        return _regeneratorRuntime().wrap(function _callee61$(_context61) {
          while (1) switch (_context61.prev = _context61.next) {
            case 0:
              t = e.attestationId, s = e.hash, i = e.encryptedId, r = e.metadata, n = e.transportType, a = {
                verified: {
                  verifyUrl: r.verifyUrl || J$1,
                  validation: "UNKNOWN",
                  origin: r.url || ""
                }
              };
              _context61.prev = 1;
              if (!(n === M.link_mode)) {
                _context61.next = 5;
                break;
              }
              h = _this.getAppLinkIfEnabled(r, n);
              return _context61.abrupt("return", (a.verified.validation = h && new URL(h).origin === new URL(r.url).origin ? "VALID" : "INVALID", a));
            case 5:
              _context61.next = 7;
              return _this.client.core.verify.resolve({
                attestationId: t,
                hash: s,
                encryptedId: i,
                verifyUrl: r.verifyUrl
              });
            case 7:
              c = _context61.sent;
              c && (a.verified.origin = c.origin, a.verified.isScam = c.isScam, a.verified.validation = c.origin === new URL(r.url).origin ? "VALID" : "INVALID");
              _context61.next = 14;
              break;
            case 11:
              _context61.prev = 11;
              _context61.t0 = _context61["catch"](1);
              _this.client.logger.warn(_context61.t0);
            case 14:
              return _context61.abrupt("return", (_this.client.logger.debug("Verify context: ".concat(JSON.stringify(a))), a));
            case 15:
            case "end":
              return _context61.stop();
          }
        }, _callee61, null, [[1, 11]]);
      }));
      return function (_x72) {
        return _ref70.apply(this, arguments);
      };
    }(), _this.validateSessionProps = function (e, t) {
      Object.values(e).forEach(function (s) {
        if (!b$1(s, !1)) {
          var _u27 = S$2("MISSING_OR_INVALID", "".concat(t, " must be in Record<string, string> format. Received: ").concat(JSON.stringify(s))),
            i = _u27.message;
          throw new Error(i);
        }
      });
    }, _this.getPendingAuthRequest = function (e) {
      var t = _this.client.auth.requests.get(e);
      return _typeof(t) == "object" ? t : void 0;
    }, _this.addToRecentlyDeleted = function (e, t) {
      if (_this.recentlyDeletedMap.set(e, t), _this.recentlyDeletedMap.size >= _this.recentlyDeletedLimit) {
        var s = 0;
        var i = _this.recentlyDeletedLimit / 2;
        var _iterator4 = _createForOfIteratorHelper(_this.recentlyDeletedMap.keys()),
          _step4;
        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var r = _step4.value;
            if (s++ >= i) break;
            _this.recentlyDeletedMap["delete"](r);
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      }
    }, _this.checkRecentlyDeleted = function (e) {
      var t = _this.recentlyDeletedMap.get(e);
      if (t) {
        var _u28 = S$2("MISSING_OR_INVALID", "Record was recently deleted - ".concat(t, ": ").concat(e)),
          s = _u28.message;
        throw new Error(s);
      }
    }, _this.isLinkModeEnabled = function (e, t) {
      var s, i, r, n, a, c, h, p, d;
      return !e || t !== M.link_mode ? !1 : ((i = (s = _this.client.metadata) == null ? void 0 : s.redirect) == null ? void 0 : i.linkMode) === !0 && ((n = (r = _this.client.metadata) == null ? void 0 : r.redirect) == null ? void 0 : n.universal) !== void 0 && ((c = (a = _this.client.metadata) == null ? void 0 : a.redirect) == null ? void 0 : c.universal) !== "" && ((h = e === null || e === void 0 ? void 0 : e.redirect) == null ? void 0 : h.universal) !== void 0 && ((p = e === null || e === void 0 ? void 0 : e.redirect) == null ? void 0 : p.universal) !== "" && ((d = e === null || e === void 0 ? void 0 : e.redirect) == null ? void 0 : d.linkMode) === !0 && _this.client.core.linkModeSupportedApps.includes(e.redirect.universal) && _typeof(global == null ? void 0 : global.Linking) < "u";
    }, _this.getAppLinkIfEnabled = function (e, t) {
      var s;
      return _this.isLinkModeEnabled(e, t) ? (s = e === null || e === void 0 ? void 0 : e.redirect) == null ? void 0 : s.universal : void 0;
    }, _this.handleLinkModeMessage = function (_ref71) {
      var e = _ref71.url;
      if (!e || !e.includes("wc_ev") || !e.includes("topic")) return;
      var t = Bt$1(e, "topic") || "",
        s = decodeURIComponent(Bt$1(e, "wc_ev") || ""),
        i = _this.client.session.keys.includes(t);
      i && _this.client.session.update(t, {
        transportType: M.link_mode
      }), _this.client.core.dispatchEnvelope({
        topic: t,
        message: s,
        sessionExists: i
      });
    }, _this.registerLinkModeListeners = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee62() {
      var e, t, s;
      return _regeneratorRuntime().wrap(function _callee62$(_context62) {
        while (1) switch (_context62.prev = _context62.next) {
          case 0:
            if (!(Wt$1() || _$1() && (e = _this.client.metadata.redirect) != null && e.linkMode)) {
              _context62.next = 8;
              break;
            }
            t = global == null ? void 0 : global.Linking;
            if (!(_typeof(t) < "u")) {
              _context62.next = 8;
              break;
            }
            t.addEventListener("url", _this.handleLinkModeMessage, _this.client.name);
            _context62.next = 6;
            return t.getInitialURL();
          case 6:
            s = _context62.sent;
            s && setTimeout(function () {
              _this.handleLinkModeMessage({
                url: s
              });
            }, 50);
          case 8:
          case "end":
            return _context62.stop();
        }
      }, _callee62);
    }));
    return _this;
  }
  _inherits(Rs, _Ot);
  return _createClass(Rs, [{
    key: "isInitialized",
    value: function isInitialized() {
      if (!this.initialized) {
        var _u29 = S$2("NOT_INITIALIZED", this.name),
          o = _u29.message;
        throw new Error(o);
      }
    }
  }, {
    key: "confirmOnlineStateOrThrow",
    value: function () {
      var _confirmOnlineStateOrThrow = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee63() {
        return _regeneratorRuntime().wrap(function _callee63$(_context63) {
          while (1) switch (_context63.prev = _context63.next) {
            case 0:
              _context63.next = 2;
              return this.client.core.relayer.confirmOnlineStateOrThrow();
            case 2:
            case "end":
              return _context63.stop();
          }
        }, _callee63, this);
      }));
      function confirmOnlineStateOrThrow() {
        return _confirmOnlineStateOrThrow.apply(this, arguments);
      }
      return confirmOnlineStateOrThrow;
    }()
  }, {
    key: "registerRelayerEvents",
    value: function registerRelayerEvents() {
      var _this2 = this;
      this.client.core.relayer.on(v$2.message, function (o) {
        !_this2.initialized || _this2.relayMessageCache.length > 0 ? _this2.relayMessageCache.push(o) : _this2.onRelayMessage(o);
      });
    }
  }, {
    key: "onRelayMessage",
    value: function () {
      var _onRelayMessage = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee64(o) {
        var e, t, s, i, _ref73, r, n;
        return _regeneratorRuntime().wrap(function _callee64$(_context64) {
          while (1) switch (_context64.prev = _context64.next) {
            case 0:
              e = o.topic;
              t = o.message;
              s = o.attestation;
              i = o.transportType;
              _ref73 = this.client.auth.authKeys.keys.includes(ae) ? this.client.auth.authKeys.get(ae) : {
                responseTopic: void 0,
                publicKey: void 0
              };
              r = _ref73.publicKey;
              _context64.next = 8;
              return this.client.core.crypto.decode(e, t, {
                receiverPublicKey: r,
                encoding: i === M.link_mode ? lr$1 : ge
              });
            case 8:
              n = _context64.sent;
              _context64.prev = 9;
              if (!isJsonRpcRequest(n)) {
                _context64.next = 14;
                break;
              }
              this.client.core.history.set(e, n), this.onRelayEventRequest({
                topic: e,
                payload: n,
                attestation: s,
                transportType: i,
                encryptedId: yr$1(t)
              });
              _context64.next = 23;
              break;
            case 14:
              if (!isJsonRpcResponse(n)) {
                _context64.next = 22;
                break;
              }
              _context64.next = 17;
              return this.client.core.history.resolve(n);
            case 17:
              _context64.next = 19;
              return this.onRelayEventResponse({
                topic: e,
                payload: n,
                transportType: i
              });
            case 19:
              this.client.core.history["delete"](e, n.id);
              _context64.next = 23;
              break;
            case 22:
              this.onRelayEventUnknownPayload({
                topic: e,
                payload: n,
                transportType: i
              });
            case 23:
              _context64.next = 28;
              break;
            case 25:
              _context64.prev = 25;
              _context64.t0 = _context64["catch"](9);
              this.client.logger.error(_context64.t0);
            case 28:
            case "end":
              return _context64.stop();
          }
        }, _callee64, this, [[9, 25]]);
      }));
      function onRelayMessage(_x73) {
        return _onRelayMessage.apply(this, arguments);
      }
      return onRelayMessage;
    }()
  }, {
    key: "registerExpirerEvents",
    value: function registerExpirerEvents() {
      var _this3 = this;
      this.client.core.expirer.on(S$1.expired, /*#__PURE__*/function () {
        var _ref74 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee65(o) {
          var _Bt, e, t;
          return _regeneratorRuntime().wrap(function _callee65$(_context65) {
            while (1) switch (_context65.prev = _context65.next) {
              case 0:
                _Bt = Vt$1(o.target), e = _Bt.topic, t = _Bt.id;
                if (!(t && _this3.client.pendingRequest.keys.includes(t))) {
                  _context65.next = 5;
                  break;
                }
                _context65.next = 4;
                return _this3.deletePendingSessionRequest(t, S$2("EXPIRED"), !0);
              case 4:
                return _context65.abrupt("return", _context65.sent);
              case 5:
                if (!(t && _this3.client.auth.requests.keys.includes(t))) {
                  _context65.next = 9;
                  break;
                }
                _context65.next = 8;
                return _this3.deletePendingAuthRequest(t, S$2("EXPIRED"), !0);
              case 8:
                return _context65.abrupt("return", _context65.sent);
              case 9:
                if (!e) {
                  _context65.next = 17;
                  break;
                }
                _context65.t0 = _this3.client.session.keys.includes(e);
                if (!_context65.t0) {
                  _context65.next = 15;
                  break;
                }
                _context65.next = 14;
                return _this3.deleteSession({
                  topic: e,
                  expirerHasDeleted: !0
                });
              case 14:
                _this3.client.events.emit("session_expire", {
                  topic: e
                });
              case 15:
                _context65.next = 22;
                break;
              case 17:
                _context65.t1 = t;
                if (!_context65.t1) {
                  _context65.next = 22;
                  break;
                }
                _context65.next = 21;
                return _this3.deleteProposal(t, !0);
              case 21:
                _this3.client.events.emit("proposal_expire", {
                  id: t
                });
              case 22:
              case "end":
                return _context65.stop();
            }
          }, _callee65);
        }));
        return function (_x74) {
          return _ref74.apply(this, arguments);
        };
      }());
    }
  }, {
    key: "registerPairingEvents",
    value: function registerPairingEvents() {
      var _this4 = this;
      this.client.core.pairing.events.on(V$1.create, function (o) {
        return _this4.onPairingCreated(o);
      }), this.client.core.pairing.events.on(V$1["delete"], function (o) {
        _this4.addToRecentlyDeleted(o.topic, "pairing");
      });
    }
  }, {
    key: "isValidPairingTopic",
    value: function isValidPairingTopic(o) {
      if (!b$1(o, !1)) {
        var _u30 = S$2("MISSING_OR_INVALID", "pairing topic should be a string: ".concat(o)),
          e = _u30.message;
        throw new Error(e);
      }
      if (!this.client.core.pairing.pairings.keys.includes(o)) {
        var _u31 = S$2("NO_MATCHING_KEY", "pairing topic doesn't exist: ".concat(o)),
          _e2 = _u31.message;
        throw new Error(_e2);
      }
      if (Kt$1(this.client.core.pairing.pairings.get(o).expiry)) {
        var _u32 = S$2("EXPIRED", "pairing topic: ".concat(o)),
          _e3 = _u32.message;
        throw new Error(_e3);
      }
    }
  }, {
    key: "isValidSessionTopic",
    value: function () {
      var _isValidSessionTopic = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee66(o) {
        var _u33, e, _u34, _e4, _u35, _e5, _u36, _e6;
        return _regeneratorRuntime().wrap(function _callee66$(_context66) {
          while (1) switch (_context66.prev = _context66.next) {
            case 0:
              if (b$1(o, !1)) {
                _context66.next = 3;
                break;
              }
              _u33 = S$2("MISSING_OR_INVALID", "session topic should be a string: ".concat(o)), e = _u33.message;
              throw new Error(e);
            case 3:
              if (!(this.checkRecentlyDeleted(o), !this.client.session.keys.includes(o))) {
                _context66.next = 6;
                break;
              }
              _u34 = S$2("NO_MATCHING_KEY", "session topic doesn't exist: ".concat(o)), _e4 = _u34.message;
              throw new Error(_e4);
            case 6:
              if (!Kt$1(this.client.session.get(o).expiry)) {
                _context66.next = 11;
                break;
              }
              _context66.next = 9;
              return this.deleteSession({
                topic: o
              });
            case 9:
              _u35 = S$2("EXPIRED", "session topic: ".concat(o)), _e5 = _u35.message;
              throw new Error(_e5);
            case 11:
              if (this.client.core.crypto.keychain.has(o)) {
                _context66.next = 16;
                break;
              }
              _u36 = S$2("MISSING_OR_INVALID", "session topic does not exist in keychain: ".concat(o)), _e6 = _u36.message;
              _context66.next = 15;
              return this.deleteSession({
                topic: o
              });
            case 15:
              throw new Error(_e6);
            case 16:
            case "end":
              return _context66.stop();
          }
        }, _callee66, this);
      }));
      function isValidSessionTopic(_x75) {
        return _isValidSessionTopic.apply(this, arguments);
      }
      return isValidSessionTopic;
    }()
  }, {
    key: "isValidSessionOrPairingTopic",
    value: function () {
      var _isValidSessionOrPairingTopic = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee67(o) {
        var _u37, e, _u38, _e7;
        return _regeneratorRuntime().wrap(function _callee67$(_context67) {
          while (1) switch (_context67.prev = _context67.next) {
            case 0:
              if (!(this.checkRecentlyDeleted(o), this.client.session.keys.includes(o))) {
                _context67.next = 5;
                break;
              }
              _context67.next = 3;
              return this.isValidSessionTopic(o);
            case 3:
              _context67.next = 16;
              break;
            case 5:
              if (!this.client.core.pairing.pairings.keys.includes(o)) {
                _context67.next = 9;
                break;
              }
              this.isValidPairingTopic(o);
              _context67.next = 16;
              break;
            case 9:
              if (!b$1(o, !1)) {
                _context67.next = 14;
                break;
              }
              _u37 = S$2("NO_MATCHING_KEY", "session or pairing topic doesn't exist: ".concat(o)), e = _u37.message;
              throw new Error(e);
            case 14:
              _u38 = S$2("MISSING_OR_INVALID", "session or pairing topic should be a string: ".concat(o)), _e7 = _u38.message;
              throw new Error(_e7);
            case 16:
            case "end":
              return _context67.stop();
          }
        }, _callee67, this);
      }));
      function isValidSessionOrPairingTopic(_x76) {
        return _isValidSessionOrPairingTopic.apply(this, arguments);
      }
      return isValidSessionOrPairingTopic;
    }()
  }, {
    key: "isValidProposalId",
    value: function () {
      var _isValidProposalId = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee68(o) {
        var _u39, e, _u40, _e8, _u41, _e9;
        return _regeneratorRuntime().wrap(function _callee68$(_context68) {
          while (1) switch (_context68.prev = _context68.next) {
            case 0:
              if (no(o)) {
                _context68.next = 3;
                break;
              }
              _u39 = S$2("MISSING_OR_INVALID", "proposal id should be a number: ".concat(o)), e = _u39.message;
              throw new Error(e);
            case 3:
              if (this.client.proposal.keys.includes(o)) {
                _context68.next = 6;
                break;
              }
              _u40 = S$2("NO_MATCHING_KEY", "proposal id doesn't exist: ".concat(o)), _e8 = _u40.message;
              throw new Error(_e8);
            case 6:
              if (!Kt$1(this.client.proposal.get(o).expiryTimestamp)) {
                _context68.next = 11;
                break;
              }
              _context68.next = 9;
              return this.deleteProposal(o);
            case 9:
              _u41 = S$2("EXPIRED", "proposal id: ".concat(o)), _e9 = _u41.message;
              throw new Error(_e9);
            case 11:
            case "end":
              return _context68.stop();
          }
        }, _callee68, this);
      }));
      function isValidProposalId(_x77) {
        return _isValidProposalId.apply(this, arguments);
      }
      return isValidProposalId;
    }()
  }]);
}(M$2);
var Ss = /*#__PURE__*/function (_H) {
  function Ss(o, e) {
    var _this5;
    _classCallCheck(this, Ss);
    _this5 = _callSuper(this, Ss, [o, e, st, ye]), _this5.core = o, _this5.logger = e;
    return _this5;
  }
  _inherits(Ss, _H);
  return _createClass(Ss);
}(ni);
var yt = /*#__PURE__*/function (_H2) {
  function yt(o, e) {
    var _this6;
    _classCallCheck(this, yt);
    _this6 = _callSuper(this, yt, [o, e, rt, ye]), _this6.core = o, _this6.logger = e;
    return _this6;
  }
  _inherits(yt, _H2);
  return _createClass(yt);
}(ni);
var Is = /*#__PURE__*/function (_H3) {
  function Is(o, e) {
    var _this7;
    _classCallCheck(this, Is);
    _this7 = _callSuper(this, Is, [o, e, ot, ye, function (t) {
      return t.id;
    }]), _this7.core = o, _this7.logger = e;
    return _this7;
  }
  _inherits(Is, _H3);
  return _createClass(Is);
}(ni);
var fs = /*#__PURE__*/function (_H4) {
  function fs(o, e) {
    var _this8;
    _classCallCheck(this, fs);
    _this8 = _callSuper(this, fs, [o, e, pt, oe, function () {
      return ae;
    }]), _this8.core = o, _this8.logger = e;
    return _this8;
  }
  _inherits(fs, _H4);
  return _createClass(fs);
}(ni);
var vs = /*#__PURE__*/function (_H5) {
  function vs(o, e) {
    var _this9;
    _classCallCheck(this, vs);
    _this9 = _callSuper(this, vs, [o, e, ht, oe]), _this9.core = o, _this9.logger = e;
    return _this9;
  }
  _inherits(vs, _H5);
  return _createClass(vs);
}(ni);
var qs = /*#__PURE__*/function (_H6) {
  function qs(o, e) {
    var _this10;
    _classCallCheck(this, qs);
    _this10 = _callSuper(this, qs, [o, e, dt, oe, function (t) {
      return t.id;
    }]), _this10.core = o, _this10.logger = e;
    return _this10;
  }
  _inherits(qs, _H6);
  return _createClass(qs);
}(ni);
var Ts = /*#__PURE__*/function () {
  function Ts(o, e) {
    _classCallCheck(this, Ts);
    this.core = o, this.logger = e, this.authKeys = new fs(this.core, this.logger), this.pairingTopics = new vs(this.core, this.logger), this.requests = new qs(this.core, this.logger);
  }
  return _createClass(Ts, [{
    key: "init",
    value: function () {
      var _init = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee69() {
        return _regeneratorRuntime().wrap(function _callee69$(_context69) {
          while (1) switch (_context69.prev = _context69.next) {
            case 0:
              _context69.next = 2;
              return this.authKeys.init();
            case 2:
              _context69.next = 4;
              return this.pairingTopics.init();
            case 4:
              _context69.next = 6;
              return this.requests.init();
            case 6:
            case "end":
              return _context69.stop();
          }
        }, _callee69, this);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }]);
}();
var _e = /*#__PURE__*/function (_At) {
  function _e(o) {
    var _this11;
    _classCallCheck(this, _e);
    _this11 = _callSuper(this, _e, [o]), _this11.protocol = be, _this11.version = Ce, _this11.name = we.name, _this11.events = new eventsExports.EventEmitter(), _this11.on = function (t, s) {
      return _this11.events.on(t, s);
    }, _this11.once = function (t, s) {
      return _this11.events.once(t, s);
    }, _this11.off = function (t, s) {
      return _this11.events.off(t, s);
    }, _this11.removeListener = function (t, s) {
      return _this11.events.removeListener(t, s);
    }, _this11.removeAllListeners = function (t) {
      return _this11.events.removeAllListeners(t);
    }, _this11.connect = /*#__PURE__*/function () {
      var _ref75 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee70(t) {
        return _regeneratorRuntime().wrap(function _callee70$(_context70) {
          while (1) switch (_context70.prev = _context70.next) {
            case 0:
              _context70.prev = 0;
              _context70.next = 3;
              return _this11.engine.connect(t);
            case 3:
              return _context70.abrupt("return", _context70.sent);
            case 6:
              _context70.prev = 6;
              _context70.t0 = _context70["catch"](0);
              throw _this11.logger.error(_context70.t0.message), _context70.t0;
            case 9:
            case "end":
              return _context70.stop();
          }
        }, _callee70, null, [[0, 6]]);
      }));
      return function (_x78) {
        return _ref75.apply(this, arguments);
      };
    }(), _this11.pair = /*#__PURE__*/function () {
      var _ref76 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee71(t) {
        return _regeneratorRuntime().wrap(function _callee71$(_context71) {
          while (1) switch (_context71.prev = _context71.next) {
            case 0:
              _context71.prev = 0;
              _context71.next = 3;
              return _this11.engine.pair(t);
            case 3:
              return _context71.abrupt("return", _context71.sent);
            case 6:
              _context71.prev = 6;
              _context71.t0 = _context71["catch"](0);
              throw _this11.logger.error(_context71.t0.message), _context71.t0;
            case 9:
            case "end":
              return _context71.stop();
          }
        }, _callee71, null, [[0, 6]]);
      }));
      return function (_x79) {
        return _ref76.apply(this, arguments);
      };
    }(), _this11.approve = /*#__PURE__*/function () {
      var _ref77 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee72(t) {
        return _regeneratorRuntime().wrap(function _callee72$(_context72) {
          while (1) switch (_context72.prev = _context72.next) {
            case 0:
              _context72.prev = 0;
              _context72.next = 3;
              return _this11.engine.approve(t);
            case 3:
              return _context72.abrupt("return", _context72.sent);
            case 6:
              _context72.prev = 6;
              _context72.t0 = _context72["catch"](0);
              throw _this11.logger.error(_context72.t0.message), _context72.t0;
            case 9:
            case "end":
              return _context72.stop();
          }
        }, _callee72, null, [[0, 6]]);
      }));
      return function (_x80) {
        return _ref77.apply(this, arguments);
      };
    }(), _this11.reject = /*#__PURE__*/function () {
      var _ref78 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee73(t) {
        return _regeneratorRuntime().wrap(function _callee73$(_context73) {
          while (1) switch (_context73.prev = _context73.next) {
            case 0:
              _context73.prev = 0;
              _context73.next = 3;
              return _this11.engine.reject(t);
            case 3:
              return _context73.abrupt("return", _context73.sent);
            case 6:
              _context73.prev = 6;
              _context73.t0 = _context73["catch"](0);
              throw _this11.logger.error(_context73.t0.message), _context73.t0;
            case 9:
            case "end":
              return _context73.stop();
          }
        }, _callee73, null, [[0, 6]]);
      }));
      return function (_x81) {
        return _ref78.apply(this, arguments);
      };
    }(), _this11.update = /*#__PURE__*/function () {
      var _ref79 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee74(t) {
        return _regeneratorRuntime().wrap(function _callee74$(_context74) {
          while (1) switch (_context74.prev = _context74.next) {
            case 0:
              _context74.prev = 0;
              _context74.next = 3;
              return _this11.engine.update(t);
            case 3:
              return _context74.abrupt("return", _context74.sent);
            case 6:
              _context74.prev = 6;
              _context74.t0 = _context74["catch"](0);
              throw _this11.logger.error(_context74.t0.message), _context74.t0;
            case 9:
            case "end":
              return _context74.stop();
          }
        }, _callee74, null, [[0, 6]]);
      }));
      return function (_x82) {
        return _ref79.apply(this, arguments);
      };
    }(), _this11.extend = /*#__PURE__*/function () {
      var _ref80 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee75(t) {
        return _regeneratorRuntime().wrap(function _callee75$(_context75) {
          while (1) switch (_context75.prev = _context75.next) {
            case 0:
              _context75.prev = 0;
              _context75.next = 3;
              return _this11.engine.extend(t);
            case 3:
              return _context75.abrupt("return", _context75.sent);
            case 6:
              _context75.prev = 6;
              _context75.t0 = _context75["catch"](0);
              throw _this11.logger.error(_context75.t0.message), _context75.t0;
            case 9:
            case "end":
              return _context75.stop();
          }
        }, _callee75, null, [[0, 6]]);
      }));
      return function (_x83) {
        return _ref80.apply(this, arguments);
      };
    }(), _this11.request = /*#__PURE__*/function () {
      var _ref81 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee76(t) {
        return _regeneratorRuntime().wrap(function _callee76$(_context76) {
          while (1) switch (_context76.prev = _context76.next) {
            case 0:
              _context76.prev = 0;
              _context76.next = 3;
              return _this11.engine.request(t);
            case 3:
              return _context76.abrupt("return", _context76.sent);
            case 6:
              _context76.prev = 6;
              _context76.t0 = _context76["catch"](0);
              throw _this11.logger.error(_context76.t0.message), _context76.t0;
            case 9:
            case "end":
              return _context76.stop();
          }
        }, _callee76, null, [[0, 6]]);
      }));
      return function (_x84) {
        return _ref81.apply(this, arguments);
      };
    }(), _this11.respond = /*#__PURE__*/function () {
      var _ref82 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee77(t) {
        return _regeneratorRuntime().wrap(function _callee77$(_context77) {
          while (1) switch (_context77.prev = _context77.next) {
            case 0:
              _context77.prev = 0;
              _context77.next = 3;
              return _this11.engine.respond(t);
            case 3:
              return _context77.abrupt("return", _context77.sent);
            case 6:
              _context77.prev = 6;
              _context77.t0 = _context77["catch"](0);
              throw _this11.logger.error(_context77.t0.message), _context77.t0;
            case 9:
            case "end":
              return _context77.stop();
          }
        }, _callee77, null, [[0, 6]]);
      }));
      return function (_x85) {
        return _ref82.apply(this, arguments);
      };
    }(), _this11.ping = /*#__PURE__*/function () {
      var _ref83 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee78(t) {
        return _regeneratorRuntime().wrap(function _callee78$(_context78) {
          while (1) switch (_context78.prev = _context78.next) {
            case 0:
              _context78.prev = 0;
              _context78.next = 3;
              return _this11.engine.ping(t);
            case 3:
              return _context78.abrupt("return", _context78.sent);
            case 6:
              _context78.prev = 6;
              _context78.t0 = _context78["catch"](0);
              throw _this11.logger.error(_context78.t0.message), _context78.t0;
            case 9:
            case "end":
              return _context78.stop();
          }
        }, _callee78, null, [[0, 6]]);
      }));
      return function (_x86) {
        return _ref83.apply(this, arguments);
      };
    }(), _this11.emit = /*#__PURE__*/function () {
      var _ref84 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee79(t) {
        return _regeneratorRuntime().wrap(function _callee79$(_context79) {
          while (1) switch (_context79.prev = _context79.next) {
            case 0:
              _context79.prev = 0;
              _context79.next = 3;
              return _this11.engine.emit(t);
            case 3:
              return _context79.abrupt("return", _context79.sent);
            case 6:
              _context79.prev = 6;
              _context79.t0 = _context79["catch"](0);
              throw _this11.logger.error(_context79.t0.message), _context79.t0;
            case 9:
            case "end":
              return _context79.stop();
          }
        }, _callee79, null, [[0, 6]]);
      }));
      return function (_x87) {
        return _ref84.apply(this, arguments);
      };
    }(), _this11.disconnect = /*#__PURE__*/function () {
      var _ref85 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee80(t) {
        return _regeneratorRuntime().wrap(function _callee80$(_context80) {
          while (1) switch (_context80.prev = _context80.next) {
            case 0:
              _context80.prev = 0;
              _context80.next = 3;
              return _this11.engine.disconnect(t);
            case 3:
              return _context80.abrupt("return", _context80.sent);
            case 6:
              _context80.prev = 6;
              _context80.t0 = _context80["catch"](0);
              throw _this11.logger.error(_context80.t0.message), _context80.t0;
            case 9:
            case "end":
              return _context80.stop();
          }
        }, _callee80, null, [[0, 6]]);
      }));
      return function (_x88) {
        return _ref85.apply(this, arguments);
      };
    }(), _this11.find = function (t) {
      try {
        return _this11.engine.find(t);
      } catch (s) {
        throw _this11.logger.error(s.message), s;
      }
    }, _this11.getPendingSessionRequests = function () {
      try {
        return _this11.engine.getPendingSessionRequests();
      } catch (t) {
        throw _this11.logger.error(t.message), t;
      }
    }, _this11.authenticate = /*#__PURE__*/function () {
      var _ref86 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee81(t, s) {
        return _regeneratorRuntime().wrap(function _callee81$(_context81) {
          while (1) switch (_context81.prev = _context81.next) {
            case 0:
              _context81.prev = 0;
              _context81.next = 3;
              return _this11.engine.authenticate(t, s);
            case 3:
              return _context81.abrupt("return", _context81.sent);
            case 6:
              _context81.prev = 6;
              _context81.t0 = _context81["catch"](0);
              throw _this11.logger.error(_context81.t0.message), _context81.t0;
            case 9:
            case "end":
              return _context81.stop();
          }
        }, _callee81, null, [[0, 6]]);
      }));
      return function (_x89, _x90) {
        return _ref86.apply(this, arguments);
      };
    }(), _this11.formatAuthMessage = function (t) {
      try {
        return _this11.engine.formatAuthMessage(t);
      } catch (s) {
        throw _this11.logger.error(s.message), s;
      }
    }, _this11.approveSessionAuthenticate = /*#__PURE__*/function () {
      var _ref87 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee82(t) {
        return _regeneratorRuntime().wrap(function _callee82$(_context82) {
          while (1) switch (_context82.prev = _context82.next) {
            case 0:
              _context82.prev = 0;
              _context82.next = 3;
              return _this11.engine.approveSessionAuthenticate(t);
            case 3:
              return _context82.abrupt("return", _context82.sent);
            case 6:
              _context82.prev = 6;
              _context82.t0 = _context82["catch"](0);
              throw _this11.logger.error(_context82.t0.message), _context82.t0;
            case 9:
            case "end":
              return _context82.stop();
          }
        }, _callee82, null, [[0, 6]]);
      }));
      return function (_x91) {
        return _ref87.apply(this, arguments);
      };
    }(), _this11.rejectSessionAuthenticate = /*#__PURE__*/function () {
      var _ref88 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee83(t) {
        return _regeneratorRuntime().wrap(function _callee83$(_context83) {
          while (1) switch (_context83.prev = _context83.next) {
            case 0:
              _context83.prev = 0;
              _context83.next = 3;
              return _this11.engine.rejectSessionAuthenticate(t);
            case 3:
              return _context83.abrupt("return", _context83.sent);
            case 6:
              _context83.prev = 6;
              _context83.t0 = _context83["catch"](0);
              throw _this11.logger.error(_context83.t0.message), _context83.t0;
            case 9:
            case "end":
              return _context83.stop();
          }
        }, _callee83, null, [[0, 6]]);
      }));
      return function (_x92) {
        return _ref88.apply(this, arguments);
      };
    }(), _this11.name = (o === null || o === void 0 ? void 0 : o.name) || we.name, _this11.metadata = (o === null || o === void 0 ? void 0 : o.metadata) || Nt$1(), _this11.signConfig = o === null || o === void 0 ? void 0 : o.signConfig;
    var e = _typeof(o === null || o === void 0 ? void 0 : o.logger) < "u" && typeof (o === null || o === void 0 ? void 0 : o.logger) != "string" ? o.logger : qt$5(k$4({
      level: (o === null || o === void 0 ? void 0 : o.logger) || we.logger
    }));
    _this11.core = (o === null || o === void 0 ? void 0 : o.core) || new bn(o), _this11.logger = E$4(e, _this11.name), _this11.session = new yt(_this11.core, _this11.logger), _this11.proposal = new Ss(_this11.core, _this11.logger), _this11.pendingRequest = new Is(_this11.core, _this11.logger), _this11.engine = new Rs(_this11), _this11.auth = new Ts(_this11.core, _this11.logger);
    return _this11;
  }
  _inherits(_e, _At);
  return _createClass(_e, [{
    key: "context",
    get: function get() {
      return y$5(this.logger);
    }
  }, {
    key: "pairing",
    get: function get() {
      return this.core.pairing.pairings;
    }
  }, {
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee84() {
        return _regeneratorRuntime().wrap(function _callee84$(_context84) {
          while (1) switch (_context84.prev = _context84.next) {
            case 0:
              this.logger.trace("Initialized");
              _context84.prev = 1;
              _context84.next = 4;
              return this.core.start();
            case 4:
              _context84.next = 6;
              return this.session.init();
            case 6:
              _context84.next = 8;
              return this.proposal.init();
            case 8:
              _context84.next = 10;
              return this.pendingRequest.init();
            case 10:
              _context84.next = 12;
              return this.auth.init();
            case 12:
              _context84.next = 14;
              return this.engine.init();
            case 14:
              this.logger.info("SignClient Initialization Success");
              this.engine.processRelayMessageCache();
              _context84.next = 21;
              break;
            case 18:
              _context84.prev = 18;
              _context84.t0 = _context84["catch"](1);
              throw this.logger.info("SignClient Initialization Failure"), this.logger.error(_context84.t0.message), _context84.t0;
            case 21:
            case "end":
              return _context84.stop();
          }
        }, _callee84, this, [[1, 18]]);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
  }], [{
    key: "init",
    value: function () {
      var _init2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee85(o) {
        var e;
        return _regeneratorRuntime().wrap(function _callee85$(_context85) {
          while (1) switch (_context85.prev = _context85.next) {
            case 0:
              e = new _e(o);
              _context85.next = 3;
              return e.initialize();
            case 3:
              return _context85.abrupt("return", e);
            case 4:
            case "end":
              return _context85.stop();
          }
        }, _callee85);
      }));
      function init(_x93) {
        return _init2.apply(this, arguments);
      }
      return init;
    }()
  }]);
}(S$3);
var Ns = yt,
  Ps = _e;

var l = {
    exports: {}
  },
  c = (typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) == "object" ? Reflect : null,
  y = c && typeof c.apply == "function" ? c.apply : function (t, e, n) {
    return Function.prototype.apply.call(t, e, n);
  },
  f;
c && typeof c.ownKeys == "function" ? f = c.ownKeys : Object.getOwnPropertySymbols ? f = function f(t) {
  return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
} : f = function f(t) {
  return Object.getOwnPropertyNames(t);
};
function k(s) {
  console && console.warn && console.warn(s);
}
var w = Number.isNaN || function (t) {
  return t !== t;
};
function o() {
  o.init.call(this);
}
l.exports = o, l.exports.once = K, o.EventEmitter = o, o.prototype._events = void 0, o.prototype._eventsCount = 0, o.prototype._maxListeners = void 0;
var L = 10;
function g(s) {
  if (typeof s != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + _typeof(s));
}
Object.defineProperty(o, "defaultMaxListeners", {
  enumerable: !0,
  get: function get() {
    return L;
  },
  set: function set(s) {
    if (typeof s != "number" || s < 0 || w(s)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + s + ".");
    L = s;
  }
}), o.init = function () {
  (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
}, o.prototype.setMaxListeners = function (t) {
  if (typeof t != "number" || t < 0 || w(t)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
  return this._maxListeners = t, this;
};
function _(s) {
  return s._maxListeners === void 0 ? o.defaultMaxListeners : s._maxListeners;
}
o.prototype.getMaxListeners = function () {
  return _(this);
}, o.prototype.emit = function (t) {
  for (var e = [], n = 1; n < arguments.length; n++) e.push(arguments[n]);
  var i = t === "error",
    a = this._events;
  if (a !== void 0) i = i && a.error === void 0;else if (!i) return !1;
  if (i) {
    var r;
    if (e.length > 0 && (r = e[0]), r instanceof Error) throw r;
    var h = new Error("Unhandled error." + (r ? " (" + r.message + ")" : ""));
    throw h.context = r, h;
  }
  var u = a[t];
  if (u === void 0) return !1;
  if (typeof u == "function") y(u, this, e);else for (var d = u.length, M = O(u, d), n = 0; n < d; ++n) y(M[n], this, e);
  return !0;
};
function S(s, t, e, n) {
  var i, a, r;
  if (g(e), a = s._events, a === void 0 ? (a = s._events = Object.create(null), s._eventsCount = 0) : (a.newListener !== void 0 && (s.emit("newListener", t, e.listener ? e.listener : e), a = s._events), r = a[t]), r === void 0) r = a[t] = e, ++s._eventsCount;else if (typeof r == "function" ? r = a[t] = n ? [e, r] : [r, e] : n ? r.unshift(e) : r.push(e), i = _(s), i > 0 && r.length > i && !r.warned) {
    r.warned = !0;
    var h = new Error("Possible EventEmitter memory leak detected. " + r.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    h.name = "MaxListenersExceededWarning", h.emitter = s, h.type = t, h.count = r.length, k(h);
  }
  return s;
}
o.prototype.addListener = function (t, e) {
  return S(this, t, e, !1);
}, o.prototype.on = o.prototype.addListener, o.prototype.prependListener = function (t, e) {
  return S(this, t, e, !0);
};
function D() {
  if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function C(s, t, e) {
  var n = {
      fired: !1,
      wrapFn: void 0,
      target: s,
      type: t,
      listener: e
    },
    i = D.bind(n);
  return i.listener = e, n.wrapFn = i, i;
}
o.prototype.once = function (t, e) {
  return g(e), this.on(t, C(this, t, e)), this;
}, o.prototype.prependOnceListener = function (t, e) {
  return g(e), this.prependListener(t, C(this, t, e)), this;
}, o.prototype.removeListener = function (t, e) {
  var n, i, a, r, h;
  if (g(e), i = this._events, i === void 0) return this;
  if (n = i[t], n === void 0) return this;
  if (n === e || n.listener === e) --this._eventsCount === 0 ? this._events = Object.create(null) : (delete i[t], i.removeListener && this.emit("removeListener", t, n.listener || e));else if (typeof n != "function") {
    for (a = -1, r = n.length - 1; r >= 0; r--) if (n[r] === e || n[r].listener === e) {
      h = n[r].listener, a = r;
      break;
    }
    if (a < 0) return this;
    a === 0 ? n.shift() : F(n, a), n.length === 1 && (i[t] = n[0]), i.removeListener !== void 0 && this.emit("removeListener", t, h || e);
  }
  return this;
}, o.prototype.off = o.prototype.removeListener, o.prototype.removeAllListeners = function (t) {
  var e, n, i;
  if (n = this._events, n === void 0) return this;
  if (n.removeListener === void 0) return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : n[t] !== void 0 && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete n[t]), this;
  if (arguments.length === 0) {
    var a = Object.keys(n),
      r;
    for (i = 0; i < a.length; ++i) r = a[i], r !== "removeListener" && this.removeAllListeners(r);
    return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
  }
  if (e = n[t], typeof e == "function") this.removeListener(t, e);else if (e !== void 0) for (i = e.length - 1; i >= 0; i--) this.removeListener(t, e[i]);
  return this;
};
function b(s, t, e) {
  var n = s._events;
  if (n === void 0) return [];
  var i = n[t];
  return i === void 0 ? [] : typeof i == "function" ? e ? [i.listener || i] : [i] : e ? z(i) : O(i, i.length);
}
o.prototype.listeners = function (t) {
  return b(this, t, !0);
}, o.prototype.rawListeners = function (t) {
  return b(this, t, !1);
}, o.listenerCount = function (s, t) {
  return typeof s.listenerCount == "function" ? s.listenerCount(t) : E.call(s, t);
}, o.prototype.listenerCount = E;
function E(s) {
  var t = this._events;
  if (t !== void 0) {
    var e = t[s];
    if (typeof e == "function") return 1;
    if (e !== void 0) return e.length;
  }
  return 0;
}
o.prototype.eventNames = function () {
  return this._eventsCount > 0 ? f(this._events) : [];
};
function O(s, t) {
  for (var e = new Array(t), n = 0; n < t; ++n) e[n] = s[n];
  return e;
}
function F(s, t) {
  for (; t + 1 < s.length; t++) s[t] = s[t + 1];
  s.pop();
}
function z(s) {
  for (var t = new Array(s.length), e = 0; e < t.length; ++e) t[e] = s[e].listener || s[e];
  return t;
}
function K(s, t) {
  return new Promise(function (e, n) {
    function i(r) {
      s.removeListener(t, a), n(r);
    }
    function a() {
      typeof s.removeListener == "function" && s.removeListener("error", i), e([].slice.call(arguments));
    }
    R(s, t, a, {
      once: !0
    }), t !== "error" && U(s, i, {
      once: !0
    });
  });
}
function U(s, t, e) {
  typeof s.on == "function" && R(s, "error", t, e);
}
function R(s, t, e, n) {
  if (typeof s.on == "function") n.once ? s.once(t, e) : s.on(t, e);else if (typeof s.addEventListener == "function") s.addEventListener(t, function i(a) {
    n.once && s.removeEventListener(t, i), e(a);
  });else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + _typeof(s));
}
var A = "wc",
  X = 2,
  p = "Web3Wallet",
  $ = "".concat(A, "@2:").concat(p, ":"),
  G = {
    database: ":memory:"
  },
  H = "request";
var Q = /*#__PURE__*/function (_l$exports) {
  function Q() {
    _classCallCheck(this, Q);
    return _callSuper(this, Q);
  }
  _inherits(Q, _l$exports);
  return _createClass(Q);
}(l.exports);
var x = /*#__PURE__*/_createClass(function x(t) {
  _classCallCheck(this, x);
  this.opts = t;
});
var P = /*#__PURE__*/_createClass(function P(t) {
  _classCallCheck(this, P);
  this.client = t;
});
var V = Object.defineProperty,
  B = Object.defineProperties,
  J = Object.getOwnPropertyDescriptors,
  q = Object.getOwnPropertySymbols,
  Y = Object.prototype.hasOwnProperty,
  Z = Object.prototype.propertyIsEnumerable,
  j = function j(s, t, e) {
    return t in s ? V(s, t, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: e
    }) : s[t] = e;
  },
  ee = function ee(s, t) {
    for (var e in t || (t = {})) Y.call(t, e) && j(s, e, t[e]);
    if (q) {
      var _iterator = _createForOfIteratorHelper(q(t)),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var e = _step.value;
          Z.call(t, e) && j(s, e, t[e]);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return s;
  },
  te = function te(s, t) {
    return B(s, J(t));
  };
var se = /*#__PURE__*/function (_P) {
  function se(t) {
    var _this;
    _classCallCheck(this, se);
    _this = _callSuper(this, se, [t]), _this.init = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return Ps.init({
              core: _this.client.core,
              metadata: _this.client.metadata,
              signConfig: _this.client.signConfig
            });
          case 2:
            _this.signClient = _context.sent;
            _context.next = 5;
            return zr$2.init({
              core: _this.client.core,
              projectId: "",
              metadata: _this.client.metadata
            });
          case 5:
            _this.authClient = _context.sent;
          case 6:
          case "end":
            return _context.stop();
        }
      }, _callee);
    })), _this.pair = /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e) {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return _this.client.core.pairing.pair(e);
            case 2:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }(), _this.approveSession = /*#__PURE__*/function () {
      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {
        var _yield$_this$signClie, n, i;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return _this.signClient.approve(te(ee({}, e), {
                id: e.id,
                namespaces: e.namespaces,
                sessionProperties: e.sessionProperties,
                sessionConfig: e.sessionConfig
              }));
            case 2:
              _yield$_this$signClie = _context3.sent;
              n = _yield$_this$signClie.topic;
              i = _yield$_this$signClie.acknowledged;
              _context3.next = 7;
              return i();
            case 7:
              return _context3.abrupt("return", _this.signClient.session.get(n));
            case 8:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      return function (_x2) {
        return _ref3.apply(this, arguments);
      };
    }(), _this.rejectSession = /*#__PURE__*/function () {
      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return _this.signClient.reject(e);
            case 2:
              return _context4.abrupt("return", _context4.sent);
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
      return function (_x3) {
        return _ref4.apply(this, arguments);
      };
    }(), _this.updateSession = /*#__PURE__*/function () {
      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e) {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return _this.signClient.update(e);
            case 2:
              return _context5.abrupt("return", _context5.sent);
            case 3:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }));
      return function (_x4) {
        return _ref5.apply(this, arguments);
      };
    }(), _this.extendSession = /*#__PURE__*/function () {
      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(e) {
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.next = 2;
              return _this.signClient.extend(e);
            case 2:
              return _context6.abrupt("return", _context6.sent);
            case 3:
            case "end":
              return _context6.stop();
          }
        }, _callee6);
      }));
      return function (_x5) {
        return _ref6.apply(this, arguments);
      };
    }(), _this.respondSessionRequest = /*#__PURE__*/function () {
      var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(e) {
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return _this.signClient.respond(e);
            case 2:
              return _context7.abrupt("return", _context7.sent);
            case 3:
            case "end":
              return _context7.stop();
          }
        }, _callee7);
      }));
      return function (_x6) {
        return _ref7.apply(this, arguments);
      };
    }(), _this.disconnectSession = /*#__PURE__*/function () {
      var _ref8 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e) {
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return _this.signClient.disconnect(e);
            case 2:
              return _context8.abrupt("return", _context8.sent);
            case 3:
            case "end":
              return _context8.stop();
          }
        }, _callee8);
      }));
      return function (_x7) {
        return _ref8.apply(this, arguments);
      };
    }(), _this.emitSessionEvent = /*#__PURE__*/function () {
      var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(e) {
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              _context9.next = 2;
              return _this.signClient.emit(e);
            case 2:
              return _context9.abrupt("return", _context9.sent);
            case 3:
            case "end":
              return _context9.stop();
          }
        }, _callee9);
      }));
      return function (_x8) {
        return _ref9.apply(this, arguments);
      };
    }(), _this.getActiveSessions = function () {
      return _this.signClient.session.getAll().reduce(function (e, n) {
        return e[n.topic] = n, e;
      }, {});
    }, _this.getPendingSessionProposals = function () {
      return _this.signClient.proposal.getAll();
    }, _this.getPendingSessionRequests = function () {
      return _this.signClient.getPendingSessionRequests();
    }, _this.respondAuthRequest = /*#__PURE__*/function () {
      var _ref10 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(e, n) {
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              _context10.next = 2;
              return _this.authClient.respond(e, n);
            case 2:
              return _context10.abrupt("return", _context10.sent);
            case 3:
            case "end":
              return _context10.stop();
          }
        }, _callee10);
      }));
      return function (_x9, _x10) {
        return _ref10.apply(this, arguments);
      };
    }(), _this.getPendingAuthRequests = function () {
      return _this.authClient.requests.getAll().filter(function (e) {
        return "requester" in e;
      });
    }, _this.formatMessage = function (e, n) {
      return _this.authClient.formatMessage(e, n);
    }, _this.approveSessionAuthenticate = /*#__PURE__*/function () {
      var _ref11 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(e) {
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              _context11.next = 2;
              return _this.signClient.approveSessionAuthenticate(e);
            case 2:
              return _context11.abrupt("return", _context11.sent);
            case 3:
            case "end":
              return _context11.stop();
          }
        }, _callee11);
      }));
      return function (_x11) {
        return _ref11.apply(this, arguments);
      };
    }(), _this.rejectSessionAuthenticate = /*#__PURE__*/function () {
      var _ref12 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(e) {
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              _context12.next = 2;
              return _this.signClient.rejectSessionAuthenticate(e);
            case 2:
              return _context12.abrupt("return", _context12.sent);
            case 3:
            case "end":
              return _context12.stop();
          }
        }, _callee12);
      }));
      return function (_x12) {
        return _ref12.apply(this, arguments);
      };
    }(), _this.formatAuthMessage = function (e) {
      return _this.signClient.formatAuthMessage(e);
    }, _this.registerDeviceToken = function (e) {
      return _this.client.core.echoClient.registerDeviceToken(e);
    }, _this.on = function (e, n) {
      return _this.setEvent(e, "off"), _this.setEvent(e, "on"), _this.client.events.on(e, n);
    }, _this.once = function (e, n) {
      return _this.setEvent(e, "off"), _this.setEvent(e, "once"), _this.client.events.once(e, n);
    }, _this.off = function (e, n) {
      return _this.setEvent(e, "off"), _this.client.events.off(e, n);
    }, _this.removeListener = function (e, n) {
      return _this.setEvent(e, "removeListener"), _this.client.events.removeListener(e, n);
    }, _this.onSessionRequest = function (e) {
      _this.client.events.emit("session_request", e);
    }, _this.onSessionProposal = function (e) {
      _this.client.events.emit("session_proposal", e);
    }, _this.onSessionDelete = function (e) {
      _this.client.events.emit("session_delete", e);
    }, _this.onAuthRequest = function (e) {
      _this.client.events.emit("auth_request", e);
    }, _this.onProposalExpire = function (e) {
      _this.client.events.emit("proposal_expire", e);
    }, _this.onSessionRequestExpire = function (e) {
      _this.client.events.emit("session_request_expire", e);
    }, _this.onSessionRequestAuthenticate = function (e) {
      _this.client.events.emit("session_authenticate", e);
    }, _this.setEvent = function (e, n) {
      switch (e) {
        case "session_request":
          _this.signClient.events[n]("session_request", _this.onSessionRequest);
          break;
        case "session_proposal":
          _this.signClient.events[n]("session_proposal", _this.onSessionProposal);
          break;
        case "session_delete":
          _this.signClient.events[n]("session_delete", _this.onSessionDelete);
          break;
        case "auth_request":
          _this.authClient[n]("auth_request", _this.onAuthRequest);
          break;
        case "proposal_expire":
          _this.signClient.events[n]("proposal_expire", _this.onProposalExpire);
          break;
        case "session_request_expire":
          _this.signClient.events[n]("session_request_expire", _this.onSessionRequestExpire);
          break;
        case "session_authenticate":
          _this.signClient.events[n]("session_authenticate", _this.onSessionRequestAuthenticate);
          break;
      }
    }, _this.signClient = {}, _this.authClient = {};
    return _this;
  }
  _inherits(se, _P);
  return _createClass(se);
}(P);
var ne = {
    decryptMessage: function () {
      var _decryptMessage = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(s) {
        var t, e;
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              t = {
                core: new bn({
                  storageOptions: s.storageOptions,
                  storage: s.storage
                })
              };
              _context13.next = 3;
              return t.core.crypto.init();
            case 3:
              e = t.core.crypto.decode(s.topic, s.encryptedMessage);
              return _context13.abrupt("return", (t.core = null, e));
            case 5:
            case "end":
              return _context13.stop();
          }
        }, _callee13);
      }));
      function decryptMessage(_x13) {
        return _decryptMessage.apply(this, arguments);
      }
      return decryptMessage;
    }(),
    getMetadata: function () {
      var _getMetadata = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(s) {
        var t, e, n;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              t = {
                core: new bn({
                  storageOptions: s.storageOptions,
                  storage: s.storage
                }),
                sessionStore: null
              };
              t.sessionStore = new Ns(t.core, t.core.logger);
              _context14.next = 4;
              return t.sessionStore.init();
            case 4:
              e = t.sessionStore.get(s.topic), n = e === null || e === void 0 ? void 0 : e.peer.metadata;
              return _context14.abrupt("return", (t.core = null, t.sessionStore = null, n));
            case 6:
            case "end":
              return _context14.stop();
          }
        }, _callee14);
      }));
      function getMetadata(_x14) {
        return _getMetadata.apply(this, arguments);
      }
      return getMetadata;
    }()
  },
  _T = /*#__PURE__*/function (_x15) {
    function T(s) {
      var _this2;
      _classCallCheck(this, T);
      _this2 = _callSuper(this, T, [s]), _this2.events = new l.exports(), _this2.on = function (t, e) {
        return _this2.engine.on(t, e);
      }, _this2.once = function (t, e) {
        return _this2.engine.once(t, e);
      }, _this2.off = function (t, e) {
        return _this2.engine.off(t, e);
      }, _this2.removeListener = function (t, e) {
        return _this2.engine.removeListener(t, e);
      }, _this2.pair = /*#__PURE__*/function () {
        var _ref13 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(t) {
          return _regeneratorRuntime().wrap(function _callee15$(_context15) {
            while (1) switch (_context15.prev = _context15.next) {
              case 0:
                _context15.prev = 0;
                _context15.next = 3;
                return _this2.engine.pair(t);
              case 3:
                return _context15.abrupt("return", _context15.sent);
              case 6:
                _context15.prev = 6;
                _context15.t0 = _context15["catch"](0);
                throw _this2.logger.error(_context15.t0.message), _context15.t0;
              case 9:
              case "end":
                return _context15.stop();
            }
          }, _callee15, null, [[0, 6]]);
        }));
        return function (_x16) {
          return _ref13.apply(this, arguments);
        };
      }(), _this2.approveSession = /*#__PURE__*/function () {
        var _ref14 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(t) {
          return _regeneratorRuntime().wrap(function _callee16$(_context16) {
            while (1) switch (_context16.prev = _context16.next) {
              case 0:
                _context16.prev = 0;
                _context16.next = 3;
                return _this2.engine.approveSession(t);
              case 3:
                return _context16.abrupt("return", _context16.sent);
              case 6:
                _context16.prev = 6;
                _context16.t0 = _context16["catch"](0);
                throw _this2.logger.error(_context16.t0.message), _context16.t0;
              case 9:
              case "end":
                return _context16.stop();
            }
          }, _callee16, null, [[0, 6]]);
        }));
        return function (_x17) {
          return _ref14.apply(this, arguments);
        };
      }(), _this2.rejectSession = /*#__PURE__*/function () {
        var _ref15 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(t) {
          return _regeneratorRuntime().wrap(function _callee17$(_context17) {
            while (1) switch (_context17.prev = _context17.next) {
              case 0:
                _context17.prev = 0;
                _context17.next = 3;
                return _this2.engine.rejectSession(t);
              case 3:
                return _context17.abrupt("return", _context17.sent);
              case 6:
                _context17.prev = 6;
                _context17.t0 = _context17["catch"](0);
                throw _this2.logger.error(_context17.t0.message), _context17.t0;
              case 9:
              case "end":
                return _context17.stop();
            }
          }, _callee17, null, [[0, 6]]);
        }));
        return function (_x18) {
          return _ref15.apply(this, arguments);
        };
      }(), _this2.updateSession = /*#__PURE__*/function () {
        var _ref16 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(t) {
          return _regeneratorRuntime().wrap(function _callee18$(_context18) {
            while (1) switch (_context18.prev = _context18.next) {
              case 0:
                _context18.prev = 0;
                _context18.next = 3;
                return _this2.engine.updateSession(t);
              case 3:
                return _context18.abrupt("return", _context18.sent);
              case 6:
                _context18.prev = 6;
                _context18.t0 = _context18["catch"](0);
                throw _this2.logger.error(_context18.t0.message), _context18.t0;
              case 9:
              case "end":
                return _context18.stop();
            }
          }, _callee18, null, [[0, 6]]);
        }));
        return function (_x19) {
          return _ref16.apply(this, arguments);
        };
      }(), _this2.extendSession = /*#__PURE__*/function () {
        var _ref17 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(t) {
          return _regeneratorRuntime().wrap(function _callee19$(_context19) {
            while (1) switch (_context19.prev = _context19.next) {
              case 0:
                _context19.prev = 0;
                _context19.next = 3;
                return _this2.engine.extendSession(t);
              case 3:
                return _context19.abrupt("return", _context19.sent);
              case 6:
                _context19.prev = 6;
                _context19.t0 = _context19["catch"](0);
                throw _this2.logger.error(_context19.t0.message), _context19.t0;
              case 9:
              case "end":
                return _context19.stop();
            }
          }, _callee19, null, [[0, 6]]);
        }));
        return function (_x20) {
          return _ref17.apply(this, arguments);
        };
      }(), _this2.respondSessionRequest = /*#__PURE__*/function () {
        var _ref18 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(t) {
          return _regeneratorRuntime().wrap(function _callee20$(_context20) {
            while (1) switch (_context20.prev = _context20.next) {
              case 0:
                _context20.prev = 0;
                _context20.next = 3;
                return _this2.engine.respondSessionRequest(t);
              case 3:
                return _context20.abrupt("return", _context20.sent);
              case 6:
                _context20.prev = 6;
                _context20.t0 = _context20["catch"](0);
                throw _this2.logger.error(_context20.t0.message), _context20.t0;
              case 9:
              case "end":
                return _context20.stop();
            }
          }, _callee20, null, [[0, 6]]);
        }));
        return function (_x21) {
          return _ref18.apply(this, arguments);
        };
      }(), _this2.disconnectSession = /*#__PURE__*/function () {
        var _ref19 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21(t) {
          return _regeneratorRuntime().wrap(function _callee21$(_context21) {
            while (1) switch (_context21.prev = _context21.next) {
              case 0:
                _context21.prev = 0;
                _context21.next = 3;
                return _this2.engine.disconnectSession(t);
              case 3:
                return _context21.abrupt("return", _context21.sent);
              case 6:
                _context21.prev = 6;
                _context21.t0 = _context21["catch"](0);
                throw _this2.logger.error(_context21.t0.message), _context21.t0;
              case 9:
              case "end":
                return _context21.stop();
            }
          }, _callee21, null, [[0, 6]]);
        }));
        return function (_x22) {
          return _ref19.apply(this, arguments);
        };
      }(), _this2.emitSessionEvent = /*#__PURE__*/function () {
        var _ref20 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee22(t) {
          return _regeneratorRuntime().wrap(function _callee22$(_context22) {
            while (1) switch (_context22.prev = _context22.next) {
              case 0:
                _context22.prev = 0;
                _context22.next = 3;
                return _this2.engine.emitSessionEvent(t);
              case 3:
                return _context22.abrupt("return", _context22.sent);
              case 6:
                _context22.prev = 6;
                _context22.t0 = _context22["catch"](0);
                throw _this2.logger.error(_context22.t0.message), _context22.t0;
              case 9:
              case "end":
                return _context22.stop();
            }
          }, _callee22, null, [[0, 6]]);
        }));
        return function (_x23) {
          return _ref20.apply(this, arguments);
        };
      }(), _this2.getActiveSessions = function () {
        try {
          return _this2.engine.getActiveSessions();
        } catch (t) {
          throw _this2.logger.error(t.message), t;
        }
      }, _this2.getPendingSessionProposals = function () {
        try {
          return _this2.engine.getPendingSessionProposals();
        } catch (t) {
          throw _this2.logger.error(t.message), t;
        }
      }, _this2.getPendingSessionRequests = function () {
        try {
          return _this2.engine.getPendingSessionRequests();
        } catch (t) {
          throw _this2.logger.error(t.message), t;
        }
      }, _this2.respondAuthRequest = /*#__PURE__*/function () {
        var _ref21 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee23(t, e) {
          return _regeneratorRuntime().wrap(function _callee23$(_context23) {
            while (1) switch (_context23.prev = _context23.next) {
              case 0:
                _context23.prev = 0;
                _context23.next = 3;
                return _this2.engine.respondAuthRequest(t, e);
              case 3:
                return _context23.abrupt("return", _context23.sent);
              case 6:
                _context23.prev = 6;
                _context23.t0 = _context23["catch"](0);
                throw _this2.logger.error(_context23.t0.message), _context23.t0;
              case 9:
              case "end":
                return _context23.stop();
            }
          }, _callee23, null, [[0, 6]]);
        }));
        return function (_x24, _x25) {
          return _ref21.apply(this, arguments);
        };
      }(), _this2.getPendingAuthRequests = function () {
        try {
          return _this2.engine.getPendingAuthRequests();
        } catch (t) {
          throw _this2.logger.error(t.message), t;
        }
      }, _this2.formatMessage = function (t, e) {
        try {
          return _this2.engine.formatMessage(t, e);
        } catch (n) {
          throw _this2.logger.error(n.message), n;
        }
      }, _this2.registerDeviceToken = function (t) {
        try {
          return _this2.engine.registerDeviceToken(t);
        } catch (e) {
          throw _this2.logger.error(e.message), e;
        }
      }, _this2.approveSessionAuthenticate = function (t) {
        try {
          return _this2.engine.approveSessionAuthenticate(t);
        } catch (e) {
          throw _this2.logger.error(e.message), e;
        }
      }, _this2.rejectSessionAuthenticate = function (t) {
        try {
          return _this2.engine.rejectSessionAuthenticate(t);
        } catch (e) {
          throw _this2.logger.error(e.message), e;
        }
      }, _this2.formatAuthMessage = function (t) {
        try {
          return _this2.engine.formatAuthMessage(t);
        } catch (e) {
          throw _this2.logger.error(e.message), e;
        }
      }, _this2.metadata = s.metadata, _this2.name = s.name || p, _this2.signConfig = s.signConfig, _this2.core = s.core, _this2.logger = _this2.core.logger, _this2.engine = new se(_assertThisInitialized(_this2));
      return _this2;
    }
    _inherits(T, _x15);
    return _createClass(T, [{
      key: "initialize",
      value: function () {
        var _initialize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {
          return _regeneratorRuntime().wrap(function _callee24$(_context24) {
            while (1) switch (_context24.prev = _context24.next) {
              case 0:
                this.logger.trace("Initialized");
                _context24.prev = 1;
                _context24.next = 4;
                return this.engine.init();
              case 4:
                this.logger.info("Web3Wallet Initialization Success");
                _context24.next = 10;
                break;
              case 7:
                _context24.prev = 7;
                _context24.t0 = _context24["catch"](1);
                throw this.logger.info("Web3Wallet Initialization Failure"), this.logger.error(_context24.t0.message), _context24.t0;
              case 10:
              case "end":
                return _context24.stop();
            }
          }, _callee24, this, [[1, 7]]);
        }));
        function initialize() {
          return _initialize.apply(this, arguments);
        }
        return initialize;
      }()
    }], [{
      key: "init",
      value: function () {
        var _init = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee25(s) {
          var t;
          return _regeneratorRuntime().wrap(function _callee25$(_context25) {
            while (1) switch (_context25.prev = _context25.next) {
              case 0:
                t = new _T(s);
                _context25.next = 3;
                return t.initialize();
              case 3:
                return _context25.abrupt("return", t);
              case 4:
              case "end":
                return _context25.stop();
            }
          }, _callee25);
        }));
        function init(_x26) {
          return _init.apply(this, arguments);
        }
        return init;
      }()
    }]);
  }(x);
var v = _T;
v.notifications = ne;
var ie = v;

export { p as CLIENT_CONTEXT, G as CLIENT_STORAGE_OPTIONS, $ as CLIENT_STORAGE_PREFIX, x as IWeb3Wallet, P as IWeb3WalletEngine, Q as IWeb3WalletEvents, A as PROTOCOL, X as PROTOCOL_VERSION, H as REQUEST_CONTEXT, ie as Web3Wallet, v as default };
//# sourceMappingURL=walletconnect.js.map
